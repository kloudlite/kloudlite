name: build-infrastructure-as-code
on:
  workflow_call:

jobs:
  infrastructure-as-code-go-modules-cache:
    runs-on: ubuntu-latest
    name: IAC go modules cache
    env:
      SUBMODULE: infrastructure-as-code
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Build Environment
        id: setup
        uses: ./.github/actions/setup/
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"

          enable_go: true
          go_mod_file: ${{ env.SUBMODULE }}/go.mod
          go_sum_file: ${{ env.SUBMODULE }}/go.sum

          enable_task: false
          enable_upx: false

          enable_docker: false

      - name: Setup Go Modules Cache
        shell: bash
        run: |+
          pushd $SUBMODULE
          go mod download
          popd

  infrastructure-as-code:
    needs: infrastructure-as-code-go-modules-cache
    strategy:
      matrix:
        name:
          - iac-job
          - aws-spot-k3s-terminator
          - k3s-runner
        include:
          - name: iac-job
            build_dir: .
            container_image: true

          - name: aws-spot-k3s-terminator
            build_dir: cmd/aws-spot-k3s-terminator
            container_image: true

          - name: k3s-runner
            build_dir: cmd/k3s-runner
            github_release: true

    runs-on: ubuntu-latest
    name: IAC
    env:
      SUBMODULE: infrastructure-as-code
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Build Environment
        id: setup
        uses: ./.github/actions/setup/
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          enable_go: true
          go_mod_file: ${{ env.SUBMODULE }}/go.mod
          go_sum_file: ${{ env.SUBMODULE }}/go.sum
          go_build_cache_key: ${{env.SUBMODULE}}/${{matrix.name}}

          enable_task: true
          enable_upx: true

          enable_docker: ${{ matrix.container_image }}

      - name: Build & Push Image
        if: matrix.container_image
        env:
          IMAGE_TAG: ${{ steps.setup.outputs.image_tag }}
          OVERRIDE_PUSHED_IMAGE: ${{ steps.setup.outputs.override_pushed_image }}
        run: |
          pushd $SUBMODULE
          set +e
          pushd ${{matrix.build_dir}}

          image=ghcr.io/${{ github.repository }}/$SUBMODULE/${{matrix.name}}:$IMAGE_TAG
          echo "building image: $image"

          docker manifest inspect $image
          exit_status=$?
          if [ $exit_status -eq 0 ]; then
            [ "$OVERRIDE_PUSHED_IMAGE" = "false" ] && echo "image ($image) already exists, and override image is disable, exiting" && exit 0
            echo "image exists, but override pushed image is set to true. proceeding with building image"
          fi

          set -e

          task container:build-n-push Image=$image
          popd

      - name: Release Artifact
        if: matrix.github_release
        run: |
          pushd $SUBMODULE
          set +e
          pushd ${{matrix.build_dir}}
          echo "building ${{ matrix.name }}"
          task build
          echo "k3s_runner_path=$PWD/bin/*" >> $GITHUB_ENV

          popd
          popd

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        if: matrix.github_release
        with:
          name: k3s-runner
          path: ${{ env.k3s_runner_path }}
