version: 3

vars:
  BinDir: 
    sh: echo "$PWD/bin"
  
  TMPL: "{{.BinDir}}/tmpl"
  SCHELM:
    sh: which "schelm" 2> /dev/null || echo "{{.BinDir}}/schelm"
  CHART_DOC_GEN: 
    sh: which "chart-doc-gen" 2> /dev/null || echo "{{.BinDir}}/chart-doc-gen"
  HELM_DOCS: 
    sh: which "helm-docs" 2> /dev/null || echo "{{.BinDir}}/helm-docs"

tasks:
  print:
    cmds:
      - echo "{{.SCHELM}}"
      - echo "{{.HELM_DOCS}}"

  install:tmpl:
    vars:
      Version: v1.0.0
    env:
      CGO_ENABLED: 0
    cmds:
      - mkdir -p {{.BinDir}}
      - |+
        pushd cmd/tmpl
        go build -o {{.TMPL}} -ldflags="-s -w -X 'main.Version={{.Version}}'" -buildvcs=false .
        chmod +x {{.TMPL}}
        popd

  install:schelm:
    silent: true
    env:
      GOBIN: "{{.BinDir}}"
    cmds:
      - |+
        if ! [[ -f "{{.SCHELM}}" ]] then
          go install github.com/databus23/schelm@master
        fi
        chmod +x {{.SCHELM}}

  install:chart-doc-gen:
    silent: true
    env:
      GOBIN: "{{.BinDir}}"
    cmds:
      - |+
        if ! [[ -f {{.CHART_DOC_GEN}} ]] then
          go install kubepack.dev/chart-doc-gen@v0.3.0
        fi

  install:helm-docs:
    silent: true
    env:
      GOBIN: "{{.BinDir}}"
    cmds:
      - |+
        if ! [[ -f {{.HELM_DOCS}} ]] then
          go install github.com/norwoodj/helm-docs/cmd/helm-docs@v1.11.0
        fi
        chmod +x {{.HELM_DOCS}}

  generate-docs:
    cmds:
      - |+
        {{.HELM_DOCS}}

  setup:
    cmds:
      - task: install:tmpl
      - task: install:schelm
      # - task: install:chart-doc-gen
      - task: install:helm-docs

  crds:
    vars:
      OutputDir: "./crds"
      OperatorDir: "../operator"
      HelmOperatorDir: "../helm-operator"
      RedpandaVersion: v22.1.6
    cmds:
      - |+
        mkdir -p {{.OutputDir}}

        # kloudlite operator CRDs
        pushd {{.OperatorDir}} 2>&1 > /dev/null
        task yaml:crds > {{.OutputDir}}/crds-kloudlite.yml
        popd 2>&1 > /dev/null

        # pushd {{.HelmOperatorDir}} 2>&1 >/dev/null
        # task yaml:crds > {{.OutputDir}}/helm-operator-crds.yml
        # popd 2>&1 > /dev/null

        # cert manager CRDs
        curl -L0 https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cert-manager.crds.yaml > {{.OutputDir}}/crds-cert-manager.yml

        # redpanda CRDs
        # curl -L0 https://raw.githubusercontent.com/redpanda-data/redpanda/{{.RedpandaVersion}}/src/go/k8s/config/crd/bases/redpanda.vectorized.io_clusters.yaml > {{.OutputDir}}/crds-redpanda.yml

        # redpanda CRDs
        kubectl kustomize https://github.com/redpanda-data/redpanda//src/go/k8s/config/crd > {{.OutputDir}}/crds-redpanda.yml


  test-release-script:
    dir: .
    env:
      # RELEASE_TAG: test
      RELEASE_TAG: test
      PRE_RELEASE: true
      OVERWRITE_RELEASE_ASSETS: true
      HELM_MERGE_WITH_EXISTING_INDEXES: true
      RELEASE_TITLE: "Test Release"
      GITHUB_REPO_OWNER: "kloudlite"
      GITHUB_REPO_NAME: "helm-charts"
    cmds:
      - bash scripts/release-script.sh

