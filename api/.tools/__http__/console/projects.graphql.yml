---
global:
  targetNamespace: sample
  name: sample
---

label: List Projects
query: |+
  query Core_listProjects($clusterName: String, $pq: CursorPaginationIn) {
    core_listProjects(clusterName: $clusterName, pq: $pq) {
      edges {
        cursor
        node {
          updateTime
          creationTime
          accountName
          apiVersion
          kind
          metadata {
            name
            generation
            creationTimestamp
          }
          spec {
            accountName
            targetNamespace
          }
          syncStatus {
            state
            action
            error
            recordVersion
          }
          recordVersion
          status {
            isReady
          }
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
      totalCount
    }
  }
variables:
  pq:
    first: 10
  #   # before: NjQ2ZjAzYzdhMWE2OTI2MDhhODdlN2U5
  #   # before: NjQ2ZjAzYzdhMWE2OTI2MDhhODdlN2U5
  #   # after: NjQ2ZGU4MWRkMTM2NGYwZjBlYmE4MmVh
  #
  #   orderBy: metadata.name
  #   sortBy: ASC
---

label: List Projects web
query: |+
  query Core_listProjects(
      $clusterName: String
      $pagination: CursorPaginationIn
      $search: SearchProjects
    ) {
      core_listProjects(
        clusterName: $clusterName
        pq: $pagination
        search: $search
      ) {
        totalCount
        edges {
          node {
            id
            displayName
            creationTime
            clusterName
            apiVersion
            kind
            metadata {
              namespace
              name
              labels
              deletionTimestamp
              generation
              creationTimestamp
              annotations
            }
            recordVersion
            spec {
              targetNamespace
              logo
              displayName
              clusterName
              accountName
            }
            status {
              resources {
                name
                kind
                apiVersion
                namespace
              }
              message {
                RawMessage
              }
              lastReconcileTime
              isReady
              checks
            }
            syncStatus {
              syncScheduledAt
              state
              recordVersion
              lastSyncedAt
              error
              action
            }
            updateTime
            accountName
          }
        }
        pageInfo {
          startCursor
          hasNextPage
          endCursor
          hasPreviousPage
        }
      }
    }

variables:
  search:
    # markedForDeletion:
    #   matchType: exact
    #   exact: false
    isReady:
      matchType: exact
      exact: true


---

label: Get Project
query: |+
  query Core_getProject($name: String!) {
    core_getProject(name: $name) {
      metadata {
        name
      }
      spec {
        accountName
        targetNamespace
      }
    }
  }
variables:
  name: "{{.name}}"
  # name: "sample123"
---

label: Create Project
query: |+
  mutation Core_createProject($project: ProjectIn!) {
    core_createProject(project: $project) {
      metadata {
        name
      }
    }
  }
variables:
  project:
    displayName: "Sample Project"
    metadata:
      name: "{{.name}}"
    spec:
      targetNamespace: "{{.targetNamespace}}"
---

label: Update Project
query: |+
  mutation Core_updateProject($project: ProjectIn!) {
    core_updateProject(project: $project) {
      metadata {
        name
      }
      spec {
        displayName
      }
    }
  }
variables:
  project:
    displayName: "This is a sample project"
    metadata:
      name: "{{.name}}"
      labels:
        kloudlite.io/sample: "true"
    spec:
      targetNamespace: "{{.targetNamespace}}"
---

label: Delete Project
query: |+
  mutation Core_deleteProject($name: String!) {
    core_deleteProject(name: $name)
  }
variables:
  name: "{{.name}}"
---

label: Resync Project
query: |+
  query Query($name: String!) {
    core_resyncProject(name: $name)
  }

variables:
  name: "{{.name}}"
---
