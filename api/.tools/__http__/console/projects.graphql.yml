---
global:
  accountName: kloudlite-dev
  clusterName: sample2
  targetNamespace: sample
  name: sample
---

label: List Projects 2
query: |+
  query Core_listProjects($clusterName: String, $pq: PaginationQueryArgs) {
    core_listProjects(clusterName: $clusterName, pq: $pq) {
      edges {
        cursor
        node {
          creationTime
          accountName
          apiVersion
          kind
          metadata {
            name
            namespace
          }
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
      totalCount
    }
  }
variables:
  # pq:
  #   first: 2
  #   # before: NjQ2ZjAzYzdhMWE2OTI2MDhhODdlN2U5
  #   # before: NjQ2ZjAzYzdhMWE2OTI2MDhhODdlN2U5
  #   # after: NjQ2ZGU4MWRkMTM2NGYwZjBlYmE4MmVh
  #
  #   orderBy: metadata.name
  #   sortBy: ASC

---

label: List Projects
query: |+
  query Core_listProjects {
    core_listProjects {
      metadata {
        name
      }
      spec {
        accountName
        clusterName
        targetNamespace
      }
      status {
        isReady
        checks
      }
      syncStatus{
        lastSyncedAt
        action
        generation
        state
        error
      }
    }
  }

---

label: Get Project
query: |+
  query Core_getProject($name: String!) {
    core_getProject(name: $name) {
      metadata {
        name
      }
      spec {
        accountName
        targetNamespace
      }
    }
  }
variables:
  name: "{{.name}}"
  # name: "sample123"
---

label: Create Project
query: |+
  mutation Core_createProject($project: ProjectIn!) {
    core_createProject(project: $project) {
      metadata {
        name
      }
    }
  }
variables:
  project:
    apiVersion: core.kloudlite.io/v1alpha1
    kind: Project
    accountName: "{{.accountName}}"
    clusterName: "{{.clusterName}}"
    metadata:
      name: "{{.name}}z"
      generation: 1
    spec:
      clusterName: "{{.clusterName}}"
      accountName: "{{.accountName}}"
      targetNamespace: "{{.targetNamespace}}x"
---

label: Update Project
query: |+
  mutation Core_updateProject($project: ProjectIn!) {
    core_updateProject(project: $project) {
      metadata {
        name
      }
      spec {
        displayName
      }
    }
  }
variables:
  project:
    metadata:
      name: "{{.name}}"
    spec:
      displayName: "Example Project"
      accountName: kloudlite-dev
      targetNamespace: "{{.namespace}}"
---

label: Delete Project
query: |+
  mutation Core_deleteProject($name: String!) {
    core_deleteProject(name: $name)
  }
variables:
  name: "{{.name}}"
---

label: Resync Project
query: |+
  query Query($name: String!) {
    core_resyncProject(name: $name)
  }

variables:
  name: "{{.name}}"
---
