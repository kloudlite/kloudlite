---
global:
  # namespace: sample
  name: s1
  namespace: sample-nxtcoder17
---

label: List Secrets
query: |+
  query Core_listSecrets($project: ProjectId!, $scope: WorkspaceOrEnvId!) {
    core_listSecrets(project: $project, scope: $scope) {
      edges {
        cursor
        node {
          creationTime
          accountName
          apiVersion
          kind
          metadata {
            name
            namespace
            generation
            creationTimestamp
          }
          status {
            isReady
            checks
            lastReconcileTime
          }
          syncStatus {
            state
            recordVersion
          }
          data
          stringData
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
      totalCount
    }
  }
variables:
  project:
    type: name
    value: sample
  scope:
    type: workspaceTargetNamespace
    value: "{{.namespace}}"
---

label: Create Secret
query: |+
  mutation Core_createSecret($secret: SecretIn!) {
    core_createSecret(secret: $secret) {
      metadata {
        name
        namespace
      }
      stringData
      syncStatus {
        state
        generation
      }
    }
  }

variables:
  secret:
    metadata:
      name: '{{.name}}'
      namespace: '{{.namespace}}'
    stringData:
      key1: value1
      key2: value2
---

label: Get Secret
query: |+
  query Core_getSecret($namespace: String!, $name: String!) {
    core_getSecret(namespace: $namespace, name: $name) {
      metadata {
        name
        deletionTimestamp
        namespace
      }
      data
      stringData
    }
  }
variables:
  name: '{{.name}}'
  namespace: '{{.namespace}}'

---

label: Update Secret
query: |+
  mutation Core_updateSecret($secret: SecretIn!) {
    core_updateSecret(secret: $secret) {
      metadata {
        name
        generation
      }
      stringData
    }
  }
variables:
  secret:
    metadata:
      name: '{{.name}}'
      namespace: '{{.namespace}}'
    stringData:
      key1: value1x
      key3: value2
---

label: Delete Secret
query: |+
  mutation Core_deleteSecret($namespace: String!, $name: String!) {
    core_deleteSecret(namespace: $namespace, name: $name)
  }
variables:
  namespace: '{{.namespace}}'
  name: "{{.name}}"
---
