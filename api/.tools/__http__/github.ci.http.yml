---
global:
  accountId: acc-5mr4frb21ssmhh2rriuxluzveodv
  projectId: "proj-bopxvo-qpfpodbz9lciwu45s5uqd"
  projectName: "sample"

#   accountId: acc-4xrbue-eevzhin57x8maf2ddq9md
#   projectId: "proj-wnmjf1c5ndqzevswbeuej5dyiknp"
#   projectName: "sample-14847"
---
label: github installations
query: |
  query Query($pagination: PaginationIn) {
    ci_githubInstallations(pagination: $pagination)
  }
variables:
  pagination:
    page: 1
    perPage: 20

---

label: Github
query: |
  query Query($org: String!, $search: String) {
    ci_searchGithubRepos(org: $org, search: $search)
  }
variables:
  search: "demo"
  org: KloudLite
---

label: Github Repos
query: |
  query Query($installationId: Int!, $pagination: PaginationIn) {
    ci_githubRepos(installationId: $installationId, pagination: $pagination)
  }
variables:
  # installationId: 22717460
  installationId: 22487879
  pagination:
    page: 1
    perPage: 2

---

label: Github Repo Branches
query: |
  query Query($repoUrl: String!) {
    ci_githubRepoBranches(repoUrl: $repoUrl)
  }
variables:
  repoUrl: https://github.com/kloudlite/demo-env

---

label: Github Installation Token by installation id
query: |
  query Query($instId: Int) {
    ci_githubInstallationToken(instId: $instId)
  }
variables:
  instId: 22636591

---

label: Searching github
query: |
  query SearchQuery($search: String!, $org: String!) {
    ci_searchGithubRepos(search: $search, org: $org)
  }
variables:
  search: we
  org: kloudlite
  # pagination:
  #   page: 1
  #   perPage: 5
---

label: Get Installation Token By RepoUrl
query: |
  query Query($repoUrl: String!) {
    ci_githubInstallationToken(repoUrl: $repoUrl)
  }
variables:
  repoUrl: https://github.com/kloudlite/demo-env

---

label: Create Github Pipeline with Docker
query: |
  mutation Ci_createDockerPipeline($in: GitDockerPipelineIn!) {
    ci_createDockerPipeline(in: $in)
  }
variables:
  in:
    name: sample-example-github-asdfdasfas
    # accountId: "{{accountId}}"
    accountId: "acc-p3as823bdcuymhtz3upzzxh2wobw"
    projectId: "{{projectId}}"
    appId: "not-app-id-github-2"
    # projectName: "{{projectName}}"
    projectName: "testproj-22875"
    containerName: "main"
    gitProvider: github
    repoName: "website"
    gitRepoUrl: "https://github.com/nxtcoder17/sample"
    gitBranch: master
    dockerFile: ./Dockerfile
    contextDir: ./
    buildArgs: ""
    artifactRef:
      # dockerImageName: "{{accountId}}/website2"
      dockerImageName: "website2"
      dockerImageTag: "latest"

---

label: List Pipelines
query: |
  query Ci_getPipelines($projectId: ID!) {
    ci_getPipelines(projectId: $projectId) {
      id
      name
      dockerBuild {
        dockerFile
      }
      build {
        cmd
      }
    }
  }
variables:
  projectId: "{{projectId}}"
