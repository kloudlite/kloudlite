---
global:
  accountName: kloudlite-dev
  providerName: sample 
  providerNamespace: s1
  providerSecretName: provider-sample

  clusterName: sample
---

label: Create Cluster
query: |+
  mutation Infra_createCluster($cluster: ClusterIn!) {
    infra_createCluster(cluster: $cluster) {
      metadata {
        name
      }
      spec {
        accountName
        providerName
      }
    }
  }
variables:
  cluster:
    # apiVersion: cmgr.kloudlite.io/v1
    # kind: Cluster
    metadata:
      name: "{{.clusterName}}"
    spec:
      accountName: "{{.accountName}}"
      providerName: "{{.providerName}}"
      provider: aws
      count: 1
      region: ap-south-1
      config: '{"instanceType":"c6a.large","vpc":""}'
---

label: List Clusters
query: |+
  query Query {
    infra_listClusters {
      # syncStatus {
      #   status
      # }
      clusterToken
      metadata {
        name
      }
      spec {
        accountName
      }
    }
  }

---

label: Get Cluster
query: |+
  query Query($name: String!) {
    infra_getCluster(name: $name) {
      kind
      metadata {
        name
      }
      spec {
        provider
      }
    }
  }
variables:
  name: "{{.clusterName}}"

---
label: Update Cluster
query: |+
  mutation Infra_updateCluster($cluster: Cluster!) {
    infra_updateCluster(cluster: $cluster)
  }
variables:
  cluster:
    metadata:
      name: "{{.clusterName}}"
    spec:
      accountName: "{{.accountName}}"
      providerName: "{{.providerName}}"
      provider: aws
      count: 2
      region: ap-south-1
      config: '{"instanceType":"c6a.large","vpc":""}'

---
label: Delete Cluster
query: |+
  mutation Infra_deleteCluster($name: String!) {
    infra_deleteCluster(name: $name)
  }
variables:
  name: "{{.clusterName}}"
---


