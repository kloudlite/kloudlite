---
label: List Image Pull Secrets
query: |+ #graphql
  query Core_listImagePullSecrets($projectName: String!, $envName: String!) {
    core_listImagePullSecrets(projectName: $projectName, envName: $envName) {
      edges {
        node {
          format
          dockerConfigJson
          environmentName
        }
      }
    }
  }
variables:
  projectName: "{{.projectName}}"
  envName: "{{.envName}}"

---

query: |+ #graphql
  mutation Core_createImagePullSecret($projectName: String!, $envName: String!, $imagePullSecretIn: ImagePullSecretIn!) {
    core_createImagePullSecret(projectName: $projectName, envName: $envName, imagePullSecretIn: $imagePullSecretIn) {
      format
      dockerConfigJson
    }
  }
variables:
  # projectName: "{{.projectName}}"
  # envName: "{{.envName}}"
  projectName: "demo-project"
  envName: "public-environment"
  imagePullSecretIn:
    displayName: "Image Pull Secret"
    metadata:
      name: test-ips
    format: dockerConfigJson
    dockerConfigJson: |+
      {
        "auths": {
          "ghcr.io": {
            "auth": "************"
          }
        }
      }
---

query: |+
  query Query($projectName: String!, $envName: String!, $name: String!) {
    core_resyncImagePullSecret(projectName: $projectName, envName: $envName, name: $name)
  }
variables:
  projectName: "demo-project"
  envName: "public-environment"
  name: "test-ips"
---

query: |+
  mutation Core_deleteImagePullSecret($projectName: String!, $envName: String!, $secretName: String!) {
    core_deleteImagePullSecret(projectName: $projectName, envName: $envName, secretName: $secretName)
  }
variables:
  projectName: "demo-project"
  envName: "public-environment"
  secretName: "test-ips"
---
