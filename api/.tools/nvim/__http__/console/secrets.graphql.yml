---
global:
  # namespace: sample
  name: s1
  namespace: sample-nxtcoder17
---

label: List Secrets
query: |+
  query Core_listSecrets($projectName: String!, $envName: String!) {
    core_listSecrets(projectName: $projectName, envName: $envName) {
      edges {
        cursor
        node {
          creationTime
          accountName
          apiVersion
          kind
          metadata {
            name
            namespace
            generation
            creationTimestamp
          }
          syncStatus {
            state
            recordVersion
            error
          }
          data
          stringData
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
      totalCount
    }
  }
variables:
  projectName: "{{.projectName}}"
  envName: "{{.envName}}"
---

label: Create Secret
query: |+
  mutation Core_createSecret($projectName: String!, $envName: String!, $secret: SecretIn!) {
    core_createSecret(projectName: $projectName, envName: $envName, secret: $secret) {
      metadata {
        name
        namespace
      }
      stringData
      syncStatus {
        state
        action
        recordVersion
      }
    }
  }
variables:
  projectName: "{{.projectName}}"
  envName: "{{.envName}}"
  secret:
    displayName: "Secret Display Name"
    metadata:
      name: '{{.name}}'
      namespace: '{{.namespace}}'
    stringData:
      key1: value1
      key2: value2
---

label: Get Secret
query: |+
  query Core_getSecret($namespace: String!, $name: String!) {
    core_getSecret(namespace: $namespace, name: $name) {
      metadata {
        name
        deletionTimestamp
        namespace
      }
      data
      stringData
    }
  }
variables:
  name: '{{.name}}'
  namespace: '{{.namespace}}'

---

label: Update Secret
query: |+
  mutation Core_updateSecret($projectName: String!, $envName: String!, $secret: SecretIn!) {
    core_updateSecret(projectName: $projectName, envName: $envName, secret: $secret) {
        metadata {
          name
          generation
        }
        stringData
        recordVersion
    }
  }
variables:
  projectName: "{{.projectName}}"
  envName: "{{.envName}}"
  secret:
    displayName: "Hello Hi"
    metadata:
      name: '{{.name}}'
      namespace: '{{.namespace}}'
    stringData:
      key1: v1
      key3: v2
---

label: Delete Secret
query: |+
  mutation Core_deleteSecret($projectName: String!, $envName: String!, $secretName: String!) {
    core_deleteSecret(projectName: $projectName, envName: $envName, secretName: $secretName)
  }
variables:
  projectName: "{{.projectName}}"
  envName: "{{.envName}}"
  secretName: "{{.name}}16"

---
