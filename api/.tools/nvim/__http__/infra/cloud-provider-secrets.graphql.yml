---
global:
  accountName: kloudlite-dev
  clusterName: sample-cluster

  providerNamespace: kl-account-kloudlite-dev
  providerName: aws-creds

---

label: Create Cloud Provider Secret
query: |+
  mutation Infra_createProviderSecret($secret: CloudProviderSecretIn!) {
    infra_createProviderSecret(secret: $secret) {
      id
    }
  }
variables:
  secret:
    displayName: "this has aws credentials"
    metadata:
      name: "{{.providerName}}"
    cloudProviderName: aws
    aws:
      awsAccountId: "{{.awsAccountId}}"
---

label: Update Cloud Provider Secret
query: |+
  mutation Infra_updateProviderSecret($secret: CloudProviderSecretIn!) {
    infra_updateProviderSecret(secret: $secret) {
      id
    }
  }
variables:
  secret:
    displayName: "this has aws credentials"
    metadata:
      name: "{{.providerName}}"
    cloudProviderName: aws
    aws:
      awsAccountId: "{{.awsAccountId}}"

---

label: List Provider Secrets
query: |+
  query Infra_listProviderSecrets($search: SearchProviderSecret) {
    infra_listProviderSecrets(search: $search) {
      edges {
        node {
          markedForDeletion
          accountName
          metadata {
            name
            namespace
          }
          aws {
            awsAccountId
            cfParamTrustedARN
            cfParamStackName
            cfParamRoleName
            cfParamInstanceProfileName
            cfParamExternalID

            secretKey
            accessKey
          }
        }
      }
    }
  }
variables:
  search:
    cloudProviderName:
      matchType: 'regex'
      regex: '^aws$'

---

label: Get Provider Secret
query: |+
  query Infra_getProviderSecret($name: String!) {
    infra_getProviderSecret(name: $name) {
      accountName
      metadata {
        name
      } 
      cloudProviderName
    }
  }
variables:
  name: "{{.providerName}}"
---

label: Delete Provider Secret
query: |+
  mutation Infra_deleteProviderSecret($secretName: String!) {
    infra_deleteProviderSecret(secretName: $secretName)
  }
variables:
  secretName: "{{.providerName}}"
---

label: Check AWS Access
query: |+
  query Infra_checkAWSAccess($cloudproviderName: String!) {
    infra_checkAwsAccess(cloudproviderName: $cloudproviderName) {
      result
      installationUrl
    }
  }
variables:
  cloudproviderName: "{{.providerName}}"
---

label: Check Name Availbility
query: |+
  query Infra_checkNameAvailability($resType: ResType!, $name: String!) {
    infra_checkNameAvailability(resType: $resType, name: $name) {
      result
      suggestedNames
    }
  }
variables:
  resType: providersecret
  name: "{{.providerName}}"
---
