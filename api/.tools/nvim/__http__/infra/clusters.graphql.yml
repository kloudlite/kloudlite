---

label: Create Cluster
query: |+ #graphql
  mutation Infra_createCluster($cluster: ClusterIn!) {
    infra_createCluster(cluster: $cluster) {
      metadata {
        name
      }
      spec {
        accountName
      }
    }
  }
variables:
  cluster:
    displayName: "Sample Cluster"
    metadata:
      name: "{{.clusterName}}"
    spec:
      cloudflareEnabled: true
      availabilityMode: dev
      cloudProvider: aws
      aws:
        credentials:
          authMechanism: "secret_keys"
          secretRef:
            name: "{{.providerSecretName}}"
            namespace: "{{.providerSecretNamespace}}"
        region: ap-south-1
        k3sMasters:
          instanceType: c6a.large
          nvidiaGpuEnabled: false

---

label: Create GCP Cluster
query: |+ #graphql
  mutation Infra_createCluster($cluster: ClusterIn!) {
    infra_createCluster(cluster: $cluster) {
      metadata {
        name
      }
      spec {
        accountName
      }
    }
  }
variables:
  cluster:
    displayName: "Sample Cluster 2"
    metadata:
      name: "{{.gcpClusterName}}"
    spec:
      cloudflareEnabled: true
      availabilityMode: dev
      cloudProvider: gcp
      gcp:
        credentialsRef:
          name: "{{.gcpCloudproviderName}}"
        region: asia-south1
        gcpProjectID: "rich-wavelet-412321"
---

label: List Clusters
query: |+ #graphql
  # query Infra_listClusters($search: SearchCluster, $pagination: CursorPaginationIn) {
  #   infra_listClusters(search: $search, pagination: $pagination) {
  #     edges {
  #       cursor
  #       node {
  #         id
  #         kind
  #         metadata {
  #           name
  #           namespace
  #         }
  #         status {
  #           checks
  #         }
  #         spec {
  #           messageQueueTopicName
  #         }
  #         # clusterToken
  #         markedForDeletion
  #         syncStatus {
  #           action
  #           error
  #           lastSyncedAt
  #           state
  #           syncScheduledAt
  #           recordVersion
  #         }
  #         # adminKubeconfig {
  #         #   value
  #         #   encoding
  #         # }
  #       }
  #     }
  #   }
  # }
  query Infra_listClusterss(
        $search: SearchCluster
        $pagination: CursorPaginationIn
      ) {
        infra_listClusters(search: $search, pagination: $pagination) {
          totalCount
          pageInfo {
            startCursor
            hasPreviousPage
            hasNextPage
            endCursor
          }
          edges {
            cursor
            node {
              id
              displayName
              markedForDeletion
              metadata {
                name
                annotations
                generation
              }
              creationTime
              lastUpdatedBy {
                userId
                userName
                userEmail
              }
              createdBy {
                userEmail
                userId
                userName
              }
              updateTime
              status {
                checks
                checkList {
                  description
                  debug
                  name
                  title
                }
                isReady
                lastReadyGeneration
                lastReconcileTime
                message {
                  RawMessage
                }
                resources {
                  apiVersion
                  kind
                  name
                  namespace
                }
              }
              syncStatus {
                action
                error
                lastSyncedAt
                recordVersion
                state
                syncScheduledAt
              }
              recordVersion
              spec {
                messageQueueTopicName
                kloudliteRelease

                clusterTokenRef {
                  key
                  name
                  namespace
                }
                accountId
                accountName
                availabilityMode
                aws {
                  k3sMasters {
                    iamInstanceProfileRole
                    instanceType
                    nodes
                    nvidiaGpuEnabled
                    rootVolumeSize
                    rootVolumeType
                  }
                  nodePools
                  region
                  spotNodePools
                }
                cloudProvider
                backupToS3Enabled
                cloudflareEnabled
                clusterInternalDnsHost
                output {
                  keyK3sAgentJoinToken
                  keyK3sServerJoinToken
                  keyKubeconfig
                  secretName
                }
                publicDNSHost
                taintMasterNodes
              }
            }
          }
        }
      }
variables:
  search:
    text:
      matchType: regex
      regex: ""
  pagination:
    first: 10

---

label: Get Cluster
query: |+ #graphql
  query Query($name: String!) {
    infra_getCluster(name: $name) {
      kind
      metadata {
        name
      }
      recordVersion
      markedForDeletion
      spec {
        cloudProvider
        credentialsRef {
          name
          namespace
        }
      }
    }
  }
variables:
  name: "{{.clusterName}}"

---

label: Update Cluster
query: |+ #graphql
  mutation Infra_updateCluster($cluster: ClusterIn!) {
    infra_updateCluster(cluster: $cluster) {
      metadata {
        name
      }
      spec {
        accountName
      }
    }
  }
variables:
  cluster:
    displayName: "Sample Cluster"
    metadata:
      name: "{{.clusterName}}"
    spec:
      cloudflareEnabled: true
      availabilityMode: dev
      credentialsRef:
        name: "{{.providerSecretName}}"
        namespace: "{{.providerSecretNamespace}}"
      cloudProvider: aws
      aws:
        region: ap-south-1
        k3sMasters:
          instanceType: c6a.large
          iamInstanceProfileRole: ""

---
label: Upgrade Helm Kloudlite Agent
query: |+ #graphql
  mutation Infra_upgradeHelmKloudliteAgent($clusterName: String!) {
    infra_upgradeHelmKloudliteAgent(clusterName: $clusterName)
  }
variables:
  # clusterName: "{{.clusterName}}"
  clusterName: "{{.gcpClusterName}}"
---

label: Delete Cluster
query: |+ #graphql
  mutation Infra_deleteCluster($name: String!) {
    infra_deleteCluster(name: $name)
  }
variables:
  # name: "{{.clusterName}}"
  name: "{{.gcpClusterName}}"

---

