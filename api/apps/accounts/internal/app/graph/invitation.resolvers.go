package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"

	"kloudlite.io/apps/accounts/internal/app/graph/generated"
	"kloudlite.io/apps/accounts/internal/entities"
)

// CreationTime is the resolver for the creationTime field.
func (r *invitationResolver) CreationTime(ctx context.Context, obj *entities.Invitation) (string, error) {
	panic(fmt.Errorf("not implemented: CreationTime - creationTime"))
}

// ID is the resolver for the id field.
func (r *invitationResolver) ID(ctx context.Context, obj *entities.Invitation) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Role is the resolver for the role field.
func (r *invitationResolver) Role(ctx context.Context, obj *entities.Invitation) (string, error) {
	panic(fmt.Errorf("not implemented: Role - role"))
}

// UpdateTime is the resolver for the updateTime field.
func (r *invitationResolver) UpdateTime(ctx context.Context, obj *entities.Invitation) (string, error) {
	panic(fmt.Errorf("not implemented: UpdateTime - updateTime"))
}

// UserID is the resolver for the userId field.
func (r *invitationResolver) UserID(ctx context.Context, obj *entities.Invitation) (string, error) {
	panic(fmt.Errorf("not implemented: UserID - userId"))
}

// Role is the resolver for the role field.
func (r *invitationInResolver) Role(ctx context.Context, obj *entities.Invitation, data string) error {
	panic(fmt.Errorf("not implemented: Role - role"))
}

// UserID is the resolver for the userId field.
func (r *invitationInResolver) UserID(ctx context.Context, obj *entities.Invitation, data string) error {
	panic(fmt.Errorf("not implemented: UserID - userId"))
}

// Invitation returns generated.InvitationResolver implementation.
func (r *Resolver) Invitation() generated.InvitationResolver { return &invitationResolver{r} }

// InvitationIn returns generated.InvitationInResolver implementation.
func (r *Resolver) InvitationIn() generated.InvitationInResolver { return &invitationInResolver{r} }

type invitationResolver struct{ *Resolver }
type invitationInResolver struct{ *Resolver }
