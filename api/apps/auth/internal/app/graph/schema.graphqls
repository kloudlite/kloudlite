scalar Date
scalar Json
scalar ProviderDetail
scalar URL

type Query {
  me: User # Done
  findByEmail(email: String!): User # Done
  requestLogin(provider: String!, state: String): URL!
}

type Mutation {
  login(email: String!, password: String!): Session # Done
  signup(name: String!, email: String!, password: String!): Session # Done
  logout: Boolean! # Done
  setMetadata(values: Json!): User! # Done
  clearMetadata: User! #Done
  verifyEmail(token: String!): Session!
  resetPassword(token: String!, password: String!): Boolean!
  requestResetPassword(email: String!): Boolean!
  loginWithInviteToken(inviteToken: String!): Session
  inviteSignup(email: String!, name: String!): ID!
  changeEmail(email: String!): Boolean!
  resendVerificationEmail(email: String!): Boolean!
  verifyChangeEmail(token: String!): Boolean!
  changePassword(currentPassword: String!, newPassword: String!): Boolean!

  oauth_login(provider: String!, state: String!, code: String!): Session!
  oauth_addLogin(provider: String!, state: String!, code: String!): Boolean!
}

type Session {
  id: ID!
  userId: ID!
  userEmail: String!
  loginMethod: String!
  userVerified: Boolean!
}

type User @key(fields: "id") {
  id: ID!
  name: String!
  email: String!
  avatar: String
  invite: String!
  verified: Boolean!
  metadata: Json
  joined: Date!
  providerGitlab: ProviderDetail
  providerGithub: ProviderDetail
  providerGoogle: ProviderDetail
}
