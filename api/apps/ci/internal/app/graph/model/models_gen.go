// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"kloudlite.io/pkg/repos"
)

type GitPipeline struct {
	ID          repos.ID               `json:"id"`
	RepoName    string                 `json:"repoName"`
	Name        string                 `json:"name"`
	GitProvider string                 `json:"gitProvider"`
	GitRepoURL  string                 `json:"gitRepoUrl"`
	GitBranch   string                 `json:"gitBranch"`
	Build       *GitPipelineBuild      `json:"build"`
	Run         *GitPipelineRun        `json:"run"`
	Metadata    map[string]interface{} `json:"metadata"`
}

type GitPipelineArtifact struct {
	DockerImageName *string `json:"dockerImageName"`
	DockerImageTag  *string `json:"dockerImageTag"`
}

type GitPipelineArtifactIn struct {
	DockerImageName *string `json:"dockerImageName"`
	DockerImageTag  *string `json:"dockerImageTag"`
}

type GitPipelineBuild struct {
	BaseImage *string `json:"baseImage"`
	Cmd       string  `json:"cmd"`
}

type GitPipelineBuildIn struct {
	BaseImage string `json:"baseImage"`
	Cmd       string `json:"cmd"`
}

type GitPipelineIn struct {
	Name        string                 `json:"name"`
	ProjectID   string                 `json:"projectId"`
	AppID       string                 `json:"appId"`
	GitProvider string                 `json:"gitProvider"`
	GitRepoURL  string                 `json:"gitRepoUrl"`
	RepoName    string                 `json:"repoName"`
	GitBranch   string                 `json:"gitBranch"`
	Build       *GitPipelineBuildIn    `json:"build"`
	Run         *GitPipelineRunIn      `json:"run"`
	ArtifactRef *GitPipelineArtifactIn `json:"artifactRef"`
}

type GitPipelineRun struct {
	BaseImage *string `json:"baseImage"`
	Cmd       string  `json:"cmd"`
}

type GitPipelineRunIn struct {
	BaseImage *string `json:"baseImage"`
	Cmd       string  `json:"cmd"`
}

type PipelineDataInput struct {
	Name                 string                 `json:"name"`
	ImageName            string                 `json:"imageName"`
	RepoName             string                 `json:"repoName"`
	GitProvider          string                 `json:"gitProvider"`
	GitRepoURL           string                 `json:"gitRepoUrl"`
	GitlabRepoID         int                    `json:"gitlabRepoId"`
	DockerFile           string                 `json:"dockerFile"`
	ContextDir           string                 `json:"contextDir"`
	GithubInstallationID *int                   `json:"githubInstallationId"`
	BuildArgs            map[string]interface{} `json:"buildArgs"`
	Branch               string                 `json:"branch"`
	Metadata             map[string]interface{} `json:"metadata"`
}
