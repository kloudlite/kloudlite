// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"kloudlite.io/pkg/repos"
)

type App struct {
	ID                     repos.ID               `json:"id"`
	Pipelines              []*GitPipeline         `json:"pipelines"`
	CiCreateDockerPipeLine map[string]interface{} `json:"ci_createDockerPipeLine"`
	CiCreatePipeLine       map[string]interface{} `json:"ci_createPipeLine"`
}

func (App) IsEntity() {}

type GitDockerPipelineIn struct {
	Name          string                 `json:"name"`
	AccountID     string                 `json:"accountId"`
	ProjectID     string                 `json:"projectId"`
	AppID         string                 `json:"appId"`
	ProjectName   string                 `json:"projectName"`
	ContainerName string                 `json:"containerName"`
	GitProvider   string                 `json:"gitProvider"`
	GitRepoURL    string                 `json:"gitRepoUrl"`
	RepoName      string                 `json:"repoName"`
	GitBranch     string                 `json:"gitBranch"`
	DockerFile    string                 `json:"dockerFile"`
	ContextDir    string                 `json:"contextDir"`
	BuildArgs     string                 `json:"buildArgs"`
	ArtifactRef   *GitPipelineArtifactIn `json:"artifactRef"`
}

type GitPipeline struct {
	ID          repos.ID               `json:"id"`
	Name        string                 `json:"name"`
	GitProvider string                 `json:"gitProvider"`
	GitRepoURL  string                 `json:"gitRepoUrl"`
	GitBranch   string                 `json:"gitBranch"`
	Build       *GitPipelineBuild      `json:"build"`
	Run         *GitPipelineRun        `json:"run"`
	Metadata    map[string]interface{} `json:"metadata"`
}

type GitPipelineArtifact struct {
	DockerImageName *string `json:"dockerImageName"`
	DockerImageTag  *string `json:"dockerImageTag"`
}

type GitPipelineArtifactIn struct {
	DockerImageName *string `json:"dockerImageName"`
	DockerImageTag  *string `json:"dockerImageTag"`
}

type GitPipelineBuild struct {
	BaseImage *string `json:"baseImage"`
	Cmd       string  `json:"cmd"`
	OutputDir *string `json:"outputDir"`
}

type GitPipelineBuildIn struct {
	BaseImage string  `json:"baseImage"`
	Cmd       string  `json:"cmd"`
	OutputDir *string `json:"outputDir"`
}

type GitPipelineIn struct {
	Name          string                 `json:"name"`
	AccountID     string                 `json:"accountId"`
	ProjectID     string                 `json:"projectId"`
	AppID         string                 `json:"appId"`
	ProjectName   string                 `json:"projectName"`
	ContainerName string                 `json:"containerName"`
	GitProvider   string                 `json:"gitProvider"`
	GitRepoURL    string                 `json:"gitRepoUrl"`
	RepoName      string                 `json:"repoName"`
	GitBranch     string                 `json:"gitBranch"`
	Build         *GitPipelineBuildIn    `json:"build"`
	Run           *GitPipelineRunIn      `json:"run"`
	ArtifactRef   *GitPipelineArtifactIn `json:"artifactRef"`
}

type GitPipelineRun struct {
	BaseImage *string `json:"baseImage"`
	Cmd       string  `json:"cmd"`
}

type GitPipelineRunIn struct {
	BaseImage *string `json:"baseImage"`
	Cmd       string  `json:"cmd"`
}
