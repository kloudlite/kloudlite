version: "3"

includes:
  go: ../../.tools/taskfiles/go-build.yml

vars:
  app: comms

tasks:
  gql:
    dir: ./internal/app
    cmds:
      - go run github.com/99designs/gqlgen generate
      - gofmt -w -d -r '"errors" -> "github.com/kloudlite/api/pkg/errors"' graph/*.resolvers.go

  k8s-schema:
    cmds:
      - mkdir -p "./internal/app/_struct-to-graphql"
      - go run ../../cmd/struct-to-graphql
          --struct github.com/kloudlite/api/apps/comms/internal/domain/entities.NotificationConf
          --struct github.com/kloudlite/api/apps/comms/internal/domain/entities.Subscription
          --struct github.com/kloudlite/api/apps/comms/types.Notification
          --struct github.com/kloudlite/api/pkg/types.Pagination
          --struct github.com/kloudlite/api/pkg/repos.MatchFilter
          --struct github.com/kloudlite/api/pkg/repos.CursorPagination
        > ./internal/app/_struct-to-graphql/main.go
      - |+
        pushd ./internal/app/_struct-to-graphql
        go run main.go --dev --out-dir ../graph/struct-to-graphql --with-pagination Notification
        popd
      - rm -rf ./internal/app/_struct-to-graphql


  gen:constants:
    cmds:
      - go generate ./internal/domain/entities/field-constants/gen.go
  run:
    dotenv: [".secrets/env"]
    cmds:
      - nodemon -e go --signal SIGKILL --exec 'go run -tags dynamic main.go --dev || exit 1'

  build:
    cmds:
      - task: go:build 
        vars: 
          Out: ./bin/{{.app}}

  container:build-and-push:
    preconditions:
      - sh: '[[ -n "{{.Image}}" ]]'
        msg: "var Image must have a value, of format 'image_repository:image_tag'"
    cmds:
      - task build upx={{.upx}}
      - docker buildx build -f ./Containerfile -t {{.Image}} . --build-arg BINARY={{.app}} --push
