version: "3"

dotenv: [".secrets/env"]

vars:
  ImagePrefix: ghcr.io/kloudlite/platform/apis
  
tasks:
  run:
    env:
      EMAIL_LINKS_BASE_URL: "https://auth.local.kl.madhouselabs.io"
      GRPC_PORT: 50051
      SUPPORT_EMAIL: support@kloudlite.io
    cmds:
      - nodemon -e go --signal SIGKILL --exec 'go run -tags dynamic main.go --dev || exit 1'

  build:
    env:
      CGO_ENABLED: 0
      # GOOS: linux
      # GOARCH: amd64
    preconditions:
      - sh: '[ -n "{{.Out}}" ]'
        msg: var Out must have a value
    cmds:
      - go build -ldflags="-s -w" -o {{.Out}}
      - upx {{.Out}}

  docker-build:
    vars:
      APP: comms
      IMAGE: "{{.ImagePrefix}}/{{.APP}}:{{.Tag}}"
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'
    cmds:
      - docker buildx build -f ./Dockerfile -t {{.IMAGE}} . --build-arg APP={{.APP}} --platform linux/amd64  --build-context project-root=../..
      - docker push {{.IMAGE}}

  local-build:
    vars:
      APP: comms
      IMAGE: "{{.ImagePrefix}}/{{.APP}}:{{.Tag}}"
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'
    silent: true
    cmds:
      - |+
        lineNumbers=$(cat Dockerfile | grep -i '^FROM' -n | tail +2 | awk -F: '{print $1}')
        
        startLineNo=$(echo "$lineNumbers" | head -n+1)
        finalLineNo=$(echo "$lineNumbers" | tail -1)

        tDir=$(mktemp -d)

        nDockerfile=$(cat Dockerfile | tail --lines=+$startLineNo | grep -i --invert-match 'from=base')
        echo "$nDockerfile" | sed "1 i # syntax=docker/dockerfile:1.4" > $tDir/Dockerfile.base

        #lineNo=$(cat Dockerfile | grep -i '^FROM' -n | tail -1 | awk -F: '{print $1}')
        task build Out="$tDir/{{.APP}}"

        cat $tDir/Dockerfile.base | sed "5 i COPY --from=local-builder ./{{.APP}} ./{{.APP}}" > $tDir/Dockerfile
        cat $tDir/Dockerfile

        docker buildx build -f $tDir/Dockerfile -t {{.IMAGE}} . --build-context local-builder=${tDir}
        docker push {{.IMAGE}}
        rm -rf $tDir
