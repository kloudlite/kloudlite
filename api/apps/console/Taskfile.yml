version: "3"

vars:
  app: console

includes:
  go: ../../.tools/taskfiles/go-build.yml

tasks:
  gql:
    dir: ./internal/app
    cmds:
      - go run github.com/99designs/gqlgen generate
      - gofmt -w -d -r '"errors" -> "github.com/kloudlite/api/pkg/errors"' graph/*.resolvers.go

  k8s-schema:
    cmds:
      - mkdir -p "./internal/app/_struct-to-graphql"
      - go run ../../cmd/struct-to-graphql
        --struct github.com/kloudlite/api/apps/console/internal/entities.Environment
        --struct github.com/kloudlite/api/apps/console/internal/entities.App
        --struct github.com/kloudlite/api/apps/console/internal/entities.ExternalApp
        --struct github.com/kloudlite/api/apps/console/internal/entities.Secret
        --struct github.com/kloudlite/api/apps/console/internal/entities.Config
        --struct github.com/kloudlite/api/apps/console/internal/entities.ConsoleVPNDevice
        --struct github.com/kloudlite/operator/apis/wireguard/v1.Port
        --struct github.com/kloudlite/api/apps/console/internal/domain.ConfigKeyRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.ConfigKeyValueRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.SecretKeyRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.SecretKeyValueRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.ManagedResourceKeyRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.ManagedResourceKeyValueRef
        --struct github.com/kloudlite/api/apps/console/internal/entities.Router
        --struct github.com/kloudlite/api/apps/console/internal/entities.ManagedResource
        --struct github.com/kloudlite/api/apps/console/internal/entities.ImagePullSecret
        --struct github.com/kloudlite/api/pkg/repos.MatchFilter
        --struct github.com/kloudlite/api/pkg/repos.CursorPagination
        > ./internal/app/_struct-to-graphql/main.go
      - |+
        pushd ./internal/app/_struct-to-graphql
        go run main.go --dev --out-dir ../graph/struct-to-graphql --with-pagination Environment,App,ExternalApp,Secret,Config,Router,ManagedResource,ImagePullSecret,ConsoleVPNDevice
        popd
      - rm -rf ./internal/app/_struct-to-graphql

  run:
    dotenv:
      - .secrets/env
    env:
      CGO_ENABLED: 0
    cmds:
      - go run ./main.go --dev

  gen:constants:
    cmds:
      - go generate ./internal/entities/field-constants/gen.go

  build:
    cmds:
      - task: gen:constants
      - task: go:build
        vars:
          Out: ./bin/{{.app}}

  local:build-and-push:
    preconditions:
      - sh: '[[ -n "{{.Image}}" ]]'
        msg: "var Image must have a value, of format 'image_repository:image_tag'"
    vars:
      push: "{{.push | default false}}"
    cmds:
      - task: build
      - nerdctl build -f ./Containerfile -t {{.Image}} . --build-arg BINARY={{.app}}
      - |+
        [ {{.push}} = "true" ] && nerdctl push {{.Image}}


  container:build-and-push:
    preconditions:
      - sh: '[[ -n "{{.Image}}" ]]'
        msg: "var Image must have a value, of format 'image_repository:image_tag'"
    cmds:
      - task: build
      - docker buildx build -f ./Containerfile -t {{.Image}} --build-arg BINARY={{.app}} --output=type=image,compression=zstd,force-compression=true,compression-level=12 . --push 

