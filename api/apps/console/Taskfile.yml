version: "3"

dotenv:
  - .secrets/env

vars:
  ImagePrefix: "ghcr.io/kloudlite/api"

tasks:
  gql:
    dir: ./internal/app
    cmds:
      - go run github.com/99designs/gqlgen generate
      - gofmt -w -d -r '"errors" -> "github.com/kloudlite/api/pkg/errors"' graph/*.resolvers.go


  build:
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    vars:
      BuiltAt:
        sh: date | sed 's/\s/_/g'
    preconditions:
      - sh: '[ -n "{{.Out}}" ]'
        msg: var Out must have a value
    cmds:
      - go generate ./internal/entities/field-constants/
      - go build -ldflags="-s -w -X github.com/kloudlite/api/common.BuiltAt=\"{{.BuiltAt}}\"" -o {{.Out}}
      - upx {{.Out}}

  k8s-schema:
    cmds:
      - mkdir -p "./internal/app/_struct-to-graphql"
      - go run ../../cmd/struct-to-graphql
        --struct github.com/kloudlite/api/apps/console/internal/entities.Project
        --struct github.com/kloudlite/api/apps/console/internal/entities.Environment
        --struct github.com/kloudlite/api/apps/console/internal/entities.App
        --struct github.com/kloudlite/api/apps/console/internal/entities.Secret
        --struct github.com/kloudlite/api/apps/console/internal/entities.Config
        --struct github.com/kloudlite/api/apps/console/internal/entities.ConsoleVPNDevice
        --struct github.com/kloudlite/operator/apis/wireguard/v1.Port
        --struct github.com/kloudlite/api/apps/console/internal/domain.ConfigKeyRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.ConfigKeyValueRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.SecretKeyRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.SecretKeyValueRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.ManagedResourceKeyRef
        --struct github.com/kloudlite/api/apps/console/internal/domain.ManagedResourceKeyValueRef
        --struct github.com/kloudlite/api/apps/console/internal/entities.Router
        --struct github.com/kloudlite/api/apps/console/internal/entities.ManagedResource
        --struct github.com/kloudlite/api/apps/console/internal/entities.ImagePullSecret
        --struct github.com/kloudlite/api/apps/console/internal/entities.ProjectManagedService
        --struct github.com/kloudlite/api/pkg/repos.MatchFilter
        --struct github.com/kloudlite/api/pkg/repos.CursorPagination
        > ./internal/app/_struct-to-graphql/main.go
      - |+
        pushd ./internal/app/_struct-to-graphql
        go run main.go --dev --out-dir ../graph/struct-to-graphql --with-pagination Project,Environment,App,Secret,Config,Router,ManagedResource,ProjectManagedService,ImagePullSecret,ConsoleVPNDevice
        popd
      - rm -rf ./internal/app/_struct-to-graphql

  docker-build:
    vars:
      APP: console
      IMAGE: "{{.ImagePrefix}}/{{.APP}}:{{.Tag}}"
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'
    cmds:
      - docker buildx build -f ./Dockerfile -t {{.IMAGE}} . --build-arg APP={{.APP}} --platform linux/amd64  --build-context project-root=../..
      - docker push {{.IMAGE}}

  local-build:
    vars:
      APP: console
      IMAGE: "{{.ImagePrefix}}/{{.APP}}:{{.Tag}}"
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'
    silent: true
    cmds:
      - |+
        tdir=$(mktemp -d)
        task build Out=$tdir/{{.APP}}

        podman buildx build -f ./Containerfile.local -t {{.IMAGE}} . --build-context local-builder=${tdir} --build-arg APP="{{.APP}}"
        podman push {{.IMAGE}}
        rm -rf $tdir

  run:
    vars:
      Name: console
    dotenv:
      - .secrets/env
    env:
      CGO_ENABLED: 0
    cmds:
      - go run ./main.go --dev
