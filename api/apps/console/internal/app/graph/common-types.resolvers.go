package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"
	"time"

	"github.com/kloudlite/api/apps/console/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/console/internal/app/graph/model"
	"github.com/kloudlite/api/apps/console/internal/entities"
	"github.com/kloudlite/api/common"
	fn "github.com/kloudlite/api/pkg/functions"
	"github.com/kloudlite/api/pkg/types"
	"github.com/kloudlite/operator/pkg/operator"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Checks is the resolver for the checks field.
func (r *github__com___kloudlite___operator___pkg___operator__StatusResolver) Checks(ctx context.Context, obj *operator.Status) (map[string]interface{}, error) {
	if obj == nil {
		return nil, fmt.Errorf("obj is nil")
	}
	var m map[string]any
	if err := fn.JsonConversion(obj.Checks, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// LastReconcileTime is the resolver for the lastReconcileTime field.
func (r *github__com___kloudlite___operator___pkg___operator__StatusResolver) LastReconcileTime(ctx context.Context, obj *operator.Status) (*string, error) {
	if obj == nil {
		return nil, fmt.Errorf("obj is nil")
	}

	return fn.New(obj.LastReconcileTime.Format(time.RFC3339)), nil
}

// Message is the resolver for the message field.
func (r *github__com___kloudlite___operator___pkg___operator__StatusResolver) Message(ctx context.Context, obj *operator.Status) (*model.GithubComKloudliteOperatorPkgRawJSONRawJSON, error) {
	return &model.GithubComKloudliteOperatorPkgRawJSONRawJSON{
		RawMessage: obj.Message,
	}, nil
}

// Resources is the resolver for the resources field.
func (r *github__com___kloudlite___operator___pkg___operator__StatusResolver) Resources(ctx context.Context, obj *operator.Status) ([]*model.GithubComKloudliteOperatorPkgOperatorResourceRef, error) {
	var m []*model.GithubComKloudliteOperatorPkgOperatorResourceRef
	if err := fn.JsonConversion(obj.Resources, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// Fields is the resolver for the fields field.
func (r *kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver) Fields(ctx context.Context, obj *entities.MsvcTemplateEntry) ([]*model.KloudliteIoAppsConsoleInternalEntitiesInputField, error) {
	var m []*model.KloudliteIoAppsConsoleInternalEntitiesInputField
	if err := fn.JsonConversion(obj.Fields, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// Outputs is the resolver for the outputs field.
func (r *kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver) Outputs(ctx context.Context, obj *entities.MsvcTemplateEntry) ([]*model.KloudliteIoAppsConsoleInternalEntitiesOutputField, error) {
	var m []*model.KloudliteIoAppsConsoleInternalEntitiesOutputField
	if err := fn.JsonConversion(obj.Fields, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// Resources is the resolver for the resources field.
func (r *kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver) Resources(ctx context.Context, obj *entities.MsvcTemplateEntry) ([]*model.KloudliteIoAppsConsoleInternalEntitiesMresTemplate, error) {
	var m []*model.KloudliteIoAppsConsoleInternalEntitiesMresTemplate
	if err := fn.JsonConversion(obj.Resources, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserID is the resolver for the userId field.
func (r *kloudlite__io___common__CreatedOrUpdatedByResolver) UserID(ctx context.Context, obj *common.CreatedOrUpdatedBy) (string, error) {
	return string(obj.UserId), nil
}

// LastSyncedAt is the resolver for the lastSyncedAt field.
func (r *kloudlite__io___pkg___types__SyncStatusResolver) LastSyncedAt(ctx context.Context, obj *types.SyncStatus) (*string, error) {
	return fn.New(obj.LastSyncedAt.Format(time.RFC3339)), nil
}

// SyncScheduledAt is the resolver for the syncScheduledAt field.
func (r *kloudlite__io___pkg___types__SyncStatusResolver) SyncScheduledAt(ctx context.Context, obj *types.SyncStatus) (*string, error) {
	return fn.New(obj.SyncScheduledAt.Format(time.RFC3339)), nil
}

// Annotations is the resolver for the annotations field.
func (r *metadataResolver) Annotations(ctx context.Context, obj *v1.ObjectMeta) (map[string]interface{}, error) {
	var m map[string]any
	if err := fn.JsonConversion(obj.Annotations, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// CreationTimestamp is the resolver for the creationTimestamp field.
func (r *metadataResolver) CreationTimestamp(ctx context.Context, obj *v1.ObjectMeta) (string, error) {
	if obj == nil {
		return "", fmt.Errorf("metadata is nil")
	}
	return obj.CreationTimestamp.Format(time.RFC3339), nil
}

// DeletionTimestamp is the resolver for the deletionTimestamp field.
func (r *metadataResolver) DeletionTimestamp(ctx context.Context, obj *v1.ObjectMeta) (*string, error) {
	if obj == nil {
		return nil, fmt.Errorf("metadata is nil")
	}

	if obj.DeletionTimestamp == nil {
		return nil, nil
	}

	return fn.New(obj.DeletionTimestamp.Format(time.RFC3339)), nil
}

// Labels is the resolver for the labels field.
func (r *metadataResolver) Labels(ctx context.Context, obj *v1.ObjectMeta) (map[string]interface{}, error) {
	var m map[string]any
	if err := fn.JsonConversion(obj.Labels, &m); err != nil {
		return nil, err
	}
	return m, nil
}

// Annotations is the resolver for the annotations field.
func (r *metadataInResolver) Annotations(ctx context.Context, obj *v1.ObjectMeta, data map[string]interface{}) error {
	var m map[string]string
	if err := fn.JsonConversion(data, &m); err != nil {
		return err
	}
	obj.SetAnnotations(m)
	return nil
}

// Labels is the resolver for the labels field.
func (r *metadataInResolver) Labels(ctx context.Context, obj *v1.ObjectMeta, data map[string]interface{}) error {
	var m map[string]string
	if err := fn.JsonConversion(data, &m); err != nil {
		return err
	}
	obj.SetLabels(m)
	return nil
}

// Github__com___kloudlite___operator___pkg___operator__Status returns generated.Github__com___kloudlite___operator___pkg___operator__StatusResolver implementation.
func (r *Resolver) Github__com___kloudlite___operator___pkg___operator__Status() generated.Github__com___kloudlite___operator___pkg___operator__StatusResolver {
	return &github__com___kloudlite___operator___pkg___operator__StatusResolver{r}
}

// Kloudlite__io___apps___console___internal___entities__MsvcTemplateEntry returns generated.Kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver implementation.
func (r *Resolver) Kloudlite__io___apps___console___internal___entities__MsvcTemplateEntry() generated.Kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver {
	return &kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver{r}
}

// Kloudlite__io___common__CreatedOrUpdatedBy returns generated.Kloudlite__io___common__CreatedOrUpdatedByResolver implementation.
func (r *Resolver) Kloudlite__io___common__CreatedOrUpdatedBy() generated.Kloudlite__io___common__CreatedOrUpdatedByResolver {
	return &kloudlite__io___common__CreatedOrUpdatedByResolver{r}
}

// Kloudlite__io___pkg___types__SyncStatus returns generated.Kloudlite__io___pkg___types__SyncStatusResolver implementation.
func (r *Resolver) Kloudlite__io___pkg___types__SyncStatus() generated.Kloudlite__io___pkg___types__SyncStatusResolver {
	return &kloudlite__io___pkg___types__SyncStatusResolver{r}
}

// Metadata returns generated.MetadataResolver implementation.
func (r *Resolver) Metadata() generated.MetadataResolver { return &metadataResolver{r} }

// MetadataIn returns generated.MetadataInResolver implementation.
func (r *Resolver) MetadataIn() generated.MetadataInResolver { return &metadataInResolver{r} }

type github__com___kloudlite___operator___pkg___operator__StatusResolver struct{ *Resolver }
type kloudlite__io___apps___console___internal___entities__MsvcTemplateEntryResolver struct{ *Resolver }
type kloudlite__io___common__CreatedOrUpdatedByResolver struct{ *Resolver }
type kloudlite__io___pkg___types__SyncStatusResolver struct{ *Resolver }
type metadataResolver struct{ *Resolver }
type metadataInResolver struct{ *Resolver }
