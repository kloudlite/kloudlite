package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"github.com/kloudlite/api/pkg/errors"
	"time"

	"github.com/kloudlite/api/apps/console/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/console/internal/app/graph/model"
	"github.com/kloudlite/api/apps/console/internal/entities"
	fn "github.com/kloudlite/api/pkg/functions"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
)

// CreationTime is the resolver for the creationTime field.
func (r *consoleVPNDeviceResolver) CreationTime(ctx context.Context, obj *entities.ConsoleVPNDevice) (string, error) {
	if obj == nil {
		return "", errNilVPNDevice
	}
	return obj.BaseEntity.CreationTime.Format(time.RFC3339), nil
}

// Spec is the resolver for the spec field.
func (r *consoleVPNDeviceResolver) Spec(ctx context.Context, obj *entities.ConsoleVPNDevice) (*model.GithubComKloudliteOperatorApisWireguardV1DeviceSpec, error) {
	if obj == nil {
		return nil, errNilVPNDevice
	}

	m := &model.GithubComKloudliteOperatorApisWireguardV1DeviceSpec{}

	if err := fn.JsonConversion(obj.Spec, &m); err != nil {
		return nil, errors.NewE(err)
	}

	return m, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *consoleVPNDeviceResolver) UpdateTime(ctx context.Context, obj *entities.ConsoleVPNDevice) (string, error) {
	if obj == nil {
		return "", errNilVPNDevice
	}

	return obj.BaseEntity.UpdateTime.Format(time.RFC3339), nil
}

// WireguardConfig is the resolver for the wireguardConfig field.
func (r *consoleVPNDeviceResolver) WireguardConfig(ctx context.Context, obj *entities.ConsoleVPNDevice) (*model.GithubComKloudliteAPIPkgTypesEncodedString, error) {
	if obj == nil {
		return nil, errNilVPNDevice
	}

	m := &model.GithubComKloudliteAPIPkgTypesEncodedString{}

	if err := fn.JsonConversion(obj.WireguardConfig, &m); err != nil {
		return nil, errors.NewE(err)
	}

	return m, nil
}

// Metadata is the resolver for the metadata field.
func (r *consoleVPNDeviceInResolver) Metadata(ctx context.Context, obj *entities.ConsoleVPNDevice, data *v1.ObjectMeta) error {
	if obj == nil {
		return errNilVPNDevice
	}

	if data != nil {
		obj.ObjectMeta = *data
	}

	return nil
}

// Spec is the resolver for the spec field.
func (r *consoleVPNDeviceInResolver) Spec(ctx context.Context, obj *entities.ConsoleVPNDevice, data *model.GithubComKloudliteOperatorApisWireguardV1DeviceSpecIn) error {
	if obj == nil {
		return errNilVPNDevice
	}

	return fn.JsonConversion(data, &obj.Spec)
}

// ConsoleVPNDevice returns generated.ConsoleVPNDeviceResolver implementation.
func (r *Resolver) ConsoleVPNDevice() generated.ConsoleVPNDeviceResolver {
	return &consoleVPNDeviceResolver{r}
}

// ConsoleVPNDeviceIn returns generated.ConsoleVPNDeviceInResolver implementation.
func (r *Resolver) ConsoleVPNDeviceIn() generated.ConsoleVPNDeviceInResolver {
	return &consoleVPNDeviceInResolver{r}
}

type consoleVPNDeviceResolver struct{ *Resolver }
type consoleVPNDeviceInResolver struct{ *Resolver }
