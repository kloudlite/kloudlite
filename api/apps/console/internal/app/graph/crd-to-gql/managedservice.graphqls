input ManagedServiceSpecMsvcKindIn {
	apiVersion: String!
	kind: String
}

type ManagedServiceSpecTolerations {
	effect: String
	key: String
	operator: String
	tolerationSeconds: Int
	value: String
}

input ManagedServiceSpecTolerationsIn {
	effect: String
	key: String
	operator: String
	tolerationSeconds: Int
	value: String
}

type ManagedServiceSpec {
	inputs: Map
	msvcKind: ManagedServiceSpecMsvcKind!
	nodeSelector: Map
	region: String!
	tolerations: [ManagedServiceSpecTolerations]
}

input ManagedServiceSpecIn {
	inputs: Map
	msvcKind: ManagedServiceSpecMsvcKindIn!
	nodeSelector: Map
	region: String!
	tolerations: [ManagedServiceSpecTolerationsIn]
}

type ManagedService {
	metadata: Metadata! @goField(name: "objectMeta")
	overrides: Overrides
	spec: ManagedServiceSpec
	status: Status
	apiVersion: String
	enabled: Boolean
	kind: String
}

input ManagedServiceIn {
	metadata: MetadataIn! @goField(name: "objectMeta")
	overrides: OverridesIn
	spec: ManagedServiceSpecIn
	apiVersion: String
	enabled: Boolean
	kind: String
}

type ManagedServiceSpecMsvcKind {
	apiVersion: String!
	kind: String
}

