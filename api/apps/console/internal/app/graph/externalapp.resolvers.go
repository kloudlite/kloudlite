package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"github.com/kloudlite/api/pkg/errors"
	"time"

	"github.com/kloudlite/api/apps/console/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/console/internal/app/graph/model"
	"github.com/kloudlite/api/apps/console/internal/entities"
	fn "github.com/kloudlite/api/pkg/functions"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
)

// CreationTime is the resolver for the creationTime field.
func (r *externalAppResolver) CreationTime(ctx context.Context, obj *entities.ExternalApp) (string, error) {
	if obj == nil {
		return "", errNilApp
	}
	return obj.BaseEntity.CreationTime.Format(time.RFC3339), nil
}

// Spec is the resolver for the spec field.
func (r *externalAppResolver) Spec(ctx context.Context, obj *entities.ExternalApp) (*model.GithubComKloudliteOperatorApisCrdsV1ExternalAppSpec, error) {
	m := model.GithubComKloudliteOperatorApisCrdsV1ExternalAppSpec{}
	if err := fn.JsonConversion(obj.Spec, &m); err != nil {
		return nil, errors.NewE(err)
	}
	return &m, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *externalAppResolver) UpdateTime(ctx context.Context, obj *entities.ExternalApp) (string, error) {
	if obj == nil {
		return "", errors.Newf("obj is nil")
	}

	return obj.BaseEntity.UpdateTime.Format(time.RFC3339), nil
}

// Metadata is the resolver for the metadata field.
func (r *externalAppInResolver) Metadata(ctx context.Context, obj *entities.ExternalApp, data *v1.ObjectMeta) error {
	if obj == nil {
		return errNilExternalApp
	}
	if data != nil {
		obj.ObjectMeta = *data
	}
	return nil
}

// Spec is the resolver for the spec field.
func (r *externalAppInResolver) Spec(ctx context.Context, obj *entities.ExternalApp, data *model.GithubComKloudliteOperatorApisCrdsV1ExternalAppSpecIn) error {
	if obj == nil {
		return errNilExternalApp
	}
	return fn.JsonConversion(data, &obj.Spec)
}

// Status is the resolver for the status field.
func (r *externalAppInResolver) Status(ctx context.Context, obj *entities.ExternalApp, data *model.GithubComKloudliteOperatorPkgOperatorStatusIn) error {
	if obj == nil {
		return errNilExternalApp
	}
	return fn.JsonConversion(data, &obj.Status)
}

// ExternalApp returns generated.ExternalAppResolver implementation.
func (r *Resolver) ExternalApp() generated.ExternalAppResolver { return &externalAppResolver{r} }

// ExternalAppIn returns generated.ExternalAppInResolver implementation.
func (r *Resolver) ExternalAppIn() generated.ExternalAppInResolver { return &externalAppInResolver{r} }

type externalAppResolver struct{ *Resolver }
type externalAppInResolver struct{ *Resolver }
