package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"time"

	"github.com/kloudlite/api/apps/console/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/console/internal/app/graph/model"
	"github.com/kloudlite/api/apps/console/internal/entities"
	"github.com/kloudlite/api/pkg/repos"
)

// CreationTime is the resolver for the creationTime field.
func (r *importedManagedResourceResolver) CreationTime(ctx context.Context, obj *entities.ImportedManagedResource) (string, error) {
	if obj == nil {
		return "", errNilManagedResource
	}
	return obj.CreationTime.Format(time.RFC3339), nil
}

// ID is the resolver for the id field.
func (r *importedManagedResourceResolver) ID(ctx context.Context, obj *entities.ImportedManagedResource) (repos.ID, error) {
	if obj == nil {
		return "", errNilManagedResource
	}
	return obj.ID, nil
}

// ManagedResourceRef is the resolver for the managedResourceRef field.
func (r *importedManagedResourceResolver) ManagedResourceRef(ctx context.Context, obj *entities.ImportedManagedResource) (*model.GithubComKloudliteAPIAppsConsoleInternalEntitiesManagedResourceRef, error) {
	if obj == nil {
		return nil, errNilManagedResource
	}
	return &model.GithubComKloudliteAPIAppsConsoleInternalEntitiesManagedResourceRef{
		ID:        string(obj.ManagedResourceRef.ID),
		Name:      obj.ManagedResourceRef.Name,
		Namespace: obj.ManagedResourceRef.Namespace,
	}, nil
}

// SecretRef is the resolver for the secretRef field.
func (r *importedManagedResourceResolver) SecretRef(ctx context.Context, obj *entities.ImportedManagedResource) (*model.GithubComKloudliteOperatorApisCommonTypesSecretRef, error) {
	if obj == nil {
		return nil, errNilImportedManagedResource
	}

	return &model.GithubComKloudliteOperatorApisCommonTypesSecretRef{
		Name:      obj.SecretRef.Name,
		Namespace: &obj.SecretRef.Namespace,
	}, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *importedManagedResourceResolver) UpdateTime(ctx context.Context, obj *entities.ImportedManagedResource) (string, error) {
	if obj == nil {
		return "", errNilImportedManagedResource
	}
	return obj.BaseEntity.UpdateTime.Format(time.RFC3339), nil
}

// ImportedManagedResource returns generated.ImportedManagedResourceResolver implementation.
func (r *Resolver) ImportedManagedResource() generated.ImportedManagedResourceResolver {
	return &importedManagedResourceResolver{r}
}

type importedManagedResourceResolver struct{ *Resolver }
