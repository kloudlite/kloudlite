directive @isLoggedIn on FIELD_DEFINITION

type Query {
  core_listProjects: [Project!] @isLoggedIn
  core_getProject(name: String!): Project @isLoggedIn

  core_listApps(namespace: String!): [App!] @isLoggedIn
  core_getApp(namespace: String!, name: String!): App @isLoggedIn

  core_listConfigs(namespace: String!): [Config!] @isLoggedIn
  core_getConfig(namespace: String!, name: String!): Config @isLoggedIn

  core_listSecrets(namespace: String!): [Secret!] @isLoggedIn
  core_getSecret(namespace: String!, name: String!): Secret @isLoggedIn

  core_listRouters(namespace: String!): [Router!] @isLoggedIn
  core_getRouter(namespace: String!, name: String!): Router @isLoggedIn

  core_listManagedServices(namespace: String!): [ManagedService!] @isLoggedIn
  core_getManagedService(namespace: String!, name: String!): ManagedService @isLoggedIn

  core_listManagedResources(namespace: String!): [ManagedResource!] @isLoggedIn
  core_getManagedResource(namespace: String!, name: String!): ManagedResource @isLoggedIn
}

type Mutation {
  core_createProject(project: ProjectIn!): Project @isLoggedIn
  core_updateProject(project: ProjectIn!): Project @isLoggedIn
  core_deleteProject(name: String!): Boolean! @isLoggedIn
 
  core_createApp(app: AppIn!): App @isLoggedIn
  core_updateApp(app: AppIn!): App @isLoggedIn
  core_deleteApp(namespace: String!, name: String!): Boolean! @isLoggedIn

  core_createConfig(config: ConfigIn!): Config @isLoggedIn
  core_updateConfig(config: ConfigIn!): Config @isLoggedIn
  core_deleteConfig(namespace: String!, name: String!): Boolean! @isLoggedIn

  core_createSecret(secret: SecretIn!): Secret @isLoggedIn
  core_updateSecret(secret: SecretIn!): Secret @isLoggedIn
  core_deleteSecret(namespace: String!, name: String!): Boolean! @isLoggedIn

  core_createRouter(router: RouterIn!): Router @isLoggedIn
  core_updateRouter(router: RouterIn!): Router @isLoggedIn
  core_deleteRouter(namespace: String!, name: String!): Boolean! @isLoggedIn

  core_createManagedService(msvc: ManagedServiceIn!): ManagedService @isLoggedIn
  core_updateManagedService(msvc: ManagedServiceIn!): ManagedService @isLoggedIn
  core_deleteManagedService(namespace: String!, name: String!): Boolean! @isLoggedIn

  core_createManagedResource(mres: ManagedResourceIn!): ManagedResource @isLoggedIn
  core_updateManagedResource(mres: ManagedResourceIn!): ManagedResource @isLoggedIn
  core_deleteManagedResource(namespace: String!, name: String!): Boolean! @isLoggedIn
}
