package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"

	"kloudlite.io/apps/console/internal/app/graph/generated"
	"kloudlite.io/apps/console/internal/app/graph/model"
	"kloudlite.io/apps/console/internal/domain/entities"
	fn "kloudlite.io/pkg/functions"
)

// Spec is the resolver for the spec field.
func (r *workspaceResolver) Spec(ctx context.Context, obj *entities.Workspace) (*model.WorkspaceSpec, error) {
	if obj == nil {
		return nil, nil
	}

	var m model.WorkspaceSpec
	if err := fn.JsonConversion(obj.Spec, &m); err != nil {
		return nil, err
	}
	return &m, nil
}

// Spec is the resolver for the spec field.
func (r *workspaceInResolver) Spec(ctx context.Context, obj *entities.Workspace, data *model.WorkspaceSpecIn) error {
	if obj == nil {
		return nil
	}
	return fn.JsonConversion(data, &obj.Spec)
}

// Workspace returns generated.WorkspaceResolver implementation.
func (r *Resolver) Workspace() generated.WorkspaceResolver { return &workspaceResolver{r} }

// WorkspaceIn returns generated.WorkspaceInResolver implementation.
func (r *Resolver) WorkspaceIn() generated.WorkspaceInResolver { return &workspaceInResolver{r} }

type workspaceResolver struct{ *Resolver }
type workspaceInResolver struct{ *Resolver }
