version: "3"

dotenv:
  - .secrets/env

vars:
  ImagePrefix: "ghcr.io/kloudlite/platform/apis"

tasks:
  gql:
    dir: ./internal/app
    cmds:
      - go run  -tags dynamic github.com/99designs/gqlgen generate
      # - rm "./graph/scalars.resolvers.go"

  build:
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    vars:
      BuiltAt:
        sh: date | sed 's/\s/_/g'
    preconditions:
      - sh: '[ -n "{{.Out}}" ]'
        msg: var Out must have a value
    cmds:
      - go build -v -ldflags="-s -w -X kloudlite.io/common.BuiltAt=\"{{.BuiltAt}}\"" -o {{.Out}}
      - upx {{.Out}}

  k8s-schema:
    cmds:
      - mkdir -p "./internal/app/_struct-to-graphql"
      - go run ../../cmd/struct-to-graphql
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.GithubInstallation
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.GitlabProject
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.GitlabGroup
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.GithubListRepository
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.GithubSearchRepository
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.GitBranch
          --struct kloudlite.io/pkg/types.Pagination
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.Credential
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.Repository
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.Digest
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.Build
          --struct kloudlite.io/apps/container-registry/internal/domain/entities.BuildCacheKey
          --struct kloudlite.io/pkg/repos.MatchFilter
          --struct kloudlite.io/pkg/repos.CursorPagination
        > ./internal/app/_struct-to-graphql/main.go
      - |+
        pushd ./internal/app/_struct-to-graphql
        go run main.go --dev --out-dir ../graph/struct-to-graphql --with-pagination Credential,Repository,Digest,Build,BuildCacheKey
        popd
      - rm -rf ./internal/app/_struct-to-graphql

  docker-build:
    vars:
      APP: container-registry
      IMAGE: registry.kloudlite.io/kloudlite/{{.EnvName}}/{{.APP}}-api:{{.Tag}}
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'

      - sh: '[[ "{{.EnvName}}" == "development" ]] || [[ "{{.EnvName}}" == "staging" ]] ||  [[ "{{.EnvName}}" == "production" ]]'
        msg: 'var EnvName must have one of [development, staging, production] as its value'
    cmds:
      - docker buildx build -f ./Dockerfile -t {{.IMAGE}} . --build-arg APP={{.APP}} --platform linux/amd64  --build-context project-root=../..
      - docker push {{.IMAGE}}


  local-build:
    preconditions:
      - sh: '[ -n "{{.Tag}}" ]'
        msg: 'var Tag must have a value'
    vars:
      APP: container-registry
      IMAGE: "{{.ImagePrefix}}/{{.APP}}:{{.Tag}}"
      BUILDER: podman
    silent: true
    cmds:
      - |+
        tDir=$(mktemp -d)

        echo "building application ..."
        task build Out=$tDir/{{.APP}}

        {{.BUILDER}} buildx build -f Containerfile.local -t {{.IMAGE}} . --build-context local-builder=${tDir} --build-arg binpath={{.APP}}
        {{.BUILDER}} push {{.IMAGE}}
        rm -rf $tDir

  run:
    vars:
      Name: console
    dotenv:
      - .secrets/env
    env:
      CGO_ENABLED: 0
    cmds:
      - go run ./main.go --dev
