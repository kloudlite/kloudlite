package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"github.com/kloudlite/api/apps/container-registry/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/container-registry/internal/app/graph/model"
	"github.com/kloudlite/api/apps/container-registry/internal/domain/entities"
	"github.com/kloudlite/api/pkg/errors"
)

// Account is the resolver for the account field.
func (r *githubInstallationResolver) Account(ctx context.Context, obj *entities.GithubInstallation) (*model.GithubComKloudliteAPIAppsContainerRegistryInternalDomainEntitiesGithubUserAccount, error) {
	if obj == nil {
		return nil, errors.Newf("Account: obj is nil")
	}

	return &model.KloudliteIoAppsContainerRegistryInternalDomainEntitiesGithubUserAccount{
		AvatarURL: obj.Account.AvatarURL,
		ID:        getInt(obj.Account.ID),
		Login:     obj.Account.Login,
		NodeID:    obj.Account.NodeID,
		Type:      obj.Account.Type,
	}, nil
}

// GithubInstallation returns generated.GithubInstallationResolver implementation.
func (r *Resolver) GithubInstallation() generated.GithubInstallationResolver {
	return &githubInstallationResolver{r}
}

type githubInstallationResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func getInt(i *int64) *int {
	if i == nil {
		return nil
	}
	return new(int)
}
