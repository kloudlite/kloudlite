package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"

	"kloudlite.io/apps/container-registry/internal/app/graph/generated"
	"kloudlite.io/apps/container-registry/internal/app/graph/model"
	"kloudlite.io/apps/container-registry/internal/domain/entities"
)

// objectMeta is the resolver for the metadata field.
func (r *harborRobotUserResolver) objectMeta(ctx context.Context, obj *entities.HarborRobotUser) (*model.Metadata, error) {
	panic(fmt.Errorf("not implemented: objectMeta - metadata"))
}

// SyncStatus is the resolver for the syncStatus field.
func (r *harborRobotUserResolver) SyncStatus(ctx context.Context, obj *entities.HarborRobotUser) (*model.SyncStatus, error) {
	panic(fmt.Errorf("not implemented: SyncStatus - syncStatus"))
}

// Spec is the resolver for the spec field.
func (r *harborRobotUserResolver) Spec(ctx context.Context, obj *entities.HarborRobotUser) (*model.HarborRobotUserSpec, error) {
	panic(fmt.Errorf("not implemented: Spec - spec"))
}

// Status is the resolver for the status field.
func (r *harborRobotUserResolver) Status(ctx context.Context, obj *entities.HarborRobotUser) (*model.Status, error) {
	panic(fmt.Errorf("not implemented: Status - status"))
}

// objectMeta is the resolver for the metadata field.
func (r *harborRobotUserInResolver) objectMeta(ctx context.Context, obj *entities.HarborRobotUser, data *model.MetadataIn) error {
	panic(fmt.Errorf("not implemented: objectMeta - metadata"))
}

// Spec is the resolver for the spec field.
func (r *harborRobotUserInResolver) Spec(ctx context.Context, obj *entities.HarborRobotUser, data *model.HarborRobotUserSpecIn) error {
	panic(fmt.Errorf("not implemented: Spec - spec"))
}

// HarborRobotUser returns generated.HarborRobotUserResolver implementation.
func (r *Resolver) HarborRobotUser() generated.HarborRobotUserResolver {
	return &harborRobotUserResolver{r}
}

// HarborRobotUserIn returns generated.HarborRobotUserInResolver implementation.
func (r *Resolver) HarborRobotUserIn() generated.HarborRobotUserInResolver {
	return &harborRobotUserInResolver{r}
}

type harborRobotUserResolver struct{ *Resolver }
type harborRobotUserInResolver struct{ *Resolver }
