// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"

	"kloudlite.io/apps/container-registry/internal/domain/entities"
	"kloudlite.io/pkg/repos"
)

type BuildEdge struct {
	Cursor string          `json:"cursor"`
	Node   *entities.Build `json:"node"`
}

type BuildPaginatedRecords struct {
	Edges      []*BuildEdge `json:"edges"`
	PageInfo   *PageInfo    `json:"pageInfo"`
	TotalCount int          `json:"totalCount"`
}

type CredentialEdge struct {
	Cursor string               `json:"cursor"`
	Node   *entities.Credential `json:"node"`
}

type CredentialPaginatedRecords struct {
	Edges      []*CredentialEdge `json:"edges"`
	PageInfo   *PageInfo         `json:"pageInfo"`
	TotalCount int               `json:"totalCount"`
}

type GithubBranch struct {
	Name      *string `json:"name,omitempty"`
	Protected *bool   `json:"protected,omitempty"`
}

type GitlabBranch struct {
	CanPush            bool   `json:"canPush"`
	Default            bool   `json:"default"`
	DevelopersCanMerge bool   `json:"developersCanMerge"`
	DevelopersCanPush  bool   `json:"developersCanPush"`
	Merged             bool   `json:"merged"`
	Name               string `json:"name"`
	Protected          bool   `json:"protected"`
	WebURL             string `json:"webUrl"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpiration struct {
	Unit  KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit `json:"unit"`
	Value int                                                                  `json:"value"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationIn struct {
	Unit  KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit `json:"unit"`
	Value int                                                                  `json:"value"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesGitSource struct {
	Branch     string  `json:"branch"`
	PullSecret *string `json:"pullSecret,omitempty"`
	Repository string  `json:"repository"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesGitSourceIn struct {
	Branch     string  `json:"branch"`
	PullSecret *string `json:"pullSecret,omitempty"`
	Repository string  `json:"repository"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesGithubRepository struct {
	Archived          *bool                  `json:"archived,omitempty"`
	CloneURL          *string                `json:"cloneUrl,omitempty"`
	CreatedAt         *string                `json:"createdAt,omitempty"`
	DefaultBranch     *string                `json:"defaultBranch,omitempty"`
	Description       *string                `json:"description,omitempty"`
	Disabled          *bool                  `json:"disabled,omitempty"`
	FullName          *string                `json:"fullName,omitempty"`
	GitignoreTemplate *string                `json:"gitignoreTemplate,omitempty"`
	GitURL            *string                `json:"gitUrl,omitempty"`
	HTMLURL           *string                `json:"htmlUrl,omitempty"`
	ID                *int                   `json:"id,omitempty"`
	Language          *string                `json:"language,omitempty"`
	MasterBranch      *string                `json:"masterBranch,omitempty"`
	MirrorURL         *string                `json:"mirrorUrl,omitempty"`
	Name              *string                `json:"name,omitempty"`
	NodeID            *string                `json:"node_id,omitempty"`
	Permissions       map[string]interface{} `json:"permissions,omitempty"`
	Private           *bool                  `json:"private,omitempty"`
	PushedAt          *string                `json:"pushedAt,omitempty"`
	Size              *int                   `json:"size,omitempty"`
	TeamID            *int                   `json:"team_id,omitempty"`
	UpdatedAt         *string                `json:"updatedAt,omitempty"`
	URL               *string                `json:"url,omitempty"`
	Visibility        *string                `json:"visibility,omitempty"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesGithubUserAccount struct {
	AvatarURL *string `json:"avatarUrl,omitempty"`
	ID        *int    `json:"id,omitempty"`
	Login     *string `json:"login,omitempty"`
	NodeID    *string `json:"nodeId,omitempty"`
	Type      *string `json:"type,omitempty"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesGithubUserAccountIn struct {
	AvatarURL *string `json:"avatarUrl,omitempty"`
	ID        *int    `json:"id,omitempty"`
	Login     *string `json:"login,omitempty"`
	NodeID    *string `json:"nodeId,omitempty"`
	Type      *string `json:"type,omitempty"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoReference struct {
	Digest    string `json:"digest"`
	MediaType string `json:"mediaType"`
	Size      int    `json:"size"`
}

type KloudliteIoCommonCreatedOrUpdatedBy struct {
	UserEmail string `json:"userEmail"`
	UserID    string `json:"userId"`
	UserName  string `json:"userName"`
}

type PageInfo struct {
	EndCursor       *string `json:"endCursor,omitempty"`
	HasNextPage     *bool   `json:"hasNextPage,omitempty"`
	HasPreviousPage *bool   `json:"hasPreviousPage,omitempty"`
	StartCursor     *string `json:"startCursor,omitempty"`
}

type RepositoryEdge struct {
	Cursor string               `json:"cursor"`
	Node   *entities.Repository `json:"node"`
}

type RepositoryPaginatedRecords struct {
	Edges      []*RepositoryEdge `json:"edges"`
	PageInfo   *PageInfo         `json:"pageInfo"`
	TotalCount int               `json:"totalCount"`
}

type SearchBuilds struct {
	Text *repos.MatchFilter `json:"text,omitempty"`
}

type SearchCreds struct {
	Text *repos.MatchFilter `json:"text,omitempty"`
}

type SearchRepos struct {
	Text *repos.MatchFilter `json:"text,omitempty"`
}

type TagEdge struct {
	Cursor string        `json:"cursor"`
	Node   *entities.Tag `json:"node"`
}

type TagPaginatedRecords struct {
	Edges      []*TagEdge `json:"edges"`
	PageInfo   *PageInfo  `json:"pageInfo"`
	TotalCount int        `json:"totalCount"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit string

const (
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitD KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit = "d"
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitH KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit = "h"
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitM KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit = "m"
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitW KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit = "w"
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitY KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit = "y"
)

var AllKloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit = []KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit{
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitD,
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitH,
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitM,
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitW,
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitY,
}

func (e KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit) IsValid() bool {
	switch e {
	case KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitD, KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitH, KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitM, KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitW, KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnitY:
		return true
	}
	return false
}

func (e KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit) String() string {
	return string(e)
}

func (e *KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Kloudlite_io__apps__container___registry__internal__domain__entities_ExpirationUnit", str)
	}
	return nil
}

func (e KloudliteIoAppsContainerRegistryInternalDomainEntitiesExpirationUnit) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess string

const (
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccessRead      KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess = "read"
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccessReadWrite KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess = "read_write"
)

var AllKloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess = []KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess{
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccessRead,
	KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccessReadWrite,
}

func (e KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess) IsValid() bool {
	switch e {
	case KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccessRead, KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccessReadWrite:
		return true
	}
	return false
}

func (e KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess) String() string {
	return string(e)
}

func (e *KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Kloudlite_io__apps__container___registry__internal__domain__entities_RepoAccess", str)
	}
	return nil
}

func (e KloudliteIoAppsContainerRegistryInternalDomainEntitiesRepoAccess) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
