// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type GithubComKloudliteOperatorApisArtifactsV1HarborUserAccountSpec struct {
	AccountName       string    `json:"accountName"`
	Enabled           *bool     `json:"enabled,omitempty"`
	HarborProjectName string    `json:"harborProjectName"`
	Permissions       []*string `json:"permissions,omitempty"`
	TargetSecret      *string   `json:"targetSecret,omitempty"`
}

type GithubComKloudliteOperatorApisArtifactsV1HarborUserAccountSpecIn struct {
	AccountName       string    `json:"accountName"`
	Enabled           *bool     `json:"enabled,omitempty"`
	HarborProjectName string    `json:"harborProjectName"`
	Permissions       []*string `json:"permissions,omitempty"`
	TargetSecret      *string   `json:"targetSecret,omitempty"`
}

type GithubComKloudliteOperatorPkgOperatorCheck struct {
	Generation *int    `json:"generation,omitempty"`
	Message    *string `json:"message,omitempty"`
	Status     bool    `json:"status"`
}

type GithubComKloudliteOperatorPkgOperatorResourceRef struct {
	APIVersion *string `json:"apiVersion,omitempty"`
	Kind       *string `json:"kind,omitempty"`
	Name       string  `json:"name"`
	Namespace  string  `json:"namespace"`
}

type GithubComKloudliteOperatorPkgOperatorStatus struct {
	Checks            map[string]interface{}                              `json:"checks,omitempty"`
	IsReady           bool                                                `json:"isReady"`
	LastReconcileTime *string                                             `json:"lastReconcileTime,omitempty"`
	Message           *GithubComKloudliteOperatorPkgRawJSONRawJSON        `json:"message,omitempty"`
	Resources         []*GithubComKloudliteOperatorPkgOperatorResourceRef `json:"resources,omitempty"`
}

type GithubComKloudliteOperatorPkgRawJSONRawJSON struct {
	RawMessage interface{} `json:"RawMessage,omitempty"`
}

type HarborProject struct {
	AccountName       string                                                                   `json:"accountName"`
	CreationTime      string                                                                   `json:"creationTime"`
	Credentials       *KloudliteIoAppsContainerRegistryInternalDomainEntitiesHarborCredentials `json:"credentials"`
	HarborProjectName string                                                                   `json:"harborProjectName"`
	ID                string                                                                   `json:"id"`
	UpdateTime        string                                                                   `json:"updateTime"`
}

type HarborProjectIn struct {
	AccountName       string                                                                     `json:"accountName"`
	Credentials       *KloudliteIoAppsContainerRegistryInternalDomainEntitiesHarborCredentialsIn `json:"credentials"`
	HarborProjectName string                                                                     `json:"harborProjectName"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesHarborCredentials struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type KloudliteIoAppsContainerRegistryInternalDomainEntitiesHarborCredentialsIn struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type KloudliteIoPkgTypesSyncStatus struct {
	Action          KloudliteIoPkgTypesSyncStatusAction `json:"action"`
	Error           *string                             `json:"error,omitempty"`
	Generation      int                                 `json:"generation"`
	LastSyncedAt    *string                             `json:"lastSyncedAt,omitempty"`
	State           KloudliteIoPkgTypesSyncStatusState  `json:"state"`
	SyncScheduledAt *string                             `json:"syncScheduledAt,omitempty"`
}

type KloudliteIoPkgTypesSyncStatusAction string

const (
	KloudliteIoPkgTypesSyncStatusActionApply  KloudliteIoPkgTypesSyncStatusAction = "APPLY"
	KloudliteIoPkgTypesSyncStatusActionDelete KloudliteIoPkgTypesSyncStatusAction = "DELETE"
)

var AllKloudliteIoPkgTypesSyncStatusAction = []KloudliteIoPkgTypesSyncStatusAction{
	KloudliteIoPkgTypesSyncStatusActionApply,
	KloudliteIoPkgTypesSyncStatusActionDelete,
}

func (e KloudliteIoPkgTypesSyncStatusAction) IsValid() bool {
	switch e {
	case KloudliteIoPkgTypesSyncStatusActionApply, KloudliteIoPkgTypesSyncStatusActionDelete:
		return true
	}
	return false
}

func (e KloudliteIoPkgTypesSyncStatusAction) String() string {
	return string(e)
}

func (e *KloudliteIoPkgTypesSyncStatusAction) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = KloudliteIoPkgTypesSyncStatusAction(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Kloudlite_io__pkg__types_SyncStatusAction", str)
	}
	return nil
}

func (e KloudliteIoPkgTypesSyncStatusAction) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type KloudliteIoPkgTypesSyncStatusState string

const (
	KloudliteIoPkgTypesSyncStatusStateIDLe       KloudliteIoPkgTypesSyncStatusState = "IDLE"
	KloudliteIoPkgTypesSyncStatusStateInProgress KloudliteIoPkgTypesSyncStatusState = "IN_PROGRESS"
	KloudliteIoPkgTypesSyncStatusStateNotReady   KloudliteIoPkgTypesSyncStatusState = "NOT_READY"
	KloudliteIoPkgTypesSyncStatusStateReady      KloudliteIoPkgTypesSyncStatusState = "READY"
)

var AllKloudliteIoPkgTypesSyncStatusState = []KloudliteIoPkgTypesSyncStatusState{
	KloudliteIoPkgTypesSyncStatusStateIDLe,
	KloudliteIoPkgTypesSyncStatusStateInProgress,
	KloudliteIoPkgTypesSyncStatusStateNotReady,
	KloudliteIoPkgTypesSyncStatusStateReady,
}

func (e KloudliteIoPkgTypesSyncStatusState) IsValid() bool {
	switch e {
	case KloudliteIoPkgTypesSyncStatusStateIDLe, KloudliteIoPkgTypesSyncStatusStateInProgress, KloudliteIoPkgTypesSyncStatusStateNotReady, KloudliteIoPkgTypesSyncStatusStateReady:
		return true
	}
	return false
}

func (e KloudliteIoPkgTypesSyncStatusState) String() string {
	return string(e)
}

func (e *KloudliteIoPkgTypesSyncStatusState) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = KloudliteIoPkgTypesSyncStatusState(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Kloudlite_io__pkg__types_SyncStatusState", str)
	}
	return nil
}

func (e KloudliteIoPkgTypesSyncStatusState) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
