directive @isLoggedInAndVerified on FIELD_DEFINITION
directive @hasAccount on FIELD_DEFINITION

input SearchRepos {
  text: MatchFilterIn
}

input  SearchCreds {
  text: MatchFilterIn
}

input  SearchBuilds {
  text: MatchFilterIn
}

type CRCheckNameAvailabilityOutput @shareable {
  result: Boolean!
  suggestedNames: [String!]
}

type Query {
  cr_listRepos(search:SearchRepos, pagination:CursorPaginationIn) : RepositoryPaginatedRecords @isLoggedInAndVerified @hasAccount
  cr_listCreds(search:SearchCreds, pagination:CursorPaginationIn) : CredentialPaginatedRecords @isLoggedInAndVerified @hasAccount
  cr_listTags(repoName:String!, search: SearchRepos, pagination:CursorPaginationIn) : TagPaginatedRecords @isLoggedInAndVerified @hasAccount

  cr_getCredToken(username:String!) : String! @isLoggedInAndVerified @hasAccount

  cr_checkUserNameAvailability(name:String!) :CRCheckNameAvailabilityOutput! @isLoggedInAndVerified @hasAccount

  cr_getBuild(id:ID!) : Build @isLoggedInAndVerified @hasAccount
  cr_listBuilds(repoName:String!, search:SearchBuilds, pagination:CursorPaginationIn) : BuildPaginatedRecords @isLoggedInAndVerified @hasAccount

  cr_listGithubInstallations(pagination:PaginationIn) : [GithubInstallation] @isLoggedInAndVerified @hasAccount
  cr_listGithubRepos(installationId:Int!, pagination:PaginationIn) : GithubListRepository @isLoggedInAndVerified @hasAccount
  cr_searchGithubRepos(organization:String!, search:String!, pagination:PaginationIn) : GithubSearchRepository @isLoggedInAndVerified @hasAccount
  cr_listGithubBranches(repoUrl:String!, pagination:PaginationIn) : [GithubBranch] @isLoggedInAndVerified @hasAccount
}

type Mutation {
  cr_createRepo(repository:RepositoryIn!) : Repository @isLoggedInAndVerified @hasAccount
  cr_createCred(credential: CredentialIn!) : Credential @isLoggedInAndVerified @hasAccount

  cr_deleteRepo(name:String!) :Boolean! @isLoggedInAndVerified @hasAccount
  cr_deleteCred(username:String!) :Boolean! @isLoggedInAndVerified @hasAccount
  cr_deleteTag(repoName:String!, digest:String!) :Boolean! @isLoggedInAndVerified @hasAccount


  cr_addBuild(build:BuildIn!) : Build @isLoggedInAndVerified @hasAccount
  cr_updateBuild(id:ID!, build:BuildIn!) : Build @isLoggedInAndVerified @hasAccount
  cr_deleteBuild(id:ID!) : Boolean! @isLoggedInAndVerified @hasAccount
  cr_triggerBuild(id:ID!) : Boolean! @isLoggedInAndVerified @hasAccount
}
