schema:
  - graph/*.graphqls
  # - graph/crd-to-gql/*.graphqls
  - graph/struct-to-graphql/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
federation:
  filename: graph/generated/federation.go
  package: generated
  version: 2

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "kloudlite.io/pkg/errors"
  # - "kloudlite.io/apps/infra/internal/domain/entities"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
skip_validation: true
models:
  ID:
    model:
      - kloudlite.io/pkg/repos.ID

  Metadata: &metadata-model
    model: k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta
  MetadataIn: *metadata-model

  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Json:
    model:
      - github.com/99designs/gqlgen/graphql.Map

  Cluster: &cluster-model
    model: kloudlite.io/apps/infra/internal/entities.Cluster
  ClusterIn: *cluster-model

  BYOCCluster: &byoc-cluster-model
    model: kloudlite.io/apps/infra/internal/entities.BYOCCluster
  BYOCClusterIn: *byoc-cluster-model

  CloudProviderSecret: &provider-secret-model
    model: kloudlite.io/apps/infra/internal/entities.CloudProviderSecret
  CloudProviderSecretIn: *provider-secret-model

  CloudProviderSecretCloudProviderName: &cloud-provider-name
    model: kloudlite.io/apps/infra/internal/entities.CloudProviderName
  CloudProviderSecretCloudProviderNameIn: *cloud-provider-name

  NodePool: &nodepool-model
    model: kloudlite.io/apps/infra/internal/entities.NodePool
    fields:
      nodes:
        resolver: true

  NodePoolIn: *nodepool-model

  Node: &node-model
    model: kloudlite.io/apps/infra/internal/entities.Node

  Github_com__kloudlite__operator__pkg__operator_Status:
    model: github.com/kloudlite/operator/pkg/operator.Status

  Github_com__kloudlite__operator__pkg__operator_Check:
    model: github.com/kloudlite/operator/pkg/operator.Check
  Github_com__kloudlite__operator__pkg__operator_ResourceRef: 
    model: github.com/kloudlite/operator/pkg/operator.ResourceRef

  Kloudlite_io__pkg__types_SyncStatus: &sync-status-model
    model: kloudlite.io/pkg/types.SyncStatus

  Kloudlite_io__pkg__types_SyncStatusState:
    model: kloudlite.io/pkg/types.SyncState

  Kloudlite_io__pkg__types_SyncStatusAction:
    model: kloudlite.io/pkg/types.SyncAction

  ResType:
    model: kloudlite.io/apps/infra/internal/domain.ResType

  # PaginationQueryArgs:
  #   model: kloudlite.io/pkg/repos.CursorPagination

  CheckNameAvailabilityOutput:
    model: kloudlite.io/apps/infra/internal/domain.CheckNameAvailabilityOutput
  
  MatchFilter: &match-filter-model
    model: kloudlite.io/pkg/repos.MatchFilter
  MatchFilterIn: *match-filter-model

  MatchFilterMatchType:
    model: kloudlite.io/pkg/repos.MatchType

  CursorPagination: &cursor-pagination-model
    model: kloudlite.io/pkg/repos.CursorPagination
  CursorPaginationIn: *cursor-pagination-model

  CursorPaginationSortDirection: &cursor-pagination-sort-direction-model
    model: kloudlite.io/pkg/repos.SortDirection
  CursorPaginationSortDirectionIn: *cursor-pagination-sort-direction-model
