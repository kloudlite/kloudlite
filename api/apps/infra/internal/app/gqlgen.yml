schema:
  - graph/*.graphqls
  # - graph/crd-to-gql/*.graphqls
  - graph/struct-to-graphql/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
federation:
  filename: graph/generated/federation.go
  package: generated
  version: 2

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "kloudlite.io/pkg/errors"
  # - "kloudlite.io/apps/infra/internal/domain/entities"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
skip_validation: true
models:
  # KLFile:
  #   model:
  #     - kloudlite.io/apps/consolev2/internal/domain/entities/localenv.KLFile

  ID:
    model:
      - kloudlite.io/pkg/repos.ID

  Metadata: &metadata-model
    model: k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta
  MetadataIn: *metadata-model

  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Json:
    model:
      - github.com/99designs/gqlgen/graphql.Map

  Account: &account-model
    model: github.com/kloudlite/wg-operator/apis/wg/v1.Account
  AccountIn: *account-model

  CloudProvider: &cloudprovider-model
    model: kloudlite.io/apps/infra/internal/domain/entities.CloudProvider
  CloudProviderIn: *cloudprovider-model

  BYOCCluster: &byoc-cluster-model
    model: kloudlite.io/apps/infra/internal/domain/entities.BYOCCluster
  BYOCClusterIn: *byoc-cluster-model

  Cluster: &cluster-model
    model: kloudlite.io/apps/infra/internal/domain/entities.Cluster
  ClusterIn: *cluster-model

  Edge: &edge-model
    model: kloudlite.io/apps/infra/internal/domain/entities.Edge
  EdgeIn: *edge-model

  ProviderSecret: &provider-secret-model
    model: kloudlite.io/apps/infra/internal/domain/entities.Secret
  ProviderSecretIn: &provider-secret-model

  MasterNode: &master-node-model
    model: kloudlite.io/apps/infra/internal/domain/entities.MasterNode
  MasterNodeIn: *master-node-model

  WorkerNode: &worker-node-model
    model: kloudlite.io/apps/infra/internal/domain/entities.WorkerNode
  WorkerNodeIn: *worker-node-model
 
  NodePool: &nodepool-model
    model: kloudlite.io/apps/infra/internal/domain/entities.NodePool
  NodePoolIn: *nodepool-model

  Secret: &secret-model
    model: kloudlite.io/apps/infra/internal/domain/entities.Secret
  SecretIn: *secret-model

  Github_com__kloudlite__operator__pkg__operator_Status:
    model: github.com/kloudlite/operator/pkg/operator.Status

  Kloudlite_io__pkg__types_SyncStatus: &sync-status-model
    model: kloudlite.io/pkg/types.SyncStatus

  SyncState:
    model: kloudlite.io/pkg/types.SyncState

  SyncAction:
    model: kloudlite.io/pkg/types.SyncAction

  ResType:
    model: kloudlite.io/apps/infra/internal/domain.ResType

  PaginationQueryArgs:
    model: kloudlite.io/pkg/types.CursorPagination

  CheckNameAvailabilityOutput:
    model: kloudlite.io/apps/infra/internal/domain.CheckNameAvailabilityOutput
