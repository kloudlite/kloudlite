schema:
  - graph/*.graphqls
  - graph/crd-to-gql/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
federation:
  filename: graph/generated/federation.go
  package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "kloudlite.io/pkg/errors"
  # - "kloudlite.io/apps/infra/internal/domain/entities"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
skip_validation: true
models:
  # KLFile:
  #   model:
  #     - kloudlite.io/apps/consolev2/internal/domain/entities/localenv.KLFile

  ID:
    model:
      - kloudlite.io/pkg/repos.ID

  Metadata:
    model:
      - k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta

  MetadataIn:
    model:
      - k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta

  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Json:
    model:
      - github.com/99designs/gqlgen/graphql.Map

  Account:
    model: github.com/kloudlite/wg-operator/apis/wg/v1.Account
  AccountIn:
    model: github.com/kloudlite/wg-operator/apis/wg/v1.Account

  CloudProvider:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.CloudProvider

  CloudProviderIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.CloudProvider

  Cluster:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Cluster
  ClusterIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Cluster

  Edge:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Edge
  EdgeIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Edge

  ProviderSecret:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Secret

  ProviderSecretIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Secret

  MasterNode:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.MasterNode
  MasterNodeIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.MasterNode

  WorkerNode:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.WorkerNode
  WorkerNodeIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.WorkerNode

  NodePool:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.NodePool
  NodePoolIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.NodePool

  Secret:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Secret
  SecretIn:
    model:
      - kloudlite.io/apps/infra/internal/domain/entities.Secret

  Overrides:
    model:
      - github.com/kloudlite/operator/apis/crds/v1.JsonPatch

  OverridesIn:
    model:
      - github.com/kloudlite/operator/apis/crds/v1.JsonPatch

  Status:
    model: github.com/kloudlite/cluster-operator/lib/operator.Status

  Patch:
    model:
      - github.com/kloudlite/operator/pkg/json-patch.PatchOperation

  PatchIn:
    model:
      - github.com/kloudlite/operator/pkg/json-patch.PatchOperation
