package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"
	"time"

	"kloudlite.io/apps/infra/internal/app/graph/generated"
	"kloudlite.io/apps/infra/internal/app/graph/model"
	"kloudlite.io/apps/infra/internal/entities"
	fn "kloudlite.io/pkg/functions"
)

// CreationTime is the resolver for the creationTime field.
func (r *buildRunResolver) CreationTime(ctx context.Context, obj *entities.BuildRun) (string, error) {
	if obj == nil {
		return "", fmt.Errorf("build-run/creation-time is nil")
	}
	return obj.CreationTime.Format(time.RFC3339), nil
}

// ID is the resolver for the id field.
func (r *buildRunResolver) ID(ctx context.Context, obj *entities.BuildRun) (string, error) {
	if obj == nil {
		return "", fmt.Errorf("build run is nil")
	}
	return string(obj.Id), nil
}

// Spec is the resolver for the spec field.
func (r *buildRunResolver) Spec(ctx context.Context, obj *entities.BuildRun) (*model.GithubComKloudliteOperatorApisDistributionV1BuildRunSpec, error) {
	var m model.GithubComKloudliteOperatorApisDistributionV1BuildRunSpec
	if err := fn.JsonConversion(obj.Spec, &m); err != nil {
		return nil, err
	}
	return &m, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *buildRunResolver) UpdateTime(ctx context.Context, obj *entities.BuildRun) (string, error) {
	if obj == nil || obj.UpdateTime.IsZero() {
		return "", fmt.Errorf("build-run-resolver/update-time is nil")
	}
	return obj.UpdateTime.Format(time.RFC3339), nil
}

// BuildRun returns generated.BuildRunResolver implementation.
func (r *Resolver) BuildRun() generated.BuildRunResolver { return &buildRunResolver{r} }

type buildRunResolver struct{ *Resolver }
