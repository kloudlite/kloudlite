package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"
	"time"

	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"kloudlite.io/apps/infra/internal/app/graph/generated"
	"kloudlite.io/apps/infra/internal/app/graph/model"
	"kloudlite.io/apps/infra/internal/entities"
	fn "kloudlite.io/pkg/functions"
)

// CreationTime is the resolver for the creationTime field.
func (r *clusterResolver) CreationTime(ctx context.Context, obj *entities.Cluster) (string, error) {
	if obj == nil {
		return "", fmt.Errorf("cluster obj is nil")
	}
	return obj.CreationTime.Format(time.RFC3339), nil
}

// ID is the resolver for the id field.
func (r *clusterResolver) ID(ctx context.Context, obj *entities.Cluster) (string, error) {
	if obj == nil {
		return "", fmt.Errorf("cluster obj is nil")
	}
	return string(obj.Id), nil
}

// Spec is the resolver for the spec field.
func (r *clusterResolver) Spec(ctx context.Context, obj *entities.Cluster) (*model.GithubComKloudliteOperatorApisClustersV1ClusterSpec, error) {
	if obj == nil {
		return nil, fmt.Errorf("cluster obj is nil")
	}

	var m model.GithubComKloudliteOperatorApisClustersV1ClusterSpec
	if err := fn.JsonConversion(obj.Spec, &m); err != nil {
		return nil, err
	}
	return &m, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *clusterResolver) UpdateTime(ctx context.Context, obj *entities.Cluster) (string, error) {
	if obj == nil {
		return "", fmt.Errorf("cluster is nil")
	}
	return obj.UpdateTime.Format(time.RFC3339), nil
}

// Metadata is the resolver for the metadata field.
func (r *clusterInResolver) Metadata(ctx context.Context, obj *entities.Cluster, data *v1.ObjectMeta) error {
	if obj == nil {
		return fmt.Errorf("cluster is nil")
	}
	return fn.JsonConversion(data, &obj.ObjectMeta)
}

// Spec is the resolver for the spec field.
func (r *clusterInResolver) Spec(ctx context.Context, obj *entities.Cluster, data *model.GithubComKloudliteOperatorApisClustersV1ClusterSpecIn) error {
	if obj == nil {
		return fmt.Errorf("cluster is nil")
	}
	return fn.JsonConversion(data, &obj.Spec)
}

// Cluster returns generated.ClusterResolver implementation.
func (r *Resolver) Cluster() generated.ClusterResolver { return &clusterResolver{r} }

// ClusterIn returns generated.ClusterInResolver implementation.
func (r *Resolver) ClusterIn() generated.ClusterInResolver { return &clusterInResolver{r} }

type clusterResolver struct{ *Resolver }
type clusterInResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *clusterResolver) Metadata(ctx context.Context, obj *entities.Cluster) (*v1.ObjectMeta, error) {
	if obj == nil {
		return nil, fmt.Errorf("cluster obj is nil")
	}
	return &obj.ObjectMeta, nil
}
