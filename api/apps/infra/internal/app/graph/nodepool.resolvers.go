package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"time"

	"github.com/kloudlite/api/pkg/errors"

	"github.com/kloudlite/api/apps/infra/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/infra/internal/app/graph/model"
	"github.com/kloudlite/api/apps/infra/internal/entities"
	fn "github.com/kloudlite/api/pkg/functions"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// CreationTime is the resolver for the creationTime field.
func (r *nodePoolResolver) CreationTime(ctx context.Context, obj *entities.NodePool) (string, error) {
	if obj == nil || obj.CreationTime.IsZero() {
		return "", errors.Newf("nodepool is nil")
	}
	return obj.CreationTime.Format(time.RFC3339), nil
}

// ID is the resolver for the id field.
func (r *nodePoolResolver) ID(ctx context.Context, obj *entities.NodePool) (string, error) {
	if obj == nil {
		return "", errors.Newf("nodepool is nil")
	}
	return string(obj.Id), nil
}

// Spec is the resolver for the spec field.
func (r *nodePoolResolver) Spec(ctx context.Context, obj *entities.NodePool) (*model.GithubComKloudliteOperatorApisClustersV1NodePoolSpec, error) {
	var m model.GithubComKloudliteOperatorApisClustersV1NodePoolSpec
	if err := fn.JsonConversion(obj.Spec, &m); err != nil {
		return nil, errors.NewE(err)
	}
	return &m, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *nodePoolResolver) UpdateTime(ctx context.Context, obj *entities.NodePool) (string, error) {
	if obj == nil || obj.UpdateTime.IsZero() {
		return "", errors.Newf("nodepool is nil")
	}
	return obj.UpdateTime.Format(time.RFC3339), nil
}

// Metadata is the resolver for the metadata field.
func (r *nodePoolInResolver) Metadata(ctx context.Context, obj *entities.NodePool, data *v1.ObjectMeta) error {
	if obj == nil {
		return errors.Newf("nodepool is nil")
	}
	return fn.JsonConversion(data, &obj.ObjectMeta)
}

// Spec is the resolver for the spec field.
func (r *nodePoolInResolver) Spec(ctx context.Context, obj *entities.NodePool, data *model.GithubComKloudliteOperatorApisClustersV1NodePoolSpecIn) error {
	if obj == nil {
		return nil
	}
	return fn.JsonConversion(data, &obj.Spec)
}

// NodePool returns generated.NodePoolResolver implementation.
func (r *Resolver) NodePool() generated.NodePoolResolver { return &nodePoolResolver{r} }

// NodePoolIn returns generated.NodePoolInResolver implementation.
func (r *Resolver) NodePoolIn() generated.NodePoolInResolver { return &nodePoolInResolver{r} }

type nodePoolResolver struct{ *Resolver }
type nodePoolInResolver struct{ *Resolver }
