directive @isLoggedIn on FIELD_DEFINITION
directive @isLoggedInAndVerified on FIELD_DEFINITION
directive @hasAccount on FIELD_DEFINITION

enum ResType {
    cluster
    # cloudprovider
    providersecret
    # edge
    nodepool
    vpn_device
    helm_release
}

type CheckNameAvailabilityOutput {
    result: Boolean!
    suggestedNames: [String!]!
}

input SearchCluster {
    cloudProviderName: MatchFilterIn
    isReady: MatchFilterIn
    region: MatchFilterIn
    text: MatchFilterIn
}

input SearchClusterManagedService {
    isReady: MatchFilterIn
    text: MatchFilterIn
}

input SearchNodepool {
    text: MatchFilterIn
}

input SearchHelmRelease {
    text: MatchFilterIn
    isReady: MatchFilterIn
}

input SearchProviderSecret {
    cloudProviderName: MatchFilterIn
    text: MatchFilterIn
}

input SearchDomainEntry {
    clusterName: MatchFilterIn
    text: MatchFilterIn
}

input SearchVPNDevices {
    text: MatchFilterIn
    isReady: MatchFilterIn
    markedForDeletion: MatchFilterIn
}

input SearchPersistentVolumeClaims {
  text: MatchFilterIn
}

input SearchPersistentVolumes {
  text: MatchFilterIn
}

input SearchNamespaces {
  text: MatchFilterIn
}

input SearchVolumeAttachments {
  text: MatchFilterIn
}

type CheckAwsAccessOutput {
    result: Boolean!
    installationUrl: String
}

type Query {
    # unique name suggestions
    infra_checkNameAvailability(resType: ResType!, clusterName: String, name: String!): CheckNameAvailabilityOutput! @isLoggedIn @hasAccount

    # clusters
    infra_listClusters(search: SearchCluster, pagination: CursorPaginationIn): ClusterPaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getCluster(name: String!): Cluster @isLoggedInAndVerified @hasAccount

    # get node pools
    infra_listNodePools(clusterName: String!, search: SearchNodepool, pagination: CursorPaginationIn): NodePoolPaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getNodePool(clusterName: String!, poolName: String!): NodePool @isLoggedInAndVerified @hasAccount

    infra_listProviderSecrets(search: SearchProviderSecret, pagination: CursorPaginationIn): CloudProviderSecretPaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getProviderSecret(name: String!): CloudProviderSecret @isLoggedInAndVerified @hasAccount

    infra_listDomainEntries(search: SearchDomainEntry, pagination: CursorPaginationIn): DomainEntryPaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getDomainEntry(domainName: String!): DomainEntry @isLoggedInAndVerified @hasAccount

    infra_checkAwsAccess(cloudproviderName: String!): CheckAwsAccessOutput! @isLoggedInAndVerified @hasAccount

    infra_listVPNDevices(clusterName: String, search: SearchVPNDevices, pq: CursorPaginationIn): VPNDevicePaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getVPNDevice(clusterName: String!, name: String!): VPNDevice @isLoggedInAndVerified @hasAccount

    infra_listClusterManagedServices(clusterName: String!, search: SearchClusterManagedService, pagination: CursorPaginationIn): ClusterManagedServicePaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getClusterManagedService(clusterName: String!, name: String!): ClusterManagedService @isLoggedInAndVerified @hasAccount

    infra_listHelmReleases(clusterName: String!, search: SearchHelmRelease, pagination: CursorPaginationIn): HelmReleasePaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getHelmRelease(clusterName: String!, name: String!): HelmRelease @isLoggedInAndVerified @hasAccount

    infra_listManagedServiceTemplates: [MsvcTemplate!]
    infra_getManagedServiceTemplate(category: String!, name: String!): Github__com___kloudlite___api___apps___infra___internal___entities__MsvcTemplateEntry

    # kubernetes native resources
    infra_listPVCs(clusterName: String!, search: SearchPersistentVolumeClaims, pq: CursorPaginationIn): PersistentVolumeClaimPaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getPVC(clusterName: String!, name: String!): PersistentVolumeClaim @isLoggedInAndVerified @hasAccount

    infra_listNamespaces(clusterName: String!, search: SearchNamespaces, pq: CursorPaginationIn): NamespacePaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getNamespace(clusterName: String!, name: String!): Namespace @isLoggedInAndVerified @hasAccount

    infra_listPVs(clusterName: String!, search: SearchPersistentVolumes, pq: CursorPaginationIn): PersistentVolumePaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getPV(clusterName: String!, name: String!): PersistentVolume @isLoggedInAndVerified @hasAccount

    infra_listVolumeAttachments(clusterName: String!, search: SearchVolumeAttachments, pq: CursorPaginationIn): VolumeAttachmentPaginatedRecords @isLoggedInAndVerified @hasAccount
    infra_getVolumeAttachment(clusterName: String!, name: String!): VolumeAttachment @isLoggedInAndVerified @hasAccount
}

type Mutation {
    # clusters
    infra_createCluster(cluster: ClusterIn!): Cluster @isLoggedInAndVerified @hasAccount
    infra_updateCluster(cluster: ClusterIn!): Cluster @isLoggedInAndVerified @hasAccount
    infra_deleteCluster(name: String!): Boolean! @isLoggedInAndVerified @hasAccount
    # infra_resyncCluster(name: String!): Boolean! @isLoggedInAndVerified @hasAccount

    infra_createProviderSecret(secret: CloudProviderSecretIn!): CloudProviderSecret @isLoggedInAndVerified @hasAccount
    infra_updateProviderSecret(secret: CloudProviderSecretIn!): CloudProviderSecret @isLoggedInAndVerified @hasAccount
    infra_deleteProviderSecret(secretName: String!): Boolean! @isLoggedInAndVerified @hasAccount

    infra_createDomainEntry(domainEntry: DomainEntryIn!): DomainEntry @isLoggedInAndVerified @hasAccount
    infra_updateDomainEntry(domainEntry: DomainEntryIn!): DomainEntry @isLoggedInAndVerified @hasAccount
    infra_deleteDomainEntry(domainName: String!): Boolean! @isLoggedInAndVerified @hasAccount

    infra_createNodePool(clusterName: String!, pool: NodePoolIn!): NodePool @isLoggedInAndVerified @hasAccount
    infra_updateNodePool(clusterName: String!, pool: NodePoolIn!): NodePool @isLoggedInAndVerified @hasAccount
    infra_deleteNodePool(clusterName: String!, poolName: String!): Boolean! @isLoggedInAndVerified @hasAccount

    infra_createVPNDevice(clusterName: String!, vpnDevice: VPNDeviceIn!): VPNDevice @isLoggedInAndVerified @hasAccount
    infra_updateVPNDevice(clusterName: String!, vpnDevice: VPNDeviceIn!): VPNDevice @isLoggedInAndVerified @hasAccount
    infra_deleteVPNDevice(clusterName: String!, deviceName: String!): Boolean! @isLoggedInAndVerified @hasAccount

    infra_createClusterManagedService(clusterName: String!, service: ClusterManagedServiceIn!): ClusterManagedService @isLoggedInAndVerified @hasAccount
    infra_updateClusterManagedService(clusterName: String!, service: ClusterManagedServiceIn!): ClusterManagedService @isLoggedInAndVerified @hasAccount
    infra_deleteClusterManagedService(clusterName: String!, serviceName: String!): Boolean! @isLoggedInAndVerified @hasAccount

    infra_createHelmRelease(clusterName: String!, release: HelmReleaseIn!): HelmRelease @isLoggedInAndVerified @hasAccount
    infra_updateHelmRelease(clusterName: String!, release: HelmReleaseIn!): HelmRelease @isLoggedInAndVerified @hasAccount
    infra_deleteHelmRelease(clusterName: String!, releaseName: String!): Boolean! @isLoggedInAndVerified @hasAccount
}

# extend type VPNDevice {
#   wgConfig: String
# }

type EncodedValue {
  value: String!
  encoding: String!
}

extend type Cluster {
  adminKubeconfig: EncodedValue
}
