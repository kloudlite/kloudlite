type Github_com__kloudlite__cluster___operator__apis__cmgr__v1_ClusterSpec @shareable {
  accountName: String!
  config: String!
  count: Int!
  provider: String!
  providerName: String!
  region: String!
}

type Github_com__kloudlite__cluster___operator__apis__cmgr__v1_MasterNodeSpec @shareable {
  accountName: String!
  clusterName: String!
  config: String!
  provider: String!
  providerName: String!
  region: String!
}

type Github_com__kloudlite__cluster___operator__apis__infra__v1_CloudProviderSpec @shareable {
  accountName: String!
  display_name: String!
  provider: String!
  providerSecret: Github_com__kloudlite__cluster___operator__apis__infra__v1_CloudProviderSpecProviderSecret!
}

type Github_com__kloudlite__cluster___operator__apis__infra__v1_CloudProviderSpecProviderSecret @shareable {
  name: String!
  namespace: String!
}

type Github_com__kloudlite__cluster___operator__apis__infra__v1_EdgeSpec @shareable {
  accountName: String!
  clusterName: String!
  pools: [Github_com__kloudlite__cluster___operator__apis__infra__v1_EdgeSpecPools]
  provider: String
  providerName: String!
  region: String!
}

type Github_com__kloudlite__cluster___operator__apis__infra__v1_EdgeSpecPools @shareable {
  config: String!
  max: Int
  min: Int
  name: String!
}

type Github_com__kloudlite__cluster___operator__apis__infra__v1_NodePoolSpec @shareable {
  accountName: String!
  clusterName: String!
  config: String!
  edgeName: String!
  max: Int
  min: Int
  provider: String!
  providerName: String!
  region: String!
}

type Github_com__kloudlite__cluster___operator__apis__infra__v1_WorkerNodeSpec @shareable {
  accountName: String!
  clusterName: String!
  config: String!
  edgeName: String!
  nodeIndex: Int
  pool: String!
  provider: String!
  providerName: String!
  region: String!
  stateful: Boolean
}

type Github_com__kloudlite__operator__apis__clusters__v1_BYOCSpec @shareable {
  accountName: String!
  displayName: String
  incomingKafkaTopic: String!
  ingressClasses: [String]
  provider: String!
  publicIps: [String]
  region: String!
  storageClasses: [String]
}

type Github_com__kloudlite__operator__pkg__operator_Check @shareable {
  generation: Int
  message: String
  status: Boolean!
}

type Github_com__kloudlite__operator__pkg__operator_ResourceRef @shareable {
  apiVersion: String
  kind: String
  name: String!
  namespace: String!
}

type Github_com__kloudlite__operator__pkg__operator_Status @shareable {
  checks: Map
  isReady: Boolean!
  lastReconcileTime: Date
  message: Github_com__kloudlite__operator__pkg__raw___json_RawJson
  resources: [Github_com__kloudlite__operator__pkg__operator_ResourceRef!]
}

type Github_com__kloudlite__operator__pkg__raw___json_RawJson @shareable {
  RawMessage: Any
}

type Kloudlite_io__apps__infra__internal__domain__entities_HelmStatusVal @shareable {
  isReady: Boolean
  message: String!
}

type Kloudlite_io__pkg__types_SyncStatus @shareable {
  action: Kloudlite_io__pkg__types_SyncStatusAction!
  error: String
  lastSyncedAt: Date
  recordVersion: Int!
  state: Kloudlite_io__pkg__types_SyncStatusState!
  syncScheduledAt: Date
}

type Metadata @shareable {
  annotations: Map
  creationTimestamp: Date!
  deletionTimestamp: Date
  generation: Int!
  labels: Map
  name: String!
  namespace: String
}

type PageInfo @shareable {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

input Github_com__kloudlite__cluster___operator__apis__cmgr__v1_ClusterSpecIn {
  accountName: String!
  config: String!
  count: Int!
  provider: String!
  providerName: String!
  region: String!
}

input Github_com__kloudlite__cluster___operator__apis__cmgr__v1_MasterNodeSpecIn {
  accountName: String!
  clusterName: String!
  config: String!
  provider: String!
  providerName: String!
  region: String!
}

input Github_com__kloudlite__cluster___operator__apis__infra__v1_CloudProviderSpecIn {
  accountName: String!
  display_name: String!
  provider: String!
  providerSecret: Github_com__kloudlite__cluster___operator__apis__infra__v1_CloudProviderSpecProviderSecretIn!
}

input Github_com__kloudlite__cluster___operator__apis__infra__v1_CloudProviderSpecProviderSecretIn {
  name: String!
  namespace: String!
}

input Github_com__kloudlite__cluster___operator__apis__infra__v1_EdgeSpecIn {
  accountName: String!
  clusterName: String!
  pools: [Github_com__kloudlite__cluster___operator__apis__infra__v1_EdgeSpecPoolsIn]
  provider: String
  providerName: String!
  region: String!
}

input Github_com__kloudlite__cluster___operator__apis__infra__v1_EdgeSpecPoolsIn {
  config: String!
  max: Int
  min: Int
  name: String!
}

input Github_com__kloudlite__cluster___operator__apis__infra__v1_NodePoolSpecIn {
  accountName: String!
  clusterName: String!
  config: String!
  edgeName: String!
  max: Int
  min: Int
  provider: String!
  providerName: String!
  region: String!
}

input Github_com__kloudlite__cluster___operator__apis__infra__v1_WorkerNodeSpecIn {
  accountName: String!
  clusterName: String!
  config: String!
  edgeName: String!
  nodeIndex: Int
  pool: String!
  provider: String!
  providerName: String!
  region: String!
  stateful: Boolean
}

input Github_com__kloudlite__operator__apis__clusters__v1_BYOCSpecIn {
  accountName: String!
  displayName: String
  incomingKafkaTopic: String!
  ingressClasses: [String]
  provider: String!
  publicIps: [String]
  region: String!
  storageClasses: [String]
}

input MetadataIn {
  annotations: Map
  labels: Map
  name: String!
  namespace: String
}

enum Kloudlite_io__pkg__types_SyncStatusAction {
  APPLY
  DELETE
}

enum Kloudlite_io__pkg__types_SyncStatusState {
  APPLIED_AT_AGENT
  ERRORED_AT_AGENT
  IDLE
  IN_QUEUE
  RECEIVED_UPDATE_FROM_AGENT
}

