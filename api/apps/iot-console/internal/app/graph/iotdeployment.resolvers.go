package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"github.com/kloudlite/api/pkg/errors"
	"time"

	"github.com/kloudlite/api/apps/iot-console/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/iot-console/internal/app/graph/model"
	"github.com/kloudlite/api/apps/iot-console/internal/entities"
	fn "github.com/kloudlite/api/pkg/functions"
)

// CreationTime is the resolver for the creationTime field.
func (r *iOTDeploymentResolver) CreationTime(ctx context.Context, obj *entities.IOTDeployment) (string, error) {
	if obj == nil {
		return "", errNilDeployment
	}
	return obj.CreationTime.Format(time.RFC3339), nil
}

// ExposedServices is the resolver for the exposedServices field.
func (r *iOTDeploymentResolver) ExposedServices(ctx context.Context, obj *entities.IOTDeployment) ([]*model.GithubComKloudliteAPIAppsIotConsoleInternalEntitiesExposedService, error) {
	if obj == nil {
		return nil, errNilDeployment
	}

	var services []*model.GithubComKloudliteAPIAppsIotConsoleInternalEntitiesExposedService
	if err := fn.JsonConversion(obj.ExposedServices, &services); err != nil {
		return nil, errors.NewE(err)
	}
	return services, nil
}

// UpdateTime is the resolver for the updateTime field.
func (r *iOTDeploymentResolver) UpdateTime(ctx context.Context, obj *entities.IOTDeployment) (string, error) {
	if obj == nil {
		return "", errNilDeployment
	}
	return obj.UpdateTime.Format(time.RFC3339), nil
}

// ExposedServices is the resolver for the exposedServices field.
func (r *iOTDeploymentInResolver) ExposedServices(ctx context.Context, obj *entities.IOTDeployment, data []*model.GithubComKloudliteAPIAppsIotConsoleInternalEntitiesExposedServiceIn) error {
	if obj == nil {
		return errNilDeployment
	}
	return fn.JsonConversion(data, &obj.ExposedServices)
}

// IOTDeployment returns generated.IOTDeploymentResolver implementation.
func (r *Resolver) IOTDeployment() generated.IOTDeploymentResolver { return &iOTDeploymentResolver{r} }

// IOTDeploymentIn returns generated.IOTDeploymentInResolver implementation.
func (r *Resolver) IOTDeploymentIn() generated.IOTDeploymentInResolver {
	return &iOTDeploymentInResolver{r}
}

type iOTDeploymentResolver struct{ *Resolver }
type iOTDeploymentInResolver struct{ *Resolver }
