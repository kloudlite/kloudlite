version: 3

tasks:
  run:
    dotenv:
      -  .secrets/env
    cmds:
      - go run ./main.go

  gql:
    dir: internal/app
    cmds:
      - go run github.com/99designs/gqlgen generate

  local-build:
    preconditions:
      - sh: '[ -n "{{.EnvName}}" ]'
        msg: 'var EnvName must have a value'
      - sh: '[ -n "{{.Tag}}" ]'
        msg: 'var Tag must have a value'
    vars:
      APP: message-office
      IMAGE: registry.kloudlite.io/kloudlite/{{.EnvName}}/{{.APP}}-api:{{.Tag}}
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    silent: true
    cmds:
      - |+
        lineNumbers=$(cat Dockerfile | grep -i '^FROM' -n | tail +2 | awk -F: '{print $1}')

        startLineNo=$(echo "$lineNumbers" | head -n+1)
        finalLineNo=$(echo "$lineNumbers" | tail -1)

        tDir=$(mktemp -d)

        nDockerfile=$(cat Dockerfile | tail --lines=+$startLineNo | grep -i --invert-match 'from=base')
        echo "$nDockerfile" | sed "1 i # syntax=docker/dockerfile:1.4" > $tDir/Dockerfile.base

        cat $tDir/Dockerfile.base | sed "4 i COPY --from=local-builder ./{{.APP}} /{{.APP}}" > $tDir/Dockerfile
        cat $tDir/Dockerfile
        echo "building application ..."

        CGO_ENABLED=0 go build -o $tDir/{{.APP}} .

        docker buildx build -f $tDir/Dockerfile -t {{.IMAGE}} . --build-context local-builder=${tDir}
        docker push {{.IMAGE}}
        rm -rf $tDir
