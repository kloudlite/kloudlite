package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"

	"github.com/kloudlite/api/apps/message-office/internal/app/graph/generated"
	"github.com/kloudlite/api/apps/message-office/internal/app/graph/model"
)

// ClusterToken is the resolver for the clusterToken field.
func (r *bYOCClusterResolver) ClusterToken(ctx context.Context, obj *model.BYOCCluster) (string, error) {
	if obj.ClusterToken == "" {
		t, err := r.Domain.GenClusterToken(ctx, obj.Spec.AccountName, obj.Metadata.Name)
		if err != nil {
			return "", err
		}
		return t, nil
	}
	return obj.ClusterToken, nil
}

// ClusterToken is the resolver for the clusterToken field.
func (r *clusterResolver) ClusterToken(ctx context.Context, obj *model.Cluster) (string, error) {
	if obj.ClusterToken == "" {
		t, err := r.Domain.GenClusterToken(ctx, obj.Spec.AccountName, obj.Metadata.Name)
		if err != nil {
			return "", err
		}
		return t, nil
	}
	return obj.ClusterToken, nil
}

// GenerateClusterToken is the resolver for the generateClusterToken field.
func (r *mutationResolver) GenerateClusterToken(ctx context.Context, accountName string, clusterName string) (string, error) {
	return r.Domain.GenClusterToken(ctx, accountName, clusterName)
}

// BYOCCluster returns generated.BYOCClusterResolver implementation.
func (r *Resolver) BYOCCluster() generated.BYOCClusterResolver { return &bYOCClusterResolver{r} }

// Cluster returns generated.ClusterResolver implementation.
func (r *Resolver) Cluster() generated.ClusterResolver { return &clusterResolver{r} }

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type bYOCClusterResolver struct{ *Resolver }
type clusterResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
