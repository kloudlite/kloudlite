// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.3
// source: internal/app/proto/event.proto

package proto_rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValueNull int32

const (
	ValueNull_NULL_VALUE ValueNull = 0
)

// Enum value maps for ValueNull.
var (
	ValueNull_name = map[int32]string{
		0: "NULL_VALUE",
	}
	ValueNull_value = map[string]int32{
		"NULL_VALUE": 0,
	}
)

func (x ValueNull) Enum() *ValueNull {
	p := new(ValueNull)
	*p = x
	return p
}

func (x ValueNull) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueNull) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_app_proto_event_proto_enumTypes[0].Descriptor()
}

func (ValueNull) Type() protoreflect.EnumType {
	return &file_internal_app_proto_event_proto_enumTypes[0]
}

func (x ValueNull) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueNull.Descriptor instead.
func (ValueNull) EnumDescriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{0}
}

type StatisticKind int32

const (
	StatisticKind_Histogram StatisticKind = 0
	StatisticKind_Summary   StatisticKind = 1
)

// Enum value maps for StatisticKind.
var (
	StatisticKind_name = map[int32]string{
		0: "Histogram",
		1: "Summary",
	}
	StatisticKind_value = map[string]int32{
		"Histogram": 0,
		"Summary":   1,
	}
)

func (x StatisticKind) Enum() *StatisticKind {
	p := new(StatisticKind)
	*p = x
	return p
}

func (x StatisticKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatisticKind) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_app_proto_event_proto_enumTypes[1].Descriptor()
}

func (StatisticKind) Type() protoreflect.EnumType {
	return &file_internal_app_proto_event_proto_enumTypes[1]
}

func (x StatisticKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatisticKind.Descriptor instead.
func (StatisticKind) EnumDescriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{1}
}

type Metric_Kind int32

const (
	Metric_Incremental Metric_Kind = 0
	Metric_Absolute    Metric_Kind = 1
)

// Enum value maps for Metric_Kind.
var (
	Metric_Kind_name = map[int32]string{
		0: "Incremental",
		1: "Absolute",
	}
	Metric_Kind_value = map[string]int32{
		"Incremental": 0,
		"Absolute":    1,
	}
)

func (x Metric_Kind) Enum() *Metric_Kind {
	p := new(Metric_Kind)
	*p = x
	return p
}

func (x Metric_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metric_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_app_proto_event_proto_enumTypes[2].Descriptor()
}

func (Metric_Kind) Type() protoreflect.EnumType {
	return &file_internal_app_proto_event_proto_enumTypes[2]
}

func (x Metric_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metric_Kind.Descriptor instead.
func (Metric_Kind) EnumDescriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{10, 0}
}

type EventArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Events:
	//
	//	*EventArray_Logs
	//	*EventArray_Metrics
	//	*EventArray_Traces
	Events isEventArray_Events `protobuf_oneof:"events"`
}

func (x *EventArray) Reset() {
	*x = EventArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventArray) ProtoMessage() {}

func (x *EventArray) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventArray.ProtoReflect.Descriptor instead.
func (*EventArray) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{0}
}

func (m *EventArray) GetEvents() isEventArray_Events {
	if m != nil {
		return m.Events
	}
	return nil
}

func (x *EventArray) GetLogs() *LogArray {
	if x, ok := x.GetEvents().(*EventArray_Logs); ok {
		return x.Logs
	}
	return nil
}

func (x *EventArray) GetMetrics() *MetricArray {
	if x, ok := x.GetEvents().(*EventArray_Metrics); ok {
		return x.Metrics
	}
	return nil
}

func (x *EventArray) GetTraces() *TraceArray {
	if x, ok := x.GetEvents().(*EventArray_Traces); ok {
		return x.Traces
	}
	return nil
}

type isEventArray_Events interface {
	isEventArray_Events()
}

type EventArray_Logs struct {
	Logs *LogArray `protobuf:"bytes,1,opt,name=logs,proto3,oneof"`
}

type EventArray_Metrics struct {
	Metrics *MetricArray `protobuf:"bytes,2,opt,name=metrics,proto3,oneof"`
}

type EventArray_Traces struct {
	Traces *TraceArray `protobuf:"bytes,3,opt,name=traces,proto3,oneof"`
}

func (*EventArray_Logs) isEventArray_Events() {}

func (*EventArray_Metrics) isEventArray_Events() {}

func (*EventArray_Traces) isEventArray_Events() {}

type LogArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*Log `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *LogArray) Reset() {
	*x = LogArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogArray) ProtoMessage() {}

func (x *LogArray) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogArray.ProtoReflect.Descriptor instead.
func (*LogArray) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{1}
}

func (x *LogArray) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type MetricArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *MetricArray) Reset() {
	*x = MetricArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricArray) ProtoMessage() {}

func (x *MetricArray) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricArray.ProtoReflect.Descriptor instead.
func (*MetricArray) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{2}
}

func (x *MetricArray) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type TraceArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traces []*Trace `protobuf:"bytes,1,rep,name=traces,proto3" json:"traces,omitempty"`
}

func (x *TraceArray) Reset() {
	*x = TraceArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceArray) ProtoMessage() {}

func (x *TraceArray) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceArray.ProtoReflect.Descriptor instead.
func (*TraceArray) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{3}
}

func (x *TraceArray) GetTraces() []*Trace {
	if x != nil {
		return x.Traces
	}
	return nil
}

type EventWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*EventWrapper_Log
	//	*EventWrapper_Metric
	//	*EventWrapper_Trace
	Event isEventWrapper_Event `protobuf_oneof:"event"`
}

func (x *EventWrapper) Reset() {
	*x = EventWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWrapper) ProtoMessage() {}

func (x *EventWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventWrapper.ProtoReflect.Descriptor instead.
func (*EventWrapper) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{4}
}

func (m *EventWrapper) GetEvent() isEventWrapper_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *EventWrapper) GetLog() *Log {
	if x, ok := x.GetEvent().(*EventWrapper_Log); ok {
		return x.Log
	}
	return nil
}

func (x *EventWrapper) GetMetric() *Metric {
	if x, ok := x.GetEvent().(*EventWrapper_Metric); ok {
		return x.Metric
	}
	return nil
}

func (x *EventWrapper) GetTrace() *Trace {
	if x, ok := x.GetEvent().(*EventWrapper_Trace); ok {
		return x.Trace
	}
	return nil
}

type isEventWrapper_Event interface {
	isEventWrapper_Event()
}

type EventWrapper_Log struct {
	Log *Log `protobuf:"bytes,1,opt,name=log,proto3,oneof"`
}

type EventWrapper_Metric struct {
	Metric *Metric `protobuf:"bytes,2,opt,name=metric,proto3,oneof"`
}

type EventWrapper_Trace struct {
	Trace *Trace `protobuf:"bytes,3,opt,name=trace,proto3,oneof"`
}

func (*EventWrapper_Log) isEventWrapper_Event() {}

func (*EventWrapper_Metric) isEventWrapper_Event() {}

func (*EventWrapper_Trace) isEventWrapper_Event() {}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated, use value instead
	Fields   map[string]*Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Value    *Value            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Metadata *Value            `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{5}
}

func (x *Log) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Log) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Log) GetMetadata() *Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields   map[string]*Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metadata *Value            `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Trace) Reset() {
	*x = Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{6}
}

func (x *Trace) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Trace) GetMetadata() *Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ValueMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ValueMap) Reset() {
	*x = ValueMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueMap) ProtoMessage() {}

func (x *ValueMap) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueMap.ProtoReflect.Descriptor instead.
func (*ValueMap) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{7}
}

func (x *ValueMap) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ValueArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Value `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ValueArray) Reset() {
	*x = ValueArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueArray) ProtoMessage() {}

func (x *ValueArray) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueArray.ProtoReflect.Descriptor instead.
func (*ValueArray) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{8}
}

func (x *ValueArray) GetItems() []*Value {
	if x != nil {
		return x.Items
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*Value_RawBytes
	//	*Value_Timestamp
	//	*Value_Integer
	//	*Value_Float
	//	*Value_Boolean
	//	*Value_Map
	//	*Value_Array
	//	*Value_Null
	Kind isValue_Kind `protobuf_oneof:"kind"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{9}
}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Value) GetRawBytes() []byte {
	if x, ok := x.GetKind().(*Value_RawBytes); ok {
		return x.RawBytes
	}
	return nil
}

func (x *Value) GetTimestamp() *timestamppb.Timestamp {
	if x, ok := x.GetKind().(*Value_Timestamp); ok {
		return x.Timestamp
	}
	return nil
}

func (x *Value) GetInteger() int64 {
	if x, ok := x.GetKind().(*Value_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *Value) GetFloat() float64 {
	if x, ok := x.GetKind().(*Value_Float); ok {
		return x.Float
	}
	return 0
}

func (x *Value) GetBoolean() bool {
	if x, ok := x.GetKind().(*Value_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (x *Value) GetMap() *ValueMap {
	if x, ok := x.GetKind().(*Value_Map); ok {
		return x.Map
	}
	return nil
}

func (x *Value) GetArray() *ValueArray {
	if x, ok := x.GetKind().(*Value_Array); ok {
		return x.Array
	}
	return nil
}

func (x *Value) GetNull() ValueNull {
	if x, ok := x.GetKind().(*Value_Null); ok {
		return x.Null
	}
	return ValueNull_NULL_VALUE
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_RawBytes struct {
	RawBytes []byte `protobuf:"bytes,1,opt,name=raw_bytes,json=rawBytes,proto3,oneof"`
}

type Value_Timestamp struct {
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3,oneof"`
}

type Value_Integer struct {
	Integer int64 `protobuf:"varint,4,opt,name=integer,proto3,oneof"`
}

type Value_Float struct {
	Float float64 `protobuf:"fixed64,5,opt,name=float,proto3,oneof"`
}

type Value_Boolean struct {
	Boolean bool `protobuf:"varint,6,opt,name=boolean,proto3,oneof"`
}

type Value_Map struct {
	Map *ValueMap `protobuf:"bytes,7,opt,name=map,proto3,oneof"`
}

type Value_Array struct {
	Array *ValueArray `protobuf:"bytes,8,opt,name=array,proto3,oneof"`
}

type Value_Null struct {
	Null ValueNull `protobuf:"varint,9,opt,name=null,proto3,enum=vector.ValueNull,oneof"`
}

func (*Value_RawBytes) isValue_Kind() {}

func (*Value_Timestamp) isValue_Kind() {}

func (*Value_Integer) isValue_Kind() {}

func (*Value_Float) isValue_Kind() {}

func (*Value_Boolean) isValue_Kind() {}

func (*Value_Map) isValue_Kind() {}

func (*Value_Array) isValue_Kind() {}

func (*Value_Null) isValue_Kind() {}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TagsV1    map[string]string      `protobuf:"bytes,3,rep,name=tags_v1,json=tagsV1,proto3" json:"tags_v1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TagsV2    map[string]*TagValues  `protobuf:"bytes,20,rep,name=tags_v2,json=tagsV2,proto3" json:"tags_v2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Kind      Metric_Kind            `protobuf:"varint,4,opt,name=kind,proto3,enum=vector.Metric_Kind" json:"kind,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Metric_Counter
	//	*Metric_Gauge
	//	*Metric_Set
	//	*Metric_Distribution1
	//	*Metric_AggregatedHistogram1
	//	*Metric_AggregatedSummary1
	//	*Metric_Distribution2
	//	*Metric_AggregatedHistogram2
	//	*Metric_AggregatedSummary2
	//	*Metric_Sketch
	//	*Metric_AggregatedHistogram3
	//	*Metric_AggregatedSummary3
	Value      isMetric_Value `protobuf_oneof:"value"`
	Namespace  string         `protobuf:"bytes,11,opt,name=namespace,proto3" json:"namespace,omitempty"`
	IntervalMs uint32         `protobuf:"varint,18,opt,name=interval_ms,json=intervalMs,proto3" json:"interval_ms,omitempty"`
	Metadata   *Value         `protobuf:"bytes,19,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{10}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Metric) GetTagsV1() map[string]string {
	if x != nil {
		return x.TagsV1
	}
	return nil
}

func (x *Metric) GetTagsV2() map[string]*TagValues {
	if x != nil {
		return x.TagsV2
	}
	return nil
}

func (x *Metric) GetKind() Metric_Kind {
	if x != nil {
		return x.Kind
	}
	return Metric_Incremental
}

func (m *Metric) GetValue() isMetric_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Metric) GetCounter() *Counter {
	if x, ok := x.GetValue().(*Metric_Counter); ok {
		return x.Counter
	}
	return nil
}

func (x *Metric) GetGauge() *Gauge {
	if x, ok := x.GetValue().(*Metric_Gauge); ok {
		return x.Gauge
	}
	return nil
}

func (x *Metric) GetSet() *Set {
	if x, ok := x.GetValue().(*Metric_Set); ok {
		return x.Set
	}
	return nil
}

func (x *Metric) GetDistribution1() *Distribution1 {
	if x, ok := x.GetValue().(*Metric_Distribution1); ok {
		return x.Distribution1
	}
	return nil
}

func (x *Metric) GetAggregatedHistogram1() *AggregatedHistogram1 {
	if x, ok := x.GetValue().(*Metric_AggregatedHistogram1); ok {
		return x.AggregatedHistogram1
	}
	return nil
}

func (x *Metric) GetAggregatedSummary1() *AggregatedSummary1 {
	if x, ok := x.GetValue().(*Metric_AggregatedSummary1); ok {
		return x.AggregatedSummary1
	}
	return nil
}

func (x *Metric) GetDistribution2() *Distribution2 {
	if x, ok := x.GetValue().(*Metric_Distribution2); ok {
		return x.Distribution2
	}
	return nil
}

func (x *Metric) GetAggregatedHistogram2() *AggregatedHistogram2 {
	if x, ok := x.GetValue().(*Metric_AggregatedHistogram2); ok {
		return x.AggregatedHistogram2
	}
	return nil
}

func (x *Metric) GetAggregatedSummary2() *AggregatedSummary2 {
	if x, ok := x.GetValue().(*Metric_AggregatedSummary2); ok {
		return x.AggregatedSummary2
	}
	return nil
}

func (x *Metric) GetSketch() *Sketch {
	if x, ok := x.GetValue().(*Metric_Sketch); ok {
		return x.Sketch
	}
	return nil
}

func (x *Metric) GetAggregatedHistogram3() *AggregatedHistogram3 {
	if x, ok := x.GetValue().(*Metric_AggregatedHistogram3); ok {
		return x.AggregatedHistogram3
	}
	return nil
}

func (x *Metric) GetAggregatedSummary3() *AggregatedSummary3 {
	if x, ok := x.GetValue().(*Metric_AggregatedSummary3); ok {
		return x.AggregatedSummary3
	}
	return nil
}

func (x *Metric) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Metric) GetIntervalMs() uint32 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

func (x *Metric) GetMetadata() *Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isMetric_Value interface {
	isMetric_Value()
}

type Metric_Counter struct {
	Counter *Counter `protobuf:"bytes,5,opt,name=counter,proto3,oneof"`
}

type Metric_Gauge struct {
	Gauge *Gauge `protobuf:"bytes,6,opt,name=gauge,proto3,oneof"`
}

type Metric_Set struct {
	Set *Set `protobuf:"bytes,7,opt,name=set,proto3,oneof"`
}

type Metric_Distribution1 struct {
	Distribution1 *Distribution1 `protobuf:"bytes,8,opt,name=distribution1,proto3,oneof"`
}

type Metric_AggregatedHistogram1 struct {
	AggregatedHistogram1 *AggregatedHistogram1 `protobuf:"bytes,9,opt,name=aggregated_histogram1,json=aggregatedHistogram1,proto3,oneof"`
}

type Metric_AggregatedSummary1 struct {
	AggregatedSummary1 *AggregatedSummary1 `protobuf:"bytes,10,opt,name=aggregated_summary1,json=aggregatedSummary1,proto3,oneof"`
}

type Metric_Distribution2 struct {
	Distribution2 *Distribution2 `protobuf:"bytes,12,opt,name=distribution2,proto3,oneof"`
}

type Metric_AggregatedHistogram2 struct {
	AggregatedHistogram2 *AggregatedHistogram2 `protobuf:"bytes,13,opt,name=aggregated_histogram2,json=aggregatedHistogram2,proto3,oneof"`
}

type Metric_AggregatedSummary2 struct {
	AggregatedSummary2 *AggregatedSummary2 `protobuf:"bytes,14,opt,name=aggregated_summary2,json=aggregatedSummary2,proto3,oneof"`
}

type Metric_Sketch struct {
	Sketch *Sketch `protobuf:"bytes,15,opt,name=sketch,proto3,oneof"`
}

type Metric_AggregatedHistogram3 struct {
	AggregatedHistogram3 *AggregatedHistogram3 `protobuf:"bytes,16,opt,name=aggregated_histogram3,json=aggregatedHistogram3,proto3,oneof"`
}

type Metric_AggregatedSummary3 struct {
	AggregatedSummary3 *AggregatedSummary3 `protobuf:"bytes,17,opt,name=aggregated_summary3,json=aggregatedSummary3,proto3,oneof"`
}

func (*Metric_Counter) isMetric_Value() {}

func (*Metric_Gauge) isMetric_Value() {}

func (*Metric_Set) isMetric_Value() {}

func (*Metric_Distribution1) isMetric_Value() {}

func (*Metric_AggregatedHistogram1) isMetric_Value() {}

func (*Metric_AggregatedSummary1) isMetric_Value() {}

func (*Metric_Distribution2) isMetric_Value() {}

func (*Metric_AggregatedHistogram2) isMetric_Value() {}

func (*Metric_AggregatedSummary2) isMetric_Value() {}

func (*Metric_Sketch) isMetric_Value() {}

func (*Metric_AggregatedHistogram3) isMetric_Value() {}

func (*Metric_AggregatedSummary3) isMetric_Value() {}

type TagValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*TagValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TagValues) Reset() {
	*x = TagValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagValues) ProtoMessage() {}

func (x *TagValues) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagValues.ProtoReflect.Descriptor instead.
func (*TagValues) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{11}
}

func (x *TagValues) GetValues() []*TagValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type TagValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *TagValue) Reset() {
	*x = TagValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagValue) ProtoMessage() {}

func (x *TagValue) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagValue.ProtoReflect.Descriptor instead.
func (*TagValue) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{12}
}

func (x *TagValue) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Counter) Reset() {
	*x = Counter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Counter) ProtoMessage() {}

func (x *Counter) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Counter.ProtoReflect.Descriptor instead.
func (*Counter) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{13}
}

func (x *Counter) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Gauge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Gauge) Reset() {
	*x = Gauge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gauge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gauge) ProtoMessage() {}

func (x *Gauge) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gauge.ProtoReflect.Descriptor instead.
func (*Gauge) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{14}
}

func (x *Gauge) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Set) Reset() {
	*x = Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{15}
}

func (x *Set) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Distribution1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values      []float64     `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	SampleRates []uint32      `protobuf:"varint,2,rep,packed,name=sample_rates,json=sampleRates,proto3" json:"sample_rates,omitempty"`
	Statistic   StatisticKind `protobuf:"varint,3,opt,name=statistic,proto3,enum=vector.StatisticKind" json:"statistic,omitempty"`
}

func (x *Distribution1) Reset() {
	*x = Distribution1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distribution1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distribution1) ProtoMessage() {}

func (x *Distribution1) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distribution1.ProtoReflect.Descriptor instead.
func (*Distribution1) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{16}
}

func (x *Distribution1) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Distribution1) GetSampleRates() []uint32 {
	if x != nil {
		return x.SampleRates
	}
	return nil
}

func (x *Distribution1) GetStatistic() StatisticKind {
	if x != nil {
		return x.Statistic
	}
	return StatisticKind_Histogram
}

type Distribution2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Samples   []*DistributionSample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	Statistic StatisticKind         `protobuf:"varint,2,opt,name=statistic,proto3,enum=vector.StatisticKind" json:"statistic,omitempty"`
}

func (x *Distribution2) Reset() {
	*x = Distribution2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distribution2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distribution2) ProtoMessage() {}

func (x *Distribution2) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distribution2.ProtoReflect.Descriptor instead.
func (*Distribution2) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{17}
}

func (x *Distribution2) GetSamples() []*DistributionSample {
	if x != nil {
		return x.Samples
	}
	return nil
}

func (x *Distribution2) GetStatistic() StatisticKind {
	if x != nil {
		return x.Statistic
	}
	return StatisticKind_Histogram
}

type DistributionSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Rate  uint32  `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *DistributionSample) Reset() {
	*x = DistributionSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionSample) ProtoMessage() {}

func (x *DistributionSample) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionSample.ProtoReflect.Descriptor instead.
func (*DistributionSample) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{18}
}

func (x *DistributionSample) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DistributionSample) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type AggregatedHistogram1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []float64 `protobuf:"fixed64,1,rep,packed,name=buckets,proto3" json:"buckets,omitempty"`
	Counts  []uint32  `protobuf:"varint,2,rep,packed,name=counts,proto3" json:"counts,omitempty"`
	Count   uint32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Sum     float64   `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AggregatedHistogram1) Reset() {
	*x = AggregatedHistogram1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedHistogram1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedHistogram1) ProtoMessage() {}

func (x *AggregatedHistogram1) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedHistogram1.ProtoReflect.Descriptor instead.
func (*AggregatedHistogram1) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{19}
}

func (x *AggregatedHistogram1) GetBuckets() []float64 {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *AggregatedHistogram1) GetCounts() []uint32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *AggregatedHistogram1) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedHistogram1) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AggregatedHistogram2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*HistogramBucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	Count   uint32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Sum     float64            `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AggregatedHistogram2) Reset() {
	*x = AggregatedHistogram2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedHistogram2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedHistogram2) ProtoMessage() {}

func (x *AggregatedHistogram2) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedHistogram2.ProtoReflect.Descriptor instead.
func (*AggregatedHistogram2) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{20}
}

func (x *AggregatedHistogram2) GetBuckets() []*HistogramBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *AggregatedHistogram2) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedHistogram2) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AggregatedHistogram3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*HistogramBucket3 `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	Count   uint64              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Sum     float64             `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AggregatedHistogram3) Reset() {
	*x = AggregatedHistogram3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedHistogram3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedHistogram3) ProtoMessage() {}

func (x *AggregatedHistogram3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedHistogram3.ProtoReflect.Descriptor instead.
func (*AggregatedHistogram3) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{21}
}

func (x *AggregatedHistogram3) GetBuckets() []*HistogramBucket3 {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *AggregatedHistogram3) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedHistogram3) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type HistogramBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpperLimit float64 `protobuf:"fixed64,1,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	Count      uint32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *HistogramBucket) Reset() {
	*x = HistogramBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramBucket) ProtoMessage() {}

func (x *HistogramBucket) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramBucket.ProtoReflect.Descriptor instead.
func (*HistogramBucket) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{22}
}

func (x *HistogramBucket) GetUpperLimit() float64 {
	if x != nil {
		return x.UpperLimit
	}
	return 0
}

func (x *HistogramBucket) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type HistogramBucket3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpperLimit float64 `protobuf:"fixed64,1,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	Count      uint64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *HistogramBucket3) Reset() {
	*x = HistogramBucket3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramBucket3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramBucket3) ProtoMessage() {}

func (x *HistogramBucket3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramBucket3.ProtoReflect.Descriptor instead.
func (*HistogramBucket3) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{23}
}

func (x *HistogramBucket3) GetUpperLimit() float64 {
	if x != nil {
		return x.UpperLimit
	}
	return 0
}

func (x *HistogramBucket3) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AggregatedSummary1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantiles []float64 `protobuf:"fixed64,1,rep,packed,name=quantiles,proto3" json:"quantiles,omitempty"`
	Values    []float64 `protobuf:"fixed64,2,rep,packed,name=values,proto3" json:"values,omitempty"`
	Count     uint32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Sum       float64   `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AggregatedSummary1) Reset() {
	*x = AggregatedSummary1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedSummary1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedSummary1) ProtoMessage() {}

func (x *AggregatedSummary1) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedSummary1.ProtoReflect.Descriptor instead.
func (*AggregatedSummary1) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{24}
}

func (x *AggregatedSummary1) GetQuantiles() []float64 {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

func (x *AggregatedSummary1) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *AggregatedSummary1) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedSummary1) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AggregatedSummary2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantiles []*SummaryQuantile `protobuf:"bytes,1,rep,name=quantiles,proto3" json:"quantiles,omitempty"`
	Count     uint32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Sum       float64            `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AggregatedSummary2) Reset() {
	*x = AggregatedSummary2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedSummary2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedSummary2) ProtoMessage() {}

func (x *AggregatedSummary2) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedSummary2.ProtoReflect.Descriptor instead.
func (*AggregatedSummary2) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{25}
}

func (x *AggregatedSummary2) GetQuantiles() []*SummaryQuantile {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

func (x *AggregatedSummary2) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedSummary2) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type AggregatedSummary3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantiles []*SummaryQuantile `protobuf:"bytes,1,rep,name=quantiles,proto3" json:"quantiles,omitempty"`
	Count     uint64             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Sum       float64            `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AggregatedSummary3) Reset() {
	*x = AggregatedSummary3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedSummary3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedSummary3) ProtoMessage() {}

func (x *AggregatedSummary3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedSummary3.ProtoReflect.Descriptor instead.
func (*AggregatedSummary3) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{26}
}

func (x *AggregatedSummary3) GetQuantiles() []*SummaryQuantile {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

func (x *AggregatedSummary3) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregatedSummary3) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type SummaryQuantile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantile float64 `protobuf:"fixed64,1,opt,name=quantile,proto3" json:"quantile,omitempty"`
	Value    float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SummaryQuantile) Reset() {
	*x = SummaryQuantile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryQuantile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryQuantile) ProtoMessage() {}

func (x *SummaryQuantile) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryQuantile.ProtoReflect.Descriptor instead.
func (*SummaryQuantile) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{27}
}

func (x *SummaryQuantile) GetQuantile() float64 {
	if x != nil {
		return x.Quantile
	}
	return 0
}

func (x *SummaryQuantile) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Sketch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Sketch:
	//
	//	*Sketch_AgentDdSketch
	Sketch isSketch_Sketch `protobuf_oneof:"sketch"`
}

func (x *Sketch) Reset() {
	*x = Sketch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sketch) ProtoMessage() {}

func (x *Sketch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sketch.ProtoReflect.Descriptor instead.
func (*Sketch) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{28}
}

func (m *Sketch) GetSketch() isSketch_Sketch {
	if m != nil {
		return m.Sketch
	}
	return nil
}

func (x *Sketch) GetAgentDdSketch() *Sketch_AgentDDSketch {
	if x, ok := x.GetSketch().(*Sketch_AgentDdSketch); ok {
		return x.AgentDdSketch
	}
	return nil
}

type isSketch_Sketch interface {
	isSketch_Sketch()
}

type Sketch_AgentDdSketch struct {
	AgentDdSketch *Sketch_AgentDDSketch `protobuf:"bytes,1,opt,name=agent_dd_sketch,json=agentDdSketch,proto3,oneof"`
}

func (*Sketch_AgentDdSketch) isSketch_Sketch() {}

type Sketch_AgentDDSketch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Summary statistics for the samples in this sketch.
	Count uint32  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Min   float64 `protobuf:"fixed64,2,opt,name=min,proto3" json:"min,omitempty"`
	Max   float64 `protobuf:"fixed64,3,opt,name=max,proto3" json:"max,omitempty"`
	Sum   float64 `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
	Avg   float64 `protobuf:"fixed64,5,opt,name=avg,proto3" json:"avg,omitempty"`
	// The bins (buckets) of this sketch, where `k` and `n` are unzipped pairs.
	// `k` is the list of bin indexes that are populated, and `n` is the count of samples
	// within the given bin.
	K []int32  `protobuf:"zigzag32,6,rep,packed,name=k,proto3" json:"k,omitempty"`
	N []uint32 `protobuf:"varint,7,rep,packed,name=n,proto3" json:"n,omitempty"`
}

func (x *Sketch_AgentDDSketch) Reset() {
	*x = Sketch_AgentDDSketch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_app_proto_event_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sketch_AgentDDSketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sketch_AgentDDSketch) ProtoMessage() {}

func (x *Sketch_AgentDDSketch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_app_proto_event_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sketch_AgentDDSketch.ProtoReflect.Descriptor instead.
func (*Sketch_AgentDDSketch) Descriptor() ([]byte, []int) {
	return file_internal_app_proto_event_proto_rawDescGZIP(), []int{28, 0}
}

func (x *Sketch_AgentDDSketch) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Sketch_AgentDDSketch) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Sketch_AgentDDSketch) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Sketch_AgentDDSketch) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *Sketch_AgentDDSketch) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *Sketch_AgentDDSketch) GetK() []int32 {
	if x != nil {
		return x.K
	}
	return nil
}

func (x *Sketch_AgentDDSketch) GetN() []uint32 {
	if x != nil {
		return x.N
	}
	return nil
}

var File_internal_app_proto_event_proto protoreflect.FileDescriptor

var file_internal_app_proto_event_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x4c, 0x6f, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2b, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x67,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22,
	0x33, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x25, 0x0a,
	0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x06, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x48,
	0x00, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x28, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x25, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xd0, 0x01, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x48, 0x0a, 0x0b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x48, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4d, 0x61, 0x70, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x48, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x31, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1d, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x77, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x07, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x1a,
	0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x61,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70,
	0x12, 0x2a, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x04,
	0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x22, 0x95, 0x0a, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x07,
	0x74, 0x61, 0x67, 0x73, 0x5f, 0x76, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x56, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x61, 0x67, 0x73, 0x56,
	0x31, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x76, 0x32, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x56, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x74, 0x61, 0x67, 0x73, 0x56, 0x32, 0x12, 0x27, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05,
	0x67, 0x61, 0x75, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x61, 0x75, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x67, 0x61,
	0x75, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x03, 0x73, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x31, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x31, 0x12, 0x53, 0x0a, 0x15, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x31,
	0x48, 0x00, 0x52, 0x14, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x4d, 0x0a, 0x13, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x31, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x31, 0x48, 0x00, 0x52, 0x12, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x31, 0x12, 0x3d, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x53, 0x0a, 0x15, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x32, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x32, 0x48, 0x00, 0x52, 0x14, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x4d, 0x0a, 0x13, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x32, 0x48, 0x00, 0x52, 0x12, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x32, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6b,
	0x65, 0x74, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6b,
	0x65, 0x74, 0x63, 0x68, 0x12, 0x53, 0x0a, 0x15, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x33, 0x48, 0x00, 0x52, 0x14, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x4d, 0x0a, 0x13, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x33,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x33, 0x48, 0x00, 0x52, 0x12, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x39, 0x0a, 0x0b, 0x54, 0x61, 0x67, 0x73, 0x56, 0x31, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4c, 0x0a,
	0x0b, 0x54, 0x61, 0x67, 0x73, 0x56, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x25, 0x0a, 0x04, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x2f, 0x0a, 0x08, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x47, 0x61, 0x75, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x7f, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x22, 0x7a, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x22,
	0x3e, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22,
	0x70, 0x0a, 0x14, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75,
	0x6d, 0x22, 0x71, 0x0a, 0x14, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x31, 0x0a, 0x07, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x73, 0x75, 0x6d, 0x22, 0x72, 0x0a, 0x14, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x32, 0x0a, 0x07,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x33, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x48, 0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x49, 0x0a, 0x10, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x33, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x70,
	0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a,
	0x12, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75,
	0x6d, 0x22, 0x73, 0x0a, 0x12, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x32, 0x12, 0x35, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x6c, 0x65, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x73, 0x0a, 0x12, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x33, 0x12, 0x35, 0x0a, 0x09,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x43, 0x0a, 0x0f, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xe6, 0x01, 0x0a, 0x06, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x12, 0x46, 0x0a, 0x0f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x64, 0x5f, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x6b,
	0x65, 0x74, 0x63, 0x68, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x44, 0x53, 0x6b, 0x65, 0x74,
	0x63, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x64, 0x53, 0x6b, 0x65,
	0x74, 0x63, 0x68, 0x1a, 0x89, 0x01, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x44, 0x53,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x61, 0x76, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x06, 0x20, 0x03, 0x28, 0x11, 0x52, 0x01,
	0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x01, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x2a, 0x1b, 0x0a, 0x09, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x10, 0x00, 0x2a, 0x2b, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x10, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_app_proto_event_proto_rawDescOnce sync.Once
	file_internal_app_proto_event_proto_rawDescData = file_internal_app_proto_event_proto_rawDesc
)

func file_internal_app_proto_event_proto_rawDescGZIP() []byte {
	file_internal_app_proto_event_proto_rawDescOnce.Do(func() {
		file_internal_app_proto_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_app_proto_event_proto_rawDescData)
	})
	return file_internal_app_proto_event_proto_rawDescData
}

var file_internal_app_proto_event_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_app_proto_event_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_internal_app_proto_event_proto_goTypes = []interface{}{
	(ValueNull)(0),                // 0: vector.ValueNull
	(StatisticKind)(0),            // 1: vector.StatisticKind
	(Metric_Kind)(0),              // 2: vector.Metric.Kind
	(*EventArray)(nil),            // 3: vector.EventArray
	(*LogArray)(nil),              // 4: vector.LogArray
	(*MetricArray)(nil),           // 5: vector.MetricArray
	(*TraceArray)(nil),            // 6: vector.TraceArray
	(*EventWrapper)(nil),          // 7: vector.EventWrapper
	(*Log)(nil),                   // 8: vector.Log
	(*Trace)(nil),                 // 9: vector.Trace
	(*ValueMap)(nil),              // 10: vector.ValueMap
	(*ValueArray)(nil),            // 11: vector.ValueArray
	(*Value)(nil),                 // 12: vector.Value
	(*Metric)(nil),                // 13: vector.Metric
	(*TagValues)(nil),             // 14: vector.TagValues
	(*TagValue)(nil),              // 15: vector.TagValue
	(*Counter)(nil),               // 16: vector.Counter
	(*Gauge)(nil),                 // 17: vector.Gauge
	(*Set)(nil),                   // 18: vector.Set
	(*Distribution1)(nil),         // 19: vector.Distribution1
	(*Distribution2)(nil),         // 20: vector.Distribution2
	(*DistributionSample)(nil),    // 21: vector.DistributionSample
	(*AggregatedHistogram1)(nil),  // 22: vector.AggregatedHistogram1
	(*AggregatedHistogram2)(nil),  // 23: vector.AggregatedHistogram2
	(*AggregatedHistogram3)(nil),  // 24: vector.AggregatedHistogram3
	(*HistogramBucket)(nil),       // 25: vector.HistogramBucket
	(*HistogramBucket3)(nil),      // 26: vector.HistogramBucket3
	(*AggregatedSummary1)(nil),    // 27: vector.AggregatedSummary1
	(*AggregatedSummary2)(nil),    // 28: vector.AggregatedSummary2
	(*AggregatedSummary3)(nil),    // 29: vector.AggregatedSummary3
	(*SummaryQuantile)(nil),       // 30: vector.SummaryQuantile
	(*Sketch)(nil),                // 31: vector.Sketch
	nil,                           // 32: vector.Log.FieldsEntry
	nil,                           // 33: vector.Trace.FieldsEntry
	nil,                           // 34: vector.ValueMap.FieldsEntry
	nil,                           // 35: vector.Metric.TagsV1Entry
	nil,                           // 36: vector.Metric.TagsV2Entry
	(*Sketch_AgentDDSketch)(nil),  // 37: vector.Sketch.AgentDDSketch
	(*timestamppb.Timestamp)(nil), // 38: google.protobuf.Timestamp
}
var file_internal_app_proto_event_proto_depIdxs = []int32{
	4,  // 0: vector.EventArray.logs:type_name -> vector.LogArray
	5,  // 1: vector.EventArray.metrics:type_name -> vector.MetricArray
	6,  // 2: vector.EventArray.traces:type_name -> vector.TraceArray
	8,  // 3: vector.LogArray.logs:type_name -> vector.Log
	13, // 4: vector.MetricArray.metrics:type_name -> vector.Metric
	9,  // 5: vector.TraceArray.traces:type_name -> vector.Trace
	8,  // 6: vector.EventWrapper.log:type_name -> vector.Log
	13, // 7: vector.EventWrapper.metric:type_name -> vector.Metric
	9,  // 8: vector.EventWrapper.trace:type_name -> vector.Trace
	32, // 9: vector.Log.fields:type_name -> vector.Log.FieldsEntry
	12, // 10: vector.Log.value:type_name -> vector.Value
	12, // 11: vector.Log.metadata:type_name -> vector.Value
	33, // 12: vector.Trace.fields:type_name -> vector.Trace.FieldsEntry
	12, // 13: vector.Trace.metadata:type_name -> vector.Value
	34, // 14: vector.ValueMap.fields:type_name -> vector.ValueMap.FieldsEntry
	12, // 15: vector.ValueArray.items:type_name -> vector.Value
	38, // 16: vector.Value.timestamp:type_name -> google.protobuf.Timestamp
	10, // 17: vector.Value.map:type_name -> vector.ValueMap
	11, // 18: vector.Value.array:type_name -> vector.ValueArray
	0,  // 19: vector.Value.null:type_name -> vector.ValueNull
	38, // 20: vector.Metric.timestamp:type_name -> google.protobuf.Timestamp
	35, // 21: vector.Metric.tags_v1:type_name -> vector.Metric.TagsV1Entry
	36, // 22: vector.Metric.tags_v2:type_name -> vector.Metric.TagsV2Entry
	2,  // 23: vector.Metric.kind:type_name -> vector.Metric.Kind
	16, // 24: vector.Metric.counter:type_name -> vector.Counter
	17, // 25: vector.Metric.gauge:type_name -> vector.Gauge
	18, // 26: vector.Metric.set:type_name -> vector.Set
	19, // 27: vector.Metric.distribution1:type_name -> vector.Distribution1
	22, // 28: vector.Metric.aggregated_histogram1:type_name -> vector.AggregatedHistogram1
	27, // 29: vector.Metric.aggregated_summary1:type_name -> vector.AggregatedSummary1
	20, // 30: vector.Metric.distribution2:type_name -> vector.Distribution2
	23, // 31: vector.Metric.aggregated_histogram2:type_name -> vector.AggregatedHistogram2
	28, // 32: vector.Metric.aggregated_summary2:type_name -> vector.AggregatedSummary2
	31, // 33: vector.Metric.sketch:type_name -> vector.Sketch
	24, // 34: vector.Metric.aggregated_histogram3:type_name -> vector.AggregatedHistogram3
	29, // 35: vector.Metric.aggregated_summary3:type_name -> vector.AggregatedSummary3
	12, // 36: vector.Metric.metadata:type_name -> vector.Value
	15, // 37: vector.TagValues.values:type_name -> vector.TagValue
	1,  // 38: vector.Distribution1.statistic:type_name -> vector.StatisticKind
	21, // 39: vector.Distribution2.samples:type_name -> vector.DistributionSample
	1,  // 40: vector.Distribution2.statistic:type_name -> vector.StatisticKind
	25, // 41: vector.AggregatedHistogram2.buckets:type_name -> vector.HistogramBucket
	26, // 42: vector.AggregatedHistogram3.buckets:type_name -> vector.HistogramBucket3
	30, // 43: vector.AggregatedSummary2.quantiles:type_name -> vector.SummaryQuantile
	30, // 44: vector.AggregatedSummary3.quantiles:type_name -> vector.SummaryQuantile
	37, // 45: vector.Sketch.agent_dd_sketch:type_name -> vector.Sketch.AgentDDSketch
	12, // 46: vector.Log.FieldsEntry.value:type_name -> vector.Value
	12, // 47: vector.Trace.FieldsEntry.value:type_name -> vector.Value
	12, // 48: vector.ValueMap.FieldsEntry.value:type_name -> vector.Value
	14, // 49: vector.Metric.TagsV2Entry.value:type_name -> vector.TagValues
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_internal_app_proto_event_proto_init() }
func file_internal_app_proto_event_proto_init() {
	if File_internal_app_proto_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_app_proto_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Counter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gauge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Distribution1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Distribution2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedHistogram1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedHistogram2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedHistogram3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistogramBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistogramBucket3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedSummary1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedSummary2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedSummary3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryQuantile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sketch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_app_proto_event_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sketch_AgentDDSketch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_app_proto_event_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*EventArray_Logs)(nil),
		(*EventArray_Metrics)(nil),
		(*EventArray_Traces)(nil),
	}
	file_internal_app_proto_event_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*EventWrapper_Log)(nil),
		(*EventWrapper_Metric)(nil),
		(*EventWrapper_Trace)(nil),
	}
	file_internal_app_proto_event_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Value_RawBytes)(nil),
		(*Value_Timestamp)(nil),
		(*Value_Integer)(nil),
		(*Value_Float)(nil),
		(*Value_Boolean)(nil),
		(*Value_Map)(nil),
		(*Value_Array)(nil),
		(*Value_Null)(nil),
	}
	file_internal_app_proto_event_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Metric_Counter)(nil),
		(*Metric_Gauge)(nil),
		(*Metric_Set)(nil),
		(*Metric_Distribution1)(nil),
		(*Metric_AggregatedHistogram1)(nil),
		(*Metric_AggregatedSummary1)(nil),
		(*Metric_Distribution2)(nil),
		(*Metric_AggregatedHistogram2)(nil),
		(*Metric_AggregatedSummary2)(nil),
		(*Metric_Sketch)(nil),
		(*Metric_AggregatedHistogram3)(nil),
		(*Metric_AggregatedSummary3)(nil),
	}
	file_internal_app_proto_event_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_internal_app_proto_event_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*Sketch_AgentDdSketch)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_app_proto_event_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_app_proto_event_proto_goTypes,
		DependencyIndexes: file_internal_app_proto_event_proto_depIdxs,
		EnumInfos:         file_internal_app_proto_event_proto_enumTypes,
		MessageInfos:      file_internal_app_proto_event_proto_msgTypes,
	}.Build()
	File_internal_app_proto_event_proto = out.File
	file_internal_app_proto_event_proto_rawDesc = nil
	file_internal_app_proto_event_proto_goTypes = nil
	file_internal_app_proto_event_proto_depIdxs = nil
}
