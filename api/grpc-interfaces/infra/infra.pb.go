// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: infra.proto

package infra

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetClusterIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	UserEmail     string                 `protobuf:"bytes,3,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	AccountName   string                 `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName   string                 `protobuf:"bytes,5,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterIn) Reset() {
	*x = GetClusterIn{}
	mi := &file_infra_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterIn) ProtoMessage() {}

func (x *GetClusterIn) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterIn.ProtoReflect.Descriptor instead.
func (*GetClusterIn) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterIn) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetClusterIn) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetClusterIn) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetClusterIn) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetClusterIn) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetClusterOut struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MessageQueueTopic string                 `protobuf:"bytes,1,opt,name=messageQueueTopic,proto3" json:"messageQueueTopic,omitempty"`
	DnsHost           string                 `protobuf:"bytes,2,opt,name=dnsHost,proto3" json:"dnsHost,omitempty"`
	IACJobName        string                 `protobuf:"bytes,3,opt,name=IACJobName,proto3" json:"IACJobName,omitempty"`
	IACJobNamespace   string                 `protobuf:"bytes,4,opt,name=IACJobNamespace,proto3" json:"IACJobNamespace,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetClusterOut) Reset() {
	*x = GetClusterOut{}
	mi := &file_infra_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterOut) ProtoMessage() {}

func (x *GetClusterOut) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterOut.ProtoReflect.Descriptor instead.
func (*GetClusterOut) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{1}
}

func (x *GetClusterOut) GetMessageQueueTopic() string {
	if x != nil {
		return x.MessageQueueTopic
	}
	return ""
}

func (x *GetClusterOut) GetDnsHost() string {
	if x != nil {
		return x.DnsHost
	}
	return ""
}

func (x *GetClusterOut) GetIACJobName() string {
	if x != nil {
		return x.IACJobName
	}
	return ""
}

func (x *GetClusterOut) GetIACJobNamespace() string {
	if x != nil {
		return x.IACJobNamespace
	}
	return ""
}

type GetNodepoolIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	UserEmail     string                 `protobuf:"bytes,3,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	AccountName   string                 `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName   string                 `protobuf:"bytes,5,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	NodepoolName  string                 `protobuf:"bytes,6,opt,name=nodepoolName,proto3" json:"nodepoolName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodepoolIn) Reset() {
	*x = GetNodepoolIn{}
	mi := &file_infra_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodepoolIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodepoolIn) ProtoMessage() {}

func (x *GetNodepoolIn) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodepoolIn.ProtoReflect.Descriptor instead.
func (*GetNodepoolIn) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{2}
}

func (x *GetNodepoolIn) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetNodepoolIn) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetNodepoolIn) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetNodepoolIn) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetNodepoolIn) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetNodepoolIn) GetNodepoolName() string {
	if x != nil {
		return x.NodepoolName
	}
	return ""
}

type GetNodepoolOut struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IACJobName      string                 `protobuf:"bytes,1,opt,name=IACJobName,proto3" json:"IACJobName,omitempty"`
	IACJobNamespace string                 `protobuf:"bytes,2,opt,name=IACJobNamespace,proto3" json:"IACJobNamespace,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetNodepoolOut) Reset() {
	*x = GetNodepoolOut{}
	mi := &file_infra_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodepoolOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodepoolOut) ProtoMessage() {}

func (x *GetNodepoolOut) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodepoolOut.ProtoReflect.Descriptor instead.
func (*GetNodepoolOut) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{3}
}

func (x *GetNodepoolOut) GetIACJobName() string {
	if x != nil {
		return x.IACJobName
	}
	return ""
}

func (x *GetNodepoolOut) GetIACJobNamespace() string {
	if x != nil {
		return x.IACJobNamespace
	}
	return ""
}

type ClusterExistsIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	UserEmail     string                 `protobuf:"bytes,3,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	AccountName   string                 `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName   string                 `protobuf:"bytes,5,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterExistsIn) Reset() {
	*x = ClusterExistsIn{}
	mi := &file_infra_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterExistsIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterExistsIn) ProtoMessage() {}

func (x *ClusterExistsIn) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterExistsIn.ProtoReflect.Descriptor instead.
func (*ClusterExistsIn) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterExistsIn) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClusterExistsIn) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ClusterExistsIn) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *ClusterExistsIn) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ClusterExistsIn) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type ClusterExistsOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterExistsOut) Reset() {
	*x = ClusterExistsOut{}
	mi := &file_infra_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterExistsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterExistsOut) ProtoMessage() {}

func (x *ClusterExistsOut) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterExistsOut.ProtoReflect.Descriptor instead.
func (*ClusterExistsOut) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{5}
}

func (x *ClusterExistsOut) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type GetClusterKubeconfigOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kubeconfig    []byte                 `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterKubeconfigOut) Reset() {
	*x = GetClusterKubeconfigOut{}
	mi := &file_infra_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterKubeconfigOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterKubeconfigOut) ProtoMessage() {}

func (x *GetClusterKubeconfigOut) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterKubeconfigOut.ProtoReflect.Descriptor instead.
func (*GetClusterKubeconfigOut) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{6}
}

func (x *GetClusterKubeconfigOut) GetKubeconfig() []byte {
	if x != nil {
		return x.Kubeconfig
	}
	return nil
}

type MarkClusterOnlineAtIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountName   string                 `protobuf:"bytes,1,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName   string                 `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkClusterOnlineAtIn) Reset() {
	*x = MarkClusterOnlineAtIn{}
	mi := &file_infra_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkClusterOnlineAtIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkClusterOnlineAtIn) ProtoMessage() {}

func (x *MarkClusterOnlineAtIn) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkClusterOnlineAtIn.ProtoReflect.Descriptor instead.
func (*MarkClusterOnlineAtIn) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{7}
}

func (x *MarkClusterOnlineAtIn) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *MarkClusterOnlineAtIn) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *MarkClusterOnlineAtIn) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type MarkClusterOnlineAtOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkClusterOnlineAtOut) Reset() {
	*x = MarkClusterOnlineAtOut{}
	mi := &file_infra_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkClusterOnlineAtOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkClusterOnlineAtOut) ProtoMessage() {}

func (x *MarkClusterOnlineAtOut) ProtoReflect() protoreflect.Message {
	mi := &file_infra_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkClusterOnlineAtOut.ProtoReflect.Descriptor instead.
func (*MarkClusterOnlineAtOut) Descriptor() ([]byte, []int) {
	return file_infra_proto_rawDescGZIP(), []int{8}
}

var File_infra_proto protoreflect.FileDescriptor

const file_infra_proto_rawDesc = "" +
	"\n" +
	"\vinfra.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa4\x01\n" +
	"\fGetClusterIn\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\buserName\x18\x02 \x01(\tR\buserName\x12\x1c\n" +
	"\tuserEmail\x18\x03 \x01(\tR\tuserEmail\x12 \n" +
	"\vaccountName\x18\x04 \x01(\tR\vaccountName\x12 \n" +
	"\vclusterName\x18\x05 \x01(\tR\vclusterName\"\xa1\x01\n" +
	"\rGetClusterOut\x12,\n" +
	"\x11messageQueueTopic\x18\x01 \x01(\tR\x11messageQueueTopic\x12\x18\n" +
	"\adnsHost\x18\x02 \x01(\tR\adnsHost\x12\x1e\n" +
	"\n" +
	"IACJobName\x18\x03 \x01(\tR\n" +
	"IACJobName\x12(\n" +
	"\x0fIACJobNamespace\x18\x04 \x01(\tR\x0fIACJobNamespace\"\xc9\x01\n" +
	"\rGetNodepoolIn\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\buserName\x18\x02 \x01(\tR\buserName\x12\x1c\n" +
	"\tuserEmail\x18\x03 \x01(\tR\tuserEmail\x12 \n" +
	"\vaccountName\x18\x04 \x01(\tR\vaccountName\x12 \n" +
	"\vclusterName\x18\x05 \x01(\tR\vclusterName\x12\"\n" +
	"\fnodepoolName\x18\x06 \x01(\tR\fnodepoolName\"Z\n" +
	"\x0eGetNodepoolOut\x12\x1e\n" +
	"\n" +
	"IACJobName\x18\x01 \x01(\tR\n" +
	"IACJobName\x12(\n" +
	"\x0fIACJobNamespace\x18\x02 \x01(\tR\x0fIACJobNamespace\"\xa7\x01\n" +
	"\x0fClusterExistsIn\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\buserName\x18\x02 \x01(\tR\buserName\x12\x1c\n" +
	"\tuserEmail\x18\x03 \x01(\tR\tuserEmail\x12 \n" +
	"\vaccountName\x18\x04 \x01(\tR\vaccountName\x12 \n" +
	"\vclusterName\x18\x05 \x01(\tR\vclusterName\"*\n" +
	"\x10ClusterExistsOut\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"9\n" +
	"\x17GetClusterKubeconfigOut\x12\x1e\n" +
	"\n" +
	"kubeconfig\x18\x01 \x01(\fR\n" +
	"kubeconfig\"\x95\x01\n" +
	"\x15MarkClusterOnlineAtIn\x12 \n" +
	"\vaccountName\x18\x01 \x01(\tR\vaccountName\x12 \n" +
	"\vclusterName\x18\x02 \x01(\tR\vclusterName\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x18\n" +
	"\x16MarkClusterOnlineAtOut2\xa3\x02\n" +
	"\x05Infra\x12+\n" +
	"\n" +
	"GetCluster\x12\r.GetClusterIn\x1a\x0e.GetClusterOut\x12.\n" +
	"\vGetNodepool\x12\x0e.GetNodepoolIn\x1a\x0f.GetNodepoolOut\x124\n" +
	"\rClusterExists\x12\x10.ClusterExistsIn\x1a\x11.ClusterExistsOut\x12?\n" +
	"\x14GetClusterKubeconfig\x12\r.GetClusterIn\x1a\x18.GetClusterKubeconfigOut\x12F\n" +
	"\x13MarkClusterOnlineAt\x12\x16.MarkClusterOnlineAtIn\x1a\x17.MarkClusterOnlineAtOutB\tZ\a./infrab\x06proto3"

var (
	file_infra_proto_rawDescOnce sync.Once
	file_infra_proto_rawDescData []byte
)

func file_infra_proto_rawDescGZIP() []byte {
	file_infra_proto_rawDescOnce.Do(func() {
		file_infra_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_infra_proto_rawDesc), len(file_infra_proto_rawDesc)))
	})
	return file_infra_proto_rawDescData
}

var file_infra_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_infra_proto_goTypes = []any{
	(*GetClusterIn)(nil),            // 0: GetClusterIn
	(*GetClusterOut)(nil),           // 1: GetClusterOut
	(*GetNodepoolIn)(nil),           // 2: GetNodepoolIn
	(*GetNodepoolOut)(nil),          // 3: GetNodepoolOut
	(*ClusterExistsIn)(nil),         // 4: ClusterExistsIn
	(*ClusterExistsOut)(nil),        // 5: ClusterExistsOut
	(*GetClusterKubeconfigOut)(nil), // 6: GetClusterKubeconfigOut
	(*MarkClusterOnlineAtIn)(nil),   // 7: MarkClusterOnlineAtIn
	(*MarkClusterOnlineAtOut)(nil),  // 8: MarkClusterOnlineAtOut
	(*timestamppb.Timestamp)(nil),   // 9: google.protobuf.Timestamp
}
var file_infra_proto_depIdxs = []int32{
	9, // 0: MarkClusterOnlineAtIn.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: Infra.GetCluster:input_type -> GetClusterIn
	2, // 2: Infra.GetNodepool:input_type -> GetNodepoolIn
	4, // 3: Infra.ClusterExists:input_type -> ClusterExistsIn
	0, // 4: Infra.GetClusterKubeconfig:input_type -> GetClusterIn
	7, // 5: Infra.MarkClusterOnlineAt:input_type -> MarkClusterOnlineAtIn
	1, // 6: Infra.GetCluster:output_type -> GetClusterOut
	3, // 7: Infra.GetNodepool:output_type -> GetNodepoolOut
	5, // 8: Infra.ClusterExists:output_type -> ClusterExistsOut
	6, // 9: Infra.GetClusterKubeconfig:output_type -> GetClusterKubeconfigOut
	8, // 10: Infra.MarkClusterOnlineAt:output_type -> MarkClusterOnlineAtOut
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_infra_proto_init() }
func file_infra_proto_init() {
	if File_infra_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_infra_proto_rawDesc), len(file_infra_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_infra_proto_goTypes,
		DependencyIndexes: file_infra_proto_depIdxs,
		MessageInfos:      file_infra_proto_msgTypes,
	}.Build()
	File_infra_proto = out.File
	file_infra_proto_goTypes = nil
	file_infra_proto_depIdxs = nil
}
