// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.29.3
// source: accounts-internal.proto

package accounts

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AccountsInternal_GetAccount_FullMethodName                  = "/AccountsInternal/GetAccount"
	AccountsInternal_GetPlatformSettingsInternal_FullMethodName = "/AccountsInternal/GetPlatformSettingsInternal"
)

// AccountsInternalClient is the client API for AccountsInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AccountsInternalClient interface {
	GetAccount(ctx context.Context, in *GetAccountIn, opts ...grpc.CallOption) (*GetAccountOut, error)
	GetPlatformSettingsInternal(ctx context.Context, in *GetPlatformSettingsInternalRequest, opts ...grpc.CallOption) (*GetPlatformSettingsInternalResponse, error)
}

type accountsInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountsInternalClient(cc grpc.ClientConnInterface) AccountsInternalClient {
	return &accountsInternalClient{cc}
}

func (c *accountsInternalClient) GetAccount(ctx context.Context, in *GetAccountIn, opts ...grpc.CallOption) (*GetAccountOut, error) {
	out := new(GetAccountOut)
	err := c.cc.Invoke(ctx, AccountsInternal_GetAccount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsInternalClient) GetPlatformSettingsInternal(ctx context.Context, in *GetPlatformSettingsInternalRequest, opts ...grpc.CallOption) (*GetPlatformSettingsInternalResponse, error) {
	out := new(GetPlatformSettingsInternalResponse)
	err := c.cc.Invoke(ctx, AccountsInternal_GetPlatformSettingsInternal_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountsInternalServer is the server API for AccountsInternal service.
// All implementations must embed UnimplementedAccountsInternalServer
// for forward compatibility
type AccountsInternalServer interface {
	GetAccount(context.Context, *GetAccountIn) (*GetAccountOut, error)
	GetPlatformSettingsInternal(context.Context, *GetPlatformSettingsInternalRequest) (*GetPlatformSettingsInternalResponse, error)
	mustEmbedUnimplementedAccountsInternalServer()
}

// UnimplementedAccountsInternalServer must be embedded to have forward compatible implementations.
type UnimplementedAccountsInternalServer struct {
}

func (UnimplementedAccountsInternalServer) GetAccount(context.Context, *GetAccountIn) (*GetAccountOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (UnimplementedAccountsInternalServer) GetPlatformSettingsInternal(context.Context, *GetPlatformSettingsInternalRequest) (*GetPlatformSettingsInternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlatformSettingsInternal not implemented")
}
func (UnimplementedAccountsInternalServer) mustEmbedUnimplementedAccountsInternalServer() {}

// UnsafeAccountsInternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AccountsInternalServer will
// result in compilation errors.
type UnsafeAccountsInternalServer interface {
	mustEmbedUnimplementedAccountsInternalServer()
}

func RegisterAccountsInternalServer(s grpc.ServiceRegistrar, srv AccountsInternalServer) {
	s.RegisterService(&AccountsInternal_ServiceDesc, srv)
}

func _AccountsInternal_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsInternalServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AccountsInternal_GetAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsInternalServer).GetAccount(ctx, req.(*GetAccountIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountsInternal_GetPlatformSettingsInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlatformSettingsInternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsInternalServer).GetPlatformSettingsInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AccountsInternal_GetPlatformSettingsInternal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsInternalServer).GetPlatformSettingsInternal(ctx, req.(*GetPlatformSettingsInternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AccountsInternal_ServiceDesc is the grpc.ServiceDesc for AccountsInternal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AccountsInternal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "AccountsInternal",
	HandlerType: (*AccountsInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _AccountsInternal_GetAccount_Handler,
		},
		{
			MethodName: "GetPlatformSettingsInternal",
			Handler:    _AccountsInternal_GetPlatformSettingsInternal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "accounts-internal.proto",
}
