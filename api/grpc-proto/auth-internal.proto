syntax = "proto3";

option go_package = "kloudlite.io/rpc/auth";

service AuthInternal {
  rpc GetAccessToken(GetAccessTokenRequest) returns (AccessTokenOut);
  rpc EnsureUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailOut);
  rpc GetUser(GetUserIn) returns (GetUserOut);
  rpc GenerateMachineSession(GenerateMachineSessionIn) returns (GenerateMachineSessionOut);
  rpc ClearMachineSessionByMachine(ClearMachineSessionByMachineIn) returns (ClearMachineSessionByMachineOut);
  rpc ClearMachineSessionByUser(ClearMachineSessionByUserIn) returns (ClearMachineSessionByUserOut);
  rpc ClearMachineSessionByTeam(ClearMachineSessionByTeamIn) returns (ClearMachineSessionByTeamOut);
}

message GetUserByEmailRequest {
  string email = 1;
}

message GetUserByEmailOut {
  string UserId = 1;
}

message GetAccessTokenRequest {
  string userId = 1;
  string provider = 2;
  string tokenId = 3;
}

message AccessTokenOut {
  string id = 5;
  string userId  = 1;
  string email  = 2;
  string provider  = 3;
  OauthToken oauthToken = 4;
}

message OauthToken {
  string access_token=1;
  string token_type=2;
  string refresh_token=3;
  int64 expiry=4;
  string raw=5;
}

message GetUserIn {
  string userId = 1;
}

message GetUserOut {
  string id = 1;
  string email = 2;
  string name = 3;
}


message GenerateMachineSessionIn {
  string userId = 1;
  string machine_id = 2;
  string cluster = 3;
}

message GenerateMachineSessionOut {
  string sessionId = 1;
}

message ClearMachineSessionByMachineIn {
  string machineId = 1;
}
message ClearMachineSessionByMachineOut {
  bool done = 1;
}
message ClearMachineSessionByUserIn {
  string userId = 1;
}
message ClearMachineSessionByUserOut {
  bool done = 1;
}
message ClearMachineSessionByTeamIn {
  string teamId = 1;
}
message ClearMachineSessionByTeamOut {
  bool done = 1;
}