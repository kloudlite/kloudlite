version: 3

vars:
  HelmChart: "."
  HelmValuesFile: "./values.yaml"
  HelmValuesTemplateFile: "./values.yml.tpl"

  ReleaseName: 'kloudlite-operators'
  ReleaseNamespace: 'kl-init-operators'

includes:
  cmd:
    taskfile: ../../Taskfile.yml
    internal: true
    dir:  ../..

tasks:
  compile:
    vars:
      ImagePrefix: "docker.io/kloudlite"
      ImageVersionTag: "v1.0.5-nightly"
    env:
      EnvName: development
      ImageTag: v1.0.5

      ImageProjectOperator: "{{.ImagePrefix}}/operators/project:{{.ImageVersionTag}}"
      ImageAppOperator: "{{.ImagePrefix}}/operators/app:{{.ImageVersionTag}}"
      ImageCsiDriversOperator: "{{.ImagePrefix}}/operators/csi-drivers:{{.ImageVersionTag}}"
      ImageRoutersOperator: "{{.ImagePrefix}}/operators/routers:{{.ImageVersionTag}}"
      ImageMsvcNMresOperator: "{{.ImagePrefix}}/operators/msvc-n-mres:{{.ImageVersionTag}}"
      ImageMsvcMongoOperator: "{{.ImagePrefix}}/operators/msvc-mongo:{{.ImageVersionTag}}"
      ImageMsvcRedisOperator: "{{.ImagePrefix}}/operators/msvc-redis:{{.ImageVersionTag}}"
      ImageMsvcElasticsearchOperator:  "{{.ImagePrefix}}/operators/msvc-elasticsearch:{{.ImageVersionTag}}"
      ImageMsvcRedpandaOperator:  "{{.ImagePrefix}}/operators/msvc-redpanda:{{.ImageVersionTag}}"

      ImageHelmOperator: "{{.ImagePrefix}}/operators/helm-operator:{{.ImageVersionTag}}"
      ImageWgOperator: "{{.ImagePrefix}}/operators/wg-operator:{{.ImageVersionTag}}"

      # AccountName: "<account-name>"
      # Region: "<region>"

      # ClusterName: "<cluster-name>"
      # ClusterToken: "<cluster-token>"
      # ClusterIdentitySecretName: 'kl-cluster-identity'

      ClusterSvcAccountName: kloudlite-cluster-svc-account
      DefaultImagePullSecretName: "kl-image-pull-creds"

      # DockerConfigJson: '<docker-config-json>'

      DnsApiEndpoint: '<https://dns-api-endpoint>'
      DnsApiBasicAuthEnabled: true
      DnsApiBasicAuthUsername: <dns-api-basic-auth-username>
      DnsApiBasicAuthPassword: <dns-api-basic-auth-password>

      WgDomain: '<wg-base-domain>'
      WgPodCIDR: '10.42.0.0/16'
      WgSvcCIDR: '10.43.0.0/16'
    cmds:
      - task: cmd:setup
      - |+
        if [ -f {{.HelmValuesFile}} ]; then 
          chmod 600 {{.HelmValuesFile}}
        fi

      - printf "### DO NOT EDIT, generated by 'task compile', use 'values.yml.tpl' file to update\n\n" > {{.HelmValuesFile}}

      - |+
        {{.TMPL}} parse -f {{.HelmValuesTemplateFile}} --missing-key=error >> {{.HelmValuesFile}}
      - chmod 400 {{.HelmValuesFile}}

  dependency:
    cmds:
      - helm dependency update

  debug:
    cmds:
      - task: compile
      - helm install --dry-run --debug {{.ReleaseName}} --namespace {{.ReleaseNamespace}} --create-namespace {{.HelmChart}} -f {{.HelmValuesFile}} | {{.SCHELM}} -f /tmp/manifests
      - tree /tmp/manifests

  install:
    cmds: 
      - task: compile
      - helm upgrade --install {{.ReleaseName}} --namespace {{.ReleaseNamespace}} --create-namespace {{.HelmChart}} -f {{.HelmValuesFile}}

  # copy-crds:
  #   cmds: 
  #     - |+
  #       pushd {{.OperatorDir}}
  #       make manifests
  #       popd
  #       mkdir -p ./templates/crds/operator
  #       cp {{.OperatorDir}}/config/crd/bases/* ./templates/crds/operator

      # - |+
      #   pushd ../../wg-operator
      #   make manifests
      #   popd
      #   mkdir -p ./templates/crds/wg-operator
      #   cp ../../wg-operator/config/crd/bases/* ./templates/crds/wg-operator
      #
      # - |+
      #   pushd ../../cluster-operator
      #   make manifests
      #   popd
      #   mkdir -p ./templates/crds/cluster-operator
      #   cp ../../cluster-operator/config/crd/bases/* ./templates/crds/cluster-operator
