version: 3

vars:
  HelmChart: .
  HelmValuesFile: ./values.yaml
  HelmValuesTemplateFile: "./values.yml.tpl"

  ReleaseName: kloudlite-platform
  ReleaseNamespace: kl-core

includes:
  cmd:
    taskfile: ../../Taskfile.yml
    internal: true
    dir:  ../..

tasks:
  compile:
    vars:
      InstallationMode: dev
      BaseDomain: platform.kloudlite.io
      CookieDomain: ".{{.BaseDomain}}"

      ImagePrefix: "ghcr.io/kloudlite"
      ImageVersionTag: "v1.0.5-nightly"
    env:
      BaseDomain: "{{.BaseDomain}}"
      CookieDomain: "{{.CookieDomain}}"

      DefaultProjectWorkspaceName: "default"

      ClusterSvcAccount: kloudlite-cluster-svc-account
      NormalSvcAccount: kloudlite-svc-account

      IngressClassName: ingress-nginx

      WildcardCertEnabled: true
      WildcardCertName: kl-cert-wildcard
      WildcardCertNamespace: "{{.ReleaseNamespace}}"

      CloudflareEmail: '<cloudflare-email>'
      CloudflareSecretToken: '<cloudflare-secret-token>'
      AcmeEmail: 'sample@example.com'

      HarborAdminUsername: "<harbor-admin-username>"
      HarborAdminPassword: "<harbor-admin-password>"
      HarborRegistryHost: "<harbor-registry-host>"
      HarborWebhookAuthz: '<harbor-webhook-authz>' 
      HarborWebhookName: "kloudlite-{{.InstallationMode}}-webhook"
      ImagePullSecret: '<image-pull-secret>'

      SendgridAPIKey: "<sendgrid-api-key>"
      SupportEmail: '<support-email>'
      StorageClassName: <storage-class-name>
      XfsStorageClassName: <xfs-sc>

      # github oAuth
      OAuthGithubClientId: <github-client-id>
      OAuthGithubClientSecret: <github-client-secret>
      OAuthGithubAppId: <github-app-id>
      OAuthGithubPrivateKey: "PGdpdGh1Yi1hcHAtcHJpdmF0ZS1rZXk+"

      OAuthGitlabClientId: <gitlab-client-id>
      OAuthGitlabClientSecret: <gitlab-client-secret>

      OAuthGoogleClientId: <google-client-id>
      OAuthGoogleClientSecret: <google-client-secret>

      StripePublicKey: <stripe-public-key>
      StripeSecretKey: <stripe-private-key>

      DnsName: "ns1.{{.BaseDomain}}"
      EdgeCNAME: "edge.{{.BaseDomain}}"

      WebhookAuthzGitlabSecret: '<webhook-authz-gitlab-secret>'
      WebhookAuthzGithubSecret: '<webhook-authz-github-secret>'
      WebhookAuthzKloudliteSecret: '<webhook-authz-kloudlite-secret>'

      OperatorsNamespace: kl-init-operators

      ImageAccountOperator: "{{.ImagePrefix}}/platform/operator/account:{{.ImageVersionTag}}"
      ImageArtifactsHarborOperator: "{{.ImagePrefix}}/platform/operator/artifacts-harbor:{{.ImageVersionTag}}"
      ImageBYOCOperator: "{{.ImagePrefix}}/platform/operator/byoc:{{.ImageVersionTag}}"

      # apis
      ImageMessageOfficeApi: "{{.ImagePrefix}}/platform/apis/message-office:{{.ImageVersionTag}}"
      ImageWebhooksApi: "{{.ImagePrefix}}/platform/apis/webhooks:{{.ImageVersionTag}}"
      ImageContainerRegistryApi: "{{.ImagePrefix}}/platform/apis/container-registry:{{.ImageVersionTag}}"
      ImageGatewayApi: "{{.ImagePrefix}}/platform/apis/gateway:{{.ImageVersionTag}}"
      ImageJsEvalApi: "{{.ImagePrefix}}/platform/apis/js-eval-api:{{.ImageVersionTag}}"
      ImageInfraApi: "{{.ImagePrefix}}/platform/apis/infra:{{.ImageVersionTag}}"
      ImageIAMApi: "{{.ImagePrefix}}/platform/apis/iam:{{.ImageVersionTag}}"
      ImageFinanceApi: "{{.ImagePrefix}}/platform/apis/finance:{{.ImageVersionTag}}"
      ImageConsoleApi: "{{.ImagePrefix}}/platform/apis/console:{{.ImageVersionTag}}"
      ImageCommsApi: "{{.ImagePrefix}}/platform/apis/comms:{{.ImageVersionTag}}"
      ImageDnsApi: "{{.ImagePrefix}}/platform/apis/dns-api:{{.ImageVersionTag}}"
      ImageAuthApi: "{{.ImagePrefix}}/platform/apis/auth:{{.ImageVersionTag}}"


      # workers
      ImageAuditLoggingWorker: "{{.ImagePrefix}}/platform/apis/audit-logging-worker:{{.ImageVersionTag}}"

      # webs
      ImageAccountsWeb: "{{.ImagePrefix}}/platform/web/accounts-web:{{.ImageVersionTag}}"
      ImageAuthWeb: "{{.ImagePrefix}}/platform/web/accounts-web:{{.ImageVersionTag}}"
      ImageConsoleWeb: "{{.ImagePrefix}}/platform/web/console-web:{{.ImageVersionTag}}"
      ImageSocketWeb: "{{.ImagePrefix}}/platform/web/socket-web:{{.ImageVersionTag}}"

      IngressControllerKind: "Deployment"
      # IngressControllerKind: "Deployment"

      ContainerRegistryApiEnabled: false
    cmds:
      - task: cmd:setup
      - |+
        if [ -f {{.HelmValuesFile}} ]; then 
          chmod 600 {{.HelmValuesFile}}
        fi
      - echo "### DO NOT EDIT, generated by 'task compile', use 'values.yml.tpl' file to update" > {{.HelmValuesFile}}
      - |+
        {{.TMPL}} parse --missing-key error -f ./values.yml.tpl > {{.HelmValuesFile}}
      - chmod 400 {{.HelmValuesFile}}
  
  debug:
    cmds:
      - task: compile
      - helm install --dry-run --debug {{.ReleaseName}} --namespace {{.ReleaseNamespace}} --create-namespace {{.HelmChart}} -f {{.HelmValuesFile}} | {{.SCHELM}} -f /tmp/manifests
      - tree /tmp/manifests

  install:
    cmds:
      - task: compile
      - helm upgrade --install {{.ReleaseName}} --namespace {{.ReleaseNamespace}} --create-namespace {{.HelmChart}} -f {{.HelmValuesFile}}

  dependency:update:
    vars:
      redpandaVersion: v22.1.6
    cmds:
      - |+
        if ! [[ -f ./templates/redpanda/crd-redpanda.vectorized.io_clusters.yaml ]]; then
          curl -L0 https://raw.githubusercontent.com/redpanda-data/redpanda/{{.redpandaVersion}}/src/go/k8s/config/crd/bases/redpanda.vectorized.io_clusters.yaml > ./templates/redpanda/crd-redpanda.vectorized.io_clusters.yaml
        fi
      - helm dependency update
