// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: ci.proto

package ci

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PipelineIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GitProvider   string                 `protobuf:"bytes,4,opt,name=gitProvider,proto3" json:"gitProvider,omitempty"`
	GitRepoUrl    string                 `protobuf:"bytes,5,opt,name=gitRepoUrl,proto3" json:"gitRepoUrl,omitempty"`
	GitBranch     string                 `protobuf:"bytes,6,opt,name=gitBranch,proto3" json:"gitBranch,omitempty"`
	UserId        string                 `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	ProjectId     string                 `protobuf:"bytes,10,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineIn) Reset() {
	*x = PipelineIn{}
	mi := &file_ci_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineIn) ProtoMessage() {}

func (x *PipelineIn) ProtoReflect() protoreflect.Message {
	mi := &file_ci_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineIn.ProtoReflect.Descriptor instead.
func (*PipelineIn) Descriptor() ([]byte, []int) {
	return file_ci_proto_rawDescGZIP(), []int{0}
}

func (x *PipelineIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineIn) GetGitProvider() string {
	if x != nil {
		return x.GitProvider
	}
	return ""
}

func (x *PipelineIn) GetGitRepoUrl() string {
	if x != nil {
		return x.GitRepoUrl
	}
	return ""
}

func (x *PipelineIn) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *PipelineIn) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PipelineIn) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PipelineIn) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PipelineOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineId    string                 `protobuf:"bytes,1,opt,name=pipelineId,proto3" json:"pipelineId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineOutput) Reset() {
	*x = PipelineOutput{}
	mi := &file_ci_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineOutput) ProtoMessage() {}

func (x *PipelineOutput) ProtoReflect() protoreflect.Message {
	mi := &file_ci_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineOutput.ProtoReflect.Descriptor instead.
func (*PipelineOutput) Descriptor() ([]byte, []int) {
	return file_ci_proto_rawDescGZIP(), []int{1}
}

func (x *PipelineOutput) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type HarborProjectIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HarborProjectIn) Reset() {
	*x = HarborProjectIn{}
	mi := &file_ci_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HarborProjectIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarborProjectIn) ProtoMessage() {}

func (x *HarborProjectIn) ProtoReflect() protoreflect.Message {
	mi := &file_ci_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarborProjectIn.ProtoReflect.Descriptor instead.
func (*HarborProjectIn) Descriptor() ([]byte, []int) {
	return file_ci_proto_rawDescGZIP(), []int{2}
}

func (x *HarborProjectIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HarborProjectOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HarborProjectOut) Reset() {
	*x = HarborProjectOut{}
	mi := &file_ci_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HarborProjectOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarborProjectOut) ProtoMessage() {}

func (x *HarborProjectOut) ProtoReflect() protoreflect.Message {
	mi := &file_ci_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarborProjectOut.ProtoReflect.Descriptor instead.
func (*HarborProjectOut) Descriptor() ([]byte, []int) {
	return file_ci_proto_rawDescGZIP(), []int{3}
}

func (x *HarborProjectOut) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_ci_proto protoreflect.FileDescriptor

const file_ci_proto_rawDesc = "" +
	"\n" +
	"\bci.proto\"\xaa\x02\n" +
	"\n" +
	"PipelineIn\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vgitProvider\x18\x04 \x01(\tR\vgitProvider\x12\x1e\n" +
	"\n" +
	"gitRepoUrl\x18\x05 \x01(\tR\n" +
	"gitRepoUrl\x12\x1c\n" +
	"\tgitBranch\x18\x06 \x01(\tR\tgitBranch\x12\x16\n" +
	"\x06userId\x18\t \x01(\tR\x06userId\x12\x1c\n" +
	"\tprojectId\x18\n" +
	" \x01(\tR\tprojectId\x125\n" +
	"\bmetadata\x18\v \x03(\v2\x19.PipelineIn.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"0\n" +
	"\x0ePipelineOutput\x12\x1e\n" +
	"\n" +
	"pipelineId\x18\x01 \x01(\tR\n" +
	"pipelineId\"%\n" +
	"\x0fHarborProjectIn\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"*\n" +
	"\x10HarborProjectOut\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status2|\n" +
	"\x02CI\x12:\n" +
	"\x13CreateHarborProject\x12\x10.HarborProjectIn\x1a\x11.HarborProjectOut\x12:\n" +
	"\x13DeleteHarborProject\x12\x10.HarborProjectIn\x1a\x11.HarborProjectOutB\x15Z\x13kloudlite.io/rpc/cib\x06proto3"

var (
	file_ci_proto_rawDescOnce sync.Once
	file_ci_proto_rawDescData []byte
)

func file_ci_proto_rawDescGZIP() []byte {
	file_ci_proto_rawDescOnce.Do(func() {
		file_ci_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ci_proto_rawDesc), len(file_ci_proto_rawDesc)))
	})
	return file_ci_proto_rawDescData
}

var file_ci_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ci_proto_goTypes = []any{
	(*PipelineIn)(nil),       // 0: PipelineIn
	(*PipelineOutput)(nil),   // 1: PipelineOutput
	(*HarborProjectIn)(nil),  // 2: HarborProjectIn
	(*HarborProjectOut)(nil), // 3: HarborProjectOut
	nil,                      // 4: PipelineIn.MetadataEntry
}
var file_ci_proto_depIdxs = []int32{
	4, // 0: PipelineIn.metadata:type_name -> PipelineIn.MetadataEntry
	2, // 1: CI.CreateHarborProject:input_type -> HarborProjectIn
	2, // 2: CI.DeleteHarborProject:input_type -> HarborProjectIn
	3, // 3: CI.CreateHarborProject:output_type -> HarborProjectOut
	3, // 4: CI.DeleteHarborProject:output_type -> HarborProjectOut
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ci_proto_init() }
func file_ci_proto_init() {
	if File_ci_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ci_proto_rawDesc), len(file_ci_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ci_proto_goTypes,
		DependencyIndexes: file_ci_proto_depIdxs,
		MessageInfos:      file_ci_proto_msgTypes,
	}.Build()
	File_ci_proto = out.File
	file_ci_proto_goTypes = nil
	file_ci_proto_depIdxs = nil
}
