version: 3


vars:
  ImageBase: "ghcr.io/kloudlite/kl"

tasks:
  clean:
    cmds:
      - |+
        # docker rmi -f {{.ImageRegistry}}:v1.0.0-nightly || echo "image already removed"
        docker volume rm kl-home-cache || echo "kl-home-cache already removed"
        # docker volume rm kl-nix-store || echo "nix-store already removed"

  # ssh:
  #   cmds:
  #     - ssh kl@localhost -p 1729
  #
  # run:
  #   cmds:
  #     - go run ./main.go --debug --foreground={{.foreground | default false}}
  #
  # dev:
  #   cmds:
  #     - task: clean
  #     - task: run

  # stop:
  #   cmds:
  #     - go run ./main.go stop
  # 
  # exec:
  #   cmds:
  #     - go run ./main.go exec

  container:build:
    vars:
      tag: '{{ .tag | default "v1.0.0-nightly" }}'
    cmds:
      - eval docker buildx build "{{.buildx_args}}" --build-context project=.. --load -t {{.ImageBase}}/box:{{.tag}} --build-arg VERSION={{.tag}} .

  container:push:
    preconditions:
      - sh: '[[ -n "{{.tag}}" ]]'
        msg: "var tag must have a value, of format 'v1.0.0-nightly'"
    cmds:
#      - docker buildx create --name klbuilder --use
#      - docker buildx inspect klbuilder --bootstrap
      - docker buildx build --platform linux/amd64,linux/arm64 --build-arg VERSION={{.tag}} -t {{.ImageBase}}/box:{{.tag}} . --output=type=image,compression=zstd,force-compression=true,compression-level=12,push=true --build-context project=..
#      - docker buildx build --platform linux/amd64,linux/arm64 -t {{.ImageRegistry}}:{{.tag}} --build-arg VERSION={{.tag}} --build-context project=.. . --push
#      - docker buildx rm klbuilder

      # - docker buildx build -t {{.ImageRegistry}}:{{.tag}} . --push

  setup:
    cmds:
      - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - docker buildx rm builder
      - docker buildx create --name builder --driver docker-container --use
      - docker buildx inspect --bootstrap
