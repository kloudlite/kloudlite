{{- /*gotype: github.com/kloudlite/kl/domain/fileclient.AccountClusterConfig */ -}}
{{- with . }}
echo "checking whether k3s server is accepting connections"
while true; do
  lines=$(kubectl get nodes | wc -l)
  if [ "$lines" -lt 2 ]; then
    echo "k3s server is not accepting connections yet, retrying in 1s ..."
    sleep 1
    continue
  fi
  echo "successful, k3s server is now accepting connections"
  break
done

cat > /tmp/namespace.yml <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: kl-gateway
EOF


kubectl apply -f /tmp/namespace.yml


cat > /tmp/kl-ns.yml <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: kloudlite
EOF

kubectl apply -f /tmp/kl-ns.yml

cat > /tmp/secrets.yml <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: include-wg-interfaces
  namespace: kl-gateway
stringData:
  wg-extra.conf: |+
    [Interface]
    PrivateKey = {{.WGConfig.Proxy.PrivateKey}}
    Address = 198.18.0.1/32
    ListenPort = 31820
    PostUp = iptables -t nat -I POSTROUTING -o wg0 -j MASQUERADE
    PostDown = iptables -t nat -D POSTROUTING -o wg0 -j MASQUERADE


    [Peer]
    # HOST
    PublicKey = {{.WGConfig.Host.PublicKey}}
    AllowedIPs = 198.18.0.2/32

    [Peer]
    # WORKSPACE
    PublicKey = {{.WGConfig.Workspace.PublicKey}}
    AllowedIPs = 198.18.0.3/32
EOF

kubectl apply -f /tmp/secrets.yml

cat > /tmp/service.yml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: kl-local-proxy
  namespace: kl-gateway
spec:
  type: LoadBalancer
  selector:
    kloudlite.io/gateway.name: "default"
  ports:
    - protocol: UDP
      port: 33820
      targetPort: 31820
EOF

kubectl apply -f /tmp/service.yml

kubectl apply -f {{.InstallCommand.CRDsURL}} --server-side

cat > /tmp/helm-chart.yml <<EOF
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kloudlite
  namespace: kube-system
spec:
  repo: {{.InstallCommand.ChartRepo}}
  chart: kloudlite-agent
  version: {{.InstallCommand.ChartVersion}}
  targetNamespace: kloudlite
  valuesContent: |-
    accountName: {{.InstallCommand.HelmValues.AccountName}}
    clusterName: {{.InstallCommand.HelmValues.ClusterName}}
    clusterToken: {{.InstallCommand.HelmValues.ClusterToken}}
    kloudliteDNSSuffix: {{.InstallCommand.HelmValues.KloudliteDNSSuffix}}
    messageOfficeGRPCAddr: {{.InstallCommand.HelmValues.MessageOfficeGRPCAddr}}
    agentOperator:
      image:
        repository: ghcr.io/kloudlite/operator/agent
        tag: {{.Version}}
      configuration:
        gateway:
          imageIPBindingController:
            repository: ghcr.io/kloudlite/operator/networking/cmd/ip-binding-controller
            tag: {{.Version}}
          imageIPManager:
            repository: ghcr.io/kloudlite/operator/networking/cmd/ip-manager
            tag: {{.Version}}
EOF

kubectl apply -f /tmp/helm-chart.yml

{{/*checksum=$(kubectl get secret/include-wg-interfaces -n kl-gateway -o jsonpath='{.data.wg-extra\.conf}' | base64 -d |md5sum)*/}}
{{/*cat > /tmp/patch.yml <<EOF*/}}
{{/*spec:*/}}
{{/*  template:*/}}
{{/*    metadata:*/}}
{{/*      annotations:*/}}
{{/*        kloudlite.io/checksum.include-wg-interfaces: "$checksum"*/}}
{{/*EOF*/}}
{{/*kubectl patch deploy/default -n kl-gateway --patch-file /tmp/patch.yml*/}}

kubectl proxy --address 0.0.0.0 --port 8080 --accept-hosts '.*' &

{{- end }}
