name: Test

on: 
  - push

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.x  # Replace with your desired Go version

      - name: Install dependencies
        run: go mod download

      - name: Run tests with coverage
        run: |
          mkdir -p .coverage
          go test -v -coverprofile=.coverage/coverage.out ./...

      - name: Generate coverage report
        if: always()  # This step will run even if tests fail
        run: go tool cover -func=coverage/coverage.out | tee .coverage/coverage-report.txt

      - name: Building Binary
        run: |
          mkdir -p .bin
          go build -o .bin/kubelet-metrics-reexporter main.go
          echo "export GO_BINARY=$PWD/.bin/kubelet-metrics-reexporter" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Dockerfile
        run: |+
          cat ./Dockerfile.ci | envsubst > Dockerfile

      - name: Build and Push
        env:
          TAG: v2
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          APP: auth
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        if: github.ref == 'refs/heads/master' && success()  # Only run if branch is 'master' and tests are successful
        run: |+
          docker build -f ./Dockerfile -t ${REGISTRY}/${GITHUB_REPOSITORY}:${RELEASE_TAG} .
          docker push ${REGISTRY}/${GITHUB_REPOSITORY}:${RELEASE_TAG}
