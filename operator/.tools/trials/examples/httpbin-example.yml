apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: httpbin
  name: httpbin
  namespace: kl-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - image: docker.io/kennethreitz/httpbin
        name: httpbin
        ports:
        - containerPort: 8080
          name: http
        command: ["gunicorn"]
        args: ["-b", "0.0.0.0:8080", "httpbin:app"]
      dnsPolicy: ClusterFirst

---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  namespace: kl-core
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: httpbin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin
  namespace: kl-core
  annotations:
    cert-manager.io/cluster-issuer: kl-cert-issuer
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # nginx.ingress.kubernetes.io/app-root: /httpbin
    # nginx.org/rewrites: "serviceName=httpbin rewrite=/"
    # kubernetes.io/tls-acme: "true"
spec:
  tls:
  - secretName: httpbin
    hosts:
    - example.devx.khost.dev
  rules:
  - host: example.devx.khost.dev
    http:
      paths:
      - pathType: Prefix
        path: /httpbin/?(.*)
        # path: /httpbin
        backend:
          service:
            name: httpbin
            port:
              number: 8080
      - pathType: Prefix
        path: /?(.*)router
        backend:
          service:
            name: httpbin
            port:
              number: 8080

