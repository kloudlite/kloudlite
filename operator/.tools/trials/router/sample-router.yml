# apiVersion: crds.kloudlite.io/v1
# kind: Router
# metadata:
#   name: example-web
#   namespace: hotspot
# spec:
#   domains: ['examplex.dev.kloudlite.io']
#   https:
#     enabled: true
#   routes:
#     /:
#       app: example
#       port: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-web-ingress-nginx
  namespace: kl-core
  annotations:
    cert-manager.io/cluster-issuer: "kl-cert-issuer"
    kubernets.io/ingress.class: "ingress-nginx"
    # nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/backend-protocol: "http"
spec:
  ingressClassName: ingress-nginx
  tls:
    - hosts:
        - "*.dev.kloudlite.io"
  rules:
    - host: "auth.dev.kloudlite.io"
      http: &http
        paths:
          - backend:
              service:
                name: ingress-nginx-kl-core-controller
                port:
                  number: 80
            path: /
            pathType: Prefix
    - host: "sample.dev.kloudlite.io"
      http:
        paths:
          - backend:
              service:
                name: auth-web
                port:
                  number: 80
            path: /
            pathType: Prefix

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-web-ingress-internal-nginx
  namespace: kl-core
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
spec:
  ingressClassName: ingress-nginx-kl-core
  rules:
    - host: "auth.dev.kloudlite.io"
      http:
        paths:
          - backend:
              service:
                name: auth-web
                port:
                  number: 80
            path: /
            pathType: Prefix
