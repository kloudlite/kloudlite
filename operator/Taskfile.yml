version: '3'

dotenv: [".secrets/env"]

includes:
  helm:
    taskfile: ./helm/Taskfile.yml
    dir: ./helm/

tasks:
  new-kind:
    silent: true
    cmds:
      - |+
        [ -z "{{.Group}}" ] && echo env-var 'Group' not provided && exit 1
        [ -z "{{.Kind}}" ] && echo env-var 'Kind' not provided && exit 1
        exit 0
      - operator-sdk create api --group {{.Group}} --version v1 --resource --controller --kind "{{.Kind}}"

  setup:
    dir: ./bin
    cmds:
      - curl -L0 https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.5/kustomize_v4.5.5_linux_amd64.tar.gz > kustomize.tar.gz
      - tar xf kustomize.tar.gz && rm -rf kustomize.tar.gz

  run:
    run: always
    cmds:
      - task: kill-port
      - go build -i -tags dynamic -o ./bin/operator
      - ./bin/operator --dev {{.CLI_ARGS}} |& pp -rel-path
    sources:
      - "./**/*.go"
    method: timestamp

  build:
    cmds:
      - operator-sdk build harbor.dev.madhouselabs.io/kloudlite/operator:latest

  deploy:
    env:
      IMG: harbor.dev.madhouselabs.io/kloudlite/koperator:latest
      NAMESPACE: koperator
    cmds:
      - make dev-docker-build dev-docker-push
      - cd config/manager && kustomize edit set image controller=${IMG} && kustomize edit set namespace ${NAMESPACE}
      - cd config/default && kustomize edit set namespace ${NAMESPACE}
      - make deploy

  deploy:prod:
    vars:
      Name: kloudlite-operator
    env:
      IMG: harbor.dev.madhouselabs.io/kloudlite/{{.Name}}:latest
      NAMESPACE: koperator
    cmds:
      - make dev-docker-build dev-docker-push
      - |+
        cd config/manager
        kustomize edit set image controller=${IMG}
        kustomize edit set namespace ${NAMESPACE}
      - |+
        cd config/default
        kustomize edit set image controller=${IMG}
        kustomize edit set namespace ${NAMESPACE}
      - |+
        kubectl apply -f config/crd/bases
        yamls=$(kustomize build config/default | yq 'select(.kind | [.] - ["Deployment", "Service", "ConfigMap"] | length > 0 | not)' -y)

        echo "$yamls" | yq '
          select((.kind == "ConfigMap") and (.metadata.name == "manager-config")) |
          .metadata.name = "{{.Name}}-manager-config"
        ' -y | kubectl apply -f -

        echo "$yamls" | yq '
          select(.kind == "Service") |
            .metadata.labels."control-plane" = "{{.Name}}" |
            .spec.selector."control-plane" = "{{.Name}}" |
            .metadata.name = "{{.Name}}"
        ' -y | kubectl apply -f -

        echo "$yamls" | yq '
          select(.kind == "Deployment") |
            .metadata.name = "{{.Name}}" |
            .metadata.labels."control-plane" = "{{.Name}}" |
            .spec.selector.matchLabels."control-plane" = "{{.Name}}" |
            .spec.template.metadata.labels."control-plane" = "{{.Name}}"
        ' -y | kubectl apply -f -
      - echo "Deployed {{.Name}}"

  deploy:staging:
    vars:
      Name: kloudlite-operator
    env:
      IMG: harbor.dev.madhouselabs.io/dev-kloudlite/{{.Name}}:latest
      NAMESPACE: kl-core
    cmds:
      - make dev-docker-build dev-docker-push
      - |
        cd config/manager
        kustomize edit set image controller=${IMG}
        kustomize edit set namespace ${NAMESPACE}
      - |
        cd config/default
        kustomize edit set image controller=${IMG}
        kustomize edit set namespace ${NAMESPACE}
#       - |+
#         filename=/tmp/kl-operator-$RANDOM.yml
#         kustomize build config/default > $filename
#         cat $filename | yq 'select((.kind != "Deployment") and (.kind != "Namespace") )' -y
#         cat $filename | yq 'select(.kind == "Deployment") | .metadata.name="{{.Name}}"' -y | kubectl apply -f -

      - |+
        kubectl apply -f config/crd/bases
        yamls=$(kustomize build config/default | yq 'select(.kind | [.] - ["Deployment", "Service", "ConfigMap"] | length > 0 | not)' -y)

        echo "$yamls" | yq '
          select((.kind == "ConfigMap") and (.metadata.name == "manager-config")) |
          .metadata.name = "{{.Name}}-manager-config"
        ' -y | kubectl apply -f -

        echo "$yamls" | yq '
          select(.kind == "Service") |
            .metadata.labels."control-plane" = "{{.Name}}" |
            .spec.selector."control-plane" = "{{.Name}}" |
            .metadata.name = "{{.Name}}"
        ' -y | kubectl apply -f -

        echo "$yamls" | yq '
          select(.kind == "Deployment") |
            .metadata.name = "{{.Name}}" |
            .metadata.labels."control-plane" = "{{.Name}}" |
            .spec.selector.matchLabels."control-plane" = "{{.Name}}" |
            .spec.template.metadata.labels."control-plane" = "{{.Name}}"
        ' -y | kubectl apply -f -
      - echo "Deployed {{.Name}}"

  deploy:gen-yamls:
    vars:
      Name: kloudlite-operator
    env:
#       IMG: harbor.dev.madhouselabs.io/dev-kloudlite/{{.Name}}:latest
      IMG: harbor.dev.madhouselabs.io/kloudlite/$ENV_NAME/{{.Name}}:latest
      NAMESPACE: kl-core
    cmds:
      - make manifests
      - |+
        cd config/manager
        kustomize edit set image controller=${IMG}
        kustomize edit set namespace ${NAMESPACE}
      - |+
        cd config/default
        kustomize edit set image controller=${IMG}
        kustomize edit set namespace ${NAMESPACE}
      - |+
        cat config/crd/bases/*.yaml | yq -y

        yamls=$(kustomize build config/default | yq 'select(.kind | [.] - ["Deployment", "Service", "ConfigMap"] | length > 0 | not)' -y)
        echo "---"
        echo "$yamls" | yq '
          select((.kind == "ConfigMap") and (.metadata.name == "manager-config")) |
          .metadata.name = "{{.Name}}-manager-config"
        ' -y

        echo "---"
        echo "$yamls" | yq '
          select(.kind == "Service") |
            .metadata.labels."control-plane" = "{{.Name}}" |
            .spec.selector."control-plane" = "{{.Name}}" |
            .metadata.name = "{{.Name}}"
        ' -y
        echo "---"
        echo "$yamls" | yq '
          select(.kind == "Deployment") |
            .metadata.name = "{{.Name}}" |
            .metadata.labels."control-plane" = "{{.Name}}" |
            .spec.selector.matchLabels."control-plane" = "{{.Name}}" |
            .spec.template.metadata.labels."control-plane" = "{{.Name}}"
        ' -y

  deploy:build:
    env:
      IMG: harbor.dev.madhouselabs.io/kloudlite/{{.Mode}}/kloudlite-operator:latest
      NAMESPACE: kl-core
    cmds:
      - make dev-docker-build dev-docker-push

  pre:
    run: once
    cmds:
      - go mod tidy
      - make manifests
      - make generate
      - task: apply

  apply:
    run: once
    dir: config/crd/bases
    cmds:
      - kubectl apply -f .

  kill-port:
    run: always
    cmds:
      - |
        PID=$(lsof -t -i:8089)
        if [ "$PID" != "" ]; then
          kill -9 $PID
        fi
    silent: true
