version: 3

includes:
  go: ../../.tools/taskfiles/go-build.Taskfile.yml

vars:
  app: agent-operator

tasks:
  run:
    dotenv:
      - .secrets/env
    cmds:
      - go run . --dev

  build:
    cmds:
      - task: go:build
        vars:
          Out: "./bin/{{.app}}"

  local:build:
    cmds:
      - task: go:build
        vars:
          GOARCH:
            sh: echo $GOARCH
          Out: "./bin/{{.app}}-{{.GOARCH}}"

  local:build-and-push:
    preconditions:
      - sh: '[[ -n "{{.Image}}" ]]'
        msg: "var Image must have a value, of format 'image_repository:image_tag'"
    cmds:
      - GOARCH=arm64 task local:build upx=true
      - GOARCH=amd64 task local:build upx=true
      - docker buildx build -f ./Containerfile --platform linux/amd64,linux/arm64 -t {{.Image}} . --output=type=image,force-compression=true,compression=zstd,compression-level=14,push=true --build-arg BINARY={{.app}}

  container:build-and-push:
    preconditions:
      - sh: '[[ -n "{{.Image}}" ]]'
        msg: "var Image must have a value, of format 'image_repository:image_tag'"
    cmds:
      - |+
        echo "starting build @ $(date)"
        GOARCH=arm64 task local:build upx={{.upx}} &
        pip="$pid $!"
        GOARCH=amd64 task local:build upx={{.upx}} &
        pip="$pid $!"
        eval wait $pid
      - docker buildx build -f ./Containerfile -t {{.Image}} . --build-arg BINARY={{.app}} --push
      - echo "finished build @ $(date)"
