{{- $name := get . "name" }}
{{- $namespace := get . "namespace" }}

{{- $router := get . "router-ref"}}
{{- $routes := get . "routes" }}
{{- $ownerRefs := get . "owner-refs"}}
{{- $labels := get . "labels"}}
{{- $annotations := get . "annotations"}}
{{- $virtualHost := get . "virtual-hostname"}}

{{- $ingressClass := get . "ingress-class" }}
{{- $clusterIssuer := get . "cluster-issuer" }}
{{- $wildcardDomainSuffix := get . "wildcard-domain-suffix"}}
{{- $wildcardDomainCert := get . "wildcard-domain-certificate" }}

{{- with $router}}
{{- /*gotype: operators.kloudlite.io/apis/crds/v1.Router */ -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{$name}}
  namespace: {{$namespace}}
  annotations:
    {{ K8sAnnotation true "cert-manager.io/cluster-issuer" $clusterIssuer }}
    {{ K8sAnnotation true "kubernetes.io/ingress.class" $ingressClass }}

    {{- $bodySize := printf "%dm" .Spec.MaxBodySizeInMB}}
    {{K8sAnnotation .Spec.MaxBodySizeInMB "nginx.ingress.kubernetes.io/proxy-body-size" $bodySize }}
    {{K8sAnnotation true "nginx.ingress.kubernetes.io/ssl-redirect" .Spec.Https.Enabled }}
    {{K8sAnnotation true "nginx.ingress.kubernetes.io/force-ssl-redirect" .Spec.Https.ForceRedirect }}

    {{- with .Spec.RateLimit}}
    {{- if .Enabled}}
    {{K8sAnnotation .Rps "nginx.ingress.kubernetes.io/limit-rps" .Rps }}
    {{K8sAnnotation .Rpm "nginx.ingress.kubernetes.io/limit-rpm" .Rpm }}
    {{K8sAnnotation .Connections "nginx.ingress.kubernetes.io/limit-connections" .Connections }}
    {{- end}}
    {{- end}}

    {{K8sAnnotation $virtualHost "nginx.ingress.kubernetes.io/upstream-vhost" $virtualHost}}

    {{- if $annotations}}
    {{ $annotations | toYAML | nindent 4}}
    {{- end}}
  labels:
    {{K8sLabel true "operators.kloudlite.io/router-name" .Name }}
    {{- if $labels }}
    {{ $labels | toYAML | nindent 4}}
    {{- end}}
  ownerReferences: {{ $ownerRefs | toYAML| nindent 4}}
spec:
  tls:
    {{- range $v := .Spec.Domains }}
    - hosts:
        - {{$v}}
      secretName: {{$v}}-tls
    {{- end }}
    - hosts:
        - {{.Name}}.{{$wildcardDomainSuffix}}
      secretName: {{$wildcardDomainCert}}
  rules:
    - host: {{.Name}}.{{$wildcardDomainSuffix}}
      http: &httpPath
        paths:
          {{- range $route := $routes }}
          - backend:
              service:
                name: {{$route.App | default $route.Lambda}}
                port:
                  number: {{$route.Port}}
            path: {{$route.Path}}
            pathType: Prefix
          {{- end}}
    {{- range $domain := .Spec.Domains }}
    - host: {{$domain}}
      http: *httpPath
    {{- end }}
  {{- end}}
