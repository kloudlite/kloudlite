{{- $router := get . "router" }}
{{- $ingressClass := get . "ingress-class" }}
{{- $clusterIssuer := get . "cluster-issuer" }}

{{- $lambdaName := get . "lambda-name"}}
{{- $routes := get . "routes" }}

{{- $ownerRefs := get . "owner-refs" }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{$router.Name}}-{{$lambdaName}}
  namespace: {{$router.Namespace}}
  annotations:
    kubernetes.io/ingress.class: {{$ingressClass}}
    cert-manager.io/cluster-issuer: {{$clusterIssuer}}
    ingress.kubernetes.io/ssl-redirect: {{$router.Spec.ForceSSLRedirect | default false | squote}}
    nginx.ingress.kubernetes.io/upstream-vhost: {{$lambdaName}}.{{$router.Namespace}}
  {{- if $ownerRefs }}
  ownerReferences:
    {{- include "TemplateOwnerRefs" $ownerRefs | indent 4 }}
  {{- end}}
spec:
  tls:
    - hosts:
        {{- range $v := $router.Spec.Domains }}
        - {{$v}}
        {{- end }}
      secretName: {{$router.Name}}-{{$lambdaName}}-tls-secret
  rules:
    {{- range $domain := $router.Spec.Domains }}
    - host: {{$domain}}
      http:
        paths:
          {{- range $routePath, $route := $routes}}
          - backend:
              service:
                name: {{$route.Lambda}}
                port:
                  number: {{$route.Port}}
            path: {{$routePath}}
            pathType: Prefix
          {{- end}}
    {{- end}}
