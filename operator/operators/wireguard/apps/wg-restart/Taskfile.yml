version: "3"

dotenv: [".secrets/env"]

vars:
  ImagePrefix: ghcr.io/kloudlite/platform/apis

tasks:

  local-build:
    vars:
      APP: wg-restart
      IMAGE: "{{.ImagePrefix}}/{{.APP}}:{{.Tag}}"
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'
    silent: true
    cmds:
      - |+
        tdir=$(mktemp -d)
        task build Out=$tdir/{{.APP}}

        docker buildx build -f ./Dockerfile.ci -t {{.IMAGE}} . --build-context builder=${tdir} --build-arg APP="{{.APP}}"
        docker push {{.IMAGE}}
        rm -rf $tdir


  run:
    env:
      CONFIG_FILE: ./conf.json
    sources:
      - ./internal/**/*.go
      - ./main.go
    cmds:
      - go version
#      - nodemon -e go --signal SIGKILL --exec 'go run -tags dynamic main.go --dev || exit 1'
      - go run -tags dynamic main.go --dev

  docker-build:
    vars:
      APP: wg-restart
      IMAGE: ghcr.io/kloudlite/operator/{{.APP}}:{{.Tag}}
    preconditions:
      - sh: '[[ -n "{{.Tag}}" ]]'
        msg: 'var Tag must have a value'

    cmds:
      - docker buildx build -f ./Dockerfile -t {{.IMAGE}} . --build-arg APP={{.APP}} --platform linux/amd64  --push
  build:
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    preconditions:
      - sh: '[ -n "{{.Out}}" ]'
        msg: var Out must have a value
    cmds:
      - go build -ldflags="-s -w" -o {{.Out}}
      # - upx {{.Out}}
