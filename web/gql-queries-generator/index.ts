import { DocumentNode, print } from 'graphql';
import { GQLServerHandler as consoleHandler } from '~/console/server/gql/saved-queries';
import { GQLServerHandler as authHandler } from '~/auth/server/gql/saved-queries';
import fs from 'fs';
import { GQLServerHandler as libHandler } from '../lib/server/gql/saved-queries';

export const loader = (handler: any, prefix: string) => {
  const gqlQueries = handler({});

  const capitalize = (str: string) => {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };

  const updatedQueries: { [name: string]: DocumentNode } = {};
  const entries: any = Object.entries(gqlQueries);
  for (let i = 0; i < entries.length; i += 1) {
    const key = entries[i][0];
    const query: DocumentNode = entries[i][1].astNode;
    // @ts-ignore
    query.definitions[0].name.value = `${prefix}${capitalize(key)}`;
    updatedQueries[key] = query;
  }

  const values = Object.values(updatedQueries);
  const resp = values.map((v) => {
    return print(v);
  });

  return resp.join('\n\n');
};

const init = () => {
  const results = [
    loader(consoleHandler, 'console'),
    loader(authHandler, 'auth'),
    loader(libHandler, 'lib'),
  ];

  const info = `# This file is auto generated don't modify it manually
# generated by pnpm gql:parse
`;

  fs.writeFileSync('queries.graphql', `${info}\n${results.join('\n\n')}`);
};

init();
