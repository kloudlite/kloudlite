var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// node_modules/source-map-support/node_modules/source-map/lib/base64.js
var require_base64 = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/base64.js"(exports) {
    var intToCharMap = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
    exports.encode = function(number2) {
      if (0 <= number2 && number2 < intToCharMap.length)
        return intToCharMap[number2];
      throw new TypeError("Must be between 0 and 63: " + number2);
    };
    exports.decode = function(charCode) {
      var bigA = 65, bigZ = 90, littleA = 97, littleZ = 122, zero = 48, nine = 57, plus = 43, slash = 47, littleOffset = 26, numberOffset = 52;
      return bigA <= charCode && charCode <= bigZ ? charCode - bigA : littleA <= charCode && charCode <= littleZ ? charCode - littleA + littleOffset : zero <= charCode && charCode <= nine ? charCode - zero + numberOffset : charCode == plus ? 62 : charCode == slash ? 63 : -1;
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js
var require_base64_vlq = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js"(exports) {
    var base64 = require_base64(), VLQ_BASE_SHIFT = 5, VLQ_BASE = 1 << VLQ_BASE_SHIFT, VLQ_BASE_MASK = VLQ_BASE - 1, VLQ_CONTINUATION_BIT = VLQ_BASE;
    function toVLQSigned(aValue) {
      return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;
    }
    function fromVLQSigned(aValue) {
      var isNegative = (aValue & 1) === 1, shifted = aValue >> 1;
      return isNegative ? -shifted : shifted;
    }
    exports.encode = function(aValue) {
      var encoded = "", digit, vlq = toVLQSigned(aValue);
      do
        digit = vlq & VLQ_BASE_MASK, vlq >>>= VLQ_BASE_SHIFT, vlq > 0 && (digit |= VLQ_CONTINUATION_BIT), encoded += base64.encode(digit);
      while (vlq > 0);
      return encoded;
    };
    exports.decode = function(aStr, aIndex, aOutParam) {
      var strLen = aStr.length, result = 0, shift2 = 0, continuation, digit;
      do {
        if (aIndex >= strLen)
          throw new Error("Expected more digits in base 64 VLQ value.");
        if (digit = base64.decode(aStr.charCodeAt(aIndex++)), digit === -1)
          throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
        continuation = !!(digit & VLQ_CONTINUATION_BIT), digit &= VLQ_BASE_MASK, result = result + (digit << shift2), shift2 += VLQ_BASE_SHIFT;
      } while (continuation);
      aOutParam.value = fromVLQSigned(result), aOutParam.rest = aIndex;
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/util.js
var require_util = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/util.js"(exports) {
    function getArg(aArgs, aName, aDefaultValue) {
      if (aName in aArgs)
        return aArgs[aName];
      if (arguments.length === 3)
        return aDefaultValue;
      throw new Error('"' + aName + '" is a required argument.');
    }
    exports.getArg = getArg;
    var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/, dataUrlRegexp = /^data:.+\,.+$/;
    function urlParse(aUrl) {
      var match = aUrl.match(urlRegexp);
      return match ? {
        scheme: match[1],
        auth: match[2],
        host: match[3],
        port: match[4],
        path: match[5]
      } : null;
    }
    exports.urlParse = urlParse;
    function urlGenerate(aParsedUrl) {
      var url = "";
      return aParsedUrl.scheme && (url += aParsedUrl.scheme + ":"), url += "//", aParsedUrl.auth && (url += aParsedUrl.auth + "@"), aParsedUrl.host && (url += aParsedUrl.host), aParsedUrl.port && (url += ":" + aParsedUrl.port), aParsedUrl.path && (url += aParsedUrl.path), url;
    }
    exports.urlGenerate = urlGenerate;
    function normalize(aPath) {
      var path = aPath, url = urlParse(aPath);
      if (url) {
        if (!url.path)
          return aPath;
        path = url.path;
      }
      for (var isAbsolute = exports.isAbsolute(path), parts = path.split(/\/+/), part, up = 0, i13 = parts.length - 1; i13 >= 0; i13--)
        part = parts[i13], part === "." ? parts.splice(i13, 1) : part === ".." ? up++ : up > 0 && (part === "" ? (parts.splice(i13 + 1, up), up = 0) : (parts.splice(i13, 2), up--));
      return path = parts.join("/"), path === "" && (path = isAbsolute ? "/" : "."), url ? (url.path = path, urlGenerate(url)) : path;
    }
    exports.normalize = normalize;
    function join(aRoot, aPath) {
      aRoot === "" && (aRoot = "."), aPath === "" && (aPath = ".");
      var aPathUrl = urlParse(aPath), aRootUrl = urlParse(aRoot);
      if (aRootUrl && (aRoot = aRootUrl.path || "/"), aPathUrl && !aPathUrl.scheme)
        return aRootUrl && (aPathUrl.scheme = aRootUrl.scheme), urlGenerate(aPathUrl);
      if (aPathUrl || aPath.match(dataUrlRegexp))
        return aPath;
      if (aRootUrl && !aRootUrl.host && !aRootUrl.path)
        return aRootUrl.host = aPath, urlGenerate(aRootUrl);
      var joined = aPath.charAt(0) === "/" ? aPath : normalize(aRoot.replace(/\/+$/, "") + "/" + aPath);
      return aRootUrl ? (aRootUrl.path = joined, urlGenerate(aRootUrl)) : joined;
    }
    exports.join = join;
    exports.isAbsolute = function(aPath) {
      return aPath.charAt(0) === "/" || urlRegexp.test(aPath);
    };
    function relative(aRoot, aPath) {
      aRoot === "" && (aRoot = "."), aRoot = aRoot.replace(/\/$/, "");
      for (var level = 0; aPath.indexOf(aRoot + "/") !== 0; ) {
        var index2 = aRoot.lastIndexOf("/");
        if (index2 < 0 || (aRoot = aRoot.slice(0, index2), aRoot.match(/^([^\/]+:\/)?\/*$/)))
          return aPath;
        ++level;
      }
      return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
    }
    exports.relative = relative;
    var supportsNullProto = function() {
      var obj = /* @__PURE__ */ Object.create(null);
      return !("__proto__" in obj);
    }();
    function identity(s) {
      return s;
    }
    function toSetString(aStr) {
      return isProtoString(aStr) ? "$" + aStr : aStr;
    }
    exports.toSetString = supportsNullProto ? identity : toSetString;
    function fromSetString(aStr) {
      return isProtoString(aStr) ? aStr.slice(1) : aStr;
    }
    exports.fromSetString = supportsNullProto ? identity : fromSetString;
    function isProtoString(s) {
      if (!s)
        return !1;
      var length = s.length;
      if (length < 9 || s.charCodeAt(length - 1) !== 95 || s.charCodeAt(length - 2) !== 95 || s.charCodeAt(length - 3) !== 111 || s.charCodeAt(length - 4) !== 116 || s.charCodeAt(length - 5) !== 111 || s.charCodeAt(length - 6) !== 114 || s.charCodeAt(length - 7) !== 112 || s.charCodeAt(length - 8) !== 95 || s.charCodeAt(length - 9) !== 95)
        return !1;
      for (var i13 = length - 10; i13 >= 0; i13--)
        if (s.charCodeAt(i13) !== 36)
          return !1;
      return !0;
    }
    function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
      var cmp = strcmp(mappingA.source, mappingB.source);
      return cmp !== 0 || (cmp = mappingA.originalLine - mappingB.originalLine, cmp !== 0) || (cmp = mappingA.originalColumn - mappingB.originalColumn, cmp !== 0 || onlyCompareOriginal) || (cmp = mappingA.generatedColumn - mappingB.generatedColumn, cmp !== 0) || (cmp = mappingA.generatedLine - mappingB.generatedLine, cmp !== 0) ? cmp : strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByOriginalPositions = compareByOriginalPositions;
    function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
      var cmp = mappingA.generatedLine - mappingB.generatedLine;
      return cmp !== 0 || (cmp = mappingA.generatedColumn - mappingB.generatedColumn, cmp !== 0 || onlyCompareGenerated) || (cmp = strcmp(mappingA.source, mappingB.source), cmp !== 0) || (cmp = mappingA.originalLine - mappingB.originalLine, cmp !== 0) || (cmp = mappingA.originalColumn - mappingB.originalColumn, cmp !== 0) ? cmp : strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;
    function strcmp(aStr1, aStr2) {
      return aStr1 === aStr2 ? 0 : aStr1 === null ? 1 : aStr2 === null ? -1 : aStr1 > aStr2 ? 1 : -1;
    }
    function compareByGeneratedPositionsInflated(mappingA, mappingB) {
      var cmp = mappingA.generatedLine - mappingB.generatedLine;
      return cmp !== 0 || (cmp = mappingA.generatedColumn - mappingB.generatedColumn, cmp !== 0) || (cmp = strcmp(mappingA.source, mappingB.source), cmp !== 0) || (cmp = mappingA.originalLine - mappingB.originalLine, cmp !== 0) || (cmp = mappingA.originalColumn - mappingB.originalColumn, cmp !== 0) ? cmp : strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;
    function parseSourceMapInput(str) {
      return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ""));
    }
    exports.parseSourceMapInput = parseSourceMapInput;
    function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
      if (sourceURL = sourceURL || "", sourceRoot && (sourceRoot[sourceRoot.length - 1] !== "/" && sourceURL[0] !== "/" && (sourceRoot += "/"), sourceURL = sourceRoot + sourceURL), sourceMapURL) {
        var parsed = urlParse(sourceMapURL);
        if (!parsed)
          throw new Error("sourceMapURL could not be parsed");
        if (parsed.path) {
          var index2 = parsed.path.lastIndexOf("/");
          index2 >= 0 && (parsed.path = parsed.path.substring(0, index2 + 1));
        }
        sourceURL = join(urlGenerate(parsed), sourceURL);
      }
      return normalize(sourceURL);
    }
    exports.computeSourceURL = computeSourceURL;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/array-set.js
var require_array_set = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/array-set.js"(exports) {
    var util = require_util(), has = Object.prototype.hasOwnProperty, hasNativeMap = typeof Map < "u";
    function ArraySet() {
      this._array = [], this._set = hasNativeMap ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);
    }
    ArraySet.fromArray = function(aArray, aAllowDuplicates) {
      for (var set = new ArraySet(), i13 = 0, len = aArray.length; i13 < len; i13++)
        set.add(aArray[i13], aAllowDuplicates);
      return set;
    };
    ArraySet.prototype.size = function() {
      return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
    };
    ArraySet.prototype.add = function(aStr, aAllowDuplicates) {
      var sStr = hasNativeMap ? aStr : util.toSetString(aStr), isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr), idx = this._array.length;
      (!isDuplicate || aAllowDuplicates) && this._array.push(aStr), isDuplicate || (hasNativeMap ? this._set.set(aStr, idx) : this._set[sStr] = idx);
    };
    ArraySet.prototype.has = function(aStr) {
      if (hasNativeMap)
        return this._set.has(aStr);
      var sStr = util.toSetString(aStr);
      return has.call(this._set, sStr);
    };
    ArraySet.prototype.indexOf = function(aStr) {
      if (hasNativeMap) {
        var idx = this._set.get(aStr);
        if (idx >= 0)
          return idx;
      } else {
        var sStr = util.toSetString(aStr);
        if (has.call(this._set, sStr))
          return this._set[sStr];
      }
      throw new Error('"' + aStr + '" is not in the set.');
    };
    ArraySet.prototype.at = function(aIdx) {
      if (aIdx >= 0 && aIdx < this._array.length)
        return this._array[aIdx];
      throw new Error("No element indexed by " + aIdx);
    };
    ArraySet.prototype.toArray = function() {
      return this._array.slice();
    };
    exports.ArraySet = ArraySet;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js
var require_mapping_list = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js"(exports) {
    var util = require_util();
    function generatedPositionAfter(mappingA, mappingB) {
      var lineA = mappingA.generatedLine, lineB = mappingB.generatedLine, columnA = mappingA.generatedColumn, columnB = mappingB.generatedColumn;
      return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
    }
    function MappingList() {
      this._array = [], this._sorted = !0, this._last = { generatedLine: -1, generatedColumn: 0 };
    }
    MappingList.prototype.unsortedForEach = function(aCallback, aThisArg) {
      this._array.forEach(aCallback, aThisArg);
    };
    MappingList.prototype.add = function(aMapping) {
      generatedPositionAfter(this._last, aMapping) ? (this._last = aMapping, this._array.push(aMapping)) : (this._sorted = !1, this._array.push(aMapping));
    };
    MappingList.prototype.toArray = function() {
      return this._sorted || (this._array.sort(util.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
    };
    exports.MappingList = MappingList;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js
var require_source_map_generator = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js"(exports) {
    var base64VLQ = require_base64_vlq(), util = require_util(), ArraySet = require_array_set().ArraySet, MappingList = require_mapping_list().MappingList;
    function SourceMapGenerator(aArgs) {
      aArgs || (aArgs = {}), this._file = util.getArg(aArgs, "file", null), this._sourceRoot = util.getArg(aArgs, "sourceRoot", null), this._skipValidation = util.getArg(aArgs, "skipValidation", !1), this._sources = new ArraySet(), this._names = new ArraySet(), this._mappings = new MappingList(), this._sourcesContents = null;
    }
    SourceMapGenerator.prototype._version = 3;
    SourceMapGenerator.fromSourceMap = function(aSourceMapConsumer) {
      var sourceRoot = aSourceMapConsumer.sourceRoot, generator = new SourceMapGenerator({
        file: aSourceMapConsumer.file,
        sourceRoot
      });
      return aSourceMapConsumer.eachMapping(function(mapping) {
        var newMapping = {
          generated: {
            line: mapping.generatedLine,
            column: mapping.generatedColumn
          }
        };
        mapping.source != null && (newMapping.source = mapping.source, sourceRoot != null && (newMapping.source = util.relative(sourceRoot, newMapping.source)), newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        }, mapping.name != null && (newMapping.name = mapping.name)), generator.addMapping(newMapping);
      }), aSourceMapConsumer.sources.forEach(function(sourceFile) {
        var sourceRelative = sourceFile;
        sourceRoot !== null && (sourceRelative = util.relative(sourceRoot, sourceFile)), generator._sources.has(sourceRelative) || generator._sources.add(sourceRelative);
        var content = aSourceMapConsumer.sourceContentFor(sourceFile);
        content != null && generator.setSourceContent(sourceFile, content);
      }), generator;
    };
    SourceMapGenerator.prototype.addMapping = function(aArgs) {
      var generated = util.getArg(aArgs, "generated"), original = util.getArg(aArgs, "original", null), source = util.getArg(aArgs, "source", null), name = util.getArg(aArgs, "name", null);
      this._skipValidation || this._validateMapping(generated, original, source, name), source != null && (source = String(source), this._sources.has(source) || this._sources.add(source)), name != null && (name = String(name), this._names.has(name) || this._names.add(name)), this._mappings.add({
        generatedLine: generated.line,
        generatedColumn: generated.column,
        originalLine: original != null && original.line,
        originalColumn: original != null && original.column,
        source,
        name
      });
    };
    SourceMapGenerator.prototype.setSourceContent = function(aSourceFile, aSourceContent) {
      var source = aSourceFile;
      this._sourceRoot != null && (source = util.relative(this._sourceRoot, source)), aSourceContent != null ? (this._sourcesContents || (this._sourcesContents = /* @__PURE__ */ Object.create(null)), this._sourcesContents[util.toSetString(source)] = aSourceContent) : this._sourcesContents && (delete this._sourcesContents[util.toSetString(source)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));
    };
    SourceMapGenerator.prototype.applySourceMap = function(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
      var sourceFile = aSourceFile;
      if (aSourceFile == null) {
        if (aSourceMapConsumer.file == null)
          throw new Error(
            `SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`
          );
        sourceFile = aSourceMapConsumer.file;
      }
      var sourceRoot = this._sourceRoot;
      sourceRoot != null && (sourceFile = util.relative(sourceRoot, sourceFile));
      var newSources = new ArraySet(), newNames = new ArraySet();
      this._mappings.unsortedForEach(function(mapping) {
        if (mapping.source === sourceFile && mapping.originalLine != null) {
          var original = aSourceMapConsumer.originalPositionFor({
            line: mapping.originalLine,
            column: mapping.originalColumn
          });
          original.source != null && (mapping.source = original.source, aSourceMapPath != null && (mapping.source = util.join(aSourceMapPath, mapping.source)), sourceRoot != null && (mapping.source = util.relative(sourceRoot, mapping.source)), mapping.originalLine = original.line, mapping.originalColumn = original.column, original.name != null && (mapping.name = original.name));
        }
        var source = mapping.source;
        source != null && !newSources.has(source) && newSources.add(source);
        var name = mapping.name;
        name != null && !newNames.has(name) && newNames.add(name);
      }, this), this._sources = newSources, this._names = newNames, aSourceMapConsumer.sources.forEach(function(sourceFile2) {
        var content = aSourceMapConsumer.sourceContentFor(sourceFile2);
        content != null && (aSourceMapPath != null && (sourceFile2 = util.join(aSourceMapPath, sourceFile2)), sourceRoot != null && (sourceFile2 = util.relative(sourceRoot, sourceFile2)), this.setSourceContent(sourceFile2, content));
      }, this);
    };
    SourceMapGenerator.prototype._validateMapping = function(aGenerated, aOriginal, aSource, aName) {
      if (aOriginal && typeof aOriginal.line != "number" && typeof aOriginal.column != "number")
        throw new Error(
          "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
        );
      if (!(aGenerated && "line" in aGenerated && "column" in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName)) {
        if (aGenerated && "line" in aGenerated && "column" in aGenerated && aOriginal && "line" in aOriginal && "column" in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource)
          return;
        throw new Error("Invalid mapping: " + JSON.stringify({
          generated: aGenerated,
          source: aSource,
          original: aOriginal,
          name: aName
        }));
      }
    };
    SourceMapGenerator.prototype._serializeMappings = function() {
      for (var previousGeneratedColumn = 0, previousGeneratedLine = 1, previousOriginalColumn = 0, previousOriginalLine = 0, previousName = 0, previousSource = 0, result = "", next, mapping, nameIdx, sourceIdx, mappings = this._mappings.toArray(), i13 = 0, len = mappings.length; i13 < len; i13++) {
        if (mapping = mappings[i13], next = "", mapping.generatedLine !== previousGeneratedLine)
          for (previousGeneratedColumn = 0; mapping.generatedLine !== previousGeneratedLine; )
            next += ";", previousGeneratedLine++;
        else if (i13 > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i13 - 1]))
            continue;
          next += ",";
        }
        next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn), previousGeneratedColumn = mapping.generatedColumn, mapping.source != null && (sourceIdx = this._sources.indexOf(mapping.source), next += base64VLQ.encode(sourceIdx - previousSource), previousSource = sourceIdx, next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine), previousOriginalLine = mapping.originalLine - 1, next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn), previousOriginalColumn = mapping.originalColumn, mapping.name != null && (nameIdx = this._names.indexOf(mapping.name), next += base64VLQ.encode(nameIdx - previousName), previousName = nameIdx)), result += next;
      }
      return result;
    };
    SourceMapGenerator.prototype._generateSourcesContent = function(aSources, aSourceRoot) {
      return aSources.map(function(source) {
        if (!this._sourcesContents)
          return null;
        aSourceRoot != null && (source = util.relative(aSourceRoot, source));
        var key = util.toSetString(source);
        return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;
      }, this);
    };
    SourceMapGenerator.prototype.toJSON = function() {
      var map = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      return this._file != null && (map.file = this._file), this._sourceRoot != null && (map.sourceRoot = this._sourceRoot), this._sourcesContents && (map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot)), map;
    };
    SourceMapGenerator.prototype.toString = function() {
      return JSON.stringify(this.toJSON());
    };
    exports.SourceMapGenerator = SourceMapGenerator;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/binary-search.js
var require_binary_search = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/binary-search.js"(exports) {
    exports.GREATEST_LOWER_BOUND = 1;
    exports.LEAST_UPPER_BOUND = 2;
    function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
      var mid = Math.floor((aHigh - aLow) / 2) + aLow, cmp = aCompare(aNeedle, aHaystack[mid], !0);
      return cmp === 0 ? mid : cmp > 0 ? aHigh - mid > 1 ? recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias) : aBias == exports.LEAST_UPPER_BOUND ? aHigh < aHaystack.length ? aHigh : -1 : mid : mid - aLow > 1 ? recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias) : aBias == exports.LEAST_UPPER_BOUND ? mid : aLow < 0 ? -1 : aLow;
    }
    exports.search = function(aNeedle, aHaystack, aCompare, aBias) {
      if (aHaystack.length === 0)
        return -1;
      var index2 = recursiveSearch(
        -1,
        aHaystack.length,
        aNeedle,
        aHaystack,
        aCompare,
        aBias || exports.GREATEST_LOWER_BOUND
      );
      if (index2 < 0)
        return -1;
      for (; index2 - 1 >= 0 && aCompare(aHaystack[index2], aHaystack[index2 - 1], !0) === 0; )
        --index2;
      return index2;
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js
var require_quick_sort = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js"(exports) {
    function swap(ary, x, y) {
      var temp = ary[x];
      ary[x] = ary[y], ary[y] = temp;
    }
    function randomIntInRange(low, high) {
      return Math.round(low + Math.random() * (high - low));
    }
    function doQuickSort(ary, comparator, p, r24) {
      if (p < r24) {
        var pivotIndex = randomIntInRange(p, r24), i13 = p - 1;
        swap(ary, pivotIndex, r24);
        for (var pivot = ary[r24], j = p; j < r24; j++)
          comparator(ary[j], pivot) <= 0 && (i13 += 1, swap(ary, i13, j));
        swap(ary, i13 + 1, j);
        var q = i13 + 1;
        doQuickSort(ary, comparator, p, q - 1), doQuickSort(ary, comparator, q + 1, r24);
      }
    }
    exports.quickSort = function(ary, comparator) {
      doQuickSort(ary, comparator, 0, ary.length - 1);
    };
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js
var require_source_map_consumer = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js"(exports) {
    var util = require_util(), binarySearch = require_binary_search(), ArraySet = require_array_set().ArraySet, base64VLQ = require_base64_vlq(), quickSort = require_quick_sort().quickSort;
    function SourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      return typeof aSourceMap == "string" && (sourceMap = util.parseSourceMapInput(aSourceMap)), sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL) : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
    }
    SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
      return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
    };
    SourceMapConsumer.prototype._version = 3;
    SourceMapConsumer.prototype.__generatedMappings = null;
    Object.defineProperty(SourceMapConsumer.prototype, "_generatedMappings", {
      configurable: !0,
      enumerable: !0,
      get: function() {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      }
    });
    SourceMapConsumer.prototype.__originalMappings = null;
    Object.defineProperty(SourceMapConsumer.prototype, "_originalMappings", {
      configurable: !0,
      enumerable: !0,
      get: function() {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      }
    });
    SourceMapConsumer.prototype._charIsMappingSeparator = function(aStr, index2) {
      var c = aStr.charAt(index2);
      return c === ";" || c === ",";
    };
    SourceMapConsumer.prototype._parseMappings = function(aStr, aSourceRoot) {
      throw new Error("Subclasses must implement _parseMappings");
    };
    SourceMapConsumer.GENERATED_ORDER = 1;
    SourceMapConsumer.ORIGINAL_ORDER = 2;
    SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
    SourceMapConsumer.LEAST_UPPER_BOUND = 2;
    SourceMapConsumer.prototype.eachMapping = function(aCallback, aContext, aOrder) {
      var context = aContext || null, order = aOrder || SourceMapConsumer.GENERATED_ORDER, mappings;
      switch (order) {
        case SourceMapConsumer.GENERATED_ORDER:
          mappings = this._generatedMappings;
          break;
        case SourceMapConsumer.ORIGINAL_ORDER:
          mappings = this._originalMappings;
          break;
        default:
          throw new Error("Unknown order of iteration.");
      }
      var sourceRoot = this.sourceRoot;
      mappings.map(function(mapping) {
        var source = mapping.source === null ? null : this._sources.at(mapping.source);
        return source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL), {
          source,
          generatedLine: mapping.generatedLine,
          generatedColumn: mapping.generatedColumn,
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: mapping.name === null ? null : this._names.at(mapping.name)
        };
      }, this).forEach(aCallback, context);
    };
    SourceMapConsumer.prototype.allGeneratedPositionsFor = function(aArgs) {
      var line = util.getArg(aArgs, "line"), needle = {
        source: util.getArg(aArgs, "source"),
        originalLine: line,
        originalColumn: util.getArg(aArgs, "column", 0)
      };
      if (needle.source = this._findSourceIndex(needle.source), needle.source < 0)
        return [];
      var mappings = [], index2 = this._findMapping(
        needle,
        this._originalMappings,
        "originalLine",
        "originalColumn",
        util.compareByOriginalPositions,
        binarySearch.LEAST_UPPER_BOUND
      );
      if (index2 >= 0) {
        var mapping = this._originalMappings[index2];
        if (aArgs.column === void 0)
          for (var originalLine = mapping.originalLine; mapping && mapping.originalLine === originalLine; )
            mappings.push({
              line: util.getArg(mapping, "generatedLine", null),
              column: util.getArg(mapping, "generatedColumn", null),
              lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
            }), mapping = this._originalMappings[++index2];
        else
          for (var originalColumn = mapping.originalColumn; mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn; )
            mappings.push({
              line: util.getArg(mapping, "generatedLine", null),
              column: util.getArg(mapping, "generatedColumn", null),
              lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
            }), mapping = this._originalMappings[++index2];
      }
      return mappings;
    };
    exports.SourceMapConsumer = SourceMapConsumer;
    function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      typeof aSourceMap == "string" && (sourceMap = util.parseSourceMapInput(aSourceMap));
      var version = util.getArg(sourceMap, "version"), sources = util.getArg(sourceMap, "sources"), names = util.getArg(sourceMap, "names", []), sourceRoot = util.getArg(sourceMap, "sourceRoot", null), sourcesContent = util.getArg(sourceMap, "sourcesContent", null), mappings = util.getArg(sourceMap, "mappings"), file = util.getArg(sourceMap, "file", null);
      if (version != this._version)
        throw new Error("Unsupported version: " + version);
      sourceRoot && (sourceRoot = util.normalize(sourceRoot)), sources = sources.map(String).map(util.normalize).map(function(source) {
        return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;
      }), this._names = ArraySet.fromArray(names.map(String), !0), this._sources = ArraySet.fromArray(sources, !0), this._absoluteSources = this._sources.toArray().map(function(s) {
        return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
      }), this.sourceRoot = sourceRoot, this.sourcesContent = sourcesContent, this._mappings = mappings, this._sourceMapURL = aSourceMapURL, this.file = file;
    }
    BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
    BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;
    BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
      var relativeSource = aSource;
      if (this.sourceRoot != null && (relativeSource = util.relative(this.sourceRoot, relativeSource)), this._sources.has(relativeSource))
        return this._sources.indexOf(relativeSource);
      var i13;
      for (i13 = 0; i13 < this._absoluteSources.length; ++i13)
        if (this._absoluteSources[i13] == aSource)
          return i13;
      return -1;
    };
    BasicSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
      var smc = Object.create(BasicSourceMapConsumer.prototype), names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), !0), sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), !0);
      smc.sourceRoot = aSourceMap._sourceRoot, smc.sourcesContent = aSourceMap._generateSourcesContent(
        smc._sources.toArray(),
        smc.sourceRoot
      ), smc.file = aSourceMap._file, smc._sourceMapURL = aSourceMapURL, smc._absoluteSources = smc._sources.toArray().map(function(s) {
        return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
      });
      for (var generatedMappings = aSourceMap._mappings.toArray().slice(), destGeneratedMappings = smc.__generatedMappings = [], destOriginalMappings = smc.__originalMappings = [], i13 = 0, length = generatedMappings.length; i13 < length; i13++) {
        var srcMapping = generatedMappings[i13], destMapping = new Mapping();
        destMapping.generatedLine = srcMapping.generatedLine, destMapping.generatedColumn = srcMapping.generatedColumn, srcMapping.source && (destMapping.source = sources.indexOf(srcMapping.source), destMapping.originalLine = srcMapping.originalLine, destMapping.originalColumn = srcMapping.originalColumn, srcMapping.name && (destMapping.name = names.indexOf(srcMapping.name)), destOriginalMappings.push(destMapping)), destGeneratedMappings.push(destMapping);
      }
      return quickSort(smc.__originalMappings, util.compareByOriginalPositions), smc;
    };
    BasicSourceMapConsumer.prototype._version = 3;
    Object.defineProperty(BasicSourceMapConsumer.prototype, "sources", {
      get: function() {
        return this._absoluteSources.slice();
      }
    });
    function Mapping() {
      this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
    }
    BasicSourceMapConsumer.prototype._parseMappings = function(aStr, aSourceRoot) {
      for (var generatedLine = 1, previousGeneratedColumn = 0, previousOriginalLine = 0, previousOriginalColumn = 0, previousSource = 0, previousName = 0, length = aStr.length, index2 = 0, cachedSegments = {}, temp = {}, originalMappings = [], generatedMappings = [], mapping, str, segment, end, value; index2 < length; )
        if (aStr.charAt(index2) === ";")
          generatedLine++, index2++, previousGeneratedColumn = 0;
        else if (aStr.charAt(index2) === ",")
          index2++;
        else {
          for (mapping = new Mapping(), mapping.generatedLine = generatedLine, end = index2; end < length && !this._charIsMappingSeparator(aStr, end); end++)
            ;
          if (str = aStr.slice(index2, end), segment = cachedSegments[str], segment)
            index2 += str.length;
          else {
            for (segment = []; index2 < end; )
              base64VLQ.decode(aStr, index2, temp), value = temp.value, index2 = temp.rest, segment.push(value);
            if (segment.length === 2)
              throw new Error("Found a source, but no line and column");
            if (segment.length === 3)
              throw new Error("Found a source and line, but no column");
            cachedSegments[str] = segment;
          }
          mapping.generatedColumn = previousGeneratedColumn + segment[0], previousGeneratedColumn = mapping.generatedColumn, segment.length > 1 && (mapping.source = previousSource + segment[1], previousSource += segment[1], mapping.originalLine = previousOriginalLine + segment[2], previousOriginalLine = mapping.originalLine, mapping.originalLine += 1, mapping.originalColumn = previousOriginalColumn + segment[3], previousOriginalColumn = mapping.originalColumn, segment.length > 4 && (mapping.name = previousName + segment[4], previousName += segment[4])), generatedMappings.push(mapping), typeof mapping.originalLine == "number" && originalMappings.push(mapping);
        }
      quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated), this.__generatedMappings = generatedMappings, quickSort(originalMappings, util.compareByOriginalPositions), this.__originalMappings = originalMappings;
    };
    BasicSourceMapConsumer.prototype._findMapping = function(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {
      if (aNeedle[aLineName] <= 0)
        throw new TypeError("Line must be greater than or equal to 1, got " + aNeedle[aLineName]);
      if (aNeedle[aColumnName] < 0)
        throw new TypeError("Column must be greater than or equal to 0, got " + aNeedle[aColumnName]);
      return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
    };
    BasicSourceMapConsumer.prototype.computeColumnSpans = function() {
      for (var index2 = 0; index2 < this._generatedMappings.length; ++index2) {
        var mapping = this._generatedMappings[index2];
        if (index2 + 1 < this._generatedMappings.length) {
          var nextMapping = this._generatedMappings[index2 + 1];
          if (mapping.generatedLine === nextMapping.generatedLine) {
            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
            continue;
          }
        }
        mapping.lastGeneratedColumn = 1 / 0;
      }
    };
    BasicSourceMapConsumer.prototype.originalPositionFor = function(aArgs) {
      var needle = {
        generatedLine: util.getArg(aArgs, "line"),
        generatedColumn: util.getArg(aArgs, "column")
      }, index2 = this._findMapping(
        needle,
        this._generatedMappings,
        "generatedLine",
        "generatedColumn",
        util.compareByGeneratedPositionsDeflated,
        util.getArg(aArgs, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND)
      );
      if (index2 >= 0) {
        var mapping = this._generatedMappings[index2];
        if (mapping.generatedLine === needle.generatedLine) {
          var source = util.getArg(mapping, "source", null);
          source !== null && (source = this._sources.at(source), source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL));
          var name = util.getArg(mapping, "name", null);
          return name !== null && (name = this._names.at(name)), {
            source,
            line: util.getArg(mapping, "originalLine", null),
            column: util.getArg(mapping, "originalColumn", null),
            name
          };
        }
      }
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    };
    BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function() {
      return this.sourcesContent ? this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(sc) {
        return sc == null;
      }) : !1;
    };
    BasicSourceMapConsumer.prototype.sourceContentFor = function(aSource, nullOnMissing) {
      if (!this.sourcesContent)
        return null;
      var index2 = this._findSourceIndex(aSource);
      if (index2 >= 0)
        return this.sourcesContent[index2];
      var relativeSource = aSource;
      this.sourceRoot != null && (relativeSource = util.relative(this.sourceRoot, relativeSource));
      var url;
      if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {
        var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
        if (url.scheme == "file" && this._sources.has(fileUriAbsPath))
          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];
        if ((!url.path || url.path == "/") && this._sources.has("/" + relativeSource))
          return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
      }
      if (nullOnMissing)
        return null;
      throw new Error('"' + relativeSource + '" is not in the SourceMap.');
    };
    BasicSourceMapConsumer.prototype.generatedPositionFor = function(aArgs) {
      var source = util.getArg(aArgs, "source");
      if (source = this._findSourceIndex(source), source < 0)
        return {
          line: null,
          column: null,
          lastColumn: null
        };
      var needle = {
        source,
        originalLine: util.getArg(aArgs, "line"),
        originalColumn: util.getArg(aArgs, "column")
      }, index2 = this._findMapping(
        needle,
        this._originalMappings,
        "originalLine",
        "originalColumn",
        util.compareByOriginalPositions,
        util.getArg(aArgs, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND)
      );
      if (index2 >= 0) {
        var mapping = this._originalMappings[index2];
        if (mapping.source === needle.source)
          return {
            line: util.getArg(mapping, "generatedLine", null),
            column: util.getArg(mapping, "generatedColumn", null),
            lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
          };
      }
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    };
    exports.BasicSourceMapConsumer = BasicSourceMapConsumer;
    function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      typeof aSourceMap == "string" && (sourceMap = util.parseSourceMapInput(aSourceMap));
      var version = util.getArg(sourceMap, "version"), sections = util.getArg(sourceMap, "sections");
      if (version != this._version)
        throw new Error("Unsupported version: " + version);
      this._sources = new ArraySet(), this._names = new ArraySet();
      var lastOffset = {
        line: -1,
        column: 0
      };
      this._sections = sections.map(function(s) {
        if (s.url)
          throw new Error("Support for url field in sections not implemented.");
        var offset2 = util.getArg(s, "offset"), offsetLine = util.getArg(offset2, "line"), offsetColumn = util.getArg(offset2, "column");
        if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column)
          throw new Error("Section offsets must be ordered and non-overlapping.");
        return lastOffset = offset2, {
          generatedOffset: {
            // The offset fields are 0-based, but we use 1-based indices when
            // encoding/decoding from VLQ.
            generatedLine: offsetLine + 1,
            generatedColumn: offsetColumn + 1
          },
          consumer: new SourceMapConsumer(util.getArg(s, "map"), aSourceMapURL)
        };
      });
    }
    IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
    IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;
    IndexedSourceMapConsumer.prototype._version = 3;
    Object.defineProperty(IndexedSourceMapConsumer.prototype, "sources", {
      get: function() {
        for (var sources = [], i13 = 0; i13 < this._sections.length; i13++)
          for (var j = 0; j < this._sections[i13].consumer.sources.length; j++)
            sources.push(this._sections[i13].consumer.sources[j]);
        return sources;
      }
    });
    IndexedSourceMapConsumer.prototype.originalPositionFor = function(aArgs) {
      var needle = {
        generatedLine: util.getArg(aArgs, "line"),
        generatedColumn: util.getArg(aArgs, "column")
      }, sectionIndex = binarySearch.search(
        needle,
        this._sections,
        function(needle2, section2) {
          var cmp = needle2.generatedLine - section2.generatedOffset.generatedLine;
          return cmp || needle2.generatedColumn - section2.generatedOffset.generatedColumn;
        }
      ), section = this._sections[sectionIndex];
      return section ? section.consumer.originalPositionFor({
        line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),
        column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),
        bias: aArgs.bias
      }) : {
        source: null,
        line: null,
        column: null,
        name: null
      };
    };
    IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function() {
      return this._sections.every(function(s) {
        return s.consumer.hasContentsOfAllSources();
      });
    };
    IndexedSourceMapConsumer.prototype.sourceContentFor = function(aSource, nullOnMissing) {
      for (var i13 = 0; i13 < this._sections.length; i13++) {
        var section = this._sections[i13], content = section.consumer.sourceContentFor(aSource, !0);
        if (content)
          return content;
      }
      if (nullOnMissing)
        return null;
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    };
    IndexedSourceMapConsumer.prototype.generatedPositionFor = function(aArgs) {
      for (var i13 = 0; i13 < this._sections.length; i13++) {
        var section = this._sections[i13];
        if (section.consumer._findSourceIndex(util.getArg(aArgs, "source")) !== -1) {
          var generatedPosition = section.consumer.generatedPositionFor(aArgs);
          if (generatedPosition) {
            var ret = {
              line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),
              column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)
            };
            return ret;
          }
        }
      }
      return {
        line: null,
        column: null
      };
    };
    IndexedSourceMapConsumer.prototype._parseMappings = function(aStr, aSourceRoot) {
      this.__generatedMappings = [], this.__originalMappings = [];
      for (var i13 = 0; i13 < this._sections.length; i13++)
        for (var section = this._sections[i13], sectionMappings = section.consumer._generatedMappings, j = 0; j < sectionMappings.length; j++) {
          var mapping = sectionMappings[j], source = section.consumer._sources.at(mapping.source);
          source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL), this._sources.add(source), source = this._sources.indexOf(source);
          var name = null;
          mapping.name && (name = section.consumer._names.at(mapping.name), this._names.add(name), name = this._names.indexOf(name));
          var adjustedMapping = {
            source,
            generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),
            generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),
            originalLine: mapping.originalLine,
            originalColumn: mapping.originalColumn,
            name
          };
          this.__generatedMappings.push(adjustedMapping), typeof adjustedMapping.originalLine == "number" && this.__originalMappings.push(adjustedMapping);
        }
      quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated), quickSort(this.__originalMappings, util.compareByOriginalPositions);
    };
    exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;
  }
});

// node_modules/source-map-support/node_modules/source-map/lib/source-node.js
var require_source_node = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/lib/source-node.js"(exports) {
    var SourceMapGenerator = require_source_map_generator().SourceMapGenerator, util = require_util(), REGEX_NEWLINE = /(\r?\n)/, NEWLINE_CODE = 10, isSourceNode = "$$$isSourceNode$$$";
    function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
      this.children = [], this.sourceContents = {}, this.line = aLine ?? null, this.column = aColumn ?? null, this.source = aSource ?? null, this.name = aName ?? null, this[isSourceNode] = !0, aChunks != null && this.add(aChunks);
    }
    SourceNode.fromStringWithSourceMap = function(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
      var node = new SourceNode(), remainingLines = aGeneratedCode.split(REGEX_NEWLINE), remainingLinesIndex = 0, shiftNextLine = function() {
        var lineContents = getNextLine(), newLine = getNextLine() || "";
        return lineContents + newLine;
        function getNextLine() {
          return remainingLinesIndex < remainingLines.length ? remainingLines[remainingLinesIndex++] : void 0;
        }
      }, lastGeneratedLine = 1, lastGeneratedColumn = 0, lastMapping = null;
      return aSourceMapConsumer.eachMapping(function(mapping) {
        if (lastMapping !== null)
          if (lastGeneratedLine < mapping.generatedLine)
            addMappingWithCode(lastMapping, shiftNextLine()), lastGeneratedLine++, lastGeneratedColumn = 0;
          else {
            var nextLine = remainingLines[remainingLinesIndex] || "", code = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);
            remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn - lastGeneratedColumn), lastGeneratedColumn = mapping.generatedColumn, addMappingWithCode(lastMapping, code), lastMapping = mapping;
            return;
          }
        for (; lastGeneratedLine < mapping.generatedLine; )
          node.add(shiftNextLine()), lastGeneratedLine++;
        if (lastGeneratedColumn < mapping.generatedColumn) {
          var nextLine = remainingLines[remainingLinesIndex] || "";
          node.add(nextLine.substr(0, mapping.generatedColumn)), remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn), lastGeneratedColumn = mapping.generatedColumn;
        }
        lastMapping = mapping;
      }, this), remainingLinesIndex < remainingLines.length && (lastMapping && addMappingWithCode(lastMapping, shiftNextLine()), node.add(remainingLines.splice(remainingLinesIndex).join(""))), aSourceMapConsumer.sources.forEach(function(sourceFile) {
        var content = aSourceMapConsumer.sourceContentFor(sourceFile);
        content != null && (aRelativePath != null && (sourceFile = util.join(aRelativePath, sourceFile)), node.setSourceContent(sourceFile, content));
      }), node;
      function addMappingWithCode(mapping, code) {
        if (mapping === null || mapping.source === void 0)
          node.add(code);
        else {
          var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;
          node.add(new SourceNode(
            mapping.originalLine,
            mapping.originalColumn,
            source,
            code,
            mapping.name
          ));
        }
      }
    };
    SourceNode.prototype.add = function(aChunk) {
      if (Array.isArray(aChunk))
        aChunk.forEach(function(chunk) {
          this.add(chunk);
        }, this);
      else if (aChunk[isSourceNode] || typeof aChunk == "string")
        aChunk && this.children.push(aChunk);
      else
        throw new TypeError(
          "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
        );
      return this;
    };
    SourceNode.prototype.prepend = function(aChunk) {
      if (Array.isArray(aChunk))
        for (var i13 = aChunk.length - 1; i13 >= 0; i13--)
          this.prepend(aChunk[i13]);
      else if (aChunk[isSourceNode] || typeof aChunk == "string")
        this.children.unshift(aChunk);
      else
        throw new TypeError(
          "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
        );
      return this;
    };
    SourceNode.prototype.walk = function(aFn) {
      for (var chunk, i13 = 0, len = this.children.length; i13 < len; i13++)
        chunk = this.children[i13], chunk[isSourceNode] ? chunk.walk(aFn) : chunk !== "" && aFn(chunk, {
          source: this.source,
          line: this.line,
          column: this.column,
          name: this.name
        });
    };
    SourceNode.prototype.join = function(aSep) {
      var newChildren, i13, len = this.children.length;
      if (len > 0) {
        for (newChildren = [], i13 = 0; i13 < len - 1; i13++)
          newChildren.push(this.children[i13]), newChildren.push(aSep);
        newChildren.push(this.children[i13]), this.children = newChildren;
      }
      return this;
    };
    SourceNode.prototype.replaceRight = function(aPattern, aReplacement) {
      var lastChild = this.children[this.children.length - 1];
      return lastChild[isSourceNode] ? lastChild.replaceRight(aPattern, aReplacement) : typeof lastChild == "string" ? this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement) : this.children.push("".replace(aPattern, aReplacement)), this;
    };
    SourceNode.prototype.setSourceContent = function(aSourceFile, aSourceContent) {
      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
    };
    SourceNode.prototype.walkSourceContents = function(aFn) {
      for (var i13 = 0, len = this.children.length; i13 < len; i13++)
        this.children[i13][isSourceNode] && this.children[i13].walkSourceContents(aFn);
      for (var sources = Object.keys(this.sourceContents), i13 = 0, len = sources.length; i13 < len; i13++)
        aFn(util.fromSetString(sources[i13]), this.sourceContents[sources[i13]]);
    };
    SourceNode.prototype.toString = function() {
      var str = "";
      return this.walk(function(chunk) {
        str += chunk;
      }), str;
    };
    SourceNode.prototype.toStringWithSourceMap = function(aArgs) {
      var generated = {
        code: "",
        line: 1,
        column: 0
      }, map = new SourceMapGenerator(aArgs), sourceMappingActive = !1, lastOriginalSource = null, lastOriginalLine = null, lastOriginalColumn = null, lastOriginalName = null;
      return this.walk(function(chunk, original) {
        generated.code += chunk, original.source !== null && original.line !== null && original.column !== null ? ((lastOriginalSource !== original.source || lastOriginalLine !== original.line || lastOriginalColumn !== original.column || lastOriginalName !== original.name) && map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        }), lastOriginalSource = original.source, lastOriginalLine = original.line, lastOriginalColumn = original.column, lastOriginalName = original.name, sourceMappingActive = !0) : sourceMappingActive && (map.addMapping({
          generated: {
            line: generated.line,
            column: generated.column
          }
        }), lastOriginalSource = null, sourceMappingActive = !1);
        for (var idx = 0, length = chunk.length; idx < length; idx++)
          chunk.charCodeAt(idx) === NEWLINE_CODE ? (generated.line++, generated.column = 0, idx + 1 === length ? (lastOriginalSource = null, sourceMappingActive = !1) : sourceMappingActive && map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          })) : generated.column++;
      }), this.walkSourceContents(function(sourceFile, sourceContent) {
        map.setSourceContent(sourceFile, sourceContent);
      }), { code: generated.code, map };
    };
    exports.SourceNode = SourceNode;
  }
});

// node_modules/source-map-support/node_modules/source-map/source-map.js
var require_source_map = __commonJS({
  "node_modules/source-map-support/node_modules/source-map/source-map.js"(exports) {
    exports.SourceMapGenerator = require_source_map_generator().SourceMapGenerator;
    exports.SourceMapConsumer = require_source_map_consumer().SourceMapConsumer;
    exports.SourceNode = require_source_node().SourceNode;
  }
});

// node_modules/buffer-from/index.js
var require_buffer_from = __commonJS({
  "node_modules/buffer-from/index.js"(exports, module2) {
    var toString = Object.prototype.toString, isModern = typeof Buffer < "u" && typeof Buffer.alloc == "function" && typeof Buffer.allocUnsafe == "function" && typeof Buffer.from == "function";
    function isArrayBuffer(input) {
      return toString.call(input).slice(8, -1) === "ArrayBuffer";
    }
    function fromArrayBuffer(obj, byteOffset, length) {
      byteOffset >>>= 0;
      var maxLength = obj.byteLength - byteOffset;
      if (maxLength < 0)
        throw new RangeError("'offset' is out of bounds");
      if (length === void 0)
        length = maxLength;
      else if (length >>>= 0, length > maxLength)
        throw new RangeError("'length' is out of bounds");
      return isModern ? Buffer.from(obj.slice(byteOffset, byteOffset + length)) : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)));
    }
    function fromString(string, encoding) {
      if ((typeof encoding != "string" || encoding === "") && (encoding = "utf8"), !Buffer.isEncoding(encoding))
        throw new TypeError('"encoding" must be a valid string encoding');
      return isModern ? Buffer.from(string, encoding) : new Buffer(string, encoding);
    }
    function bufferFrom(value, encodingOrOffset, length) {
      if (typeof value == "number")
        throw new TypeError('"value" argument must not be a number');
      return isArrayBuffer(value) ? fromArrayBuffer(value, encodingOrOffset, length) : typeof value == "string" ? fromString(value, encodingOrOffset) : isModern ? Buffer.from(value) : new Buffer(value);
    }
    module2.exports = bufferFrom;
  }
});

// node_modules/source-map-support/source-map-support.js
var require_source_map_support = __commonJS({
  "node_modules/source-map-support/source-map-support.js"(exports, module2) {
    var SourceMapConsumer = require_source_map().SourceMapConsumer, path = require("path"), fs;
    try {
      fs = require("fs"), (!fs.existsSync || !fs.readFileSync) && (fs = null);
    } catch {
    }
    var bufferFrom = require_buffer_from();
    function dynamicRequire(mod, request) {
      return mod.require(request);
    }
    var errorFormatterInstalled = !1, uncaughtShimInstalled = !1, emptyCacheBetweenOperations = !1, environment = "auto", fileContentsCache = {}, sourceMapCache = {}, reSourceMap = /^data:application\/json[^,]+base64,/, retrieveFileHandlers = [], retrieveMapHandlers = [];
    function isInBrowser() {
      return environment === "browser" ? !0 : environment === "node" ? !1 : typeof window < "u" && typeof XMLHttpRequest == "function" && !(window.require && window.module && window.process && window.process.type === "renderer");
    }
    function hasGlobalProcessEventEmitter() {
      return typeof process == "object" && process !== null && typeof process.on == "function";
    }
    function globalProcessVersion() {
      return typeof process == "object" && process !== null ? process.version : "";
    }
    function globalProcessStderr() {
      if (typeof process == "object" && process !== null)
        return process.stderr;
    }
    function globalProcessExit(code) {
      if (typeof process == "object" && process !== null && typeof process.exit == "function")
        return process.exit(code);
    }
    function handlerExec(list2) {
      return function(arg) {
        for (var i13 = 0; i13 < list2.length; i13++) {
          var ret = list2[i13](arg);
          if (ret)
            return ret;
        }
        return null;
      };
    }
    var retrieveFile = handlerExec(retrieveFileHandlers);
    retrieveFileHandlers.push(function(path2) {
      if (path2 = path2.trim(), /^file:/.test(path2) && (path2 = path2.replace(/file:\/\/\/(\w:)?/, function(protocol, drive) {
        return drive ? "" : (
          // file:///C:/dir/file -> C:/dir/file
          "/"
        );
      })), path2 in fileContentsCache)
        return fileContentsCache[path2];
      var contents = "";
      try {
        if (fs)
          fs.existsSync(path2) && (contents = fs.readFileSync(path2, "utf8"));
        else {
          var xhr = new XMLHttpRequest();
          xhr.open(
            "GET",
            path2,
            /** async */
            !1
          ), xhr.send(null), xhr.readyState === 4 && xhr.status === 200 && (contents = xhr.responseText);
        }
      } catch {
      }
      return fileContentsCache[path2] = contents;
    });
    function supportRelativeURL(file, url) {
      if (!file)
        return url;
      var dir = path.dirname(file), match = /^\w+:\/\/[^\/]*/.exec(dir), protocol = match ? match[0] : "", startPath = dir.slice(protocol.length);
      return protocol && /^\/\w\:/.test(startPath) ? (protocol += "/", protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\/g, "/")) : protocol + path.resolve(dir.slice(protocol.length), url);
    }
    function retrieveSourceMapURL(source) {
      var fileData;
      if (isInBrowser())
        try {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", source, !1), xhr.send(null), fileData = xhr.readyState === 4 ? xhr.responseText : null;
          var sourceMapHeader = xhr.getResponseHeader("SourceMap") || xhr.getResponseHeader("X-SourceMap");
          if (sourceMapHeader)
            return sourceMapHeader;
        } catch {
        }
      fileData = retrieveFile(source);
      for (var re = /(?:\/\/[@#][\s]*sourceMappingURL=([^\s'"]+)[\s]*$)|(?:\/\*[@#][\s]*sourceMappingURL=([^\s*'"]+)[\s]*(?:\*\/)[\s]*$)/mg, lastMatch, match; match = re.exec(fileData); )
        lastMatch = match;
      return lastMatch ? lastMatch[1] : null;
    }
    var retrieveSourceMap = handlerExec(retrieveMapHandlers);
    retrieveMapHandlers.push(function(source) {
      var sourceMappingURL = retrieveSourceMapURL(source);
      if (!sourceMappingURL)
        return null;
      var sourceMapData;
      if (reSourceMap.test(sourceMappingURL)) {
        var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(",") + 1);
        sourceMapData = bufferFrom(rawData, "base64").toString(), sourceMappingURL = source;
      } else
        sourceMappingURL = supportRelativeURL(source, sourceMappingURL), sourceMapData = retrieveFile(sourceMappingURL);
      return sourceMapData ? {
        url: sourceMappingURL,
        map: sourceMapData
      } : null;
    });
    function mapSourcePosition(position) {
      var sourceMap = sourceMapCache[position.source];
      if (!sourceMap) {
        var urlAndMap = retrieveSourceMap(position.source);
        urlAndMap ? (sourceMap = sourceMapCache[position.source] = {
          url: urlAndMap.url,
          map: new SourceMapConsumer(urlAndMap.map)
        }, sourceMap.map.sourcesContent && sourceMap.map.sources.forEach(function(source, i13) {
          var contents = sourceMap.map.sourcesContent[i13];
          if (contents) {
            var url = supportRelativeURL(sourceMap.url, source);
            fileContentsCache[url] = contents;
          }
        })) : sourceMap = sourceMapCache[position.source] = {
          url: null,
          map: null
        };
      }
      if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor == "function") {
        var originalPosition = sourceMap.map.originalPositionFor(position);
        if (originalPosition.source !== null)
          return originalPosition.source = supportRelativeURL(
            sourceMap.url,
            originalPosition.source
          ), originalPosition;
      }
      return position;
    }
    function mapEvalOrigin(origin) {
      var match = /^eval at ([^(]+) \((.+):(\d+):(\d+)\)$/.exec(origin);
      if (match) {
        var position = mapSourcePosition({
          source: match[2],
          line: +match[3],
          column: match[4] - 1
        });
        return "eval at " + match[1] + " (" + position.source + ":" + position.line + ":" + (position.column + 1) + ")";
      }
      return match = /^eval at ([^(]+) \((.+)\)$/.exec(origin), match ? "eval at " + match[1] + " (" + mapEvalOrigin(match[2]) + ")" : origin;
    }
    function CallSiteToString() {
      var fileName, fileLocation = "";
      if (this.isNative())
        fileLocation = "native";
      else {
        fileName = this.getScriptNameOrSourceURL(), !fileName && this.isEval() && (fileLocation = this.getEvalOrigin(), fileLocation += ", "), fileName ? fileLocation += fileName : fileLocation += "<anonymous>";
        var lineNumber = this.getLineNumber();
        if (lineNumber != null) {
          fileLocation += ":" + lineNumber;
          var columnNumber = this.getColumnNumber();
          columnNumber && (fileLocation += ":" + columnNumber);
        }
      }
      var line = "", functionName = this.getFunctionName(), addSuffix = !0, isConstructor = this.isConstructor(), isMethodCall = !(this.isToplevel() || isConstructor);
      if (isMethodCall) {
        var typeName = this.getTypeName();
        typeName === "[object Object]" && (typeName = "null");
        var methodName = this.getMethodName();
        functionName ? (typeName && functionName.indexOf(typeName) != 0 && (line += typeName + "."), line += functionName, methodName && functionName.indexOf("." + methodName) != functionName.length - methodName.length - 1 && (line += " [as " + methodName + "]")) : line += typeName + "." + (methodName || "<anonymous>");
      } else
        isConstructor ? line += "new " + (functionName || "<anonymous>") : functionName ? line += functionName : (line += fileLocation, addSuffix = !1);
      return addSuffix && (line += " (" + fileLocation + ")"), line;
    }
    function cloneCallSite(frame2) {
      var object = {};
      return Object.getOwnPropertyNames(Object.getPrototypeOf(frame2)).forEach(function(name) {
        object[name] = /^(?:is|get)/.test(name) ? function() {
          return frame2[name].call(frame2);
        } : frame2[name];
      }), object.toString = CallSiteToString, object;
    }
    function wrapCallSite(frame2, state) {
      if (state === void 0 && (state = { nextPosition: null, curPosition: null }), frame2.isNative())
        return state.curPosition = null, frame2;
      var source = frame2.getFileName() || frame2.getScriptNameOrSourceURL();
      if (source) {
        var line = frame2.getLineNumber(), column = frame2.getColumnNumber() - 1, noHeader = /^v(10\.1[6-9]|10\.[2-9][0-9]|10\.[0-9]{3,}|1[2-9]\d*|[2-9]\d|\d{3,}|11\.11)/, headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;
        line === 1 && column > headerLength && !isInBrowser() && !frame2.isEval() && (column -= headerLength);
        var position = mapSourcePosition({
          source,
          line,
          column
        });
        state.curPosition = position, frame2 = cloneCallSite(frame2);
        var originalFunctionName = frame2.getFunctionName;
        return frame2.getFunctionName = function() {
          return state.nextPosition == null ? originalFunctionName() : state.nextPosition.name || originalFunctionName();
        }, frame2.getFileName = function() {
          return position.source;
        }, frame2.getLineNumber = function() {
          return position.line;
        }, frame2.getColumnNumber = function() {
          return position.column + 1;
        }, frame2.getScriptNameOrSourceURL = function() {
          return position.source;
        }, frame2;
      }
      var origin = frame2.isEval() && frame2.getEvalOrigin();
      return origin && (origin = mapEvalOrigin(origin), frame2 = cloneCallSite(frame2), frame2.getEvalOrigin = function() {
        return origin;
      }), frame2;
    }
    function prepareStackTrace(error2, stack) {
      emptyCacheBetweenOperations && (fileContentsCache = {}, sourceMapCache = {});
      for (var name = error2.name || "Error", message2 = error2.message || "", errorString = name + ": " + message2, state = { nextPosition: null, curPosition: null }, processedStack = [], i13 = stack.length - 1; i13 >= 0; i13--)
        processedStack.push(`
    at ` + wrapCallSite(stack[i13], state)), state.nextPosition = state.curPosition;
      return state.curPosition = state.nextPosition = null, errorString + processedStack.reverse().join("");
    }
    function getErrorSource(error2) {
      var match = /\n    at [^(]+ \((.*):(\d+):(\d+)\)/.exec(error2.stack);
      if (match) {
        var source = match[1], line = +match[2], column = +match[3], contents = fileContentsCache[source];
        if (!contents && fs && fs.existsSync(source))
          try {
            contents = fs.readFileSync(source, "utf8");
          } catch {
            contents = "";
          }
        if (contents) {
          var code = contents.split(/(?:\r\n|\r|\n)/)[line - 1];
          if (code)
            return source + ":" + line + `
` + code + `
` + new Array(column).join(" ") + "^";
        }
      }
      return null;
    }
    function printErrorAndExit(error2) {
      var source = getErrorSource(error2), stderr = globalProcessStderr();
      stderr && stderr._handle && stderr._handle.setBlocking && stderr._handle.setBlocking(!0), source && (console.error(), console.error(source)), console.error(error2.stack), globalProcessExit(1);
    }
    function shimEmitUncaughtException() {
      var origEmit = process.emit;
      process.emit = function(type2) {
        if (type2 === "uncaughtException") {
          var hasStack = arguments[1] && arguments[1].stack, hasListeners = this.listeners(type2).length > 0;
          if (hasStack && !hasListeners)
            return printErrorAndExit(arguments[1]);
        }
        return origEmit.apply(this, arguments);
      };
    }
    var originalRetrieveFileHandlers = retrieveFileHandlers.slice(0), originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);
    exports.wrapCallSite = wrapCallSite;
    exports.getErrorSource = getErrorSource;
    exports.mapSourcePosition = mapSourcePosition;
    exports.retrieveSourceMap = retrieveSourceMap;
    exports.install = function(options) {
      if (options = options || {}, options.environment && (environment = options.environment, ["node", "browser", "auto"].indexOf(environment) === -1))
        throw new Error("environment " + environment + " was unknown. Available options are {auto, browser, node}");
      if (options.retrieveFile && (options.overrideRetrieveFile && (retrieveFileHandlers.length = 0), retrieveFileHandlers.unshift(options.retrieveFile)), options.retrieveSourceMap && (options.overrideRetrieveSourceMap && (retrieveMapHandlers.length = 0), retrieveMapHandlers.unshift(options.retrieveSourceMap)), options.hookRequire && !isInBrowser()) {
        var Module = dynamicRequire(module2, "module"), $compile = Module.prototype._compile;
        $compile.__sourceMapSupport || (Module.prototype._compile = function(content, filename) {
          return fileContentsCache[filename] = content, sourceMapCache[filename] = void 0, $compile.call(this, content, filename);
        }, Module.prototype._compile.__sourceMapSupport = !0);
      }
      if (emptyCacheBetweenOperations || (emptyCacheBetweenOperations = "emptyCacheBetweenOperations" in options ? options.emptyCacheBetweenOperations : !1), errorFormatterInstalled || (errorFormatterInstalled = !0, Error.prepareStackTrace = prepareStackTrace), !uncaughtShimInstalled) {
        var installHandler = "handleUncaughtExceptions" in options ? options.handleUncaughtExceptions : !0;
        try {
          var worker_threads = dynamicRequire(module2, "worker_threads");
          worker_threads.isMainThread === !1 && (installHandler = !1);
        } catch {
        }
        installHandler && hasGlobalProcessEventEmitter() && (uncaughtShimInstalled = !0, shimEmitUncaughtException());
      }
    };
    exports.resetRetrieveHandlers = function() {
      retrieveFileHandlers.length = 0, retrieveMapHandlers.length = 0, retrieveFileHandlers = originalRetrieveFileHandlers.slice(0), retrieveMapHandlers = originalRetrieveMapHandlers.slice(0), retrieveSourceMap = handlerExec(retrieveMapHandlers), retrieveFile = handlerExec(retrieveFileHandlers);
    };
  }
});

// node_modules/event-target-shim/dist/event-target-shim.js
var require_event_target_shim = __commonJS({
  "node_modules/event-target-shim/dist/event-target-shim.js"(exports, module2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var privateData = /* @__PURE__ */ new WeakMap(), wrappers = /* @__PURE__ */ new WeakMap();
    function pd(event) {
      let retv = privateData.get(event);
      return console.assert(
        retv != null,
        "'this' is expected an Event object, but got",
        event
      ), retv;
    }
    function setCancelFlag(data) {
      if (data.passiveListener != null) {
        typeof console < "u" && typeof console.error == "function" && console.error(
          "Unable to preventDefault inside passive event listener invocation.",
          data.passiveListener
        );
        return;
      }
      data.event.cancelable && (data.canceled = !0, typeof data.event.preventDefault == "function" && data.event.preventDefault());
    }
    function Event2(eventTarget, event) {
      privateData.set(this, {
        eventTarget,
        event,
        eventPhase: 2,
        currentTarget: eventTarget,
        canceled: !1,
        stopped: !1,
        immediateStopped: !1,
        passiveListener: null,
        timeStamp: event.timeStamp || Date.now()
      }), Object.defineProperty(this, "isTrusted", { value: !1, enumerable: !0 });
      let keys = Object.keys(event);
      for (let i13 = 0; i13 < keys.length; ++i13) {
        let key = keys[i13];
        key in this || Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
    Event2.prototype = {
      /**
       * The type of this event.
       * @type {string}
       */
      get type() {
        return pd(this).event.type;
      },
      /**
       * The target of this event.
       * @type {EventTarget}
       */
      get target() {
        return pd(this).eventTarget;
      },
      /**
       * The target of this event.
       * @type {EventTarget}
       */
      get currentTarget() {
        return pd(this).currentTarget;
      },
      /**
       * @returns {EventTarget[]} The composed path of this event.
       */
      composedPath() {
        let currentTarget = pd(this).currentTarget;
        return currentTarget == null ? [] : [currentTarget];
      },
      /**
       * Constant of NONE.
       * @type {number}
       */
      get NONE() {
        return 0;
      },
      /**
       * Constant of CAPTURING_PHASE.
       * @type {number}
       */
      get CAPTURING_PHASE() {
        return 1;
      },
      /**
       * Constant of AT_TARGET.
       * @type {number}
       */
      get AT_TARGET() {
        return 2;
      },
      /**
       * Constant of BUBBLING_PHASE.
       * @type {number}
       */
      get BUBBLING_PHASE() {
        return 3;
      },
      /**
       * The target of this event.
       * @type {number}
       */
      get eventPhase() {
        return pd(this).eventPhase;
      },
      /**
       * Stop event bubbling.
       * @returns {void}
       */
      stopPropagation() {
        let data = pd(this);
        data.stopped = !0, typeof data.event.stopPropagation == "function" && data.event.stopPropagation();
      },
      /**
       * Stop event bubbling.
       * @returns {void}
       */
      stopImmediatePropagation() {
        let data = pd(this);
        data.stopped = !0, data.immediateStopped = !0, typeof data.event.stopImmediatePropagation == "function" && data.event.stopImmediatePropagation();
      },
      /**
       * The flag to be bubbling.
       * @type {boolean}
       */
      get bubbles() {
        return Boolean(pd(this).event.bubbles);
      },
      /**
       * The flag to be cancelable.
       * @type {boolean}
       */
      get cancelable() {
        return Boolean(pd(this).event.cancelable);
      },
      /**
       * Cancel this event.
       * @returns {void}
       */
      preventDefault() {
        setCancelFlag(pd(this));
      },
      /**
       * The flag to indicate cancellation state.
       * @type {boolean}
       */
      get defaultPrevented() {
        return pd(this).canceled;
      },
      /**
       * The flag to be composed.
       * @type {boolean}
       */
      get composed() {
        return Boolean(pd(this).event.composed);
      },
      /**
       * The unix time of this event.
       * @type {number}
       */
      get timeStamp() {
        return pd(this).timeStamp;
      },
      /**
       * The target of this event.
       * @type {EventTarget}
       * @deprecated
       */
      get srcElement() {
        return pd(this).eventTarget;
      },
      /**
       * The flag to stop event bubbling.
       * @type {boolean}
       * @deprecated
       */
      get cancelBubble() {
        return pd(this).stopped;
      },
      set cancelBubble(value) {
        if (!value)
          return;
        let data = pd(this);
        data.stopped = !0, typeof data.event.cancelBubble == "boolean" && (data.event.cancelBubble = !0);
      },
      /**
       * The flag to indicate cancellation state.
       * @type {boolean}
       * @deprecated
       */
      get returnValue() {
        return !pd(this).canceled;
      },
      set returnValue(value) {
        value || setCancelFlag(pd(this));
      },
      /**
       * Initialize this event object. But do nothing under event dispatching.
       * @param {string} type The event type.
       * @param {boolean} [bubbles=false] The flag to be possible to bubble up.
       * @param {boolean} [cancelable=false] The flag to be possible to cancel.
       * @deprecated
       */
      initEvent() {
      }
    };
    Object.defineProperty(Event2.prototype, "constructor", {
      value: Event2,
      configurable: !0,
      writable: !0
    });
    typeof window < "u" && typeof window.Event < "u" && (Object.setPrototypeOf(Event2.prototype, window.Event.prototype), wrappers.set(window.Event.prototype, Event2));
    function defineRedirectDescriptor(key) {
      return {
        get() {
          return pd(this).event[key];
        },
        set(value) {
          pd(this).event[key] = value;
        },
        configurable: !0,
        enumerable: !0
      };
    }
    function defineCallDescriptor(key) {
      return {
        value() {
          let event = pd(this).event;
          return event[key].apply(event, arguments);
        },
        configurable: !0,
        enumerable: !0
      };
    }
    function defineWrapper(BaseEvent, proto) {
      let keys = Object.keys(proto);
      if (keys.length === 0)
        return BaseEvent;
      function CustomEvent2(eventTarget, event) {
        BaseEvent.call(this, eventTarget, event);
      }
      CustomEvent2.prototype = Object.create(BaseEvent.prototype, {
        constructor: { value: CustomEvent2, configurable: !0, writable: !0 }
      });
      for (let i13 = 0; i13 < keys.length; ++i13) {
        let key = keys[i13];
        if (!(key in BaseEvent.prototype)) {
          let isFunc = typeof Object.getOwnPropertyDescriptor(proto, key).value == "function";
          Object.defineProperty(
            CustomEvent2.prototype,
            key,
            isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key)
          );
        }
      }
      return CustomEvent2;
    }
    function getWrapper(proto) {
      if (proto == null || proto === Object.prototype)
        return Event2;
      let wrapper = wrappers.get(proto);
      return wrapper == null && (wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto), wrappers.set(proto, wrapper)), wrapper;
    }
    function wrapEvent(eventTarget, event) {
      let Wrapper = getWrapper(Object.getPrototypeOf(event));
      return new Wrapper(eventTarget, event);
    }
    function isStopped(event) {
      return pd(event).immediateStopped;
    }
    function setEventPhase(event, eventPhase) {
      pd(event).eventPhase = eventPhase;
    }
    function setCurrentTarget(event, currentTarget) {
      pd(event).currentTarget = currentTarget;
    }
    function setPassiveListener(event, passiveListener) {
      pd(event).passiveListener = passiveListener;
    }
    var listenersMap = /* @__PURE__ */ new WeakMap(), CAPTURE = 1, BUBBLE = 2, ATTRIBUTE = 3;
    function isObject(x) {
      return x !== null && typeof x == "object";
    }
    function getListeners(eventTarget) {
      let listeners = listenersMap.get(eventTarget);
      if (listeners == null)
        throw new TypeError(
          "'this' is expected an EventTarget object, but got another value."
        );
      return listeners;
    }
    function defineEventAttributeDescriptor(eventName) {
      return {
        get() {
          let node = getListeners(this).get(eventName);
          for (; node != null; ) {
            if (node.listenerType === ATTRIBUTE)
              return node.listener;
            node = node.next;
          }
          return null;
        },
        set(listener) {
          typeof listener != "function" && !isObject(listener) && (listener = null);
          let listeners = getListeners(this), prev = null, node = listeners.get(eventName);
          for (; node != null; )
            node.listenerType === ATTRIBUTE ? prev !== null ? prev.next = node.next : node.next !== null ? listeners.set(eventName, node.next) : listeners.delete(eventName) : prev = node, node = node.next;
          if (listener !== null) {
            let newNode = {
              listener,
              listenerType: ATTRIBUTE,
              passive: !1,
              once: !1,
              next: null
            };
            prev === null ? listeners.set(eventName, newNode) : prev.next = newNode;
          }
        },
        configurable: !0,
        enumerable: !0
      };
    }
    function defineEventAttribute(eventTargetPrototype, eventName) {
      Object.defineProperty(
        eventTargetPrototype,
        `on${eventName}`,
        defineEventAttributeDescriptor(eventName)
      );
    }
    function defineCustomEventTarget(eventNames) {
      function CustomEventTarget() {
        EventTarget.call(this);
      }
      CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
        constructor: {
          value: CustomEventTarget,
          configurable: !0,
          writable: !0
        }
      });
      for (let i13 = 0; i13 < eventNames.length; ++i13)
        defineEventAttribute(CustomEventTarget.prototype, eventNames[i13]);
      return CustomEventTarget;
    }
    function EventTarget() {
      if (this instanceof EventTarget) {
        listenersMap.set(this, /* @__PURE__ */ new Map());
        return;
      }
      if (arguments.length === 1 && Array.isArray(arguments[0]))
        return defineCustomEventTarget(arguments[0]);
      if (arguments.length > 0) {
        let types2 = new Array(arguments.length);
        for (let i13 = 0; i13 < arguments.length; ++i13)
          types2[i13] = arguments[i13];
        return defineCustomEventTarget(types2);
      }
      throw new TypeError("Cannot call a class as a function");
    }
    EventTarget.prototype = {
      /**
       * Add a given listener to this event target.
       * @param {string} eventName The event name to add.
       * @param {Function} listener The listener to add.
       * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
       * @returns {void}
       */
      addEventListener(eventName, listener, options) {
        if (listener == null)
          return;
        if (typeof listener != "function" && !isObject(listener))
          throw new TypeError("'listener' should be a function or an object.");
        let listeners = getListeners(this), optionsIsObj = isObject(options), listenerType = Boolean(optionsIsObj ? options.capture : options) ? CAPTURE : BUBBLE, newNode = {
          listener,
          listenerType,
          passive: optionsIsObj && Boolean(options.passive),
          once: optionsIsObj && Boolean(options.once),
          next: null
        }, node = listeners.get(eventName);
        if (node === void 0) {
          listeners.set(eventName, newNode);
          return;
        }
        let prev = null;
        for (; node != null; ) {
          if (node.listener === listener && node.listenerType === listenerType)
            return;
          prev = node, node = node.next;
        }
        prev.next = newNode;
      },
      /**
       * Remove a given listener from this event target.
       * @param {string} eventName The event name to remove.
       * @param {Function} listener The listener to remove.
       * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
       * @returns {void}
       */
      removeEventListener(eventName, listener, options) {
        if (listener == null)
          return;
        let listeners = getListeners(this), listenerType = (isObject(options) ? Boolean(options.capture) : Boolean(options)) ? CAPTURE : BUBBLE, prev = null, node = listeners.get(eventName);
        for (; node != null; ) {
          if (node.listener === listener && node.listenerType === listenerType) {
            prev !== null ? prev.next = node.next : node.next !== null ? listeners.set(eventName, node.next) : listeners.delete(eventName);
            return;
          }
          prev = node, node = node.next;
        }
      },
      /**
       * Dispatch a given event.
       * @param {Event|{type:string}} event The event to dispatch.
       * @returns {boolean} `false` if canceled.
       */
      dispatchEvent(event) {
        if (event == null || typeof event.type != "string")
          throw new TypeError('"event.type" should be a string.');
        let listeners = getListeners(this), eventName = event.type, node = listeners.get(eventName);
        if (node == null)
          return !0;
        let wrappedEvent = wrapEvent(this, event), prev = null;
        for (; node != null; ) {
          if (node.once ? prev !== null ? prev.next = node.next : node.next !== null ? listeners.set(eventName, node.next) : listeners.delete(eventName) : prev = node, setPassiveListener(
            wrappedEvent,
            node.passive ? node.listener : null
          ), typeof node.listener == "function")
            try {
              node.listener.call(this, wrappedEvent);
            } catch (err) {
              typeof console < "u" && typeof console.error == "function" && console.error(err);
            }
          else
            node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent == "function" && node.listener.handleEvent(wrappedEvent);
          if (isStopped(wrappedEvent))
            break;
          node = node.next;
        }
        return setPassiveListener(wrappedEvent, null), setEventPhase(wrappedEvent, 0), setCurrentTarget(wrappedEvent, null), !wrappedEvent.defaultPrevented;
      }
    };
    Object.defineProperty(EventTarget.prototype, "constructor", {
      value: EventTarget,
      configurable: !0,
      writable: !0
    });
    typeof window < "u" && typeof window.EventTarget < "u" && Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
    exports.defineEventAttribute = defineEventAttribute;
    exports.EventTarget = EventTarget;
    exports.default = EventTarget;
    module2.exports = EventTarget;
    module2.exports.EventTarget = module2.exports.default = EventTarget;
    module2.exports.defineEventAttribute = defineEventAttribute;
  }
});

// node_modules/abort-controller/dist/abort-controller.js
var require_abort_controller = __commonJS({
  "node_modules/abort-controller/dist/abort-controller.js"(exports, module2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var eventTargetShim = require_event_target_shim(), AbortSignal = class extends eventTargetShim.EventTarget {
      /**
       * AbortSignal cannot be constructed directly.
       */
      constructor() {
        throw super(), new TypeError("AbortSignal cannot be constructed directly");
      }
      /**
       * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.
       */
      get aborted() {
        let aborted = abortedFlags.get(this);
        if (typeof aborted != "boolean")
          throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        return aborted;
      }
    };
    eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");
    function createAbortSignal() {
      let signal = Object.create(AbortSignal.prototype);
      return eventTargetShim.EventTarget.call(signal), abortedFlags.set(signal, !1), signal;
    }
    function abortSignal(signal) {
      abortedFlags.get(signal) === !1 && (abortedFlags.set(signal, !0), signal.dispatchEvent({ type: "abort" }));
    }
    var abortedFlags = /* @__PURE__ */ new WeakMap();
    Object.defineProperties(AbortSignal.prototype, {
      aborted: { enumerable: !0 }
    });
    typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol" && Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
      configurable: !0,
      value: "AbortSignal"
    });
    var AbortController2 = class {
      /**
       * Initialize this controller.
       */
      constructor() {
        signals.set(this, createAbortSignal());
      }
      /**
       * Returns the `AbortSignal` object associated with this object.
       */
      get signal() {
        return getSignal(this);
      }
      /**
       * Abort and signal to any observers that the associated activity is to be aborted.
       */
      abort() {
        abortSignal(getSignal(this));
      }
    }, signals = /* @__PURE__ */ new WeakMap();
    function getSignal(controller) {
      let signal = signals.get(controller);
      if (signal == null)
        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
      return signal;
    }
    Object.defineProperties(AbortController2.prototype, {
      signal: { enumerable: !0 },
      abort: { enumerable: !0 }
    });
    typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol" && Object.defineProperty(AbortController2.prototype, Symbol.toStringTag, {
      configurable: !0,
      value: "AbortController"
    });
    exports.AbortController = AbortController2;
    exports.AbortSignal = AbortSignal;
    exports.default = AbortController2;
    module2.exports = AbortController2;
    module2.exports.AbortController = module2.exports.default = AbortController2;
    module2.exports.AbortSignal = AbortSignal;
  }
});

// node_modules/mrmime/index.js
var require_mrmime = __commonJS({
  "node_modules/mrmime/index.js"(exports) {
    var mimes = {
      ez: "application/andrew-inset",
      aw: "application/applixware",
      atom: "application/atom+xml",
      atomcat: "application/atomcat+xml",
      atomdeleted: "application/atomdeleted+xml",
      atomsvc: "application/atomsvc+xml",
      dwd: "application/atsc-dwd+xml",
      held: "application/atsc-held+xml",
      rsat: "application/atsc-rsat+xml",
      bdoc: "application/bdoc",
      xcs: "application/calendar+xml",
      ccxml: "application/ccxml+xml",
      cdfx: "application/cdfx+xml",
      cdmia: "application/cdmi-capability",
      cdmic: "application/cdmi-container",
      cdmid: "application/cdmi-domain",
      cdmio: "application/cdmi-object",
      cdmiq: "application/cdmi-queue",
      cu: "application/cu-seeme",
      mpd: "application/dash+xml",
      davmount: "application/davmount+xml",
      dbk: "application/docbook+xml",
      dssc: "application/dssc+der",
      xdssc: "application/dssc+xml",
      es: "application/ecmascript",
      ecma: "application/ecmascript",
      emma: "application/emma+xml",
      emotionml: "application/emotionml+xml",
      epub: "application/epub+zip",
      exi: "application/exi",
      fdt: "application/fdt+xml",
      pfr: "application/font-tdpfr",
      geojson: "application/geo+json",
      gml: "application/gml+xml",
      gpx: "application/gpx+xml",
      gxf: "application/gxf",
      gz: "application/gzip",
      hjson: "application/hjson",
      stk: "application/hyperstudio",
      ink: "application/inkml+xml",
      inkml: "application/inkml+xml",
      ipfix: "application/ipfix",
      its: "application/its+xml",
      jar: "application/java-archive",
      war: "application/java-archive",
      ear: "application/java-archive",
      ser: "application/java-serialized-object",
      class: "application/java-vm",
      js: "application/javascript",
      mjs: "application/javascript",
      json: "application/json",
      map: "application/json",
      json5: "application/json5",
      jsonml: "application/jsonml+json",
      jsonld: "application/ld+json",
      lgr: "application/lgr+xml",
      lostxml: "application/lost+xml",
      hqx: "application/mac-binhex40",
      cpt: "application/mac-compactpro",
      mads: "application/mads+xml",
      webmanifest: "application/manifest+json",
      mrc: "application/marc",
      mrcx: "application/marcxml+xml",
      ma: "application/mathematica",
      nb: "application/mathematica",
      mb: "application/mathematica",
      mathml: "application/mathml+xml",
      mbox: "application/mbox",
      mscml: "application/mediaservercontrol+xml",
      metalink: "application/metalink+xml",
      meta4: "application/metalink4+xml",
      mets: "application/mets+xml",
      maei: "application/mmt-aei+xml",
      musd: "application/mmt-usd+xml",
      mods: "application/mods+xml",
      m21: "application/mp21",
      mp21: "application/mp21",
      mp4s: "application/mp4",
      m4p: "application/mp4",
      doc: "application/msword",
      dot: "application/msword",
      mxf: "application/mxf",
      nq: "application/n-quads",
      nt: "application/n-triples",
      cjs: "application/node",
      bin: "application/octet-stream",
      dms: "application/octet-stream",
      lrf: "application/octet-stream",
      mar: "application/octet-stream",
      so: "application/octet-stream",
      dist: "application/octet-stream",
      distz: "application/octet-stream",
      pkg: "application/octet-stream",
      bpk: "application/octet-stream",
      dump: "application/octet-stream",
      elc: "application/octet-stream",
      deploy: "application/octet-stream",
      exe: "application/octet-stream",
      dll: "application/octet-stream",
      deb: "application/octet-stream",
      dmg: "application/octet-stream",
      iso: "application/octet-stream",
      img: "application/octet-stream",
      msi: "application/octet-stream",
      msp: "application/octet-stream",
      msm: "application/octet-stream",
      buffer: "application/octet-stream",
      oda: "application/oda",
      opf: "application/oebps-package+xml",
      ogx: "application/ogg",
      omdoc: "application/omdoc+xml",
      onetoc: "application/onenote",
      onetoc2: "application/onenote",
      onetmp: "application/onenote",
      onepkg: "application/onenote",
      oxps: "application/oxps",
      relo: "application/p2p-overlay+xml",
      xer: "application/patch-ops-error+xml",
      pdf: "application/pdf",
      pgp: "application/pgp-encrypted",
      asc: "application/pgp-signature",
      sig: "application/pgp-signature",
      prf: "application/pics-rules",
      p10: "application/pkcs10",
      p7m: "application/pkcs7-mime",
      p7c: "application/pkcs7-mime",
      p7s: "application/pkcs7-signature",
      p8: "application/pkcs8",
      ac: "application/pkix-attr-cert",
      cer: "application/pkix-cert",
      crl: "application/pkix-crl",
      pkipath: "application/pkix-pkipath",
      pki: "application/pkixcmp",
      pls: "application/pls+xml",
      ai: "application/postscript",
      eps: "application/postscript",
      ps: "application/postscript",
      provx: "application/provenance+xml",
      cww: "application/prs.cww",
      pskcxml: "application/pskc+xml",
      raml: "application/raml+yaml",
      rdf: "application/rdf+xml",
      owl: "application/rdf+xml",
      rif: "application/reginfo+xml",
      rnc: "application/relax-ng-compact-syntax",
      rl: "application/resource-lists+xml",
      rld: "application/resource-lists-diff+xml",
      rs: "application/rls-services+xml",
      rapd: "application/route-apd+xml",
      sls: "application/route-s-tsid+xml",
      rusd: "application/route-usd+xml",
      gbr: "application/rpki-ghostbusters",
      mft: "application/rpki-manifest",
      roa: "application/rpki-roa",
      rsd: "application/rsd+xml",
      rss: "application/rss+xml",
      rtf: "application/rtf",
      sbml: "application/sbml+xml",
      scq: "application/scvp-cv-request",
      scs: "application/scvp-cv-response",
      spq: "application/scvp-vp-request",
      spp: "application/scvp-vp-response",
      sdp: "application/sdp",
      senmlx: "application/senml+xml",
      sensmlx: "application/sensml+xml",
      setpay: "application/set-payment-initiation",
      setreg: "application/set-registration-initiation",
      shf: "application/shf+xml",
      siv: "application/sieve",
      sieve: "application/sieve",
      smi: "application/smil+xml",
      smil: "application/smil+xml",
      rq: "application/sparql-query",
      srx: "application/sparql-results+xml",
      gram: "application/srgs",
      grxml: "application/srgs+xml",
      sru: "application/sru+xml",
      ssdl: "application/ssdl+xml",
      ssml: "application/ssml+xml",
      swidtag: "application/swid+xml",
      tei: "application/tei+xml",
      teicorpus: "application/tei+xml",
      tfi: "application/thraud+xml",
      tsd: "application/timestamped-data",
      toml: "application/toml",
      trig: "application/trig",
      ttml: "application/ttml+xml",
      ubj: "application/ubjson",
      rsheet: "application/urc-ressheet+xml",
      td: "application/urc-targetdesc+xml",
      vxml: "application/voicexml+xml",
      wasm: "application/wasm",
      wgt: "application/widget",
      hlp: "application/winhlp",
      wsdl: "application/wsdl+xml",
      wspolicy: "application/wspolicy+xml",
      xaml: "application/xaml+xml",
      xav: "application/xcap-att+xml",
      xca: "application/xcap-caps+xml",
      xdf: "application/xcap-diff+xml",
      xel: "application/xcap-el+xml",
      xns: "application/xcap-ns+xml",
      xenc: "application/xenc+xml",
      xhtml: "application/xhtml+xml",
      xht: "application/xhtml+xml",
      xlf: "application/xliff+xml",
      xml: "application/xml",
      xsl: "application/xml",
      xsd: "application/xml",
      rng: "application/xml",
      dtd: "application/xml-dtd",
      xop: "application/xop+xml",
      xpl: "application/xproc+xml",
      xslt: "application/xml",
      xspf: "application/xspf+xml",
      mxml: "application/xv+xml",
      xhvml: "application/xv+xml",
      xvml: "application/xv+xml",
      xvm: "application/xv+xml",
      yang: "application/yang",
      yin: "application/yin+xml",
      zip: "application/zip",
      "3gpp": "video/3gpp",
      adp: "audio/adpcm",
      amr: "audio/amr",
      au: "audio/basic",
      snd: "audio/basic",
      mid: "audio/midi",
      midi: "audio/midi",
      kar: "audio/midi",
      rmi: "audio/midi",
      mxmf: "audio/mobile-xmf",
      mp3: "audio/mpeg",
      m4a: "audio/mp4",
      mp4a: "audio/mp4",
      mpga: "audio/mpeg",
      mp2: "audio/mpeg",
      mp2a: "audio/mpeg",
      m2a: "audio/mpeg",
      m3a: "audio/mpeg",
      oga: "audio/ogg",
      ogg: "audio/ogg",
      spx: "audio/ogg",
      opus: "audio/ogg",
      s3m: "audio/s3m",
      sil: "audio/silk",
      wav: "audio/wav",
      weba: "audio/webm",
      xm: "audio/xm",
      ttc: "font/collection",
      otf: "font/otf",
      ttf: "font/ttf",
      woff: "font/woff",
      woff2: "font/woff2",
      exr: "image/aces",
      apng: "image/apng",
      avif: "image/avif",
      bmp: "image/bmp",
      cgm: "image/cgm",
      drle: "image/dicom-rle",
      emf: "image/emf",
      fits: "image/fits",
      g3: "image/g3fax",
      gif: "image/gif",
      heic: "image/heic",
      heics: "image/heic-sequence",
      heif: "image/heif",
      heifs: "image/heif-sequence",
      hej2: "image/hej2k",
      hsj2: "image/hsj2",
      ief: "image/ief",
      jls: "image/jls",
      jp2: "image/jp2",
      jpg2: "image/jp2",
      jpeg: "image/jpeg",
      jpg: "image/jpeg",
      jpe: "image/jpeg",
      jph: "image/jph",
      jhc: "image/jphc",
      jpm: "image/jpm",
      jpx: "image/jpx",
      jpf: "image/jpx",
      jxr: "image/jxr",
      jxra: "image/jxra",
      jxrs: "image/jxrs",
      jxs: "image/jxs",
      jxsc: "image/jxsc",
      jxsi: "image/jxsi",
      jxss: "image/jxss",
      ktx: "image/ktx",
      ktx2: "image/ktx2",
      png: "image/png",
      btif: "image/prs.btif",
      pti: "image/prs.pti",
      sgi: "image/sgi",
      svg: "image/svg+xml",
      svgz: "image/svg+xml",
      t38: "image/t38",
      tif: "image/tiff",
      tiff: "image/tiff",
      tfx: "image/tiff-fx",
      webp: "image/webp",
      wmf: "image/wmf",
      "disposition-notification": "message/disposition-notification",
      u8msg: "message/global",
      u8dsn: "message/global-delivery-status",
      u8mdn: "message/global-disposition-notification",
      u8hdr: "message/global-headers",
      eml: "message/rfc822",
      mime: "message/rfc822",
      "3mf": "model/3mf",
      gltf: "model/gltf+json",
      glb: "model/gltf-binary",
      igs: "model/iges",
      iges: "model/iges",
      msh: "model/mesh",
      mesh: "model/mesh",
      silo: "model/mesh",
      mtl: "model/mtl",
      obj: "model/obj",
      stpz: "model/step+zip",
      stpxz: "model/step-xml+zip",
      stl: "model/stl",
      wrl: "model/vrml",
      vrml: "model/vrml",
      x3db: "model/x3d+fastinfoset",
      x3dbz: "model/x3d+binary",
      x3dv: "model/x3d-vrml",
      x3dvz: "model/x3d+vrml",
      x3d: "model/x3d+xml",
      x3dz: "model/x3d+xml",
      appcache: "text/cache-manifest",
      manifest: "text/cache-manifest",
      ics: "text/calendar",
      ifb: "text/calendar",
      coffee: "text/coffeescript",
      litcoffee: "text/coffeescript",
      css: "text/css",
      csv: "text/csv",
      html: "text/html",
      htm: "text/html",
      shtml: "text/html",
      jade: "text/jade",
      jsx: "text/jsx",
      less: "text/less",
      markdown: "text/markdown",
      md: "text/markdown",
      mml: "text/mathml",
      mdx: "text/mdx",
      n3: "text/n3",
      txt: "text/plain",
      text: "text/plain",
      conf: "text/plain",
      def: "text/plain",
      list: "text/plain",
      log: "text/plain",
      in: "text/plain",
      ini: "text/plain",
      dsc: "text/prs.lines.tag",
      rtx: "text/richtext",
      sgml: "text/sgml",
      sgm: "text/sgml",
      shex: "text/shex",
      slim: "text/slim",
      slm: "text/slim",
      spdx: "text/spdx",
      stylus: "text/stylus",
      styl: "text/stylus",
      tsv: "text/tab-separated-values",
      t: "text/troff",
      tr: "text/troff",
      roff: "text/troff",
      man: "text/troff",
      me: "text/troff",
      ms: "text/troff",
      ttl: "text/turtle",
      uri: "text/uri-list",
      uris: "text/uri-list",
      urls: "text/uri-list",
      vcard: "text/vcard",
      vtt: "text/vtt",
      yaml: "text/yaml",
      yml: "text/yaml",
      "3gp": "video/3gpp",
      "3g2": "video/3gpp2",
      h261: "video/h261",
      h263: "video/h263",
      h264: "video/h264",
      m4s: "video/iso.segment",
      jpgv: "video/jpeg",
      jpgm: "image/jpm",
      mj2: "video/mj2",
      mjp2: "video/mj2",
      ts: "video/mp2t",
      mp4: "video/mp4",
      mp4v: "video/mp4",
      mpg4: "video/mp4",
      mpeg: "video/mpeg",
      mpg: "video/mpeg",
      mpe: "video/mpeg",
      m1v: "video/mpeg",
      m2v: "video/mpeg",
      ogv: "video/ogg",
      qt: "video/quicktime",
      mov: "video/quicktime",
      webm: "video/webm"
    };
    function lookup(extn) {
      let tmp = ("" + extn).trim().toLowerCase(), idx = tmp.lastIndexOf(".");
      return mimes[~idx ? tmp.substring(++idx) : tmp];
    }
    exports.lookup = lookup;
    exports.mimes = mimes;
  }
});

// node_modules/data-uri-to-buffer/dist/src/index.js
var require_src = __commonJS({
  "node_modules/data-uri-to-buffer/dist/src/index.js"(exports, module2) {
    "use strict";
    function dataUriToBuffer(uri) {
      if (!/^data:/i.test(uri))
        throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
      uri = uri.replace(/\r?\n/g, "");
      let firstComma = uri.indexOf(",");
      if (firstComma === -1 || firstComma <= 4)
        throw new TypeError("malformed data: URI");
      let meta = uri.substring(5, firstComma).split(";"), charset = "", base64 = !1, type2 = meta[0] || "text/plain", typeFull = type2;
      for (let i13 = 1; i13 < meta.length; i13++)
        meta[i13] === "base64" ? base64 = !0 : (typeFull += `;${meta[i13]}`, meta[i13].indexOf("charset=") === 0 && (charset = meta[i13].substring(8)));
      !meta[0] && !charset.length && (typeFull += ";charset=US-ASCII", charset = "US-ASCII");
      let encoding = base64 ? "base64" : "ascii", data = unescape(uri.substring(firstComma + 1)), buffer = Buffer.from(data, encoding);
      return buffer.type = type2, buffer.typeFull = typeFull, buffer.charset = charset, buffer;
    }
    module2.exports = dataUriToBuffer;
  }
});

// node_modules/web-encoding/src/lib.js
var require_lib = __commonJS({
  "node_modules/web-encoding/src/lib.js"(exports) {
    "use strict";
    exports.TextEncoder = typeof TextEncoder < "u" ? TextEncoder : require("util").TextEncoder;
    exports.TextDecoder = typeof TextDecoder < "u" ? TextDecoder : require("util").TextDecoder;
  }
});

// node_modules/web-streams-polyfill/dist/ponyfill.js
var require_ponyfill = __commonJS({
  "node_modules/web-streams-polyfill/dist/ponyfill.js"(exports, module2) {
    (function(global2, factory) {
      typeof exports == "object" && typeof module2 < "u" ? factory(exports) : typeof define == "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis < "u" ? globalThis : global2 || self, factory(global2.WebStreamsPolyfill = {}));
    })(exports, function(exports2) {
      "use strict";
      var SymbolPolyfill = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol : function(description) {
        return "Symbol(" + description + ")";
      };
      function noop2() {
      }
      function getGlobals() {
        if (typeof self < "u")
          return self;
        if (typeof window < "u")
          return window;
        if (typeof global < "u")
          return global;
      }
      var globals = getGlobals();
      function typeIsObject(x) {
        return typeof x == "object" && x !== null || typeof x == "function";
      }
      var rethrowAssertionErrorRejection = noop2, originalPromise = Promise, originalPromiseThen = Promise.prototype.then, originalPromiseResolve = Promise.resolve.bind(originalPromise), originalPromiseReject = Promise.reject.bind(originalPromise);
      function newPromise(executor) {
        return new originalPromise(executor);
      }
      function promiseResolvedWith(value) {
        return originalPromiseResolve(value);
      }
      function promiseRejectedWith(reason) {
        return originalPromiseReject(reason);
      }
      function PerformPromiseThen(promise, onFulfilled, onRejected) {
        return originalPromiseThen.call(promise, onFulfilled, onRejected);
      }
      function uponPromise(promise, onFulfilled, onRejected) {
        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), void 0, rethrowAssertionErrorRejection);
      }
      function uponFulfillment(promise, onFulfilled) {
        uponPromise(promise, onFulfilled);
      }
      function uponRejection(promise, onRejected) {
        uponPromise(promise, void 0, onRejected);
      }
      function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {
        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);
      }
      function setPromiseIsHandledToTrue(promise) {
        PerformPromiseThen(promise, void 0, rethrowAssertionErrorRejection);
      }
      var queueMicrotask2 = function() {
        var globalQueueMicrotask = globals && globals.queueMicrotask;
        if (typeof globalQueueMicrotask == "function")
          return globalQueueMicrotask;
        var resolvedPromise = promiseResolvedWith(void 0);
        return function(fn) {
          return PerformPromiseThen(resolvedPromise, fn);
        };
      }();
      function reflectCall(F, V, args) {
        if (typeof F != "function")
          throw new TypeError("Argument is not a function");
        return Function.prototype.apply.call(F, V, args);
      }
      function promiseCall(F, V, args) {
        try {
          return promiseResolvedWith(reflectCall(F, V, args));
        } catch (value) {
          return promiseRejectedWith(value);
        }
      }
      var QUEUE_MAX_ARRAY_SIZE = 16384, SimpleQueue = (
        /** @class */
        function() {
          function SimpleQueue2() {
            this._cursor = 0, this._size = 0, this._front = {
              _elements: [],
              _next: void 0
            }, this._back = this._front, this._cursor = 0, this._size = 0;
          }
          return Object.defineProperty(SimpleQueue2.prototype, "length", {
            get: function() {
              return this._size;
            },
            enumerable: !1,
            configurable: !0
          }), SimpleQueue2.prototype.push = function(element) {
            var oldBack = this._back, newBack = oldBack;
            oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1 && (newBack = {
              _elements: [],
              _next: void 0
            }), oldBack._elements.push(element), newBack !== oldBack && (this._back = newBack, oldBack._next = newBack), ++this._size;
          }, SimpleQueue2.prototype.shift = function() {
            var oldFront = this._front, newFront = oldFront, oldCursor = this._cursor, newCursor = oldCursor + 1, elements = oldFront._elements, element = elements[oldCursor];
            return newCursor === QUEUE_MAX_ARRAY_SIZE && (newFront = oldFront._next, newCursor = 0), --this._size, this._cursor = newCursor, oldFront !== newFront && (this._front = newFront), elements[oldCursor] = void 0, element;
          }, SimpleQueue2.prototype.forEach = function(callback) {
            for (var i13 = this._cursor, node = this._front, elements = node._elements; (i13 !== elements.length || node._next !== void 0) && !(i13 === elements.length && (node = node._next, elements = node._elements, i13 = 0, elements.length === 0)); )
              callback(elements[i13]), ++i13;
          }, SimpleQueue2.prototype.peek = function() {
            var front = this._front, cursor = this._cursor;
            return front._elements[cursor];
          }, SimpleQueue2;
        }()
      );
      function ReadableStreamReaderGenericInitialize(reader, stream) {
        reader._ownerReadableStream = stream, stream._reader = reader, stream._state === "readable" ? defaultReaderClosedPromiseInitialize(reader) : stream._state === "closed" ? defaultReaderClosedPromiseInitializeAsResolved(reader) : defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
      }
      function ReadableStreamReaderGenericCancel(reader, reason) {
        var stream = reader._ownerReadableStream;
        return ReadableStreamCancel(stream, reason);
      }
      function ReadableStreamReaderGenericRelease(reader) {
        reader._ownerReadableStream._state === "readable" ? defaultReaderClosedPromiseReject(reader, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")) : defaultReaderClosedPromiseResetToRejected(reader, new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")), reader._ownerReadableStream._reader = void 0, reader._ownerReadableStream = void 0;
      }
      function readerLockException(name) {
        return new TypeError("Cannot " + name + " a stream using a released reader");
      }
      function defaultReaderClosedPromiseInitialize(reader) {
        reader._closedPromise = newPromise(function(resolve, reject) {
          reader._closedPromise_resolve = resolve, reader._closedPromise_reject = reject;
        });
      }
      function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
        defaultReaderClosedPromiseInitialize(reader), defaultReaderClosedPromiseReject(reader, reason);
      }
      function defaultReaderClosedPromiseInitializeAsResolved(reader) {
        defaultReaderClosedPromiseInitialize(reader), defaultReaderClosedPromiseResolve(reader);
      }
      function defaultReaderClosedPromiseReject(reader, reason) {
        reader._closedPromise_reject !== void 0 && (setPromiseIsHandledToTrue(reader._closedPromise), reader._closedPromise_reject(reason), reader._closedPromise_resolve = void 0, reader._closedPromise_reject = void 0);
      }
      function defaultReaderClosedPromiseResetToRejected(reader, reason) {
        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);
      }
      function defaultReaderClosedPromiseResolve(reader) {
        reader._closedPromise_resolve !== void 0 && (reader._closedPromise_resolve(void 0), reader._closedPromise_resolve = void 0, reader._closedPromise_reject = void 0);
      }
      var AbortSteps = SymbolPolyfill("[[AbortSteps]]"), ErrorSteps = SymbolPolyfill("[[ErrorSteps]]"), CancelSteps = SymbolPolyfill("[[CancelSteps]]"), PullSteps = SymbolPolyfill("[[PullSteps]]"), NumberIsFinite = Number.isFinite || function(x) {
        return typeof x == "number" && isFinite(x);
      }, MathTrunc = Math.trunc || function(v) {
        return v < 0 ? Math.ceil(v) : Math.floor(v);
      };
      function isDictionary(x) {
        return typeof x == "object" || typeof x == "function";
      }
      function assertDictionary(obj, context) {
        if (obj !== void 0 && !isDictionary(obj))
          throw new TypeError(context + " is not an object.");
      }
      function assertFunction(x, context) {
        if (typeof x != "function")
          throw new TypeError(context + " is not a function.");
      }
      function isObject(x) {
        return typeof x == "object" && x !== null || typeof x == "function";
      }
      function assertObject(x, context) {
        if (!isObject(x))
          throw new TypeError(context + " is not an object.");
      }
      function assertRequiredArgument(x, position, context) {
        if (x === void 0)
          throw new TypeError("Parameter " + position + " is required in '" + context + "'.");
      }
      function assertRequiredField(x, field, context) {
        if (x === void 0)
          throw new TypeError(field + " is required in '" + context + "'.");
      }
      function convertUnrestrictedDouble(value) {
        return Number(value);
      }
      function censorNegativeZero(x) {
        return x === 0 ? 0 : x;
      }
      function integerPart(x) {
        return censorNegativeZero(MathTrunc(x));
      }
      function convertUnsignedLongLongWithEnforceRange(value, context) {
        var lowerBound = 0, upperBound = Number.MAX_SAFE_INTEGER, x = Number(value);
        if (x = censorNegativeZero(x), !NumberIsFinite(x))
          throw new TypeError(context + " is not a finite number");
        if (x = integerPart(x), x < lowerBound || x > upperBound)
          throw new TypeError(context + " is outside the accepted range of " + lowerBound + " to " + upperBound + ", inclusive");
        return !NumberIsFinite(x) || x === 0 ? 0 : x;
      }
      function assertReadableStream(x, context) {
        if (!IsReadableStream(x))
          throw new TypeError(context + " is not a ReadableStream.");
      }
      function AcquireReadableStreamDefaultReader(stream) {
        return new ReadableStreamDefaultReader(stream);
      }
      function ReadableStreamAddReadRequest(stream, readRequest) {
        stream._reader._readRequests.push(readRequest);
      }
      function ReadableStreamFulfillReadRequest(stream, chunk, done) {
        var reader = stream._reader, readRequest = reader._readRequests.shift();
        done ? readRequest._closeSteps() : readRequest._chunkSteps(chunk);
      }
      function ReadableStreamGetNumReadRequests(stream) {
        return stream._reader._readRequests.length;
      }
      function ReadableStreamHasDefaultReader(stream) {
        var reader = stream._reader;
        return !(reader === void 0 || !IsReadableStreamDefaultReader(reader));
      }
      var ReadableStreamDefaultReader = (
        /** @class */
        function() {
          function ReadableStreamDefaultReader2(stream) {
            if (assertRequiredArgument(stream, 1, "ReadableStreamDefaultReader"), assertReadableStream(stream, "First parameter"), IsReadableStreamLocked(stream))
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            ReadableStreamReaderGenericInitialize(this, stream), this._readRequests = new SimpleQueue();
          }
          return Object.defineProperty(ReadableStreamDefaultReader2.prototype, "closed", {
            /**
             * Returns a promise that will be fulfilled when the stream becomes closed,
             * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.
             */
            get: function() {
              return IsReadableStreamDefaultReader(this) ? this._closedPromise : promiseRejectedWith(defaultReaderBrandCheckException("closed"));
            },
            enumerable: !1,
            configurable: !0
          }), ReadableStreamDefaultReader2.prototype.cancel = function(reason) {
            return reason === void 0 && (reason = void 0), IsReadableStreamDefaultReader(this) ? this._ownerReadableStream === void 0 ? promiseRejectedWith(readerLockException("cancel")) : ReadableStreamReaderGenericCancel(this, reason) : promiseRejectedWith(defaultReaderBrandCheckException("cancel"));
          }, ReadableStreamDefaultReader2.prototype.read = function() {
            if (!IsReadableStreamDefaultReader(this))
              return promiseRejectedWith(defaultReaderBrandCheckException("read"));
            if (this._ownerReadableStream === void 0)
              return promiseRejectedWith(readerLockException("read from"));
            var resolvePromise, rejectPromise, promise = newPromise(function(resolve, reject) {
              resolvePromise = resolve, rejectPromise = reject;
            }), readRequest = {
              _chunkSteps: function(chunk) {
                return resolvePromise({ value: chunk, done: !1 });
              },
              _closeSteps: function() {
                return resolvePromise({ value: void 0, done: !0 });
              },
              _errorSteps: function(e23) {
                return rejectPromise(e23);
              }
            };
            return ReadableStreamDefaultReaderRead(this, readRequest), promise;
          }, ReadableStreamDefaultReader2.prototype.releaseLock = function() {
            if (!IsReadableStreamDefaultReader(this))
              throw defaultReaderBrandCheckException("releaseLock");
            if (this._ownerReadableStream !== void 0) {
              if (this._readRequests.length > 0)
                throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
              ReadableStreamReaderGenericRelease(this);
            }
          }, ReadableStreamDefaultReader2;
        }()
      );
      Object.defineProperties(ReadableStreamDefaultReader.prototype, {
        cancel: { enumerable: !0 },
        read: { enumerable: !0 },
        releaseLock: { enumerable: !0 },
        closed: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamDefaultReader",
        configurable: !0
      });
      function IsReadableStreamDefaultReader(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_readRequests") ? !1 : x instanceof ReadableStreamDefaultReader;
      }
      function ReadableStreamDefaultReaderRead(reader, readRequest) {
        var stream = reader._ownerReadableStream;
        stream._disturbed = !0, stream._state === "closed" ? readRequest._closeSteps() : stream._state === "errored" ? readRequest._errorSteps(stream._storedError) : stream._readableStreamController[PullSteps](readRequest);
      }
      function defaultReaderBrandCheckException(name) {
        return new TypeError("ReadableStreamDefaultReader.prototype." + name + " can only be used on a ReadableStreamDefaultReader");
      }
      var _a, AsyncIteratorPrototype;
      typeof SymbolPolyfill.asyncIterator == "symbol" && (AsyncIteratorPrototype = (_a = {}, // 25.1.3.1 %AsyncIteratorPrototype% [ @@asyncIterator ] ( )
      // https://tc39.github.io/ecma262/#sec-asynciteratorprototype-asynciterator
      _a[SymbolPolyfill.asyncIterator] = function() {
        return this;
      }, _a), Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, { enumerable: !1 }));
      var ReadableStreamAsyncIteratorImpl = (
        /** @class */
        function() {
          function ReadableStreamAsyncIteratorImpl2(reader, preventCancel) {
            this._ongoingPromise = void 0, this._isFinished = !1, this._reader = reader, this._preventCancel = preventCancel;
          }
          return ReadableStreamAsyncIteratorImpl2.prototype.next = function() {
            var _this = this, nextSteps = function() {
              return _this._nextSteps();
            };
            return this._ongoingPromise = this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) : nextSteps(), this._ongoingPromise;
          }, ReadableStreamAsyncIteratorImpl2.prototype.return = function(value) {
            var _this = this, returnSteps = function() {
              return _this._returnSteps(value);
            };
            return this._ongoingPromise ? transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) : returnSteps();
          }, ReadableStreamAsyncIteratorImpl2.prototype._nextSteps = function() {
            var _this = this;
            if (this._isFinished)
              return Promise.resolve({ value: void 0, done: !0 });
            var reader = this._reader;
            if (reader._ownerReadableStream === void 0)
              return promiseRejectedWith(readerLockException("iterate"));
            var resolvePromise, rejectPromise, promise = newPromise(function(resolve, reject) {
              resolvePromise = resolve, rejectPromise = reject;
            }), readRequest = {
              _chunkSteps: function(chunk) {
                _this._ongoingPromise = void 0, queueMicrotask2(function() {
                  return resolvePromise({ value: chunk, done: !1 });
                });
              },
              _closeSteps: function() {
                _this._ongoingPromise = void 0, _this._isFinished = !0, ReadableStreamReaderGenericRelease(reader), resolvePromise({ value: void 0, done: !0 });
              },
              _errorSteps: function(reason) {
                _this._ongoingPromise = void 0, _this._isFinished = !0, ReadableStreamReaderGenericRelease(reader), rejectPromise(reason);
              }
            };
            return ReadableStreamDefaultReaderRead(reader, readRequest), promise;
          }, ReadableStreamAsyncIteratorImpl2.prototype._returnSteps = function(value) {
            if (this._isFinished)
              return Promise.resolve({ value, done: !0 });
            this._isFinished = !0;
            var reader = this._reader;
            if (reader._ownerReadableStream === void 0)
              return promiseRejectedWith(readerLockException("finish iterating"));
            if (!this._preventCancel) {
              var result = ReadableStreamReaderGenericCancel(reader, value);
              return ReadableStreamReaderGenericRelease(reader), transformPromiseWith(result, function() {
                return { value, done: !0 };
              });
            }
            return ReadableStreamReaderGenericRelease(reader), promiseResolvedWith({ value, done: !0 });
          }, ReadableStreamAsyncIteratorImpl2;
        }()
      ), ReadableStreamAsyncIteratorPrototype = {
        next: function() {
          return IsReadableStreamAsyncIterator(this) ? this._asyncIteratorImpl.next() : promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"));
        },
        return: function(value) {
          return IsReadableStreamAsyncIterator(this) ? this._asyncIteratorImpl.return(value) : promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"));
        }
      };
      AsyncIteratorPrototype !== void 0 && Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);
      function AcquireReadableStreamAsyncIterator(stream, preventCancel) {
        var reader = AcquireReadableStreamDefaultReader(stream), impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel), iterator = Object.create(ReadableStreamAsyncIteratorPrototype);
        return iterator._asyncIteratorImpl = impl, iterator;
      }
      function IsReadableStreamAsyncIterator(x) {
        if (!typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_asyncIteratorImpl"))
          return !1;
        try {
          return x._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl;
        } catch {
          return !1;
        }
      }
      function streamAsyncIteratorBrandCheckException(name) {
        return new TypeError("ReadableStreamAsyncIterator." + name + " can only be used on a ReadableSteamAsyncIterator");
      }
      var NumberIsNaN = Number.isNaN || function(x) {
        return x !== x;
      };
      function CreateArrayFromList(elements) {
        return elements.slice();
      }
      function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {
        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
      }
      function TransferArrayBuffer(O) {
        return O;
      }
      function IsDetachedBuffer(O) {
        return !1;
      }
      function ArrayBufferSlice(buffer, begin, end) {
        if (buffer.slice)
          return buffer.slice(begin, end);
        var length = end - begin, slice = new ArrayBuffer(length);
        return CopyDataBlockBytes(slice, 0, buffer, begin, length), slice;
      }
      function IsNonNegativeNumber(v) {
        return !(typeof v != "number" || NumberIsNaN(v) || v < 0);
      }
      function CloneAsUint8Array(O) {
        var buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);
        return new Uint8Array(buffer);
      }
      function DequeueValue(container) {
        var pair = container._queue.shift();
        return container._queueTotalSize -= pair.size, container._queueTotalSize < 0 && (container._queueTotalSize = 0), pair.value;
      }
      function EnqueueValueWithSize(container, value, size2) {
        if (!IsNonNegativeNumber(size2) || size2 === 1 / 0)
          throw new RangeError("Size must be a finite, non-NaN, non-negative number.");
        container._queue.push({ value, size: size2 }), container._queueTotalSize += size2;
      }
      function PeekQueueValue(container) {
        var pair = container._queue.peek();
        return pair.value;
      }
      function ResetQueue(container) {
        container._queue = new SimpleQueue(), container._queueTotalSize = 0;
      }
      var ReadableStreamBYOBRequest = (
        /** @class */
        function() {
          function ReadableStreamBYOBRequest2() {
            throw new TypeError("Illegal constructor");
          }
          return Object.defineProperty(ReadableStreamBYOBRequest2.prototype, "view", {
            /**
             * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.
             */
            get: function() {
              if (!IsReadableStreamBYOBRequest(this))
                throw byobRequestBrandCheckException("view");
              return this._view;
            },
            enumerable: !1,
            configurable: !0
          }), ReadableStreamBYOBRequest2.prototype.respond = function(bytesWritten) {
            if (!IsReadableStreamBYOBRequest(this))
              throw byobRequestBrandCheckException("respond");
            if (assertRequiredArgument(bytesWritten, 1, "respond"), bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, "First parameter"), this._associatedReadableByteStreamController === void 0)
              throw new TypeError("This BYOB request has been invalidated");
            IsDetachedBuffer(this._view.buffer), ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
          }, ReadableStreamBYOBRequest2.prototype.respondWithNewView = function(view) {
            if (!IsReadableStreamBYOBRequest(this))
              throw byobRequestBrandCheckException("respondWithNewView");
            if (assertRequiredArgument(view, 1, "respondWithNewView"), !ArrayBuffer.isView(view))
              throw new TypeError("You can only respond with array buffer views");
            if (this._associatedReadableByteStreamController === void 0)
              throw new TypeError("This BYOB request has been invalidated");
            IsDetachedBuffer(view.buffer), ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
          }, ReadableStreamBYOBRequest2;
        }()
      );
      Object.defineProperties(ReadableStreamBYOBRequest.prototype, {
        respond: { enumerable: !0 },
        respondWithNewView: { enumerable: !0 },
        view: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamBYOBRequest",
        configurable: !0
      });
      var ReadableByteStreamController = (
        /** @class */
        function() {
          function ReadableByteStreamController2() {
            throw new TypeError("Illegal constructor");
          }
          return Object.defineProperty(ReadableByteStreamController2.prototype, "byobRequest", {
            /**
             * Returns the current BYOB pull request, or `null` if there isn't one.
             */
            get: function() {
              if (!IsReadableByteStreamController(this))
                throw byteStreamControllerBrandCheckException("byobRequest");
              return ReadableByteStreamControllerGetBYOBRequest(this);
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(ReadableByteStreamController2.prototype, "desiredSize", {
            /**
             * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is
             * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.
             */
            get: function() {
              if (!IsReadableByteStreamController(this))
                throw byteStreamControllerBrandCheckException("desiredSize");
              return ReadableByteStreamControllerGetDesiredSize(this);
            },
            enumerable: !1,
            configurable: !0
          }), ReadableByteStreamController2.prototype.close = function() {
            if (!IsReadableByteStreamController(this))
              throw byteStreamControllerBrandCheckException("close");
            if (this._closeRequested)
              throw new TypeError("The stream has already been closed; do not close it again!");
            var state = this._controlledReadableByteStream._state;
            if (state !== "readable")
              throw new TypeError("The stream (in " + state + " state) is not in the readable state and cannot be closed");
            ReadableByteStreamControllerClose(this);
          }, ReadableByteStreamController2.prototype.enqueue = function(chunk) {
            if (!IsReadableByteStreamController(this))
              throw byteStreamControllerBrandCheckException("enqueue");
            if (assertRequiredArgument(chunk, 1, "enqueue"), !ArrayBuffer.isView(chunk))
              throw new TypeError("chunk must be an array buffer view");
            if (chunk.byteLength === 0)
              throw new TypeError("chunk must have non-zero byteLength");
            if (chunk.buffer.byteLength === 0)
              throw new TypeError("chunk's buffer must have non-zero byteLength");
            if (this._closeRequested)
              throw new TypeError("stream is closed or draining");
            var state = this._controlledReadableByteStream._state;
            if (state !== "readable")
              throw new TypeError("The stream (in " + state + " state) is not in the readable state and cannot be enqueued to");
            ReadableByteStreamControllerEnqueue(this, chunk);
          }, ReadableByteStreamController2.prototype.error = function(e23) {
            if (e23 === void 0 && (e23 = void 0), !IsReadableByteStreamController(this))
              throw byteStreamControllerBrandCheckException("error");
            ReadableByteStreamControllerError(this, e23);
          }, ReadableByteStreamController2.prototype[CancelSteps] = function(reason) {
            ReadableByteStreamControllerClearPendingPullIntos(this), ResetQueue(this);
            var result = this._cancelAlgorithm(reason);
            return ReadableByteStreamControllerClearAlgorithms(this), result;
          }, ReadableByteStreamController2.prototype[PullSteps] = function(readRequest) {
            var stream = this._controlledReadableByteStream;
            if (this._queueTotalSize > 0) {
              var entry2 = this._queue.shift();
              this._queueTotalSize -= entry2.byteLength, ReadableByteStreamControllerHandleQueueDrain(this);
              var view = new Uint8Array(entry2.buffer, entry2.byteOffset, entry2.byteLength);
              readRequest._chunkSteps(view);
              return;
            }
            var autoAllocateChunkSize = this._autoAllocateChunkSize;
            if (autoAllocateChunkSize !== void 0) {
              var buffer = void 0;
              try {
                buffer = new ArrayBuffer(autoAllocateChunkSize);
              } catch (bufferE) {
                readRequest._errorSteps(bufferE);
                return;
              }
              var pullIntoDescriptor = {
                buffer,
                bufferByteLength: autoAllocateChunkSize,
                byteOffset: 0,
                byteLength: autoAllocateChunkSize,
                bytesFilled: 0,
                elementSize: 1,
                viewConstructor: Uint8Array,
                readerType: "default"
              };
              this._pendingPullIntos.push(pullIntoDescriptor);
            }
            ReadableStreamAddReadRequest(stream, readRequest), ReadableByteStreamControllerCallPullIfNeeded(this);
          }, ReadableByteStreamController2;
        }()
      );
      Object.defineProperties(ReadableByteStreamController.prototype, {
        close: { enumerable: !0 },
        enqueue: { enumerable: !0 },
        error: { enumerable: !0 },
        byobRequest: { enumerable: !0 },
        desiredSize: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableByteStreamController",
        configurable: !0
      });
      function IsReadableByteStreamController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledReadableByteStream") ? !1 : x instanceof ReadableByteStreamController;
      }
      function IsReadableStreamBYOBRequest(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_associatedReadableByteStreamController") ? !1 : x instanceof ReadableStreamBYOBRequest;
      }
      function ReadableByteStreamControllerCallPullIfNeeded(controller) {
        var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
        if (shouldPull) {
          if (controller._pulling) {
            controller._pullAgain = !0;
            return;
          }
          controller._pulling = !0;
          var pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, function() {
            controller._pulling = !1, controller._pullAgain && (controller._pullAgain = !1, ReadableByteStreamControllerCallPullIfNeeded(controller));
          }, function(e23) {
            ReadableByteStreamControllerError(controller, e23);
          });
        }
      }
      function ReadableByteStreamControllerClearPendingPullIntos(controller) {
        ReadableByteStreamControllerInvalidateBYOBRequest(controller), controller._pendingPullIntos = new SimpleQueue();
      }
      function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
        var done = !1;
        stream._state === "closed" && (done = !0);
        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
        pullIntoDescriptor.readerType === "default" ? ReadableStreamFulfillReadRequest(stream, filledView, done) : ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
      }
      function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
        var bytesFilled = pullIntoDescriptor.bytesFilled, elementSize = pullIntoDescriptor.elementSize;
        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
      }
      function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
        controller._queue.push({ buffer, byteOffset, byteLength }), controller._queueTotalSize += byteLength;
      }
      function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
        var elementSize = pullIntoDescriptor.elementSize, currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize, maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled), maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy, maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize, totalBytesToCopyRemaining = maxBytesToCopy, ready = !1;
        maxAlignedBytes > currentAlignedBytes && (totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled, ready = !0);
        for (var queue = controller._queue; totalBytesToCopyRemaining > 0; ) {
          var headOfQueue = queue.peek(), bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength), destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
          CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy), headOfQueue.byteLength === bytesToCopy ? queue.shift() : (headOfQueue.byteOffset += bytesToCopy, headOfQueue.byteLength -= bytesToCopy), controller._queueTotalSize -= bytesToCopy, ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor), totalBytesToCopyRemaining -= bytesToCopy;
        }
        return ready;
      }
      function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size2, pullIntoDescriptor) {
        pullIntoDescriptor.bytesFilled += size2;
      }
      function ReadableByteStreamControllerHandleQueueDrain(controller) {
        controller._queueTotalSize === 0 && controller._closeRequested ? (ReadableByteStreamControllerClearAlgorithms(controller), ReadableStreamClose(controller._controlledReadableByteStream)) : ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
      function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
        controller._byobRequest !== null && (controller._byobRequest._associatedReadableByteStreamController = void 0, controller._byobRequest._view = null, controller._byobRequest = null);
      }
      function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
        for (; controller._pendingPullIntos.length > 0; ) {
          if (controller._queueTotalSize === 0)
            return;
          var pullIntoDescriptor = controller._pendingPullIntos.peek();
          ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) && (ReadableByteStreamControllerShiftPendingPullInto(controller), ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor));
        }
      }
      function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {
        var stream = controller._controlledReadableByteStream, elementSize = 1;
        view.constructor !== DataView && (elementSize = view.constructor.BYTES_PER_ELEMENT);
        var ctor = view.constructor, buffer = view.buffer, pullIntoDescriptor = {
          buffer,
          bufferByteLength: buffer.byteLength,
          byteOffset: view.byteOffset,
          byteLength: view.byteLength,
          bytesFilled: 0,
          elementSize,
          viewConstructor: ctor,
          readerType: "byob"
        };
        if (controller._pendingPullIntos.length > 0) {
          controller._pendingPullIntos.push(pullIntoDescriptor), ReadableStreamAddReadIntoRequest(stream, readIntoRequest);
          return;
        }
        if (stream._state === "closed") {
          var emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
          readIntoRequest._closeSteps(emptyView);
          return;
        }
        if (controller._queueTotalSize > 0) {
          if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {
            var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
            ReadableByteStreamControllerHandleQueueDrain(controller), readIntoRequest._chunkSteps(filledView);
            return;
          }
          if (controller._closeRequested) {
            var e23 = new TypeError("Insufficient bytes to fill elements in the given buffer");
            ReadableByteStreamControllerError(controller, e23), readIntoRequest._errorSteps(e23);
            return;
          }
        }
        controller._pendingPullIntos.push(pullIntoDescriptor), ReadableStreamAddReadIntoRequest(stream, readIntoRequest), ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
      function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
        var stream = controller._controlledReadableByteStream;
        if (ReadableStreamHasBYOBReader(stream))
          for (; ReadableStreamGetNumReadIntoRequests(stream) > 0; ) {
            var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
            ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
          }
      }
      function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
        if (ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor), !(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize)) {
          ReadableByteStreamControllerShiftPendingPullInto(controller);
          var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
          if (remainderSize > 0) {
            var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled, remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);
            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
          }
          pullIntoDescriptor.bytesFilled -= remainderSize, ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor), ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
        }
      }
      function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
        var firstDescriptor = controller._pendingPullIntos.peek();
        ReadableByteStreamControllerInvalidateBYOBRequest(controller);
        var state = controller._controlledReadableByteStream._state;
        state === "closed" ? ReadableByteStreamControllerRespondInClosedState(controller) : ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor), ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
      function ReadableByteStreamControllerShiftPendingPullInto(controller) {
        var descriptor = controller._pendingPullIntos.shift();
        return descriptor;
      }
      function ReadableByteStreamControllerShouldCallPull(controller) {
        var stream = controller._controlledReadableByteStream;
        if (stream._state !== "readable" || controller._closeRequested || !controller._started)
          return !1;
        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0 || ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0)
          return !0;
        var desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);
        return desiredSize > 0;
      }
      function ReadableByteStreamControllerClearAlgorithms(controller) {
        controller._pullAlgorithm = void 0, controller._cancelAlgorithm = void 0;
      }
      function ReadableByteStreamControllerClose(controller) {
        var stream = controller._controlledReadableByteStream;
        if (!(controller._closeRequested || stream._state !== "readable")) {
          if (controller._queueTotalSize > 0) {
            controller._closeRequested = !0;
            return;
          }
          if (controller._pendingPullIntos.length > 0) {
            var firstPendingPullInto = controller._pendingPullIntos.peek();
            if (firstPendingPullInto.bytesFilled > 0) {
              var e23 = new TypeError("Insufficient bytes to fill elements in the given buffer");
              throw ReadableByteStreamControllerError(controller, e23), e23;
            }
          }
          ReadableByteStreamControllerClearAlgorithms(controller), ReadableStreamClose(stream);
        }
      }
      function ReadableByteStreamControllerEnqueue(controller, chunk) {
        var stream = controller._controlledReadableByteStream;
        if (!(controller._closeRequested || stream._state !== "readable")) {
          var buffer = chunk.buffer, byteOffset = chunk.byteOffset, byteLength = chunk.byteLength, transferredBuffer = buffer;
          if (controller._pendingPullIntos.length > 0) {
            var firstPendingPullInto = controller._pendingPullIntos.peek();
            IsDetachedBuffer(firstPendingPullInto.buffer), firstPendingPullInto.buffer = firstPendingPullInto.buffer;
          }
          if (ReadableByteStreamControllerInvalidateBYOBRequest(controller), ReadableStreamHasDefaultReader(stream))
            if (ReadableStreamGetNumReadRequests(stream) === 0)
              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
            else {
              controller._pendingPullIntos.length > 0 && ReadableByteStreamControllerShiftPendingPullInto(controller);
              var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
              ReadableStreamFulfillReadRequest(stream, transferredView, !1);
            }
          else
            ReadableStreamHasBYOBReader(stream) ? (ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength), ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller)) : ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
          ReadableByteStreamControllerCallPullIfNeeded(controller);
        }
      }
      function ReadableByteStreamControllerError(controller, e23) {
        var stream = controller._controlledReadableByteStream;
        stream._state === "readable" && (ReadableByteStreamControllerClearPendingPullIntos(controller), ResetQueue(controller), ReadableByteStreamControllerClearAlgorithms(controller), ReadableStreamError(stream, e23));
      }
      function ReadableByteStreamControllerGetBYOBRequest(controller) {
        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {
          var firstDescriptor = controller._pendingPullIntos.peek(), view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled), byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);
          SetUpReadableStreamBYOBRequest(byobRequest, controller, view), controller._byobRequest = byobRequest;
        }
        return controller._byobRequest;
      }
      function ReadableByteStreamControllerGetDesiredSize(controller) {
        var state = controller._controlledReadableByteStream._state;
        return state === "errored" ? null : state === "closed" ? 0 : controller._strategyHWM - controller._queueTotalSize;
      }
      function ReadableByteStreamControllerRespond(controller, bytesWritten) {
        var firstDescriptor = controller._pendingPullIntos.peek(), state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          if (bytesWritten !== 0)
            throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");
        } else {
          if (bytesWritten === 0)
            throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");
          if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength)
            throw new RangeError("bytesWritten out of range");
        }
        firstDescriptor.buffer = firstDescriptor.buffer, ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
      }
      function ReadableByteStreamControllerRespondWithNewView(controller, view) {
        var firstDescriptor = controller._pendingPullIntos.peek(), state = controller._controlledReadableByteStream._state;
        if (state === "closed") {
          if (view.byteLength !== 0)
            throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream");
        } else if (view.byteLength === 0)
          throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");
        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset)
          throw new RangeError("The region specified by view does not match byobRequest");
        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength)
          throw new RangeError("The buffer of view has different capacity than byobRequest");
        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength)
          throw new RangeError("The region specified by view is larger than byobRequest");
        var viewByteLength = view.byteLength;
        firstDescriptor.buffer = view.buffer, ReadableByteStreamControllerRespondInternal(controller, viewByteLength);
      }
      function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {
        controller._controlledReadableByteStream = stream, controller._pullAgain = !1, controller._pulling = !1, controller._byobRequest = null, controller._queue = controller._queueTotalSize = void 0, ResetQueue(controller), controller._closeRequested = !1, controller._started = !1, controller._strategyHWM = highWaterMark, controller._pullAlgorithm = pullAlgorithm, controller._cancelAlgorithm = cancelAlgorithm, controller._autoAllocateChunkSize = autoAllocateChunkSize, controller._pendingPullIntos = new SimpleQueue(), stream._readableStreamController = controller;
        var startResult = startAlgorithm();
        uponPromise(promiseResolvedWith(startResult), function() {
          controller._started = !0, ReadableByteStreamControllerCallPullIfNeeded(controller);
        }, function(r24) {
          ReadableByteStreamControllerError(controller, r24);
        });
      }
      function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {
        var controller = Object.create(ReadableByteStreamController.prototype), startAlgorithm = function() {
        }, pullAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, cancelAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        underlyingByteSource.start !== void 0 && (startAlgorithm = function() {
          return underlyingByteSource.start(controller);
        }), underlyingByteSource.pull !== void 0 && (pullAlgorithm = function() {
          return underlyingByteSource.pull(controller);
        }), underlyingByteSource.cancel !== void 0 && (cancelAlgorithm = function(reason) {
          return underlyingByteSource.cancel(reason);
        });
        var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
        if (autoAllocateChunkSize === 0)
          throw new TypeError("autoAllocateChunkSize must be greater than 0");
        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);
      }
      function SetUpReadableStreamBYOBRequest(request, controller, view) {
        request._associatedReadableByteStreamController = controller, request._view = view;
      }
      function byobRequestBrandCheckException(name) {
        return new TypeError("ReadableStreamBYOBRequest.prototype." + name + " can only be used on a ReadableStreamBYOBRequest");
      }
      function byteStreamControllerBrandCheckException(name) {
        return new TypeError("ReadableByteStreamController.prototype." + name + " can only be used on a ReadableByteStreamController");
      }
      function AcquireReadableStreamBYOBReader(stream) {
        return new ReadableStreamBYOBReader(stream);
      }
      function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {
        stream._reader._readIntoRequests.push(readIntoRequest);
      }
      function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
        var reader = stream._reader, readIntoRequest = reader._readIntoRequests.shift();
        done ? readIntoRequest._closeSteps(chunk) : readIntoRequest._chunkSteps(chunk);
      }
      function ReadableStreamGetNumReadIntoRequests(stream) {
        return stream._reader._readIntoRequests.length;
      }
      function ReadableStreamHasBYOBReader(stream) {
        var reader = stream._reader;
        return !(reader === void 0 || !IsReadableStreamBYOBReader(reader));
      }
      var ReadableStreamBYOBReader = (
        /** @class */
        function() {
          function ReadableStreamBYOBReader2(stream) {
            if (assertRequiredArgument(stream, 1, "ReadableStreamBYOBReader"), assertReadableStream(stream, "First parameter"), IsReadableStreamLocked(stream))
              throw new TypeError("This stream has already been locked for exclusive reading by another reader");
            if (!IsReadableByteStreamController(stream._readableStreamController))
              throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");
            ReadableStreamReaderGenericInitialize(this, stream), this._readIntoRequests = new SimpleQueue();
          }
          return Object.defineProperty(ReadableStreamBYOBReader2.prototype, "closed", {
            /**
             * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or
             * the reader's lock is released before the stream finishes closing.
             */
            get: function() {
              return IsReadableStreamBYOBReader(this) ? this._closedPromise : promiseRejectedWith(byobReaderBrandCheckException("closed"));
            },
            enumerable: !1,
            configurable: !0
          }), ReadableStreamBYOBReader2.prototype.cancel = function(reason) {
            return reason === void 0 && (reason = void 0), IsReadableStreamBYOBReader(this) ? this._ownerReadableStream === void 0 ? promiseRejectedWith(readerLockException("cancel")) : ReadableStreamReaderGenericCancel(this, reason) : promiseRejectedWith(byobReaderBrandCheckException("cancel"));
          }, ReadableStreamBYOBReader2.prototype.read = function(view) {
            if (!IsReadableStreamBYOBReader(this))
              return promiseRejectedWith(byobReaderBrandCheckException("read"));
            if (!ArrayBuffer.isView(view))
              return promiseRejectedWith(new TypeError("view must be an array buffer view"));
            if (view.byteLength === 0)
              return promiseRejectedWith(new TypeError("view must have non-zero byteLength"));
            if (view.buffer.byteLength === 0)
              return promiseRejectedWith(new TypeError("view's buffer must have non-zero byteLength"));
            if (IsDetachedBuffer(view.buffer), this._ownerReadableStream === void 0)
              return promiseRejectedWith(readerLockException("read from"));
            var resolvePromise, rejectPromise, promise = newPromise(function(resolve, reject) {
              resolvePromise = resolve, rejectPromise = reject;
            }), readIntoRequest = {
              _chunkSteps: function(chunk) {
                return resolvePromise({ value: chunk, done: !1 });
              },
              _closeSteps: function(chunk) {
                return resolvePromise({ value: chunk, done: !0 });
              },
              _errorSteps: function(e23) {
                return rejectPromise(e23);
              }
            };
            return ReadableStreamBYOBReaderRead(this, view, readIntoRequest), promise;
          }, ReadableStreamBYOBReader2.prototype.releaseLock = function() {
            if (!IsReadableStreamBYOBReader(this))
              throw byobReaderBrandCheckException("releaseLock");
            if (this._ownerReadableStream !== void 0) {
              if (this._readIntoRequests.length > 0)
                throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");
              ReadableStreamReaderGenericRelease(this);
            }
          }, ReadableStreamBYOBReader2;
        }()
      );
      Object.defineProperties(ReadableStreamBYOBReader.prototype, {
        cancel: { enumerable: !0 },
        read: { enumerable: !0 },
        releaseLock: { enumerable: !0 },
        closed: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamBYOBReader",
        configurable: !0
      });
      function IsReadableStreamBYOBReader(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_readIntoRequests") ? !1 : x instanceof ReadableStreamBYOBReader;
      }
      function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {
        var stream = reader._ownerReadableStream;
        stream._disturbed = !0, stream._state === "errored" ? readIntoRequest._errorSteps(stream._storedError) : ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);
      }
      function byobReaderBrandCheckException(name) {
        return new TypeError("ReadableStreamBYOBReader.prototype." + name + " can only be used on a ReadableStreamBYOBReader");
      }
      function ExtractHighWaterMark(strategy, defaultHWM) {
        var highWaterMark = strategy.highWaterMark;
        if (highWaterMark === void 0)
          return defaultHWM;
        if (NumberIsNaN(highWaterMark) || highWaterMark < 0)
          throw new RangeError("Invalid highWaterMark");
        return highWaterMark;
      }
      function ExtractSizeAlgorithm(strategy) {
        var size2 = strategy.size;
        return size2 || function() {
          return 1;
        };
      }
      function convertQueuingStrategy(init, context) {
        assertDictionary(init, context);
        var highWaterMark = init == null ? void 0 : init.highWaterMark, size2 = init == null ? void 0 : init.size;
        return {
          highWaterMark: highWaterMark === void 0 ? void 0 : convertUnrestrictedDouble(highWaterMark),
          size: size2 === void 0 ? void 0 : convertQueuingStrategySize(size2, context + " has member 'size' that")
        };
      }
      function convertQueuingStrategySize(fn, context) {
        return assertFunction(fn, context), function(chunk) {
          return convertUnrestrictedDouble(fn(chunk));
        };
      }
      function convertUnderlyingSink(original, context) {
        assertDictionary(original, context);
        var abort = original == null ? void 0 : original.abort, close = original == null ? void 0 : original.close, start = original == null ? void 0 : original.start, type2 = original == null ? void 0 : original.type, write = original == null ? void 0 : original.write;
        return {
          abort: abort === void 0 ? void 0 : convertUnderlyingSinkAbortCallback(abort, original, context + " has member 'abort' that"),
          close: close === void 0 ? void 0 : convertUnderlyingSinkCloseCallback(close, original, context + " has member 'close' that"),
          start: start === void 0 ? void 0 : convertUnderlyingSinkStartCallback(start, original, context + " has member 'start' that"),
          write: write === void 0 ? void 0 : convertUnderlyingSinkWriteCallback(write, original, context + " has member 'write' that"),
          type: type2
        };
      }
      function convertUnderlyingSinkAbortCallback(fn, original, context) {
        return assertFunction(fn, context), function(reason) {
          return promiseCall(fn, original, [reason]);
        };
      }
      function convertUnderlyingSinkCloseCallback(fn, original, context) {
        return assertFunction(fn, context), function() {
          return promiseCall(fn, original, []);
        };
      }
      function convertUnderlyingSinkStartCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return reflectCall(fn, original, [controller]);
        };
      }
      function convertUnderlyingSinkWriteCallback(fn, original, context) {
        return assertFunction(fn, context), function(chunk, controller) {
          return promiseCall(fn, original, [chunk, controller]);
        };
      }
      function assertWritableStream(x, context) {
        if (!IsWritableStream(x))
          throw new TypeError(context + " is not a WritableStream.");
      }
      function isAbortSignal(value) {
        if (typeof value != "object" || value === null)
          return !1;
        try {
          return typeof value.aborted == "boolean";
        } catch {
          return !1;
        }
      }
      var supportsAbortController = typeof AbortController == "function";
      function createAbortController() {
        if (supportsAbortController)
          return new AbortController();
      }
      var WritableStream = (
        /** @class */
        function() {
          function WritableStream2(rawUnderlyingSink, rawStrategy) {
            rawUnderlyingSink === void 0 && (rawUnderlyingSink = {}), rawStrategy === void 0 && (rawStrategy = {}), rawUnderlyingSink === void 0 ? rawUnderlyingSink = null : assertObject(rawUnderlyingSink, "First parameter");
            var strategy = convertQueuingStrategy(rawStrategy, "Second parameter"), underlyingSink = convertUnderlyingSink(rawUnderlyingSink, "First parameter");
            InitializeWritableStream(this);
            var type2 = underlyingSink.type;
            if (type2 !== void 0)
              throw new RangeError("Invalid type is specified");
            var sizeAlgorithm = ExtractSizeAlgorithm(strategy), highWaterMark = ExtractHighWaterMark(strategy, 1);
            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);
          }
          return Object.defineProperty(WritableStream2.prototype, "locked", {
            /**
             * Returns whether or not the writable stream is locked to a writer.
             */
            get: function() {
              if (!IsWritableStream(this))
                throw streamBrandCheckException$2("locked");
              return IsWritableStreamLocked(this);
            },
            enumerable: !1,
            configurable: !0
          }), WritableStream2.prototype.abort = function(reason) {
            return reason === void 0 && (reason = void 0), IsWritableStream(this) ? IsWritableStreamLocked(this) ? promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer")) : WritableStreamAbort(this, reason) : promiseRejectedWith(streamBrandCheckException$2("abort"));
          }, WritableStream2.prototype.close = function() {
            return IsWritableStream(this) ? IsWritableStreamLocked(this) ? promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer")) : WritableStreamCloseQueuedOrInFlight(this) ? promiseRejectedWith(new TypeError("Cannot close an already-closing stream")) : WritableStreamClose(this) : promiseRejectedWith(streamBrandCheckException$2("close"));
          }, WritableStream2.prototype.getWriter = function() {
            if (!IsWritableStream(this))
              throw streamBrandCheckException$2("getWriter");
            return AcquireWritableStreamDefaultWriter(this);
          }, WritableStream2;
        }()
      );
      Object.defineProperties(WritableStream.prototype, {
        abort: { enumerable: !0 },
        close: { enumerable: !0 },
        getWriter: { enumerable: !0 },
        locked: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {
        value: "WritableStream",
        configurable: !0
      });
      function AcquireWritableStreamDefaultWriter(stream) {
        return new WritableStreamDefaultWriter(stream);
      }
      function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
        highWaterMark === void 0 && (highWaterMark = 1), sizeAlgorithm === void 0 && (sizeAlgorithm = function() {
          return 1;
        });
        var stream = Object.create(WritableStream.prototype);
        InitializeWritableStream(stream);
        var controller = Object.create(WritableStreamDefaultController.prototype);
        return SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm), stream;
      }
      function InitializeWritableStream(stream) {
        stream._state = "writable", stream._storedError = void 0, stream._writer = void 0, stream._writableStreamController = void 0, stream._writeRequests = new SimpleQueue(), stream._inFlightWriteRequest = void 0, stream._closeRequest = void 0, stream._inFlightCloseRequest = void 0, stream._pendingAbortRequest = void 0, stream._backpressure = !1;
      }
      function IsWritableStream(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_writableStreamController") ? !1 : x instanceof WritableStream;
      }
      function IsWritableStreamLocked(stream) {
        return stream._writer !== void 0;
      }
      function WritableStreamAbort(stream, reason) {
        var _a2;
        if (stream._state === "closed" || stream._state === "errored")
          return promiseResolvedWith(void 0);
        stream._writableStreamController._abortReason = reason, (_a2 = stream._writableStreamController._abortController) === null || _a2 === void 0 || _a2.abort();
        var state = stream._state;
        if (state === "closed" || state === "errored")
          return promiseResolvedWith(void 0);
        if (stream._pendingAbortRequest !== void 0)
          return stream._pendingAbortRequest._promise;
        var wasAlreadyErroring = !1;
        state === "erroring" && (wasAlreadyErroring = !0, reason = void 0);
        var promise = newPromise(function(resolve, reject) {
          stream._pendingAbortRequest = {
            _promise: void 0,
            _resolve: resolve,
            _reject: reject,
            _reason: reason,
            _wasAlreadyErroring: wasAlreadyErroring
          };
        });
        return stream._pendingAbortRequest._promise = promise, wasAlreadyErroring || WritableStreamStartErroring(stream, reason), promise;
      }
      function WritableStreamClose(stream) {
        var state = stream._state;
        if (state === "closed" || state === "errored")
          return promiseRejectedWith(new TypeError("The stream (in " + state + " state) is not in the writable state and cannot be closed"));
        var promise = newPromise(function(resolve, reject) {
          var closeRequest = {
            _resolve: resolve,
            _reject: reject
          };
          stream._closeRequest = closeRequest;
        }), writer = stream._writer;
        return writer !== void 0 && stream._backpressure && state === "writable" && defaultWriterReadyPromiseResolve(writer), WritableStreamDefaultControllerClose(stream._writableStreamController), promise;
      }
      function WritableStreamAddWriteRequest(stream) {
        var promise = newPromise(function(resolve, reject) {
          var writeRequest = {
            _resolve: resolve,
            _reject: reject
          };
          stream._writeRequests.push(writeRequest);
        });
        return promise;
      }
      function WritableStreamDealWithRejection(stream, error2) {
        var state = stream._state;
        if (state === "writable") {
          WritableStreamStartErroring(stream, error2);
          return;
        }
        WritableStreamFinishErroring(stream);
      }
      function WritableStreamStartErroring(stream, reason) {
        var controller = stream._writableStreamController;
        stream._state = "erroring", stream._storedError = reason;
        var writer = stream._writer;
        writer !== void 0 && WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason), !WritableStreamHasOperationMarkedInFlight(stream) && controller._started && WritableStreamFinishErroring(stream);
      }
      function WritableStreamFinishErroring(stream) {
        stream._state = "errored", stream._writableStreamController[ErrorSteps]();
        var storedError = stream._storedError;
        if (stream._writeRequests.forEach(function(writeRequest) {
          writeRequest._reject(storedError);
        }), stream._writeRequests = new SimpleQueue(), stream._pendingAbortRequest === void 0) {
          WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          return;
        }
        var abortRequest = stream._pendingAbortRequest;
        if (stream._pendingAbortRequest = void 0, abortRequest._wasAlreadyErroring) {
          abortRequest._reject(storedError), WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
          return;
        }
        var promise = stream._writableStreamController[AbortSteps](abortRequest._reason);
        uponPromise(promise, function() {
          abortRequest._resolve(), WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
        }, function(reason) {
          abortRequest._reject(reason), WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
        });
      }
      function WritableStreamFinishInFlightWrite(stream) {
        stream._inFlightWriteRequest._resolve(void 0), stream._inFlightWriteRequest = void 0;
      }
      function WritableStreamFinishInFlightWriteWithError(stream, error2) {
        stream._inFlightWriteRequest._reject(error2), stream._inFlightWriteRequest = void 0, WritableStreamDealWithRejection(stream, error2);
      }
      function WritableStreamFinishInFlightClose(stream) {
        stream._inFlightCloseRequest._resolve(void 0), stream._inFlightCloseRequest = void 0;
        var state = stream._state;
        state === "erroring" && (stream._storedError = void 0, stream._pendingAbortRequest !== void 0 && (stream._pendingAbortRequest._resolve(), stream._pendingAbortRequest = void 0)), stream._state = "closed";
        var writer = stream._writer;
        writer !== void 0 && defaultWriterClosedPromiseResolve(writer);
      }
      function WritableStreamFinishInFlightCloseWithError(stream, error2) {
        stream._inFlightCloseRequest._reject(error2), stream._inFlightCloseRequest = void 0, stream._pendingAbortRequest !== void 0 && (stream._pendingAbortRequest._reject(error2), stream._pendingAbortRequest = void 0), WritableStreamDealWithRejection(stream, error2);
      }
      function WritableStreamCloseQueuedOrInFlight(stream) {
        return !(stream._closeRequest === void 0 && stream._inFlightCloseRequest === void 0);
      }
      function WritableStreamHasOperationMarkedInFlight(stream) {
        return !(stream._inFlightWriteRequest === void 0 && stream._inFlightCloseRequest === void 0);
      }
      function WritableStreamMarkCloseRequestInFlight(stream) {
        stream._inFlightCloseRequest = stream._closeRequest, stream._closeRequest = void 0;
      }
      function WritableStreamMarkFirstWriteRequestInFlight(stream) {
        stream._inFlightWriteRequest = stream._writeRequests.shift();
      }
      function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
        stream._closeRequest !== void 0 && (stream._closeRequest._reject(stream._storedError), stream._closeRequest = void 0);
        var writer = stream._writer;
        writer !== void 0 && defaultWriterClosedPromiseReject(writer, stream._storedError);
      }
      function WritableStreamUpdateBackpressure(stream, backpressure) {
        var writer = stream._writer;
        writer !== void 0 && backpressure !== stream._backpressure && (backpressure ? defaultWriterReadyPromiseReset(writer) : defaultWriterReadyPromiseResolve(writer)), stream._backpressure = backpressure;
      }
      var WritableStreamDefaultWriter = (
        /** @class */
        function() {
          function WritableStreamDefaultWriter2(stream) {
            if (assertRequiredArgument(stream, 1, "WritableStreamDefaultWriter"), assertWritableStream(stream, "First parameter"), IsWritableStreamLocked(stream))
              throw new TypeError("This stream has already been locked for exclusive writing by another writer");
            this._ownerWritableStream = stream, stream._writer = this;
            var state = stream._state;
            if (state === "writable")
              !WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure ? defaultWriterReadyPromiseInitialize(this) : defaultWriterReadyPromiseInitializeAsResolved(this), defaultWriterClosedPromiseInitialize(this);
            else if (state === "erroring")
              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError), defaultWriterClosedPromiseInitialize(this);
            else if (state === "closed")
              defaultWriterReadyPromiseInitializeAsResolved(this), defaultWriterClosedPromiseInitializeAsResolved(this);
            else {
              var storedError = stream._storedError;
              defaultWriterReadyPromiseInitializeAsRejected(this, storedError), defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
            }
          }
          return Object.defineProperty(WritableStreamDefaultWriter2.prototype, "closed", {
            /**
             * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or
             * the writer’s lock is released before the stream finishes closing.
             */
            get: function() {
              return IsWritableStreamDefaultWriter(this) ? this._closedPromise : promiseRejectedWith(defaultWriterBrandCheckException("closed"));
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(WritableStreamDefaultWriter2.prototype, "desiredSize", {
            /**
             * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.
             * A producer can use this information to determine the right amount of data to write.
             *
             * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort
             * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when
             * the writer’s lock is released.
             */
            get: function() {
              if (!IsWritableStreamDefaultWriter(this))
                throw defaultWriterBrandCheckException("desiredSize");
              if (this._ownerWritableStream === void 0)
                throw defaultWriterLockException("desiredSize");
              return WritableStreamDefaultWriterGetDesiredSize(this);
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(WritableStreamDefaultWriter2.prototype, "ready", {
            /**
             * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions
             * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips
             * back to zero or below, the getter will return a new promise that stays pending until the next transition.
             *
             * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become
             * rejected.
             */
            get: function() {
              return IsWritableStreamDefaultWriter(this) ? this._readyPromise : promiseRejectedWith(defaultWriterBrandCheckException("ready"));
            },
            enumerable: !1,
            configurable: !0
          }), WritableStreamDefaultWriter2.prototype.abort = function(reason) {
            return reason === void 0 && (reason = void 0), IsWritableStreamDefaultWriter(this) ? this._ownerWritableStream === void 0 ? promiseRejectedWith(defaultWriterLockException("abort")) : WritableStreamDefaultWriterAbort(this, reason) : promiseRejectedWith(defaultWriterBrandCheckException("abort"));
          }, WritableStreamDefaultWriter2.prototype.close = function() {
            if (!IsWritableStreamDefaultWriter(this))
              return promiseRejectedWith(defaultWriterBrandCheckException("close"));
            var stream = this._ownerWritableStream;
            return stream === void 0 ? promiseRejectedWith(defaultWriterLockException("close")) : WritableStreamCloseQueuedOrInFlight(stream) ? promiseRejectedWith(new TypeError("Cannot close an already-closing stream")) : WritableStreamDefaultWriterClose(this);
          }, WritableStreamDefaultWriter2.prototype.releaseLock = function() {
            if (!IsWritableStreamDefaultWriter(this))
              throw defaultWriterBrandCheckException("releaseLock");
            var stream = this._ownerWritableStream;
            stream !== void 0 && WritableStreamDefaultWriterRelease(this);
          }, WritableStreamDefaultWriter2.prototype.write = function(chunk) {
            return chunk === void 0 && (chunk = void 0), IsWritableStreamDefaultWriter(this) ? this._ownerWritableStream === void 0 ? promiseRejectedWith(defaultWriterLockException("write to")) : WritableStreamDefaultWriterWrite(this, chunk) : promiseRejectedWith(defaultWriterBrandCheckException("write"));
          }, WritableStreamDefaultWriter2;
        }()
      );
      Object.defineProperties(WritableStreamDefaultWriter.prototype, {
        abort: { enumerable: !0 },
        close: { enumerable: !0 },
        releaseLock: { enumerable: !0 },
        write: { enumerable: !0 },
        closed: { enumerable: !0 },
        desiredSize: { enumerable: !0 },
        ready: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {
        value: "WritableStreamDefaultWriter",
        configurable: !0
      });
      function IsWritableStreamDefaultWriter(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_ownerWritableStream") ? !1 : x instanceof WritableStreamDefaultWriter;
      }
      function WritableStreamDefaultWriterAbort(writer, reason) {
        var stream = writer._ownerWritableStream;
        return WritableStreamAbort(stream, reason);
      }
      function WritableStreamDefaultWriterClose(writer) {
        var stream = writer._ownerWritableStream;
        return WritableStreamClose(stream);
      }
      function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
        var stream = writer._ownerWritableStream, state = stream._state;
        return WritableStreamCloseQueuedOrInFlight(stream) || state === "closed" ? promiseResolvedWith(void 0) : state === "errored" ? promiseRejectedWith(stream._storedError) : WritableStreamDefaultWriterClose(writer);
      }
      function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error2) {
        writer._closedPromiseState === "pending" ? defaultWriterClosedPromiseReject(writer, error2) : defaultWriterClosedPromiseResetToRejected(writer, error2);
      }
      function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error2) {
        writer._readyPromiseState === "pending" ? defaultWriterReadyPromiseReject(writer, error2) : defaultWriterReadyPromiseResetToRejected(writer, error2);
      }
      function WritableStreamDefaultWriterGetDesiredSize(writer) {
        var stream = writer._ownerWritableStream, state = stream._state;
        return state === "errored" || state === "erroring" ? null : state === "closed" ? 0 : WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
      }
      function WritableStreamDefaultWriterRelease(writer) {
        var stream = writer._ownerWritableStream, releasedError = new TypeError("Writer was released and can no longer be used to monitor the stream's closedness");
        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError), WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError), stream._writer = void 0, writer._ownerWritableStream = void 0;
      }
      function WritableStreamDefaultWriterWrite(writer, chunk) {
        var stream = writer._ownerWritableStream, controller = stream._writableStreamController, chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
        if (stream !== writer._ownerWritableStream)
          return promiseRejectedWith(defaultWriterLockException("write to"));
        var state = stream._state;
        if (state === "errored")
          return promiseRejectedWith(stream._storedError);
        if (WritableStreamCloseQueuedOrInFlight(stream) || state === "closed")
          return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"));
        if (state === "erroring")
          return promiseRejectedWith(stream._storedError);
        var promise = WritableStreamAddWriteRequest(stream);
        return WritableStreamDefaultControllerWrite(controller, chunk, chunkSize), promise;
      }
      var closeSentinel = {}, WritableStreamDefaultController = (
        /** @class */
        function() {
          function WritableStreamDefaultController2() {
            throw new TypeError("Illegal constructor");
          }
          return Object.defineProperty(WritableStreamDefaultController2.prototype, "abortReason", {
            /**
             * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.
             *
             * @deprecated
             *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.
             *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.
             */
            get: function() {
              if (!IsWritableStreamDefaultController(this))
                throw defaultControllerBrandCheckException$2("abortReason");
              return this._abortReason;
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(WritableStreamDefaultController2.prototype, "signal", {
            /**
             * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.
             */
            get: function() {
              if (!IsWritableStreamDefaultController(this))
                throw defaultControllerBrandCheckException$2("signal");
              if (this._abortController === void 0)
                throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");
              return this._abortController.signal;
            },
            enumerable: !1,
            configurable: !0
          }), WritableStreamDefaultController2.prototype.error = function(e23) {
            if (e23 === void 0 && (e23 = void 0), !IsWritableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$2("error");
            var state = this._controlledWritableStream._state;
            state === "writable" && WritableStreamDefaultControllerError(this, e23);
          }, WritableStreamDefaultController2.prototype[AbortSteps] = function(reason) {
            var result = this._abortAlgorithm(reason);
            return WritableStreamDefaultControllerClearAlgorithms(this), result;
          }, WritableStreamDefaultController2.prototype[ErrorSteps] = function() {
            ResetQueue(this);
          }, WritableStreamDefaultController2;
        }()
      );
      Object.defineProperties(WritableStreamDefaultController.prototype, {
        abortReason: { enumerable: !0 },
        signal: { enumerable: !0 },
        error: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
        value: "WritableStreamDefaultController",
        configurable: !0
      });
      function IsWritableStreamDefaultController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledWritableStream") ? !1 : x instanceof WritableStreamDefaultController;
      }
      function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {
        controller._controlledWritableStream = stream, stream._writableStreamController = controller, controller._queue = void 0, controller._queueTotalSize = void 0, ResetQueue(controller), controller._abortReason = void 0, controller._abortController = createAbortController(), controller._started = !1, controller._strategySizeAlgorithm = sizeAlgorithm, controller._strategyHWM = highWaterMark, controller._writeAlgorithm = writeAlgorithm, controller._closeAlgorithm = closeAlgorithm, controller._abortAlgorithm = abortAlgorithm;
        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
        WritableStreamUpdateBackpressure(stream, backpressure);
        var startResult = startAlgorithm(), startPromise = promiseResolvedWith(startResult);
        uponPromise(startPromise, function() {
          controller._started = !0, WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }, function(r24) {
          controller._started = !0, WritableStreamDealWithRejection(stream, r24);
        });
      }
      function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {
        var controller = Object.create(WritableStreamDefaultController.prototype), startAlgorithm = function() {
        }, writeAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, closeAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, abortAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        underlyingSink.start !== void 0 && (startAlgorithm = function() {
          return underlyingSink.start(controller);
        }), underlyingSink.write !== void 0 && (writeAlgorithm = function(chunk) {
          return underlyingSink.write(chunk, controller);
        }), underlyingSink.close !== void 0 && (closeAlgorithm = function() {
          return underlyingSink.close();
        }), underlyingSink.abort !== void 0 && (abortAlgorithm = function(reason) {
          return underlyingSink.abort(reason);
        }), SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);
      }
      function WritableStreamDefaultControllerClearAlgorithms(controller) {
        controller._writeAlgorithm = void 0, controller._closeAlgorithm = void 0, controller._abortAlgorithm = void 0, controller._strategySizeAlgorithm = void 0;
      }
      function WritableStreamDefaultControllerClose(controller) {
        EnqueueValueWithSize(controller, closeSentinel, 0), WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
      }
      function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
        try {
          return controller._strategySizeAlgorithm(chunk);
        } catch (chunkSizeE) {
          return WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE), 1;
        }
      }
      function WritableStreamDefaultControllerGetDesiredSize(controller) {
        return controller._strategyHWM - controller._queueTotalSize;
      }
      function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
        try {
          EnqueueValueWithSize(controller, chunk, chunkSize);
        } catch (enqueueE) {
          WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
          return;
        }
        var stream = controller._controlledWritableStream;
        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === "writable") {
          var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
          WritableStreamUpdateBackpressure(stream, backpressure);
        }
        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
      }
      function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
        var stream = controller._controlledWritableStream;
        if (controller._started && stream._inFlightWriteRequest === void 0) {
          var state = stream._state;
          if (state === "erroring") {
            WritableStreamFinishErroring(stream);
            return;
          }
          if (controller._queue.length !== 0) {
            var value = PeekQueueValue(controller);
            value === closeSentinel ? WritableStreamDefaultControllerProcessClose(controller) : WritableStreamDefaultControllerProcessWrite(controller, value);
          }
        }
      }
      function WritableStreamDefaultControllerErrorIfNeeded(controller, error2) {
        controller._controlledWritableStream._state === "writable" && WritableStreamDefaultControllerError(controller, error2);
      }
      function WritableStreamDefaultControllerProcessClose(controller) {
        var stream = controller._controlledWritableStream;
        WritableStreamMarkCloseRequestInFlight(stream), DequeueValue(controller);
        var sinkClosePromise = controller._closeAlgorithm();
        WritableStreamDefaultControllerClearAlgorithms(controller), uponPromise(sinkClosePromise, function() {
          WritableStreamFinishInFlightClose(stream);
        }, function(reason) {
          WritableStreamFinishInFlightCloseWithError(stream, reason);
        });
      }
      function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
        var stream = controller._controlledWritableStream;
        WritableStreamMarkFirstWriteRequestInFlight(stream);
        var sinkWritePromise = controller._writeAlgorithm(chunk);
        uponPromise(sinkWritePromise, function() {
          WritableStreamFinishInFlightWrite(stream);
          var state = stream._state;
          if (DequeueValue(controller), !WritableStreamCloseQueuedOrInFlight(stream) && state === "writable") {
            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
            WritableStreamUpdateBackpressure(stream, backpressure);
          }
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
        }, function(reason) {
          stream._state === "writable" && WritableStreamDefaultControllerClearAlgorithms(controller), WritableStreamFinishInFlightWriteWithError(stream, reason);
        });
      }
      function WritableStreamDefaultControllerGetBackpressure(controller) {
        var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
        return desiredSize <= 0;
      }
      function WritableStreamDefaultControllerError(controller, error2) {
        var stream = controller._controlledWritableStream;
        WritableStreamDefaultControllerClearAlgorithms(controller), WritableStreamStartErroring(stream, error2);
      }
      function streamBrandCheckException$2(name) {
        return new TypeError("WritableStream.prototype." + name + " can only be used on a WritableStream");
      }
      function defaultControllerBrandCheckException$2(name) {
        return new TypeError("WritableStreamDefaultController.prototype." + name + " can only be used on a WritableStreamDefaultController");
      }
      function defaultWriterBrandCheckException(name) {
        return new TypeError("WritableStreamDefaultWriter.prototype." + name + " can only be used on a WritableStreamDefaultWriter");
      }
      function defaultWriterLockException(name) {
        return new TypeError("Cannot " + name + " a stream using a released writer");
      }
      function defaultWriterClosedPromiseInitialize(writer) {
        writer._closedPromise = newPromise(function(resolve, reject) {
          writer._closedPromise_resolve = resolve, writer._closedPromise_reject = reject, writer._closedPromiseState = "pending";
        });
      }
      function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
        defaultWriterClosedPromiseInitialize(writer), defaultWriterClosedPromiseReject(writer, reason);
      }
      function defaultWriterClosedPromiseInitializeAsResolved(writer) {
        defaultWriterClosedPromiseInitialize(writer), defaultWriterClosedPromiseResolve(writer);
      }
      function defaultWriterClosedPromiseReject(writer, reason) {
        writer._closedPromise_reject !== void 0 && (setPromiseIsHandledToTrue(writer._closedPromise), writer._closedPromise_reject(reason), writer._closedPromise_resolve = void 0, writer._closedPromise_reject = void 0, writer._closedPromiseState = "rejected");
      }
      function defaultWriterClosedPromiseResetToRejected(writer, reason) {
        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);
      }
      function defaultWriterClosedPromiseResolve(writer) {
        writer._closedPromise_resolve !== void 0 && (writer._closedPromise_resolve(void 0), writer._closedPromise_resolve = void 0, writer._closedPromise_reject = void 0, writer._closedPromiseState = "resolved");
      }
      function defaultWriterReadyPromiseInitialize(writer) {
        writer._readyPromise = newPromise(function(resolve, reject) {
          writer._readyPromise_resolve = resolve, writer._readyPromise_reject = reject;
        }), writer._readyPromiseState = "pending";
      }
      function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
        defaultWriterReadyPromiseInitialize(writer), defaultWriterReadyPromiseReject(writer, reason);
      }
      function defaultWriterReadyPromiseInitializeAsResolved(writer) {
        defaultWriterReadyPromiseInitialize(writer), defaultWriterReadyPromiseResolve(writer);
      }
      function defaultWriterReadyPromiseReject(writer, reason) {
        writer._readyPromise_reject !== void 0 && (setPromiseIsHandledToTrue(writer._readyPromise), writer._readyPromise_reject(reason), writer._readyPromise_resolve = void 0, writer._readyPromise_reject = void 0, writer._readyPromiseState = "rejected");
      }
      function defaultWriterReadyPromiseReset(writer) {
        defaultWriterReadyPromiseInitialize(writer);
      }
      function defaultWriterReadyPromiseResetToRejected(writer, reason) {
        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);
      }
      function defaultWriterReadyPromiseResolve(writer) {
        writer._readyPromise_resolve !== void 0 && (writer._readyPromise_resolve(void 0), writer._readyPromise_resolve = void 0, writer._readyPromise_reject = void 0, writer._readyPromiseState = "fulfilled");
      }
      var NativeDOMException = typeof DOMException < "u" ? DOMException : void 0;
      function isDOMExceptionConstructor(ctor) {
        if (!(typeof ctor == "function" || typeof ctor == "object"))
          return !1;
        try {
          return new ctor(), !0;
        } catch {
          return !1;
        }
      }
      function createDOMExceptionPolyfill() {
        var ctor = function(message2, name) {
          this.message = message2 || "", this.name = name || "Error", Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
        };
        return ctor.prototype = Object.create(Error.prototype), Object.defineProperty(ctor.prototype, "constructor", { value: ctor, writable: !0, configurable: !0 }), ctor;
      }
      var DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();
      function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {
        var reader = AcquireReadableStreamDefaultReader(source), writer = AcquireWritableStreamDefaultWriter(dest);
        source._disturbed = !0;
        var shuttingDown = !1, currentWrite = promiseResolvedWith(void 0);
        return newPromise(function(resolve, reject) {
          var abortAlgorithm;
          if (signal !== void 0) {
            if (abortAlgorithm = function() {
              var error2 = new DOMException$1("Aborted", "AbortError"), actions = [];
              preventAbort || actions.push(function() {
                return dest._state === "writable" ? WritableStreamAbort(dest, error2) : promiseResolvedWith(void 0);
              }), preventCancel || actions.push(function() {
                return source._state === "readable" ? ReadableStreamCancel(source, error2) : promiseResolvedWith(void 0);
              }), shutdownWithAction(function() {
                return Promise.all(actions.map(function(action) {
                  return action();
                }));
              }, !0, error2);
            }, signal.aborted) {
              abortAlgorithm();
              return;
            }
            signal.addEventListener("abort", abortAlgorithm);
          }
          function pipeLoop() {
            return newPromise(function(resolveLoop, rejectLoop) {
              function next(done) {
                done ? resolveLoop() : PerformPromiseThen(pipeStep(), next, rejectLoop);
              }
              next(!1);
            });
          }
          function pipeStep() {
            return shuttingDown ? promiseResolvedWith(!0) : PerformPromiseThen(writer._readyPromise, function() {
              return newPromise(function(resolveRead, rejectRead) {
                ReadableStreamDefaultReaderRead(reader, {
                  _chunkSteps: function(chunk) {
                    currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), void 0, noop2), resolveRead(!1);
                  },
                  _closeSteps: function() {
                    return resolveRead(!0);
                  },
                  _errorSteps: rejectRead
                });
              });
            });
          }
          if (isOrBecomesErrored(source, reader._closedPromise, function(storedError) {
            preventAbort ? shutdown(!0, storedError) : shutdownWithAction(function() {
              return WritableStreamAbort(dest, storedError);
            }, !0, storedError);
          }), isOrBecomesErrored(dest, writer._closedPromise, function(storedError) {
            preventCancel ? shutdown(!0, storedError) : shutdownWithAction(function() {
              return ReadableStreamCancel(source, storedError);
            }, !0, storedError);
          }), isOrBecomesClosed(source, reader._closedPromise, function() {
            preventClose ? shutdown() : shutdownWithAction(function() {
              return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);
            });
          }), WritableStreamCloseQueuedOrInFlight(dest) || dest._state === "closed") {
            var destClosed_1 = new TypeError("the destination writable stream closed before all data could be piped to it");
            preventCancel ? shutdown(!0, destClosed_1) : shutdownWithAction(function() {
              return ReadableStreamCancel(source, destClosed_1);
            }, !0, destClosed_1);
          }
          setPromiseIsHandledToTrue(pipeLoop());
          function waitForWritesToFinish() {
            var oldCurrentWrite = currentWrite;
            return PerformPromiseThen(currentWrite, function() {
              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : void 0;
            });
          }
          function isOrBecomesErrored(stream, promise, action) {
            stream._state === "errored" ? action(stream._storedError) : uponRejection(promise, action);
          }
          function isOrBecomesClosed(stream, promise, action) {
            stream._state === "closed" ? action() : uponFulfillment(promise, action);
          }
          function shutdownWithAction(action, originalIsError, originalError) {
            if (shuttingDown)
              return;
            shuttingDown = !0, dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest) ? uponFulfillment(waitForWritesToFinish(), doTheRest) : doTheRest();
            function doTheRest() {
              uponPromise(action(), function() {
                return finalize(originalIsError, originalError);
              }, function(newError) {
                return finalize(!0, newError);
              });
            }
          }
          function shutdown(isError, error2) {
            shuttingDown || (shuttingDown = !0, dest._state === "writable" && !WritableStreamCloseQueuedOrInFlight(dest) ? uponFulfillment(waitForWritesToFinish(), function() {
              return finalize(isError, error2);
            }) : finalize(isError, error2));
          }
          function finalize(isError, error2) {
            WritableStreamDefaultWriterRelease(writer), ReadableStreamReaderGenericRelease(reader), signal !== void 0 && signal.removeEventListener("abort", abortAlgorithm), isError ? reject(error2) : resolve(void 0);
          }
        });
      }
      var ReadableStreamDefaultController = (
        /** @class */
        function() {
          function ReadableStreamDefaultController2() {
            throw new TypeError("Illegal constructor");
          }
          return Object.defineProperty(ReadableStreamDefaultController2.prototype, "desiredSize", {
            /**
             * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is
             * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.
             */
            get: function() {
              if (!IsReadableStreamDefaultController(this))
                throw defaultControllerBrandCheckException$1("desiredSize");
              return ReadableStreamDefaultControllerGetDesiredSize(this);
            },
            enumerable: !1,
            configurable: !0
          }), ReadableStreamDefaultController2.prototype.close = function() {
            if (!IsReadableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$1("close");
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this))
              throw new TypeError("The stream is not in a state that permits close");
            ReadableStreamDefaultControllerClose(this);
          }, ReadableStreamDefaultController2.prototype.enqueue = function(chunk) {
            if (chunk === void 0 && (chunk = void 0), !IsReadableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$1("enqueue");
            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this))
              throw new TypeError("The stream is not in a state that permits enqueue");
            return ReadableStreamDefaultControllerEnqueue(this, chunk);
          }, ReadableStreamDefaultController2.prototype.error = function(e23) {
            if (e23 === void 0 && (e23 = void 0), !IsReadableStreamDefaultController(this))
              throw defaultControllerBrandCheckException$1("error");
            ReadableStreamDefaultControllerError(this, e23);
          }, ReadableStreamDefaultController2.prototype[CancelSteps] = function(reason) {
            ResetQueue(this);
            var result = this._cancelAlgorithm(reason);
            return ReadableStreamDefaultControllerClearAlgorithms(this), result;
          }, ReadableStreamDefaultController2.prototype[PullSteps] = function(readRequest) {
            var stream = this._controlledReadableStream;
            if (this._queue.length > 0) {
              var chunk = DequeueValue(this);
              this._closeRequested && this._queue.length === 0 ? (ReadableStreamDefaultControllerClearAlgorithms(this), ReadableStreamClose(stream)) : ReadableStreamDefaultControllerCallPullIfNeeded(this), readRequest._chunkSteps(chunk);
            } else
              ReadableStreamAddReadRequest(stream, readRequest), ReadableStreamDefaultControllerCallPullIfNeeded(this);
          }, ReadableStreamDefaultController2;
        }()
      );
      Object.defineProperties(ReadableStreamDefaultController.prototype, {
        close: { enumerable: !0 },
        enqueue: { enumerable: !0 },
        error: { enumerable: !0 },
        desiredSize: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStreamDefaultController",
        configurable: !0
      });
      function IsReadableStreamDefaultController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledReadableStream") ? !1 : x instanceof ReadableStreamDefaultController;
      }
      function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
        var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
        if (shouldPull) {
          if (controller._pulling) {
            controller._pullAgain = !0;
            return;
          }
          controller._pulling = !0;
          var pullPromise = controller._pullAlgorithm();
          uponPromise(pullPromise, function() {
            controller._pulling = !1, controller._pullAgain && (controller._pullAgain = !1, ReadableStreamDefaultControllerCallPullIfNeeded(controller));
          }, function(e23) {
            ReadableStreamDefaultControllerError(controller, e23);
          });
        }
      }
      function ReadableStreamDefaultControllerShouldCallPull(controller) {
        var stream = controller._controlledReadableStream;
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) || !controller._started)
          return !1;
        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0)
          return !0;
        var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
        return desiredSize > 0;
      }
      function ReadableStreamDefaultControllerClearAlgorithms(controller) {
        controller._pullAlgorithm = void 0, controller._cancelAlgorithm = void 0, controller._strategySizeAlgorithm = void 0;
      }
      function ReadableStreamDefaultControllerClose(controller) {
        if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
          var stream = controller._controlledReadableStream;
          controller._closeRequested = !0, controller._queue.length === 0 && (ReadableStreamDefaultControllerClearAlgorithms(controller), ReadableStreamClose(stream));
        }
      }
      function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
        if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {
          var stream = controller._controlledReadableStream;
          if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0)
            ReadableStreamFulfillReadRequest(stream, chunk, !1);
          else {
            var chunkSize = void 0;
            try {
              chunkSize = controller._strategySizeAlgorithm(chunk);
            } catch (chunkSizeE) {
              throw ReadableStreamDefaultControllerError(controller, chunkSizeE), chunkSizeE;
            }
            try {
              EnqueueValueWithSize(controller, chunk, chunkSize);
            } catch (enqueueE) {
              throw ReadableStreamDefaultControllerError(controller, enqueueE), enqueueE;
            }
          }
          ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }
      }
      function ReadableStreamDefaultControllerError(controller, e23) {
        var stream = controller._controlledReadableStream;
        stream._state === "readable" && (ResetQueue(controller), ReadableStreamDefaultControllerClearAlgorithms(controller), ReadableStreamError(stream, e23));
      }
      function ReadableStreamDefaultControllerGetDesiredSize(controller) {
        var state = controller._controlledReadableStream._state;
        return state === "errored" ? null : state === "closed" ? 0 : controller._strategyHWM - controller._queueTotalSize;
      }
      function ReadableStreamDefaultControllerHasBackpressure(controller) {
        return !ReadableStreamDefaultControllerShouldCallPull(controller);
      }
      function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {
        var state = controller._controlledReadableStream._state;
        return !controller._closeRequested && state === "readable";
      }
      function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
        controller._controlledReadableStream = stream, controller._queue = void 0, controller._queueTotalSize = void 0, ResetQueue(controller), controller._started = !1, controller._closeRequested = !1, controller._pullAgain = !1, controller._pulling = !1, controller._strategySizeAlgorithm = sizeAlgorithm, controller._strategyHWM = highWaterMark, controller._pullAlgorithm = pullAlgorithm, controller._cancelAlgorithm = cancelAlgorithm, stream._readableStreamController = controller;
        var startResult = startAlgorithm();
        uponPromise(promiseResolvedWith(startResult), function() {
          controller._started = !0, ReadableStreamDefaultControllerCallPullIfNeeded(controller);
        }, function(r24) {
          ReadableStreamDefaultControllerError(controller, r24);
        });
      }
      function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {
        var controller = Object.create(ReadableStreamDefaultController.prototype), startAlgorithm = function() {
        }, pullAlgorithm = function() {
          return promiseResolvedWith(void 0);
        }, cancelAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        underlyingSource.start !== void 0 && (startAlgorithm = function() {
          return underlyingSource.start(controller);
        }), underlyingSource.pull !== void 0 && (pullAlgorithm = function() {
          return underlyingSource.pull(controller);
        }), underlyingSource.cancel !== void 0 && (cancelAlgorithm = function(reason) {
          return underlyingSource.cancel(reason);
        }), SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);
      }
      function defaultControllerBrandCheckException$1(name) {
        return new TypeError("ReadableStreamDefaultController.prototype." + name + " can only be used on a ReadableStreamDefaultController");
      }
      function ReadableStreamTee(stream, cloneForBranch2) {
        return IsReadableByteStreamController(stream._readableStreamController) ? ReadableByteStreamTee(stream) : ReadableStreamDefaultTee(stream);
      }
      function ReadableStreamDefaultTee(stream, cloneForBranch2) {
        var reader = AcquireReadableStreamDefaultReader(stream), reading = !1, readAgain = !1, canceled1 = !1, canceled2 = !1, reason1, reason2, branch1, branch2, resolveCancelPromise, cancelPromise = newPromise(function(resolve) {
          resolveCancelPromise = resolve;
        });
        function pullAlgorithm() {
          if (reading)
            return readAgain = !0, promiseResolvedWith(void 0);
          reading = !0;
          var readRequest = {
            _chunkSteps: function(chunk) {
              queueMicrotask2(function() {
                readAgain = !1;
                var chunk1 = chunk, chunk2 = chunk;
                canceled1 || ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1), canceled2 || ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2), reading = !1, readAgain && pullAlgorithm();
              });
            },
            _closeSteps: function() {
              reading = !1, canceled1 || ReadableStreamDefaultControllerClose(branch1._readableStreamController), canceled2 || ReadableStreamDefaultControllerClose(branch2._readableStreamController), (!canceled1 || !canceled2) && resolveCancelPromise(void 0);
            },
            _errorSteps: function() {
              reading = !1;
            }
          };
          return ReadableStreamDefaultReaderRead(reader, readRequest), promiseResolvedWith(void 0);
        }
        function cancel1Algorithm(reason) {
          if (canceled1 = !0, reason1 = reason, canceled2) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function cancel2Algorithm(reason) {
          if (canceled2 = !0, reason2 = reason, canceled1) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function startAlgorithm() {
        }
        return branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm), branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm), uponRejection(reader._closedPromise, function(r24) {
          ReadableStreamDefaultControllerError(branch1._readableStreamController, r24), ReadableStreamDefaultControllerError(branch2._readableStreamController, r24), (!canceled1 || !canceled2) && resolveCancelPromise(void 0);
        }), [branch1, branch2];
      }
      function ReadableByteStreamTee(stream) {
        var reader = AcquireReadableStreamDefaultReader(stream), reading = !1, readAgainForBranch1 = !1, readAgainForBranch2 = !1, canceled1 = !1, canceled2 = !1, reason1, reason2, branch1, branch2, resolveCancelPromise, cancelPromise = newPromise(function(resolve) {
          resolveCancelPromise = resolve;
        });
        function forwardReaderError(thisReader) {
          uponRejection(thisReader._closedPromise, function(r24) {
            thisReader === reader && (ReadableByteStreamControllerError(branch1._readableStreamController, r24), ReadableByteStreamControllerError(branch2._readableStreamController, r24), (!canceled1 || !canceled2) && resolveCancelPromise(void 0));
          });
        }
        function pullWithDefaultReader() {
          IsReadableStreamBYOBReader(reader) && (ReadableStreamReaderGenericRelease(reader), reader = AcquireReadableStreamDefaultReader(stream), forwardReaderError(reader));
          var readRequest = {
            _chunkSteps: function(chunk) {
              queueMicrotask2(function() {
                readAgainForBranch1 = !1, readAgainForBranch2 = !1;
                var chunk1 = chunk, chunk2 = chunk;
                if (!canceled1 && !canceled2)
                  try {
                    chunk2 = CloneAsUint8Array(chunk);
                  } catch (cloneE) {
                    ReadableByteStreamControllerError(branch1._readableStreamController, cloneE), ReadableByteStreamControllerError(branch2._readableStreamController, cloneE), resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                    return;
                  }
                canceled1 || ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1), canceled2 || ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2), reading = !1, readAgainForBranch1 ? pull1Algorithm() : readAgainForBranch2 && pull2Algorithm();
              });
            },
            _closeSteps: function() {
              reading = !1, canceled1 || ReadableByteStreamControllerClose(branch1._readableStreamController), canceled2 || ReadableByteStreamControllerClose(branch2._readableStreamController), branch1._readableStreamController._pendingPullIntos.length > 0 && ReadableByteStreamControllerRespond(branch1._readableStreamController, 0), branch2._readableStreamController._pendingPullIntos.length > 0 && ReadableByteStreamControllerRespond(branch2._readableStreamController, 0), (!canceled1 || !canceled2) && resolveCancelPromise(void 0);
            },
            _errorSteps: function() {
              reading = !1;
            }
          };
          ReadableStreamDefaultReaderRead(reader, readRequest);
        }
        function pullWithBYOBReader(view, forBranch2) {
          IsReadableStreamDefaultReader(reader) && (ReadableStreamReaderGenericRelease(reader), reader = AcquireReadableStreamBYOBReader(stream), forwardReaderError(reader));
          var byobBranch = forBranch2 ? branch2 : branch1, otherBranch = forBranch2 ? branch1 : branch2, readIntoRequest = {
            _chunkSteps: function(chunk) {
              queueMicrotask2(function() {
                readAgainForBranch1 = !1, readAgainForBranch2 = !1;
                var byobCanceled = forBranch2 ? canceled2 : canceled1, otherCanceled = forBranch2 ? canceled1 : canceled2;
                if (otherCanceled)
                  byobCanceled || ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);
                else {
                  var clonedChunk = void 0;
                  try {
                    clonedChunk = CloneAsUint8Array(chunk);
                  } catch (cloneE) {
                    ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE), ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE), resolveCancelPromise(ReadableStreamCancel(stream, cloneE));
                    return;
                  }
                  byobCanceled || ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk), ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);
                }
                reading = !1, readAgainForBranch1 ? pull1Algorithm() : readAgainForBranch2 && pull2Algorithm();
              });
            },
            _closeSteps: function(chunk) {
              reading = !1;
              var byobCanceled = forBranch2 ? canceled2 : canceled1, otherCanceled = forBranch2 ? canceled1 : canceled2;
              byobCanceled || ReadableByteStreamControllerClose(byobBranch._readableStreamController), otherCanceled || ReadableByteStreamControllerClose(otherBranch._readableStreamController), chunk !== void 0 && (byobCanceled || ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk), !otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0 && ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0)), (!byobCanceled || !otherCanceled) && resolveCancelPromise(void 0);
            },
            _errorSteps: function() {
              reading = !1;
            }
          };
          ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);
        }
        function pull1Algorithm() {
          if (reading)
            return readAgainForBranch1 = !0, promiseResolvedWith(void 0);
          reading = !0;
          var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);
          return byobRequest === null ? pullWithDefaultReader() : pullWithBYOBReader(byobRequest._view, !1), promiseResolvedWith(void 0);
        }
        function pull2Algorithm() {
          if (reading)
            return readAgainForBranch2 = !0, promiseResolvedWith(void 0);
          reading = !0;
          var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);
          return byobRequest === null ? pullWithDefaultReader() : pullWithBYOBReader(byobRequest._view, !0), promiseResolvedWith(void 0);
        }
        function cancel1Algorithm(reason) {
          if (canceled1 = !0, reason1 = reason, canceled2) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function cancel2Algorithm(reason) {
          if (canceled2 = !0, reason2 = reason, canceled1) {
            var compositeReason = CreateArrayFromList([reason1, reason2]), cancelResult = ReadableStreamCancel(stream, compositeReason);
            resolveCancelPromise(cancelResult);
          }
          return cancelPromise;
        }
        function startAlgorithm() {
        }
        return branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm), branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm), forwardReaderError(reader), [branch1, branch2];
      }
      function convertUnderlyingDefaultOrByteSource(source, context) {
        assertDictionary(source, context);
        var original = source, autoAllocateChunkSize = original == null ? void 0 : original.autoAllocateChunkSize, cancel = original == null ? void 0 : original.cancel, pull = original == null ? void 0 : original.pull, start = original == null ? void 0 : original.start, type2 = original == null ? void 0 : original.type;
        return {
          autoAllocateChunkSize: autoAllocateChunkSize === void 0 ? void 0 : convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, context + " has member 'autoAllocateChunkSize' that"),
          cancel: cancel === void 0 ? void 0 : convertUnderlyingSourceCancelCallback(cancel, original, context + " has member 'cancel' that"),
          pull: pull === void 0 ? void 0 : convertUnderlyingSourcePullCallback(pull, original, context + " has member 'pull' that"),
          start: start === void 0 ? void 0 : convertUnderlyingSourceStartCallback(start, original, context + " has member 'start' that"),
          type: type2 === void 0 ? void 0 : convertReadableStreamType(type2, context + " has member 'type' that")
        };
      }
      function convertUnderlyingSourceCancelCallback(fn, original, context) {
        return assertFunction(fn, context), function(reason) {
          return promiseCall(fn, original, [reason]);
        };
      }
      function convertUnderlyingSourcePullCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return promiseCall(fn, original, [controller]);
        };
      }
      function convertUnderlyingSourceStartCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return reflectCall(fn, original, [controller]);
        };
      }
      function convertReadableStreamType(type2, context) {
        if (type2 = "" + type2, type2 !== "bytes")
          throw new TypeError(context + " '" + type2 + "' is not a valid enumeration value for ReadableStreamType");
        return type2;
      }
      function convertReaderOptions(options, context) {
        assertDictionary(options, context);
        var mode = options == null ? void 0 : options.mode;
        return {
          mode: mode === void 0 ? void 0 : convertReadableStreamReaderMode(mode, context + " has member 'mode' that")
        };
      }
      function convertReadableStreamReaderMode(mode, context) {
        if (mode = "" + mode, mode !== "byob")
          throw new TypeError(context + " '" + mode + "' is not a valid enumeration value for ReadableStreamReaderMode");
        return mode;
      }
      function convertIteratorOptions(options, context) {
        assertDictionary(options, context);
        var preventCancel = options == null ? void 0 : options.preventCancel;
        return { preventCancel: Boolean(preventCancel) };
      }
      function convertPipeOptions(options, context) {
        assertDictionary(options, context);
        var preventAbort = options == null ? void 0 : options.preventAbort, preventCancel = options == null ? void 0 : options.preventCancel, preventClose = options == null ? void 0 : options.preventClose, signal = options == null ? void 0 : options.signal;
        return signal !== void 0 && assertAbortSignal(signal, context + " has member 'signal' that"), {
          preventAbort: Boolean(preventAbort),
          preventCancel: Boolean(preventCancel),
          preventClose: Boolean(preventClose),
          signal
        };
      }
      function assertAbortSignal(signal, context) {
        if (!isAbortSignal(signal))
          throw new TypeError(context + " is not an AbortSignal.");
      }
      function convertReadableWritablePair(pair, context) {
        assertDictionary(pair, context);
        var readable = pair == null ? void 0 : pair.readable;
        assertRequiredField(readable, "readable", "ReadableWritablePair"), assertReadableStream(readable, context + " has member 'readable' that");
        var writable = pair == null ? void 0 : pair.writable;
        return assertRequiredField(writable, "writable", "ReadableWritablePair"), assertWritableStream(writable, context + " has member 'writable' that"), { readable, writable };
      }
      var ReadableStream2 = (
        /** @class */
        function() {
          function ReadableStream3(rawUnderlyingSource, rawStrategy) {
            rawUnderlyingSource === void 0 && (rawUnderlyingSource = {}), rawStrategy === void 0 && (rawStrategy = {}), rawUnderlyingSource === void 0 ? rawUnderlyingSource = null : assertObject(rawUnderlyingSource, "First parameter");
            var strategy = convertQueuingStrategy(rawStrategy, "Second parameter"), underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, "First parameter");
            if (InitializeReadableStream(this), underlyingSource.type === "bytes") {
              if (strategy.size !== void 0)
                throw new RangeError("The strategy for a byte stream cannot have a size function");
              var highWaterMark = ExtractHighWaterMark(strategy, 0);
              SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);
            } else {
              var sizeAlgorithm = ExtractSizeAlgorithm(strategy), highWaterMark = ExtractHighWaterMark(strategy, 1);
              SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);
            }
          }
          return Object.defineProperty(ReadableStream3.prototype, "locked", {
            /**
             * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.
             */
            get: function() {
              if (!IsReadableStream(this))
                throw streamBrandCheckException$1("locked");
              return IsReadableStreamLocked(this);
            },
            enumerable: !1,
            configurable: !0
          }), ReadableStream3.prototype.cancel = function(reason) {
            return reason === void 0 && (reason = void 0), IsReadableStream(this) ? IsReadableStreamLocked(this) ? promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader")) : ReadableStreamCancel(this, reason) : promiseRejectedWith(streamBrandCheckException$1("cancel"));
          }, ReadableStream3.prototype.getReader = function(rawOptions) {
            if (rawOptions === void 0 && (rawOptions = void 0), !IsReadableStream(this))
              throw streamBrandCheckException$1("getReader");
            var options = convertReaderOptions(rawOptions, "First parameter");
            return options.mode === void 0 ? AcquireReadableStreamDefaultReader(this) : AcquireReadableStreamBYOBReader(this);
          }, ReadableStream3.prototype.pipeThrough = function(rawTransform, rawOptions) {
            if (rawOptions === void 0 && (rawOptions = {}), !IsReadableStream(this))
              throw streamBrandCheckException$1("pipeThrough");
            assertRequiredArgument(rawTransform, 1, "pipeThrough");
            var transform = convertReadableWritablePair(rawTransform, "First parameter"), options = convertPipeOptions(rawOptions, "Second parameter");
            if (IsReadableStreamLocked(this))
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");
            if (IsWritableStreamLocked(transform.writable))
              throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");
            var promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
            return setPromiseIsHandledToTrue(promise), transform.readable;
          }, ReadableStream3.prototype.pipeTo = function(destination, rawOptions) {
            if (rawOptions === void 0 && (rawOptions = {}), !IsReadableStream(this))
              return promiseRejectedWith(streamBrandCheckException$1("pipeTo"));
            if (destination === void 0)
              return promiseRejectedWith("Parameter 1 is required in 'pipeTo'.");
            if (!IsWritableStream(destination))
              return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo's first argument must be a WritableStream"));
            var options;
            try {
              options = convertPipeOptions(rawOptions, "Second parameter");
            } catch (e23) {
              return promiseRejectedWith(e23);
            }
            return IsReadableStreamLocked(this) ? promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream")) : IsWritableStreamLocked(destination) ? promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream")) : ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);
          }, ReadableStream3.prototype.tee = function() {
            if (!IsReadableStream(this))
              throw streamBrandCheckException$1("tee");
            var branches = ReadableStreamTee(this);
            return CreateArrayFromList(branches);
          }, ReadableStream3.prototype.values = function(rawOptions) {
            if (rawOptions === void 0 && (rawOptions = void 0), !IsReadableStream(this))
              throw streamBrandCheckException$1("values");
            var options = convertIteratorOptions(rawOptions, "First parameter");
            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);
          }, ReadableStream3;
        }()
      );
      Object.defineProperties(ReadableStream2.prototype, {
        cancel: { enumerable: !0 },
        getReader: { enumerable: !0 },
        pipeThrough: { enumerable: !0 },
        pipeTo: { enumerable: !0 },
        tee: { enumerable: !0 },
        values: { enumerable: !0 },
        locked: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.toStringTag, {
        value: "ReadableStream",
        configurable: !0
      }), typeof SymbolPolyfill.asyncIterator == "symbol" && Object.defineProperty(ReadableStream2.prototype, SymbolPolyfill.asyncIterator, {
        value: ReadableStream2.prototype.values,
        writable: !0,
        configurable: !0
      });
      function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {
        highWaterMark === void 0 && (highWaterMark = 1), sizeAlgorithm === void 0 && (sizeAlgorithm = function() {
          return 1;
        });
        var stream = Object.create(ReadableStream2.prototype);
        InitializeReadableStream(stream);
        var controller = Object.create(ReadableStreamDefaultController.prototype);
        return SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm), stream;
      }
      function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {
        var stream = Object.create(ReadableStream2.prototype);
        InitializeReadableStream(stream);
        var controller = Object.create(ReadableByteStreamController.prototype);
        return SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, void 0), stream;
      }
      function InitializeReadableStream(stream) {
        stream._state = "readable", stream._reader = void 0, stream._storedError = void 0, stream._disturbed = !1;
      }
      function IsReadableStream(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_readableStreamController") ? !1 : x instanceof ReadableStream2;
      }
      function IsReadableStreamLocked(stream) {
        return stream._reader !== void 0;
      }
      function ReadableStreamCancel(stream, reason) {
        if (stream._disturbed = !0, stream._state === "closed")
          return promiseResolvedWith(void 0);
        if (stream._state === "errored")
          return promiseRejectedWith(stream._storedError);
        ReadableStreamClose(stream);
        var reader = stream._reader;
        reader !== void 0 && IsReadableStreamBYOBReader(reader) && (reader._readIntoRequests.forEach(function(readIntoRequest) {
          readIntoRequest._closeSteps(void 0);
        }), reader._readIntoRequests = new SimpleQueue());
        var sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);
        return transformPromiseWith(sourceCancelPromise, noop2);
      }
      function ReadableStreamClose(stream) {
        stream._state = "closed";
        var reader = stream._reader;
        reader !== void 0 && (defaultReaderClosedPromiseResolve(reader), IsReadableStreamDefaultReader(reader) && (reader._readRequests.forEach(function(readRequest) {
          readRequest._closeSteps();
        }), reader._readRequests = new SimpleQueue()));
      }
      function ReadableStreamError(stream, e23) {
        stream._state = "errored", stream._storedError = e23;
        var reader = stream._reader;
        reader !== void 0 && (defaultReaderClosedPromiseReject(reader, e23), IsReadableStreamDefaultReader(reader) ? (reader._readRequests.forEach(function(readRequest) {
          readRequest._errorSteps(e23);
        }), reader._readRequests = new SimpleQueue()) : (reader._readIntoRequests.forEach(function(readIntoRequest) {
          readIntoRequest._errorSteps(e23);
        }), reader._readIntoRequests = new SimpleQueue()));
      }
      function streamBrandCheckException$1(name) {
        return new TypeError("ReadableStream.prototype." + name + " can only be used on a ReadableStream");
      }
      function convertQueuingStrategyInit(init, context) {
        assertDictionary(init, context);
        var highWaterMark = init == null ? void 0 : init.highWaterMark;
        return assertRequiredField(highWaterMark, "highWaterMark", "QueuingStrategyInit"), {
          highWaterMark: convertUnrestrictedDouble(highWaterMark)
        };
      }
      var byteLengthSizeFunction = function(chunk) {
        return chunk.byteLength;
      };
      try {
        Object.defineProperty(byteLengthSizeFunction, "name", {
          value: "size",
          configurable: !0
        });
      } catch {
      }
      var ByteLengthQueuingStrategy = (
        /** @class */
        function() {
          function ByteLengthQueuingStrategy2(options) {
            assertRequiredArgument(options, 1, "ByteLengthQueuingStrategy"), options = convertQueuingStrategyInit(options, "First parameter"), this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;
          }
          return Object.defineProperty(ByteLengthQueuingStrategy2.prototype, "highWaterMark", {
            /**
             * Returns the high water mark provided to the constructor.
             */
            get: function() {
              if (!IsByteLengthQueuingStrategy(this))
                throw byteLengthBrandCheckException("highWaterMark");
              return this._byteLengthQueuingStrategyHighWaterMark;
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(ByteLengthQueuingStrategy2.prototype, "size", {
            /**
             * Measures the size of `chunk` by returning the value of its `byteLength` property.
             */
            get: function() {
              if (!IsByteLengthQueuingStrategy(this))
                throw byteLengthBrandCheckException("size");
              return byteLengthSizeFunction;
            },
            enumerable: !1,
            configurable: !0
          }), ByteLengthQueuingStrategy2;
        }()
      );
      Object.defineProperties(ByteLengthQueuingStrategy.prototype, {
        highWaterMark: { enumerable: !0 },
        size: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
        value: "ByteLengthQueuingStrategy",
        configurable: !0
      });
      function byteLengthBrandCheckException(name) {
        return new TypeError("ByteLengthQueuingStrategy.prototype." + name + " can only be used on a ByteLengthQueuingStrategy");
      }
      function IsByteLengthQueuingStrategy(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_byteLengthQueuingStrategyHighWaterMark") ? !1 : x instanceof ByteLengthQueuingStrategy;
      }
      var countSizeFunction = function() {
        return 1;
      };
      try {
        Object.defineProperty(countSizeFunction, "name", {
          value: "size",
          configurable: !0
        });
      } catch {
      }
      var CountQueuingStrategy = (
        /** @class */
        function() {
          function CountQueuingStrategy2(options) {
            assertRequiredArgument(options, 1, "CountQueuingStrategy"), options = convertQueuingStrategyInit(options, "First parameter"), this._countQueuingStrategyHighWaterMark = options.highWaterMark;
          }
          return Object.defineProperty(CountQueuingStrategy2.prototype, "highWaterMark", {
            /**
             * Returns the high water mark provided to the constructor.
             */
            get: function() {
              if (!IsCountQueuingStrategy(this))
                throw countBrandCheckException("highWaterMark");
              return this._countQueuingStrategyHighWaterMark;
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(CountQueuingStrategy2.prototype, "size", {
            /**
             * Measures the size of `chunk` by always returning 1.
             * This ensures that the total queue size is a count of the number of chunks in the queue.
             */
            get: function() {
              if (!IsCountQueuingStrategy(this))
                throw countBrandCheckException("size");
              return countSizeFunction;
            },
            enumerable: !1,
            configurable: !0
          }), CountQueuingStrategy2;
        }()
      );
      Object.defineProperties(CountQueuingStrategy.prototype, {
        highWaterMark: { enumerable: !0 },
        size: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {
        value: "CountQueuingStrategy",
        configurable: !0
      });
      function countBrandCheckException(name) {
        return new TypeError("CountQueuingStrategy.prototype." + name + " can only be used on a CountQueuingStrategy");
      }
      function IsCountQueuingStrategy(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_countQueuingStrategyHighWaterMark") ? !1 : x instanceof CountQueuingStrategy;
      }
      function convertTransformer(original, context) {
        assertDictionary(original, context);
        var flush = original == null ? void 0 : original.flush, readableType = original == null ? void 0 : original.readableType, start = original == null ? void 0 : original.start, transform = original == null ? void 0 : original.transform, writableType = original == null ? void 0 : original.writableType;
        return {
          flush: flush === void 0 ? void 0 : convertTransformerFlushCallback(flush, original, context + " has member 'flush' that"),
          readableType,
          start: start === void 0 ? void 0 : convertTransformerStartCallback(start, original, context + " has member 'start' that"),
          transform: transform === void 0 ? void 0 : convertTransformerTransformCallback(transform, original, context + " has member 'transform' that"),
          writableType
        };
      }
      function convertTransformerFlushCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return promiseCall(fn, original, [controller]);
        };
      }
      function convertTransformerStartCallback(fn, original, context) {
        return assertFunction(fn, context), function(controller) {
          return reflectCall(fn, original, [controller]);
        };
      }
      function convertTransformerTransformCallback(fn, original, context) {
        return assertFunction(fn, context), function(chunk, controller) {
          return promiseCall(fn, original, [chunk, controller]);
        };
      }
      var TransformStream = (
        /** @class */
        function() {
          function TransformStream2(rawTransformer, rawWritableStrategy, rawReadableStrategy) {
            rawTransformer === void 0 && (rawTransformer = {}), rawWritableStrategy === void 0 && (rawWritableStrategy = {}), rawReadableStrategy === void 0 && (rawReadableStrategy = {}), rawTransformer === void 0 && (rawTransformer = null);
            var writableStrategy = convertQueuingStrategy(rawWritableStrategy, "Second parameter"), readableStrategy = convertQueuingStrategy(rawReadableStrategy, "Third parameter"), transformer = convertTransformer(rawTransformer, "First parameter");
            if (transformer.readableType !== void 0)
              throw new RangeError("Invalid readableType specified");
            if (transformer.writableType !== void 0)
              throw new RangeError("Invalid writableType specified");
            var readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0), readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy), writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1), writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy), startPromise_resolve, startPromise = newPromise(function(resolve) {
              startPromise_resolve = resolve;
            });
            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm), SetUpTransformStreamDefaultControllerFromTransformer(this, transformer), transformer.start !== void 0 ? startPromise_resolve(transformer.start(this._transformStreamController)) : startPromise_resolve(void 0);
          }
          return Object.defineProperty(TransformStream2.prototype, "readable", {
            /**
             * The readable side of the transform stream.
             */
            get: function() {
              if (!IsTransformStream(this))
                throw streamBrandCheckException("readable");
              return this._readable;
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(TransformStream2.prototype, "writable", {
            /**
             * The writable side of the transform stream.
             */
            get: function() {
              if (!IsTransformStream(this))
                throw streamBrandCheckException("writable");
              return this._writable;
            },
            enumerable: !1,
            configurable: !0
          }), TransformStream2;
        }()
      );
      Object.defineProperties(TransformStream.prototype, {
        readable: { enumerable: !0 },
        writable: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {
        value: "TransformStream",
        configurable: !0
      });
      function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {
        function startAlgorithm() {
          return startPromise;
        }
        function writeAlgorithm(chunk) {
          return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);
        }
        function abortAlgorithm(reason) {
          return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);
        }
        function closeAlgorithm() {
          return TransformStreamDefaultSinkCloseAlgorithm(stream);
        }
        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);
        function pullAlgorithm() {
          return TransformStreamDefaultSourcePullAlgorithm(stream);
        }
        function cancelAlgorithm(reason) {
          return TransformStreamErrorWritableAndUnblockWrite(stream, reason), promiseResolvedWith(void 0);
        }
        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm), stream._backpressure = void 0, stream._backpressureChangePromise = void 0, stream._backpressureChangePromise_resolve = void 0, TransformStreamSetBackpressure(stream, !0), stream._transformStreamController = void 0;
      }
      function IsTransformStream(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_transformStreamController") ? !1 : x instanceof TransformStream;
      }
      function TransformStreamError(stream, e23) {
        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e23), TransformStreamErrorWritableAndUnblockWrite(stream, e23);
      }
      function TransformStreamErrorWritableAndUnblockWrite(stream, e23) {
        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController), WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e23), stream._backpressure && TransformStreamSetBackpressure(stream, !1);
      }
      function TransformStreamSetBackpressure(stream, backpressure) {
        stream._backpressureChangePromise !== void 0 && stream._backpressureChangePromise_resolve(), stream._backpressureChangePromise = newPromise(function(resolve) {
          stream._backpressureChangePromise_resolve = resolve;
        }), stream._backpressure = backpressure;
      }
      var TransformStreamDefaultController = (
        /** @class */
        function() {
          function TransformStreamDefaultController2() {
            throw new TypeError("Illegal constructor");
          }
          return Object.defineProperty(TransformStreamDefaultController2.prototype, "desiredSize", {
            /**
             * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.
             */
            get: function() {
              if (!IsTransformStreamDefaultController(this))
                throw defaultControllerBrandCheckException("desiredSize");
              var readableController = this._controlledTransformStream._readable._readableStreamController;
              return ReadableStreamDefaultControllerGetDesiredSize(readableController);
            },
            enumerable: !1,
            configurable: !0
          }), TransformStreamDefaultController2.prototype.enqueue = function(chunk) {
            if (chunk === void 0 && (chunk = void 0), !IsTransformStreamDefaultController(this))
              throw defaultControllerBrandCheckException("enqueue");
            TransformStreamDefaultControllerEnqueue(this, chunk);
          }, TransformStreamDefaultController2.prototype.error = function(reason) {
            if (reason === void 0 && (reason = void 0), !IsTransformStreamDefaultController(this))
              throw defaultControllerBrandCheckException("error");
            TransformStreamDefaultControllerError(this, reason);
          }, TransformStreamDefaultController2.prototype.terminate = function() {
            if (!IsTransformStreamDefaultController(this))
              throw defaultControllerBrandCheckException("terminate");
            TransformStreamDefaultControllerTerminate(this);
          }, TransformStreamDefaultController2;
        }()
      );
      Object.defineProperties(TransformStreamDefaultController.prototype, {
        enqueue: { enumerable: !0 },
        error: { enumerable: !0 },
        terminate: { enumerable: !0 },
        desiredSize: { enumerable: !0 }
      }), typeof SymbolPolyfill.toStringTag == "symbol" && Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {
        value: "TransformStreamDefaultController",
        configurable: !0
      });
      function IsTransformStreamDefaultController(x) {
        return !typeIsObject(x) || !Object.prototype.hasOwnProperty.call(x, "_controlledTransformStream") ? !1 : x instanceof TransformStreamDefaultController;
      }
      function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {
        controller._controlledTransformStream = stream, stream._transformStreamController = controller, controller._transformAlgorithm = transformAlgorithm, controller._flushAlgorithm = flushAlgorithm;
      }
      function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {
        var controller = Object.create(TransformStreamDefaultController.prototype), transformAlgorithm = function(chunk) {
          try {
            return TransformStreamDefaultControllerEnqueue(controller, chunk), promiseResolvedWith(void 0);
          } catch (transformResultE) {
            return promiseRejectedWith(transformResultE);
          }
        }, flushAlgorithm = function() {
          return promiseResolvedWith(void 0);
        };
        transformer.transform !== void 0 && (transformAlgorithm = function(chunk) {
          return transformer.transform(chunk, controller);
        }), transformer.flush !== void 0 && (flushAlgorithm = function() {
          return transformer.flush(controller);
        }), SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);
      }
      function TransformStreamDefaultControllerClearAlgorithms(controller) {
        controller._transformAlgorithm = void 0, controller._flushAlgorithm = void 0;
      }
      function TransformStreamDefaultControllerEnqueue(controller, chunk) {
        var stream = controller._controlledTransformStream, readableController = stream._readable._readableStreamController;
        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController))
          throw new TypeError("Readable side is not in a state that permits enqueue");
        try {
          ReadableStreamDefaultControllerEnqueue(readableController, chunk);
        } catch (e23) {
          throw TransformStreamErrorWritableAndUnblockWrite(stream, e23), stream._readable._storedError;
        }
        var backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);
        backpressure !== stream._backpressure && TransformStreamSetBackpressure(stream, !0);
      }
      function TransformStreamDefaultControllerError(controller, e23) {
        TransformStreamError(controller._controlledTransformStream, e23);
      }
      function TransformStreamDefaultControllerPerformTransform(controller, chunk) {
        var transformPromise = controller._transformAlgorithm(chunk);
        return transformPromiseWith(transformPromise, void 0, function(r24) {
          throw TransformStreamError(controller._controlledTransformStream, r24), r24;
        });
      }
      function TransformStreamDefaultControllerTerminate(controller) {
        var stream = controller._controlledTransformStream, readableController = stream._readable._readableStreamController;
        ReadableStreamDefaultControllerClose(readableController);
        var error2 = new TypeError("TransformStream terminated");
        TransformStreamErrorWritableAndUnblockWrite(stream, error2);
      }
      function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {
        var controller = stream._transformStreamController;
        if (stream._backpressure) {
          var backpressureChangePromise = stream._backpressureChangePromise;
          return transformPromiseWith(backpressureChangePromise, function() {
            var writable = stream._writable, state = writable._state;
            if (state === "erroring")
              throw writable._storedError;
            return TransformStreamDefaultControllerPerformTransform(controller, chunk);
          });
        }
        return TransformStreamDefaultControllerPerformTransform(controller, chunk);
      }
      function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {
        return TransformStreamError(stream, reason), promiseResolvedWith(void 0);
      }
      function TransformStreamDefaultSinkCloseAlgorithm(stream) {
        var readable = stream._readable, controller = stream._transformStreamController, flushPromise = controller._flushAlgorithm();
        return TransformStreamDefaultControllerClearAlgorithms(controller), transformPromiseWith(flushPromise, function() {
          if (readable._state === "errored")
            throw readable._storedError;
          ReadableStreamDefaultControllerClose(readable._readableStreamController);
        }, function(r24) {
          throw TransformStreamError(stream, r24), readable._storedError;
        });
      }
      function TransformStreamDefaultSourcePullAlgorithm(stream) {
        return TransformStreamSetBackpressure(stream, !1), stream._backpressureChangePromise;
      }
      function defaultControllerBrandCheckException(name) {
        return new TypeError("TransformStreamDefaultController.prototype." + name + " can only be used on a TransformStreamDefaultController");
      }
      function streamBrandCheckException(name) {
        return new TypeError("TransformStream.prototype." + name + " can only be used on a TransformStream");
      }
      exports2.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy, exports2.CountQueuingStrategy = CountQueuingStrategy, exports2.ReadableByteStreamController = ReadableByteStreamController, exports2.ReadableStream = ReadableStream2, exports2.ReadableStreamBYOBReader = ReadableStreamBYOBReader, exports2.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest, exports2.ReadableStreamDefaultController = ReadableStreamDefaultController, exports2.ReadableStreamDefaultReader = ReadableStreamDefaultReader, exports2.TransformStream = TransformStream, exports2.TransformStreamDefaultController = TransformStreamDefaultController, exports2.WritableStream = WritableStream, exports2.WritableStreamDefaultController = WritableStreamDefaultController, exports2.WritableStreamDefaultWriter = WritableStreamDefaultWriter, Object.defineProperty(exports2, "__esModule", { value: !0 });
    });
  }
});

// node_modules/@remix-run/web-stream/src/stream.cjs
var require_stream = __commonJS({
  "node_modules/@remix-run/web-stream/src/stream.cjs"(exports, module2) {
    module2.exports = require_ponyfill();
  }
});

// node_modules/@remix-run/web-blob/dist/src/blob.cjs
var require_blob = __commonJS({
  "node_modules/@remix-run/web-blob/dist/src/blob.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var webEncoding = require_lib(), webStream = require_stream(), WebBlob = class Blob3 {
      /**
       * @param {BlobPart[]} [init]
       * @param {BlobPropertyBag} [options]
       */
      constructor(init = [], options = {}) {
        let parts = [], size2 = 0;
        for (let part of init)
          if (typeof part == "string") {
            let bytes = new webEncoding.TextEncoder().encode(part);
            parts.push(bytes), size2 += bytes.byteLength;
          } else if (part instanceof WebBlob)
            size2 += part.size, parts.push(...part._parts);
          else if (part instanceof ArrayBuffer)
            parts.push(new Uint8Array(part)), size2 += part.byteLength;
          else if (part instanceof Uint8Array)
            parts.push(part), size2 += part.byteLength;
          else if (ArrayBuffer.isView(part)) {
            let { buffer, byteOffset, byteLength } = part;
            parts.push(new Uint8Array(buffer, byteOffset, byteLength)), size2 += byteLength;
          } else {
            let bytes = new webEncoding.TextEncoder().encode(String(part));
            parts.push(bytes), size2 += bytes.byteLength;
          }
        this._size = size2, this._type = readType(options.type), this._parts = parts, Object.defineProperties(this, {
          _size: { enumerable: !1 },
          _type: { enumerable: !1 },
          _parts: { enumerable: !1 }
        });
      }
      /**
       * A string indicating the MIME type of the data contained in the Blob.
       * If the type is unknown, this string is empty.
       * @type {string}
       */
      get type() {
        return this._type;
      }
      /**
       * The size, in bytes, of the data contained in the Blob object.
       * @type {number}
       */
      get size() {
        return this._size;
      }
      /**
       * Returns a new Blob object containing the data in the specified range of
       * bytes of the blob on which it's called.
       * @param {number} [start=0] - An index into the Blob indicating the first
       * byte to include in the new Blob. If you specify a negative value, it's
       * treated as an offset from the end of the Blob toward the beginning. For
       * example, `-10` would be the 10th from last byte in the Blob. The default
       * value is `0`. If you specify a value for start that is larger than the
       * size of the source Blob, the returned Blob has size 0 and contains no
       * data.
       * @param {number} [end] - An index into the `Blob` indicating the first byte
       *  that will *not* be included in the new `Blob` (i.e. the byte exactly at
       * this index is not included). If you specify a negative value, it's treated
       * as an offset from the end of the Blob toward the beginning. For example,
       * `-10` would be the 10th from last byte in the `Blob`. The default value is
       * size.
       * @param {string} [type] - The content type to assign to the new Blob;
       * this will be the value of its type property. The default value is an empty
       * string.
       * @returns {Blob}
       */
      slice(start = 0, end = this.size, type2 = "") {
        let { size: size2, _parts } = this, offset2 = start < 0 ? Math.max(size2 + start, 0) : Math.min(start, size2), limit = end < 0 ? Math.max(size2 + end, 0) : Math.min(end, size2), span = Math.max(limit - offset2, 0), blob = new Blob3([], { type: type2 });
        if (span === 0)
          return blob;
        let blobSize = 0, blobParts = [];
        for (let part of _parts) {
          let { byteLength } = part;
          if (offset2 > 0 && byteLength <= offset2)
            offset2 -= byteLength, limit -= byteLength;
          else {
            let chunk = part.subarray(offset2, Math.min(byteLength, limit));
            if (blobParts.push(chunk), blobSize += chunk.byteLength, offset2 = 0, blobSize >= span)
              break;
          }
        }
        return blob._parts = blobParts, blob._size = blobSize, blob;
      }
      /**
       * Returns a promise that resolves with an ArrayBuffer containing the entire
       * contents of the Blob as binary data.
       * @returns {Promise<ArrayBuffer>}
       */
      // eslint-disable-next-line require-await
      async arrayBuffer() {
        let buffer = new ArrayBuffer(this.size), bytes = new Uint8Array(buffer), offset2 = 0;
        for (let part of this._parts)
          bytes.set(part, offset2), offset2 += part.byteLength;
        return buffer;
      }
      /**
       * Returns a promise that resolves with a USVString containing the entire
       * contents of the Blob interpreted as UTF-8 text.
       * @returns {Promise<string>}
       */
      // eslint-disable-next-line require-await
      async text() {
        let decoder = new webEncoding.TextDecoder(), text = "";
        for (let part of this._parts)
          text += decoder.decode(part);
        return text;
      }
      /**
       * @returns {BlobStream}
       */
      stream() {
        return new BlobStream(this._parts);
      }
      /**
       * @returns {string}
       */
      toString() {
        return "[object Blob]";
      }
      get [Symbol.toStringTag]() {
        return "Blob";
      }
    }, Blob2 = WebBlob, BlobStream = class extends webStream.ReadableStream {
      /**
       * @param {Uint8Array[]} chunks
       */
      constructor(chunks) {
        super(new BlobStreamController(chunks.values()), { type: "bytes" }), this._chunks = chunks;
      }
      /**
       * @param {Object} [_options]
       * @property {boolean} [_options.preventCancel]
       * @returns {AsyncIterator<Uint8Array>}
       */
      async *[Symbol.asyncIterator](_options) {
        let reader = this.getReader();
        yield* this._chunks, reader.releaseLock();
      }
    }, BlobStreamController = class {
      /**
       * @param {Iterator<Uint8Array>} chunks
       */
      constructor(chunks) {
        this.chunks = chunks;
      }
      /**
       * @param {ReadableStreamDefaultController} controller
       */
      start(controller) {
        this.work(controller), this.isWorking = !1, this.isCancelled = !1;
      }
      /**
       *
       * @param {ReadableStreamDefaultController} controller
       */
      async work(controller) {
        let { chunks } = this;
        for (this.isWorking = !0; !this.isCancelled && (controller.desiredSize || 0) > 0; ) {
          let next = null;
          try {
            next = chunks.next();
          } catch (error2) {
            controller.error(error2);
            break;
          }
          next && (!next.done && !this.isCancelled ? controller.enqueue(next.value) : controller.close());
        }
        this.isWorking = !1;
      }
      /**
       * @param {ReadableStreamDefaultController} controller
       */
      pull(controller) {
        this.isWorking || this.work(controller);
      }
      cancel() {
        this.isCancelled = !0;
      }
    }, readType = (input = "") => {
      let type2 = String(input).toLowerCase();
      return /[^\u0020-\u007E]/.test(type2) ? "" : type2;
    };
    Object.defineProperty(exports, "TextDecoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextDecoder;
      }
    });
    Object.defineProperty(exports, "TextEncoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextEncoder;
      }
    });
    Object.defineProperty(exports, "ReadableStream", {
      enumerable: !0,
      get: function() {
        return webStream.ReadableStream;
      }
    });
    exports.Blob = Blob2;
  }
});

// node_modules/@remix-run/web-blob/dist/src/lib.node.cjs
var require_lib_node = __commonJS({
  "node_modules/@remix-run/web-blob/dist/src/lib.node.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var webEncoding = require_lib(), webStream = require_stream(), blob = require_blob(), Blob2 = globalThis.Blob || // Disable node native blob until impractical perf issue is fixed
    // @see https://github.com/nodejs/node/issues/42108
    // NodeBlob ||
    blob.Blob;
    Object.defineProperty(exports, "TextDecoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextDecoder;
      }
    });
    Object.defineProperty(exports, "TextEncoder", {
      enumerable: !0,
      get: function() {
        return webEncoding.TextEncoder;
      }
    });
    Object.defineProperty(exports, "ReadableStream", {
      enumerable: !0,
      get: function() {
        return webStream.ReadableStream;
      }
    });
    exports.Blob = Blob2;
  }
});

// node_modules/@remix-run/web-form-data/dist/src/form-data.cjs
var require_form_data = __commonJS({
  "node_modules/@remix-run/web-form-data/dist/src/form-data.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var FormData2 = class {
      /**
       * @param {HTMLFormElement} [form]
       */
      constructor(form) {
        if (this._entries = [], Object.defineProperty(this, "_entries", { enumerable: !1 }), isHTMLFormElement(form))
          for (let element of form.elements)
            if (isSelectElement(element))
              for (let option of element.options)
                option.selected && this.append(element.name, option.value);
            else
              isInputElement(element) && (element.checked || !["radio", "checkbox"].includes(element.type)) && element.name && this.append(element.name, element.value);
      }
      get [Symbol.toStringTag]() {
        return "FormData";
      }
      /**
       * Appends a new value onto an existing key inside a FormData object, or adds
       * the key if it does not already exist.
       *
       * The difference between `set` and `append` is that if the specified key
       * already exists, `set` will overwrite all existing values with the new one,
       * whereas `append` will append the new value onto the end of the existing
       * set of values.
       *
       * @param {string} name
       * @param {string|Blob|File} value - The name of the field whose data is
       * contained in value.
       * @param {string} [filename] - The filename reported to the server, when a
       * value is a `Blob` or a `File`. The default filename for a `Blob` objects is
       * `"blob"`. The default filename for a `File` is the it's name.
       */
      append(name, value = panic(
        new TypeError("FormData.append: requires at least 2 arguments")
      ), filename) {
        this._entries.push([name, toEntryValue(value, filename)]);
      }
      /**
       * Deletes a key and all its values from a FormData object.
       *
       * @param {string} name
       */
      delete(name = panic(new TypeError("FormData.delete: requires string argument"))) {
        let entries = this._entries, index2 = 0;
        for (; index2 < entries.length; ) {
          let [entryName] = (
            /** @type {[string, FormDataEntryValue]}*/
            entries[index2]
          );
          entryName === name ? entries.splice(index2, 1) : index2++;
        }
      }
      /**
       * Returns the first value associated with a given key from within a
       * FormData object.
       *
       * @param {string} name
       * @returns {FormDataEntryValue|null}
       */
      get(name = panic(new TypeError("FormData.get: requires string argument"))) {
        for (let [entryName, value] of this._entries)
          if (entryName === name)
            return value;
        return null;
      }
      /**
       * Returns an array of all the values associated with a given key from within
       * a FormData.
       *
       * @param {string} name
       * @returns {FormDataEntryValue[]}
       */
      getAll(name = panic(new TypeError("FormData.getAll: requires string argument"))) {
        let values = [];
        for (let [entryName, value] of this._entries)
          entryName === name && values.push(value);
        return values;
      }
      /**
       * Returns a boolean stating whether a FormData object contains a certain key.
       *
       * @param {string} name
       */
      has(name = panic(new TypeError("FormData.has: requires string argument"))) {
        for (let [entryName] of this._entries)
          if (entryName === name)
            return !0;
        return !1;
      }
      /**
       * Sets a new value for an existing key inside a FormData object, or adds the
       * key/value if it does not already exist.
       *
       * @param {string} name
       * @param {string|Blob|File} value
       * @param {string} [filename]
       */
      set(name, value = panic(new TypeError("FormData.set: requires at least 2 arguments")), filename) {
        let index2 = 0, { _entries: entries } = this, entryValue = toEntryValue(value, filename), wasSet = !1;
        for (; index2 < entries.length; ) {
          let entry2 = (
            /** @type {[string, FormDataEntryValue]}*/
            entries[index2]
          );
          entry2[0] === name ? wasSet ? entries.splice(index2, 1) : (wasSet = !0, entry2[1] = entryValue, index2++) : index2++;
        }
        wasSet || entries.push([name, entryValue]);
      }
      /**
       * Method returns an iterator allowing to go through all key/value pairs
       * contained in this object.
       */
      entries() {
        return this._entries.values();
      }
      /**
       * Returns an iterator allowing to go through all keys of the key/value pairs
       * contained in this object.
       *
       * @returns {IterableIterator<string>}
       */
      *keys() {
        for (let [name] of this._entries)
          yield name;
      }
      /**
       * Returns an iterator allowing to go through all values contained in this
       * object.
       *
       * @returns {IterableIterator<FormDataEntryValue>}
       */
      *values() {
        for (let [_, value] of this._entries)
          yield value;
      }
      [Symbol.iterator]() {
        return this._entries.values();
      }
      /**
       * @param {(value: FormDataEntryValue, key: string, parent: globalThis.FormData) => void} fn
       * @param {any} [thisArg]
       * @returns {void}
       */
      forEach(fn, thisArg) {
        for (let [key, value] of this._entries)
          fn.call(thisArg, value, key, this);
      }
    }, isHTMLFormElement = (value) => Object.prototype.toString.call(value) === "[object HTMLFormElement]", toEntryValue = (value, filename) => {
      if (isFile(value))
        return filename != null ? new BlobFile([value], filename, value) : value;
      if (isBlob(value))
        return new BlobFile([value], filename ?? "blob");
      if (filename != null && filename != "")
        throw new TypeError(
          "filename is only supported when value is Blob or File"
        );
      return `${value}`;
    }, isFile = (value) => Object.prototype.toString.call(value) === "[object File]" && typeof value.name == "string", isBlob = (value) => Object.prototype.toString.call(value) === "[object Blob]", BlobFile = class {
      /**
       * @param {[Blob]} parts
       * @param {string} name
       * @param {FilePropertyBag} [options]
       */
      constructor([blob], name, { lastModified = Date.now() } = {}) {
        this.blob = blob, this.name = name, this.lastModified = lastModified;
      }
      get webkitRelativePath() {
        return "";
      }
      get size() {
        return this.blob.size;
      }
      get type() {
        return this.blob.type;
      }
      /**
       *
       * @param {number} [start]
       * @param {number} [end]
       * @param {string} [contentType]
       */
      slice(start, end, contentType) {
        return this.blob.slice(start, end, contentType);
      }
      stream() {
        return this.blob.stream();
      }
      text() {
        return this.blob.text();
      }
      arrayBuffer() {
        return this.blob.arrayBuffer();
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    }, panic = (error2) => {
      throw error2;
    };
    function isSelectElement(element) {
      return element.tagName === "SELECT";
    }
    function isInputElement(element) {
      return element.tagName === "INPUT" || element.tagName === "TEXTAREA";
    }
    exports.FormData = FormData2;
  }
});

// node_modules/@remix-run/web-form-data/dist/src/lib.node.cjs
var require_lib_node2 = __commonJS({
  "node_modules/@remix-run/web-form-data/dist/src/lib.node.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var formData = require_form_data(), FormData2 = formData.FormData;
    exports.FormData = FormData2;
  }
});

// node_modules/@web3-storage/multipart-parser/cjs/src/utils.js
var require_utils = __commonJS({
  "node_modules/@web3-storage/multipart-parser/cjs/src/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function stringToArray(s) {
      let utf8 = unescape(encodeURIComponent(s));
      return Uint8Array.from(utf8, (_, i13) => utf8.charCodeAt(i13));
    }
    function arrayToString(a8) {
      let utf8 = String.fromCharCode.apply(null, a8);
      return decodeURIComponent(escape(utf8));
    }
    function mergeArrays(...arrays) {
      let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0)), offset2 = 0;
      for (let arr of arrays)
        out.set(arr, offset2), offset2 += arr.length;
      return out;
    }
    function arraysEqual(a8, b) {
      if (a8.length !== b.length)
        return !1;
      for (let i13 = 0; i13 < a8.length; i13++)
        if (a8[i13] !== b[i13])
          return !1;
      return !0;
    }
    exports.arrayToString = arrayToString;
    exports.arraysEqual = arraysEqual;
    exports.mergeArrays = mergeArrays;
    exports.stringToArray = stringToArray;
  }
});

// node_modules/@web3-storage/multipart-parser/cjs/src/search.js
var require_search = __commonJS({
  "node_modules/@web3-storage/multipart-parser/cjs/src/search.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var utils = require_utils();
    function coerce(a8) {
      return a8 instanceof Uint8Array ? (index2) => a8[index2] : a8;
    }
    function jsmemcmp(buf1, pos1, buf2, pos2, len) {
      let fn1 = coerce(buf1), fn2 = coerce(buf2);
      for (let i13 = 0; i13 < len; ++i13)
        if (fn1(pos1 + i13) !== fn2(pos2 + i13))
          return !1;
      return !0;
    }
    function createOccurenceTable(s) {
      let table = new Array(256).fill(s.length);
      if (s.length > 1)
        for (let i13 = 0; i13 < s.length - 1; i13++)
          table[s[i13]] = s.length - 1 - i13;
      return table;
    }
    var MATCH = Symbol("Match"), StreamSearch = class {
      constructor(needle) {
        this._lookbehind = new Uint8Array(), typeof needle == "string" ? this._needle = needle = utils.stringToArray(needle) : this._needle = needle, this._lastChar = needle[needle.length - 1], this._occ = createOccurenceTable(needle);
      }
      feed(chunk) {
        let pos = 0, tokens, allTokens = [];
        for (; pos !== chunk.length; )
          [pos, ...tokens] = this._feed(chunk, pos), allTokens.push(...tokens);
        return allTokens;
      }
      end() {
        let tail = this._lookbehind;
        return this._lookbehind = new Uint8Array(), tail;
      }
      _feed(data, bufPos) {
        let tokens = [], pos = -this._lookbehind.length;
        if (pos < 0) {
          for (; pos < 0 && pos <= data.length - this._needle.length; ) {
            let ch = this._charAt(data, pos + this._needle.length - 1);
            if (ch === this._lastChar && this._memcmp(data, pos, this._needle.length - 1))
              return pos > -this._lookbehind.length && tokens.push(this._lookbehind.slice(0, this._lookbehind.length + pos)), tokens.push(MATCH), this._lookbehind = new Uint8Array(), [
                pos + this._needle.length,
                ...tokens
              ];
            pos += this._occ[ch];
          }
          if (pos < 0)
            for (; pos < 0 && !this._memcmp(data, pos, data.length - pos); )
              pos++;
          if (pos >= 0)
            tokens.push(this._lookbehind), this._lookbehind = new Uint8Array();
          else {
            let bytesToCutOff = this._lookbehind.length + pos;
            return bytesToCutOff > 0 && (tokens.push(this._lookbehind.slice(0, bytesToCutOff)), this._lookbehind = this._lookbehind.slice(bytesToCutOff)), this._lookbehind = Uint8Array.from(new Array(this._lookbehind.length + data.length), (_, i13) => this._charAt(data, i13 - this._lookbehind.length)), [
              data.length,
              ...tokens
            ];
          }
        }
        for (pos += bufPos; pos <= data.length - this._needle.length; ) {
          let ch = data[pos + this._needle.length - 1];
          if (ch === this._lastChar && data[pos] === this._needle[0] && jsmemcmp(this._needle, 0, data, pos, this._needle.length - 1))
            return pos > bufPos && tokens.push(data.slice(bufPos, pos)), tokens.push(MATCH), [
              pos + this._needle.length,
              ...tokens
            ];
          pos += this._occ[ch];
        }
        if (pos < data.length) {
          for (; pos < data.length && (data[pos] !== this._needle[0] || !jsmemcmp(data, pos, this._needle, 0, data.length - pos)); )
            ++pos;
          pos < data.length && (this._lookbehind = data.slice(pos));
        }
        return pos > 0 && tokens.push(data.slice(bufPos, pos < data.length ? pos : data.length)), [
          data.length,
          ...tokens
        ];
      }
      _charAt(data, pos) {
        return pos < 0 ? this._lookbehind[this._lookbehind.length + pos] : data[pos];
      }
      _memcmp(data, pos, len) {
        return jsmemcmp(this._charAt.bind(this, data), pos, this._needle, 0, len);
      }
    }, ReadableStreamSearch = class {
      constructor(needle, _readableStream) {
        this._readableStream = _readableStream, this._search = new StreamSearch(needle);
      }
      async *[Symbol.asyncIterator]() {
        let reader = this._readableStream.getReader();
        try {
          for (; ; ) {
            let result = await reader.read();
            if (result.done)
              break;
            yield* this._search.feed(result.value);
          }
          let tail = this._search.end();
          tail.length && (yield tail);
        } finally {
          reader.releaseLock();
        }
      }
    }, EOQ = Symbol("End of Queue"), QueueableStreamSearch = class {
      constructor(needle) {
        this._chunksQueue = [], this._closed = !1, this._search = new StreamSearch(needle);
      }
      push(...chunks) {
        if (this._closed)
          throw new Error("cannot call push after close");
        this._chunksQueue.push(...chunks), this._notify && this._notify();
      }
      close() {
        if (this._closed)
          throw new Error("close was already called");
        this._closed = !0, this._chunksQueue.push(EOQ), this._notify && this._notify();
      }
      async *[Symbol.asyncIterator]() {
        for (; ; ) {
          let chunk;
          for (; !(chunk = this._chunksQueue.shift()); )
            await new Promise((resolve) => this._notify = resolve), this._notify = void 0;
          if (chunk === EOQ)
            break;
          yield* this._search.feed(chunk);
        }
        let tail = this._search.end();
        tail.length && (yield tail);
      }
    };
    function splitChunks(chunks, needle) {
      let search = new StreamSearch(needle), outchunks = [[]];
      for (let chunk of chunks)
        for (let token of search.feed(chunk))
          token === MATCH ? outchunks.push([]) : outchunks[outchunks.length - 1].push(token);
      let end = search.end();
      return outchunks[outchunks.length - 1].push(end), outchunks.map((chunks2) => utils.mergeArrays(...chunks2));
    }
    function split(buf, needle) {
      return splitChunks([buf], needle);
    }
    async function* chunksIterator(iter) {
      let chunks = [];
      for await (let value of iter)
        value === MATCH ? (yield chunks, chunks = []) : chunks.push(value);
      yield chunks;
    }
    async function* stringIterator(iter) {
      for await (let chunk of chunksIterator(iter))
        yield chunk.map(utils.arrayToString).join("");
    }
    async function allStrings(iter) {
      let segments = [];
      for await (let value of stringIterator(iter))
        segments.push(value);
      return segments;
    }
    async function* arrayIterator(iter) {
      for await (let chunk of chunksIterator(iter))
        yield utils.mergeArrays(...chunk);
    }
    exports.MATCH = MATCH;
    exports.QueueableStreamSearch = QueueableStreamSearch;
    exports.ReadableStreamSearch = ReadableStreamSearch;
    exports.StreamSearch = StreamSearch;
    exports.allStrings = allStrings;
    exports.arrayIterator = arrayIterator;
    exports.chunksIterator = chunksIterator;
    exports.split = split;
    exports.splitChunks = splitChunks;
    exports.stringIterator = stringIterator;
  }
});

// node_modules/@web3-storage/multipart-parser/cjs/src/index.js
var require_src2 = __commonJS({
  "node_modules/@web3-storage/multipart-parser/cjs/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var search = require_search(), utils = require_utils(), mergeArrays2 = Function.prototype.apply.bind(utils.mergeArrays, void 0), dash = utils.stringToArray("--"), CRLF = utils.stringToArray(`\r
`);
    function parseContentDisposition(header) {
      let parts = header.split(";").map((part) => part.trim());
      if (parts.shift() !== "form-data")
        throw new Error('malformed content-disposition header: missing "form-data" in `' + JSON.stringify(parts) + "`");
      let out = {};
      for (let part of parts) {
        let kv = part.split("=", 2);
        if (kv.length !== 2)
          throw new Error("malformed content-disposition header: key-value pair not found - " + part + " in `" + header + "`");
        let [name, value] = kv;
        if (value[0] === '"' && value[value.length - 1] === '"')
          out[name] = value.slice(1, -1).replace(/\\"/g, '"');
        else if (value[0] !== '"' && value[value.length - 1] !== '"')
          out[name] = value;
        else if (value[0] === '"' && value[value.length - 1] !== '"' || value[0] !== '"' && value[value.length - 1] === '"')
          throw new Error("malformed content-disposition header: mismatched quotations in `" + header + "`");
      }
      if (!out.name)
        throw new Error("malformed content-disposition header: missing field name in `" + header + "`");
      return out;
    }
    function parsePartHeaders(lines) {
      let entries = [], disposition = !1, line;
      for (; typeof (line = lines.shift()) < "u"; ) {
        let colon = line.indexOf(":");
        if (colon === -1)
          throw new Error("malformed multipart-form header: missing colon");
        let header = line.slice(0, colon).trim().toLowerCase(), value = line.slice(colon + 1).trim();
        switch (header) {
          case "content-disposition":
            disposition = !0, entries.push(...Object.entries(parseContentDisposition(value)));
            break;
          case "content-type":
            entries.push([
              "contentType",
              value
            ]);
        }
      }
      if (!disposition)
        throw new Error("malformed multipart-form header: missing content-disposition");
      return Object.fromEntries(entries);
    }
    async function readHeaderLines(it, needle) {
      let firstChunk = !0, lastTokenWasMatch = !1, headerLines = [[]], crlfSearch = new search.StreamSearch(CRLF);
      for (; ; ) {
        let result = await it.next();
        if (result.done)
          throw new Error("malformed multipart-form data: unexpected end of stream");
        if (firstChunk && result.value !== search.MATCH && utils.arraysEqual(result.value.slice(0, 2), dash))
          return [
            void 0,
            new Uint8Array()
          ];
        let chunk;
        if (result.value !== search.MATCH)
          chunk = result.value;
        else if (!lastTokenWasMatch)
          chunk = needle;
        else
          throw new Error("malformed multipart-form data: unexpected boundary");
        if (!chunk.length)
          continue;
        firstChunk && (firstChunk = !1);
        let tokens = crlfSearch.feed(chunk);
        for (let [i13, token] of tokens.entries()) {
          let isMatch = token === search.MATCH;
          if (!(!isMatch && !token.length)) {
            if (lastTokenWasMatch && isMatch)
              return tokens.push(crlfSearch.end()), [
                headerLines.filter((chunks) => chunks.length).map(mergeArrays2).map(utils.arrayToString),
                utils.mergeArrays(...tokens.slice(i13 + 1).map((token2) => token2 === search.MATCH ? CRLF : token2))
              ];
            (lastTokenWasMatch = isMatch) ? headerLines.push([]) : headerLines[headerLines.length - 1].push(token);
          }
        }
      }
    }
    async function* streamMultipart(body, boundary) {
      let needle = utils.mergeArrays(dash, utils.stringToArray(boundary)), it = new search.ReadableStreamSearch(needle, body)[Symbol.asyncIterator]();
      for (; ; ) {
        let result = await it.next();
        if (result.done)
          return;
        if (result.value === search.MATCH)
          break;
      }
      let crlfSearch = new search.StreamSearch(CRLF);
      for (; ; ) {
        let feedChunk = function(chunk) {
          let chunks = [];
          for (let token of crlfSearch.feed(chunk))
            trailingCRLF && chunks.push(CRLF), (trailingCRLF = token === search.MATCH) || chunks.push(token);
          return utils.mergeArrays(...chunks);
        }, [headerLines, tail] = await readHeaderLines(it, needle);
        if (!headerLines)
          return;
        async function nextToken() {
          let result = await it.next();
          if (result.done)
            throw new Error("malformed multipart-form data: unexpected end of stream");
          return result;
        }
        let trailingCRLF = !1, done = !1;
        async function nextChunk() {
          let result = await nextToken(), chunk;
          if (result.value !== search.MATCH)
            chunk = result.value;
          else if (!trailingCRLF)
            chunk = CRLF;
          else
            return done = !0, { value: crlfSearch.end() };
          return { value: feedChunk(chunk) };
        }
        let bufferedChunks = [{ value: feedChunk(tail) }];
        for (yield {
          ...parsePartHeaders(headerLines),
          data: {
            [Symbol.asyncIterator]() {
              return this;
            },
            async next() {
              for (; ; ) {
                let result = bufferedChunks.shift();
                if (!result)
                  break;
                if (result.value.length > 0)
                  return result;
              }
              for (; ; ) {
                if (done)
                  return {
                    done,
                    value: void 0
                  };
                let result = await nextChunk();
                if (result.value.length > 0)
                  return result;
              }
            }
          }
        }; !done; )
          bufferedChunks.push(await nextChunk());
      }
    }
    async function* iterateMultipart(body, boundary) {
      for await (let part of streamMultipart(body, boundary)) {
        let chunks = [];
        for await (let chunk of part.data)
          chunks.push(chunk);
        yield {
          ...part,
          data: utils.mergeArrays(...chunks)
        };
      }
    }
    exports.iterateMultipart = iterateMultipart;
    exports.streamMultipart = streamMultipart;
  }
});

// node_modules/@remix-run/web-fetch/dist/lib.node.cjs
var require_lib_node3 = __commonJS({
  "node_modules/@remix-run/web-fetch/dist/lib.node.cjs"(exports, module2) {
    "use strict";
    var http = require("http"), https = require("https"), zlib = require("zlib"), fs = require("fs"), mime = require_mrmime(), dataUriToBuffer = require_src(), Stream = require("stream"), util = require("util"), webBlob = require_lib_node(), webFormData = require_lib_node2(), crypto = require("crypto"), multipartParser = require_src2(), url = require("url"), abortController = require_abort_controller(), FetchBaseError = class extends Error {
      /**
       * @param {string} message 
       * @param {string} type 
       */
      constructor(message2, type2) {
        super(message2), Error.captureStackTrace(this, this.constructor), this.type = type2;
      }
      get name() {
        return this.constructor.name;
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
    }, FetchError = class extends FetchBaseError {
      /**
       * @param  {string} message -      Error message for human
       * @param  {string} type -        Error type for machine
       * @param  {SystemError} [systemError] - For Node.js system error
       */
      constructor(message2, type2, systemError) {
        super(message2, type2), systemError && (this.code = this.errno = systemError.code, this.erroredSysCall = systemError.syscall);
      }
    }, NAME = Symbol.toStringTag, isURLSearchParameters = (object) => typeof object == "object" && typeof object.append == "function" && typeof object.delete == "function" && typeof object.get == "function" && typeof object.getAll == "function" && typeof object.has == "function" && typeof object.set == "function" && typeof object.sort == "function" && object[NAME] === "URLSearchParams", isBlob = (object) => typeof object == "object" && typeof object.arrayBuffer == "function" && typeof object.type == "string" && typeof object.stream == "function" && typeof object.constructor == "function" && /^(Blob|File)$/.test(object[NAME]);
    function isFormData(object) {
      return typeof object == "object" && typeof object.append == "function" && typeof object.set == "function" && typeof object.get == "function" && typeof object.getAll == "function" && typeof object.delete == "function" && typeof object.keys == "function" && typeof object.values == "function" && typeof object.entries == "function" && typeof object.constructor == "function" && object[NAME] === "FormData";
    }
    var isMultipartFormDataStream = (value) => value instanceof Stream && typeof value.getBoundary == "function" && typeof value.hasKnownLength == "function" && typeof value.getLengthSync == "function", isAbortSignal = (object) => typeof object == "object" && (object[NAME] === "AbortSignal" || object[NAME] === "EventTarget"), isReadableStream = (value) => typeof value == "object" && typeof value.getReader == "function" && typeof value.cancel == "function" && typeof value.tee == "function", isIterable = (value) => value && Symbol.iterator in value, carriage = `\r
`, dashes = "-".repeat(2), carriageLength = Buffer.byteLength(carriage), getFooter = (boundary) => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;
    function getHeader(boundary, name, field) {
      let header = "";
      if (header += `${dashes}${boundary}${carriage}`, header += `Content-Disposition: form-data; name="${name}"`, isBlob(field)) {
        let { name: name2 = "blob", type: type2 } = (
          /** @type {Blob & {name?:string}} */
          field
        );
        header += `; filename="${name2}"${carriage}`, header += `Content-Type: ${type2 || "application/octet-stream"}`;
      }
      return `${header}${carriage.repeat(2)}`;
    }
    var getBoundary = () => crypto.randomBytes(8).toString("hex");
    async function* formDataIterator(form, boundary) {
      let encoder2 = new TextEncoder();
      for (let [name, value] of form)
        yield encoder2.encode(getHeader(boundary, name, value)), isBlob(value) ? yield* value.stream() : yield encoder2.encode(value), yield encoder2.encode(carriage);
      yield encoder2.encode(getFooter(boundary));
    }
    function getFormDataLength(form, boundary) {
      let length = 0;
      for (let [name, value] of form)
        length += Buffer.byteLength(getHeader(boundary, name, value)), isBlob(value) ? length += value.size : length += Buffer.byteLength(String(value)), length += carriageLength;
      return length += Buffer.byteLength(getFooter(boundary)), length;
    }
    var toFormData = async (source) => {
      let { body, headers } = source, contentType = (headers == null ? void 0 : headers.get("Content-Type")) || "";
      if (contentType.startsWith("application/x-www-form-urlencoded") && body != null) {
        let form = new webFormData.FormData(), bodyText = await source.text();
        return new URLSearchParams(bodyText).forEach((v, k) => form.append(k, v)), form;
      }
      let [type2, boundary] = contentType.split(/\s*;\s*boundary=/);
      if (type2 === "multipart/form-data" && boundary != null && body != null) {
        let form = new webFormData.FormData(), parts = multipartParser.iterateMultipart(body, boundary);
        for await (let { name, data, filename, contentType: contentType2 } of parts)
          filename ? form.append(name, new File([data], filename, { type: contentType2 })) : form.append(name, new TextDecoder().decode(data), filename);
        return form;
      } else
        throw new TypeError("Could not parse content as FormData.");
    }, encoder = new util.TextEncoder(), decoder = new util.TextDecoder(), encode = (text) => encoder.encode(text), decode = (bytes) => decoder.decode(bytes), { readableHighWaterMark } = new Stream.Readable(), INTERNALS$2 = Symbol("Body internals"), Body = class {
      /**
       * @param {BodyInit|Stream|null} body
       * @param {{size?:number}} options
       */
      constructor(body, {
        size: size2 = 0
      } = {}) {
        let state = {
          /** @type {null|ReadableStream<Uint8Array>} */
          body: null,
          /** @type {string|null} */
          type: null,
          /** @type {number|null} */
          size: null,
          /** @type {null|string} */
          boundary: null,
          disturbed: !1,
          /** @type {null|Error} */
          error: null
        };
        if (this[INTERNALS$2] = state, body === null)
          state.body = null, state.size = 0;
        else if (isURLSearchParameters(body)) {
          let bytes = encode(body.toString());
          state.body = fromBytes(bytes), state.size = bytes.byteLength, state.type = "application/x-www-form-urlencoded;charset=UTF-8";
        } else if (isBlob(body))
          state.size = body.size, state.type = body.type || null, state.body = body.stream();
        else if (body instanceof Uint8Array)
          state.body = fromBytes(body), state.size = body.byteLength;
        else if (util.types.isAnyArrayBuffer(body)) {
          let bytes = new Uint8Array(body);
          state.body = fromBytes(bytes), state.size = bytes.byteLength;
        } else if (ArrayBuffer.isView(body)) {
          let bytes = new Uint8Array(body.buffer, body.byteOffset, body.byteLength);
          state.body = fromBytes(bytes), state.size = bytes.byteLength;
        } else if (isReadableStream(body))
          state.body = body;
        else if (isFormData(body)) {
          let boundary = `NodeFetchFormDataBoundary${getBoundary()}`;
          state.type = `multipart/form-data; boundary=${boundary}`, state.size = getFormDataLength(body, boundary), state.body = fromAsyncIterable(formDataIterator(body, boundary));
        } else if (isMultipartFormDataStream(body))
          state.type = `multipart/form-data; boundary=${body.getBoundary()}`, state.size = body.hasKnownLength() ? body.getLengthSync() : null, state.body = fromStream(body);
        else if (body instanceof Stream)
          state.body = fromStream(body);
        else {
          let bytes = encode(String(body));
          state.type = "text/plain;charset=UTF-8", state.size = bytes.byteLength, state.body = fromBytes(bytes);
        }
        this.size = size2;
      }
      /** @type {Headers} */
      /* c8 ignore next 3 */
      get headers() {
        throw new TypeError("'get headers' called on an object that does not implements interface.");
      }
      get body() {
        return this[INTERNALS$2].body;
      }
      get bodyUsed() {
        return this[INTERNALS$2].disturbed;
      }
      /**
       * Decode response as ArrayBuffer
       *
       * @return {Promise<ArrayBuffer>}
       */
      async arrayBuffer() {
        let { buffer, byteOffset, byteLength } = await consumeBody(this);
        return buffer.slice(byteOffset, byteOffset + byteLength);
      }
      /**
       * Return raw response as Blob
       *
       * @return Promise
       */
      async blob() {
        let ct = this.headers && this.headers.get("content-type") || this[INTERNALS$2].body && this[INTERNALS$2].type || "", buf = await consumeBody(this);
        return new webBlob.Blob([buf], {
          type: ct
        });
      }
      /**
       * Decode response as json
       *
       * @return  Promise
       */
      async json() {
        return JSON.parse(await this.text());
      }
      /**
       * Decode response as text
       *
       * @return  Promise
       */
      async text() {
        let buffer = await consumeBody(this);
        return decode(buffer);
      }
      /**
       * @returns {Promise<FormData>}
       */
      async formData() {
        return toFormData(this);
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: !0 },
      bodyUsed: { enumerable: !0 },
      arrayBuffer: { enumerable: !0 },
      blob: { enumerable: !0 },
      json: { enumerable: !0 },
      text: { enumerable: !0 },
      formData: { enumerable: !0 }
    });
    async function consumeBody(data) {
      let state = data[INTERNALS$2];
      if (state.disturbed)
        throw new TypeError(`body used already for: ${data.url}`);
      if (state.disturbed = !0, state.error)
        throw state.error;
      let { body } = state;
      if (body === null)
        return new Uint8Array(0);
      let [buffer, chunks, limit] = data.size > 0 ? [new Uint8Array(data.size), [], data.size] : [null, [], 1 / 0], offset2 = 0, source = streamIterator(body);
      try {
        for await (let chunk of source) {
          let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk);
          if (offset2 + bytes.byteLength > limit) {
            let error2 = new FetchError(`content size at ${data.url} over limit: ${limit}`, "max-size");
            throw source.throw(error2), error2;
          } else
            buffer ? buffer.set(bytes, offset2) : chunks.push(bytes);
          offset2 += bytes.byteLength;
        }
        if (buffer) {
          if (offset2 < buffer.byteLength)
            throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`, "premature-close");
          return buffer;
        } else
          return writeBytes(new Uint8Array(offset2), chunks);
      } catch (error2) {
        if (error2 instanceof FetchBaseError)
          throw error2;
        if (error2 && error2.name === "AbortError")
          throw error2;
        {
          let e23 = (
            /** @type {import('./errors/fetch-error').SystemError} */
            error2
          );
          throw new FetchError(`Invalid response body while trying to fetch ${data.url}: ${e23.message}`, "system", e23);
        }
      }
    }
    var clone = (instance) => {
      let { body } = instance;
      if (instance.bodyUsed)
        throw new Error("cannot clone body after it is used");
      if (!body)
        return null;
      let [left, right] = body.tee();
      return instance[INTERNALS$2].body = left, right;
    }, extractContentType = (source) => source[INTERNALS$2].type, getTotalBytes = (source) => source[INTERNALS$2].size, writeToStream = (dest, { body }) => {
      body === null ? dest.end() : Stream.Readable.from(streamIterator(body)).pipe(dest);
    }, StreamIterableIterator = class {
      /**
       * @param {ReadableStream<T>} stream
       */
      constructor(stream) {
        this.stream = stream, this.reader = null;
      }
      /**
       * @returns {AsyncGenerator<T, void, void>}
       */
      [Symbol.asyncIterator]() {
        return this;
      }
      getReader() {
        if (this.reader)
          return this.reader;
        let reader = this.stream.getReader();
        return this.reader = reader, reader;
      }
      /**
       * @returns {Promise<IteratorResult<T, void>>}
       */
      next() {
        return (
          /** @type {Promise<IteratorResult<T, void>>} */
          this.getReader().read()
        );
      }
      /**
       * @returns {Promise<IteratorResult<T, void>>}
       */
      async return() {
        return this.reader && await this.reader.cancel(), { done: !0, value: void 0 };
      }
      /**
       * 
       * @param {any} error 
       * @returns {Promise<IteratorResult<T, void>>}
       */
      async throw(error2) {
        return await this.getReader().cancel(error2), { done: !0, value: void 0 };
      }
    }, streamIterator = (stream) => new StreamIterableIterator(stream), writeBytes = (buffer, chunks) => {
      let offset2 = 0;
      for (let chunk of chunks)
        buffer.set(chunk, offset2), offset2 += chunk.byteLength;
      return buffer;
    }, fromBytes = (bytes) => new webBlob.ReadableStream({
      start(controller) {
        controller.enqueue(bytes), controller.close();
      }
    }), fromAsyncIterable = (content) => new webBlob.ReadableStream(new AsyncIterablePump(content)), AsyncIterablePump = class {
      /**
       * @param {AsyncIterable<Uint8Array>} source
       */
      constructor(source) {
        this.source = source[Symbol.asyncIterator]();
      }
      /**
       * @param {ReadableStreamController<Uint8Array>} controller
       */
      async pull(controller) {
        try {
          for (; controller.desiredSize || 0 > 0; ) {
            let next = await this.source.next();
            if (next.done) {
              controller.close();
              break;
            } else
              controller.enqueue(next.value);
          }
        } catch (error2) {
          controller.error(error2);
        }
      }
      /**
       * @param {any} [reason]
       */
      cancel(reason) {
        reason ? typeof this.source.throw == "function" ? this.source.throw(reason) : typeof this.source.return == "function" && this.source.return() : typeof this.source.return == "function" && this.source.return();
      }
    }, fromStream = (source) => {
      let pump = new StreamPump(source);
      return new webBlob.ReadableStream(pump, pump);
    }, StreamPump = class {
      /**
       * @param {Stream & {
       * 	readableHighWaterMark?: number
       * 	readable?:boolean,
       * 	resume?: () => void,
       * 	pause?: () => void
       * 	destroy?: (error?:Error) => void
       * }} stream
       */
      constructor(stream) {
        this.highWaterMark = stream.readableHighWaterMark || readableHighWaterMark, this.accumalatedSize = 0, this.stream = stream, this.enqueue = this.enqueue.bind(this), this.error = this.error.bind(this), this.close = this.close.bind(this);
      }
      /**
       * @param {Uint8Array} [chunk]
       */
      size(chunk) {
        return (chunk == null ? void 0 : chunk.byteLength) || 0;
      }
      /**
       * @param {ReadableStreamController<Uint8Array>} controller
       */
      start(controller) {
        this.controller = controller, this.stream.on("data", this.enqueue), this.stream.once("error", this.error), this.stream.once("end", this.close), this.stream.once("close", this.close);
      }
      pull() {
        this.resume();
      }
      /**
       * @param {any} [reason]
       */
      cancel(reason) {
        this.stream.destroy && this.stream.destroy(reason), this.stream.off("data", this.enqueue), this.stream.off("error", this.error), this.stream.off("end", this.close), this.stream.off("close", this.close);
      }
      /**
       * @param {Uint8Array|string} chunk
       */
      enqueue(chunk) {
        if (this.controller)
          try {
            let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk), available = (this.controller.desiredSize || 0) - bytes.byteLength;
            this.controller.enqueue(bytes), available <= 0 && this.pause();
          } catch {
            this.controller.error(new Error("Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object")), this.cancel();
          }
      }
      pause() {
        this.stream.pause && this.stream.pause();
      }
      resume() {
        this.stream.readable && this.stream.resume && this.stream.resume();
      }
      close() {
        this.controller && (this.controller.close(), delete this.controller);
      }
      /**
       * @param {Error} error 
       */
      error(error2) {
        this.controller && (this.controller.error(error2), delete this.controller);
      }
    }, validators = (
      /** @type {{validateHeaderName?:(name:string) => any, validateHeaderValue?:(name:string, value:string) => any}} */
      http
    ), validateHeaderName = typeof validators.validateHeaderName == "function" ? validators.validateHeaderName : (
      /**
       * @param {string} name
       */
      (name) => {
        if (!/^[\^`\-\w!#$%&'*+.|~]+$/.test(name)) {
          let err = new TypeError(`Header name must be a valid HTTP token [${name}]`);
          throw Object.defineProperty(err, "code", { value: "ERR_INVALID_HTTP_TOKEN" }), err;
        }
      }
    ), validateHeaderValue = typeof validators.validateHeaderValue == "function" ? validators.validateHeaderValue : (
      /**
       * @param {string} name
       * @param {string} value
       */
      (name, value) => {
        if (/[^\t\u0020-\u007E\u0080-\u00FF]/.test(value)) {
          let err = new TypeError(`Invalid character in header content ["${name}"]`);
          throw Object.defineProperty(err, "code", { value: "ERR_INVALID_CHAR" }), err;
        }
      }
    ), Headers2 = class extends URLSearchParams {
      /**
       * Headers class
       *
       * @constructor
       * @param {HeadersInit} [init] - Response headers
       */
      constructor(init) {
        let result = [];
        if (init instanceof Headers2) {
          let raw = init.raw();
          for (let [name, values] of Object.entries(raw))
            result.push(...values.map((value) => [name, value]));
        } else if (init != null)
          if (isIterable(init))
            result = [...init].map((pair) => {
              if (typeof pair != "object" || util.types.isBoxedPrimitive(pair))
                throw new TypeError("Each header pair must be an iterable object");
              return [...pair];
            }).map((pair) => {
              if (pair.length !== 2)
                throw new TypeError("Each header pair must be a name/value tuple");
              return [...pair];
            });
          else if (typeof init == "object" && init !== null)
            result.push(...Object.entries(init));
          else
            throw new TypeError("Failed to construct 'Headers': The provided value is not of type '(sequence<sequence<ByteString>> or record<ByteString, ByteString>)");
        return result = result.length > 0 ? result.map(([name, value]) => (validateHeaderName(name), validateHeaderValue(name, String(value)), [String(name).toLowerCase(), String(value)])) : [], super(result), new Proxy(this, {
          get(target, p, receiver) {
            switch (p) {
              case "append":
              case "set":
                return (name, value) => (validateHeaderName(name), validateHeaderValue(name, String(value)), URLSearchParams.prototype[p].call(
                  target,
                  String(name).toLowerCase(),
                  String(value)
                ));
              case "delete":
              case "has":
              case "getAll":
                return (name) => (validateHeaderName(name), URLSearchParams.prototype[p].call(
                  target,
                  String(name).toLowerCase()
                ));
              case "keys":
                return () => (target.sort(), new Set(URLSearchParams.prototype.keys.call(target)).keys());
              default:
                return Reflect.get(target, p, receiver);
            }
          }
          /* c8 ignore next */
        });
      }
      get [Symbol.toStringTag]() {
        return this.constructor.name;
      }
      toString() {
        return Object.prototype.toString.call(this);
      }
      /**
       *
       * @param {string} name
       */
      get(name) {
        let values = this.getAll(name);
        if (values.length === 0)
          return null;
        let value = values.join(", ");
        return /^content-encoding$/i.test(name) && (value = value.toLowerCase()), value;
      }
      /**
       * @param {(value: string, key: string, parent: this) => void} callback
       * @param {any} thisArg
       * @returns {void}
       */
      forEach(callback, thisArg = void 0) {
        for (let name of this.keys())
          Reflect.apply(callback, thisArg, [this.get(name), name, this]);
      }
      /**
       * @returns {IterableIterator<string>}
       */
      *values() {
        for (let name of this.keys())
          yield (
            /** @type {string} */
            this.get(name)
          );
      }
      /**
       * @returns {IterableIterator<[string, string]>}
       */
      *entries() {
        for (let name of this.keys())
          yield [
            name,
            /** @type {string} */
            this.get(name)
          ];
      }
      [Symbol.iterator]() {
        return this.entries();
      }
      /**
       * Node-fetch non-spec method
       * returning all headers and their values as array
       * @returns {Record<string, string[]>}
       */
      raw() {
        return [...this.keys()].reduce(
          (result, key) => (result[key] = this.getAll(key), result),
          /** @type {Record<string, string[]>} */
          {}
        );
      }
      /**
       * For better console.log(headers) and also to convert Headers into Node.js Request compatible format
       */
      [Symbol.for("nodejs.util.inspect.custom")]() {
        return [...this.keys()].reduce(
          (result, key) => {
            let values = this.getAll(key);
            return key === "host" ? result[key] = values[0] : result[key] = values.length > 1 ? values : values[0], result;
          },
          /** @type {Record<string, string|string[]>} */
          {}
        );
      }
    };
    Object.defineProperties(
      Headers2.prototype,
      ["get", "entries", "forEach", "values"].reduce(
        (result, property) => (result[property] = { enumerable: !0 }, result),
        /** @type {Record<string, {enumerable:true}>} */
        {}
      )
    );
    function fromRawHeaders(headers = []) {
      return new Headers2(
        headers.reduce(
          (result, value, index2, array) => (index2 % 2 === 0 && result.push(array.slice(index2, index2 + 2)), result),
          /** @type {string[][]} */
          []
        ).filter(([name, value]) => {
          try {
            return validateHeaderName(name), validateHeaderValue(name, String(value)), !0;
          } catch {
            return !1;
          }
        })
      );
    }
    var redirectStatus = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), isRedirect = (code) => redirectStatus.has(code), INTERNALS$1 = Symbol("Response internals"), Response3 = class extends Body {
      /**
       * @param {BodyInit|import('stream').Stream|null} [body] - Readable stream
       * @param {ResponseInit & Ext} [options] - Response options
       */
      constructor(body = null, options = {}) {
        super(body, options);
        let status = options.status || 200, headers = new Headers2(options.headers);
        if (body !== null && !headers.has("Content-Type")) {
          let contentType = extractContentType(this);
          contentType && headers.append("Content-Type", contentType);
        }
        this[INTERNALS$1] = {
          url: options.url,
          status,
          statusText: options.statusText || "",
          headers,
          counter: options.counter || 0,
          highWaterMark: options.highWaterMark
        };
      }
      /**
       * @type {ResponseType}
       */
      get type() {
        return "default";
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      /**
       * Convenience property representing if the request ended normally
       */
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      /**
       * @type {Headers}
       */
      get headers() {
        return this[INTERNALS$1].headers;
      }
      get highWaterMark() {
        return this[INTERNALS$1].highWaterMark;
      }
      /**
       * Clone this response
       *
       * @returns {Response}
       */
      clone() {
        return new Response3(clone(this), {
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          size: this.size
        });
      }
      /**
       * @param {string} url    The URL that the new response is to originate from.
       * @param {number} status An optional status code for the response (e.g., 302.)
       * @returns {Response}    A Response object.
       */
      static redirect(url2, status = 302) {
        if (!isRedirect(status))
          throw new RangeError('Failed to execute "redirect" on "response": Invalid status code');
        return new Response3(null, {
          headers: {
            location: new URL(url2).toString()
          },
          status
        });
      }
      get [Symbol.toStringTag]() {
        return "Response";
      }
    };
    Object.defineProperties(Response3.prototype, {
      url: { enumerable: !0 },
      status: { enumerable: !0 },
      ok: { enumerable: !0 },
      redirected: { enumerable: !0 },
      statusText: { enumerable: !0 },
      headers: { enumerable: !0 },
      clone: { enumerable: !0 }
    });
    var getSearch = (parsedURL) => {
      if (parsedURL.search)
        return parsedURL.search;
      let lastOffset = parsedURL.href.length - 1, hash = parsedURL.hash || (parsedURL.href[lastOffset] === "#" ? "#" : "");
      return parsedURL.href[lastOffset - hash.length] === "?" ? "?" : "";
    }, INTERNALS = Symbol("Request internals"), forbiddenMethods = /* @__PURE__ */ new Set(["CONNECT", "TRACE", "TRACK"]), normalizedMethods = /* @__PURE__ */ new Set(["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"]), isRequest = (object) => typeof object == "object" && typeof object[INTERNALS] == "object", Request2 = class extends Body {
      /**
       * @param {string|Request|URL} info  Url or Request instance
       * @param {RequestInit & RequestExtraOptions} init   Custom options
       */
      constructor(info, init = {}) {
        let parsedURL, settings;
        isRequest(info) ? (parsedURL = new URL(info.url), settings = info) : (parsedURL = new URL(info), settings = {});
        let method = init.method || settings.method || "GET";
        if (forbiddenMethods.has(method.toUpperCase()))
          throw new TypeError(`Failed to construct 'Request': '${method}' HTTP method is unsupported.`);
        normalizedMethods.has(method.toUpperCase()) && (method = method.toUpperCase());
        let inputBody = init.body != null ? init.body : isRequest(info) && info.body !== null ? clone(info) : null;
        if (inputBody != null && (method === "GET" || method === "HEAD"))
          throw new TypeError("Request with GET/HEAD method cannot have body");
        super(inputBody, {
          size: init.size || settings.size || 0
        });
        let input = settings, headers = (
          /** @type {globalThis.Headers} */
          new Headers2(init.headers || input.headers || {})
        );
        if (inputBody !== null && !headers.has("Content-Type")) {
          let contentType = extractContentType(this);
          contentType && headers.append("Content-Type", contentType);
        }
        let signal = "signal" in init ? init.signal : isRequest(input) ? input.signal : null;
        if (signal != null && !isAbortSignal(signal))
          throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget");
        if (!signal) {
          let AbortControllerConstructor = typeof AbortController < "u" ? AbortController : abortController.AbortController;
          signal = new AbortControllerConstructor().signal;
        }
        this[INTERNALS] = {
          method,
          redirect: init.redirect || input.redirect || "follow",
          headers,
          credentials: init.credentials || "same-origin",
          parsedURL,
          signal: signal || null
        }, this.keepalive, this.follow = init.follow === void 0 ? input.follow === void 0 ? 20 : input.follow : init.follow, this.compress = init.compress === void 0 ? input.compress === void 0 ? !0 : input.compress : init.compress, this.counter = init.counter || input.counter || 0, this.agent = init.agent || input.agent, this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384, this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || !1;
      }
      /**
       * @type {RequestCache}
       */
      get cache() {
        return "default";
      }
      /**
       * @type {RequestCredentials}
       */
      get credentials() {
        return this[INTERNALS].credentials;
      }
      /**
       * @type {RequestDestination}
       */
      get destination() {
        return "";
      }
      get integrity() {
        return "";
      }
      /** @type {RequestMode} */
      get mode() {
        return "cors";
      }
      /** @type {string} */
      get referrer() {
        return "";
      }
      /** @type {ReferrerPolicy} */
      get referrerPolicy() {
        return "";
      }
      get method() {
        return this[INTERNALS].method;
      }
      /**
       * @type {string}
       */
      get url() {
        return url.format(this[INTERNALS].parsedURL);
      }
      /**
       * @type {globalThis.Headers}
       */
      get headers() {
        return this[INTERNALS].headers;
      }
      get redirect() {
        return this[INTERNALS].redirect;
      }
      /**
       * @returns {AbortSignal}
       */
      get signal() {
        return this[INTERNALS].signal;
      }
      /**
       * Clone this request
       *
       * @return  {globalThis.Request}
       */
      clone() {
        return new Request2(this);
      }
      get [Symbol.toStringTag]() {
        return "Request";
      }
    };
    Object.defineProperties(Request2.prototype, {
      method: { enumerable: !0 },
      url: { enumerable: !0 },
      headers: { enumerable: !0 },
      redirect: { enumerable: !0 },
      clone: { enumerable: !0 },
      signal: { enumerable: !0 }
    });
    var getNodeRequestOptions = (request) => {
      let { parsedURL } = request[INTERNALS], headers = new Headers2(request[INTERNALS].headers);
      headers.has("Accept") || headers.set("Accept", "*/*");
      let contentLengthValue = null;
      if (request.body === null && /^(post|put)$/i.test(request.method) && (contentLengthValue = "0"), request.body !== null) {
        let totalBytes = getTotalBytes(request);
        typeof totalBytes == "number" && !Number.isNaN(totalBytes) && (contentLengthValue = String(totalBytes));
      }
      contentLengthValue && headers.set("Content-Length", contentLengthValue), headers.has("User-Agent") || headers.set("User-Agent", "node-fetch"), request.compress && !headers.has("Accept-Encoding") && headers.set("Accept-Encoding", "gzip,deflate,br");
      let { agent } = request;
      typeof agent == "function" && (agent = agent(parsedURL)), !headers.has("Connection") && !agent && headers.set("Connection", "close");
      let search = getSearch(parsedURL);
      return {
        path: parsedURL.pathname + search,
        pathname: parsedURL.pathname,
        hostname: parsedURL.hostname,
        protocol: parsedURL.protocol,
        port: parsedURL.port,
        hash: parsedURL.hash,
        search: parsedURL.search,
        // @ts-ignore - it does not has a query
        query: parsedURL.query,
        href: parsedURL.href,
        method: request.method,
        // @ts-ignore - not sure what this supposed to do
        headers: headers[Symbol.for("nodejs.util.inspect.custom")](),
        insecureHTTPParser: request.insecureHTTPParser,
        agent
      };
    }, AbortError = class extends FetchBaseError {
      /**
       * @param {string} message 
       * @param {string} [type]
       */
      constructor(message2, type2 = "aborted") {
        super(message2, type2);
      }
    }, supportedSchemas = /* @__PURE__ */ new Set(["data:", "http:", "https:", "file:"]);
    async function fetch2(url2, options_ = {}) {
      return new Promise((resolve, reject) => {
        let request = new Request2(url2, options_), options = getNodeRequestOptions(request);
        if (!supportedSchemas.has(options.protocol))
          throw new TypeError(`node-fetch cannot load ${url2}. URL scheme "${options.protocol.replace(/:$/, "")}" is not supported.`);
        if (options.protocol === "data:") {
          let data = dataUriToBuffer(request.url.toString()), response2 = new Response3(data, { headers: { "Content-Type": data.typeFull } });
          resolve(response2);
          return;
        }
        if (options.protocol === "file:") {
          let stream = fs.createReadStream(new URL(request.url)), type2 = mime.lookup(request.url) || "application/octet-stream", response2 = new Response3(stream, { headers: { "Content-Type": type2 } });
          resolve(response2);
          return;
        }
        let send = (options.protocol === "https:" ? https : http).request, { signal } = request, response = null, response_ = null, abort = () => {
          let error2 = new AbortError("The operation was aborted.");
          reject(error2), request.body && request.body.cancel(error2), response_ && response_.emit("error", error2);
        };
        if (signal && signal.aborted) {
          abort();
          return;
        }
        let abortAndFinalize = () => {
          abort(), finalize();
        }, request_ = send(options);
        signal && signal.addEventListener("abort", abortAndFinalize);
        let finalize = () => {
          request_.abort(), signal && signal.removeEventListener("abort", abortAndFinalize);
        };
        request_.on("error", (err) => {
          reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, "system", err)), finalize();
        }), fixResponseChunkedTransferBadEnding(request_, (err) => {
          signal && signal.aborted || response_ == null || response_.emit("error", err);
        }), parseInt(process.version.substring(1)) < 14 && request_.on("socket", (s) => {
          s.prependListener("close", (hadError) => {
            let hasDataListener = s.listenerCount("data") > 0;
            if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
              let err = Object.assign(new Error("Premature close"), {
                code: "ERR_STREAM_PREMATURE_CLOSE"
              });
              response_ == null || response_.emit("error", err);
            }
          });
        }), request_.on("response", (incoming) => {
          response_ = incoming, request_.setTimeout(0);
          let headers = fromRawHeaders(response_.rawHeaders);
          if (isRedirect(Number(response_.statusCode))) {
            let location = headers.get("Location"), locationURL = location === null ? null : new URL(location, request.url);
            switch (request.redirect) {
              case "error":
                reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, "no-redirect")), finalize();
                return;
              case "manual":
                locationURL !== null && headers.set("Location", locationURL.toString());
                break;
              case "follow": {
                if (locationURL === null)
                  break;
                if (request.counter >= request.follow) {
                  reject(new FetchError(`maximum redirect reached at: ${request.url}`, "max-redirect")), finalize();
                  return;
                }
                let requestOptions = {
                  headers: new Headers2(request.headers),
                  follow: request.follow,
                  counter: request.counter + 1,
                  agent: request.agent,
                  compress: request.compress,
                  method: request.method,
                  // Note: We can not use `request.body` because send would have
                  // consumed it already.
                  body: options_.body,
                  signal,
                  size: request.size
                }, isStreamBody = requestOptions.body instanceof webBlob.ReadableStream || requestOptions.body instanceof Stream.Readable;
                if (response_.statusCode !== 303 && isStreamBody) {
                  reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), finalize();
                  return;
                }
                (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === "POST") && (requestOptions.method = "GET", requestOptions.body = void 0, requestOptions.headers.delete("content-length")), fetch2(new Request2(locationURL.href, requestOptions)).then(resolve, reject), finalize();
                return;
              }
              default:
                return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));
            }
          }
          signal && response_.once("end", () => {
            signal.removeEventListener("abort", abortAndFinalize);
          });
          let body = Stream.pipeline(response_, new Stream.PassThrough(), reject);
          process.version < "v12.10" && response_.on("aborted", abortAndFinalize);
          let responseOptions = {
            url: request.url,
            status: response_.statusCode,
            statusText: response_.statusMessage,
            headers,
            size: request.size,
            counter: request.counter,
            highWaterMark: request.highWaterMark
          }, codings = headers.get("Content-Encoding");
          if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
            response = new Response3(body, responseOptions), resolve(response);
            return;
          }
          let zlibOptions = {
            flush: zlib.Z_SYNC_FLUSH,
            finishFlush: zlib.Z_SYNC_FLUSH
          };
          if (codings === "gzip" || codings === "x-gzip") {
            body = Stream.pipeline(body, zlib.createGunzip(zlibOptions), reject), response = new Response3(fromAsyncIterable(body), responseOptions), resolve(response);
            return;
          }
          if (codings === "deflate" || codings === "x-deflate") {
            Stream.pipeline(response_, new Stream.PassThrough(), reject).once("data", (chunk) => {
              (chunk[0] & 15) === 8 ? body = Stream.pipeline(body, zlib.createInflate(), reject) : body = Stream.pipeline(body, zlib.createInflateRaw(), reject), response = new Response3(fromAsyncIterable(body), responseOptions), resolve(response);
            });
            return;
          }
          if (codings === "br") {
            body = Stream.pipeline(body, zlib.createBrotliDecompress(), reject), response = new Response3(fromAsyncIterable(body), responseOptions), resolve(response);
            return;
          }
          response = new Response3(fromAsyncIterable(body), responseOptions), resolve(response);
        }), writeToStream(request_, request);
      });
    }
    function fixResponseChunkedTransferBadEnding(request, errorCallback) {
      let LAST_CHUNK = Buffer.from(`0\r
\r
`), isChunkedTransfer = !1, properLastChunkReceived = !1, previousChunk;
      request.on("response", (response) => {
        let { headers } = response;
        isChunkedTransfer = headers["transfer-encoding"] === "chunked" && !headers["content-length"];
      }), request.on("socket", (socket) => {
        let onSocketClose = () => {
          if (isChunkedTransfer && !properLastChunkReceived) {
            let error2 = Object.assign(new Error("Premature close"), {
              code: "ERR_STREAM_PREMATURE_CLOSE"
            });
            errorCallback(error2);
          }
        }, onData = (buf) => {
          properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0, !properLastChunkReceived && previousChunk && (properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0), previousChunk = buf;
        };
        socket.prependListener("close", onSocketClose), socket.on("data", onData), request.on("close", () => {
          socket.removeListener("close", onSocketClose), socket.removeListener("data", onData);
        });
      });
    }
    Object.defineProperty(exports, "Blob", {
      enumerable: !0,
      get: function() {
        return webBlob.Blob;
      }
    });
    Object.defineProperty(exports, "ReadableStream", {
      enumerable: !0,
      get: function() {
        return webBlob.ReadableStream;
      }
    });
    Object.defineProperty(exports, "FormData", {
      enumerable: !0,
      get: function() {
        return webFormData.FormData;
      }
    });
    exports.Headers = Headers2;
    exports.Request = Request2;
    exports.Response = Response3;
    exports.default = fetch2;
    exports.fetch = fetch2;
    exports = module2.exports = Object.assign(fetch2, exports);
  }
});

// node_modules/@remix-run/web-file/dist/src/file.cjs
var require_file = __commonJS({
  "node_modules/@remix-run/web-file/dist/src/file.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var webBlob = require_lib_node(), File2 = class extends webBlob.Blob {
      /**
       *
       * @param {BlobPart[]} init
       * @param {string} name - A USVString representing the file name or the path
       * to the file.
       * @param {FilePropertyBag} [options]
       */
      constructor(init, name = panic(new TypeError("File constructor requires name argument")), options = {}) {
        super(init, options), this._name = name, this._lastModified = options.lastModified || Date.now();
      }
      /**
       * The name of the file referenced by the File object.
       * @type {string}
       */
      get name() {
        return this._name;
      }
      /**
       * The path the URL of the File is relative to.
       * @type {string}
       */
      get webkitRelativePath() {
        return "";
      }
      /**
       * Returns the last modified time of the file, in millisecond since the UNIX
       * epoch (January 1st, 1970 at Midnight).
       * @returns {number}
       */
      get lastModified() {
        return this._lastModified;
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    }, panic = (error2) => {
      throw error2;
    };
    exports.File = File2;
  }
});

// node_modules/@remix-run/web-file/dist/src/lib.node.cjs
var require_lib_node4 = __commonJS({
  "node_modules/@remix-run/web-file/dist/src/lib.node.cjs"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var webBlob = require_lib_node(), file = require_file(), File2 = file.File;
    Object.defineProperty(exports, "Blob", {
      enumerable: !0,
      get: function() {
        return webBlob.Blob;
      }
    });
    exports.File = File2;
  }
});

// node_modules/@remix-run/node/dist/fetch.js
var require_fetch = __commonJS({
  "node_modules/@remix-run/node/dist/fetch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var webFetch = require_lib_node3(), webFile = require_lib_node4(), NodeRequest = class extends webFetch.Request {
      constructor(info, init) {
        super(info, init);
      }
      get headers() {
        return super.headers;
      }
      clone() {
        return new NodeRequest(this);
      }
    }, NodeResponse = class extends webFetch.Response {
      get headers() {
        return super.headers;
      }
      clone() {
        return super.clone();
      }
    }, fetch2 = (info, init) => (init = {
      // Disable compression handling so people can return the result of a fetch
      // directly in the loader without messing with the Content-Encoding header.
      compress: !1,
      ...init
    }, webFetch.fetch(info, init));
    Object.defineProperty(exports, "FormData", {
      enumerable: !0,
      get: function() {
        return webFetch.FormData;
      }
    });
    Object.defineProperty(exports, "Headers", {
      enumerable: !0,
      get: function() {
        return webFetch.Headers;
      }
    });
    Object.defineProperty(exports, "Blob", {
      enumerable: !0,
      get: function() {
        return webFile.Blob;
      }
    });
    Object.defineProperty(exports, "File", {
      enumerable: !0,
      get: function() {
        return webFile.File;
      }
    });
    exports.Request = NodeRequest;
    exports.Response = NodeResponse;
    exports.fetch = fetch2;
  }
});

// node_modules/@remix-run/node/dist/base64.js
var require_base642 = __commonJS({
  "node_modules/@remix-run/node/dist/base64.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function atob2(a8) {
      return Buffer.from(a8, "base64").toString("binary");
    }
    function btoa2(b) {
      return Buffer.from(b, "binary").toString("base64");
    }
    exports.atob = atob2;
    exports.btoa = btoa2;
  }
});

// node_modules/@remix-run/node/dist/globals.js
var require_globals = __commonJS({
  "node_modules/@remix-run/node/dist/globals.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var webStream = require_stream(), abortController = require_abort_controller(), base64 = require_base642(), fetch2 = require_fetch(), webFile = require_lib_node4(), webFetch = require_lib_node3();
    function installGlobals() {
      global.atob = base64.atob, global.btoa = base64.btoa, global.Blob = webFile.Blob, global.File = webFile.File, global.Headers = webFetch.Headers, global.Request = fetch2.Request, global.Response = fetch2.Response, global.fetch = fetch2.fetch, global.FormData = webFetch.FormData, global.ReadableStream = webStream.ReadableStream, global.WritableStream = webStream.WritableStream, global.AbortController = global.AbortController || abortController.AbortController;
    }
    exports.installGlobals = installGlobals;
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports) {
    "use strict";
    exports.parse = parse;
    exports.serialize = serialize;
    var decode = decodeURIComponent, encode = encodeURIComponent, fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse(str, options) {
      if (typeof str != "string")
        throw new TypeError("argument str must be a string");
      for (var obj = {}, opt = options || {}, pairs = str.split(";"), dec = opt.decode || decode, i13 = 0; i13 < pairs.length; i13++) {
        var pair = pairs[i13], index2 = pair.indexOf("=");
        if (!(index2 < 0)) {
          var key = pair.substring(0, index2).trim();
          if (obj[key] == null) {
            var val = pair.substring(index2 + 1, pair.length).trim();
            val[0] === '"' && (val = val.slice(1, -1)), obj[key] = tryDecode(val, dec);
          }
        }
      }
      return obj;
    }
    function serialize(name, val, options) {
      var opt = options || {}, enc = opt.encode || encode;
      if (typeof enc != "function")
        throw new TypeError("option encode is invalid");
      if (!fieldContentRegExp.test(name))
        throw new TypeError("argument name is invalid");
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value))
        throw new TypeError("argument val is invalid");
      var str = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge))
          throw new TypeError("option maxAge is invalid");
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain))
          throw new TypeError("option domain is invalid");
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path))
          throw new TypeError("option path is invalid");
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        if (typeof opt.expires.toUTCString != "function")
          throw new TypeError("option expires is invalid");
        str += "; Expires=" + opt.expires.toUTCString();
      }
      if (opt.httpOnly && (str += "; HttpOnly"), opt.secure && (str += "; Secure"), opt.sameSite) {
        var sameSite = typeof opt.sameSite == "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case !0:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch {
        return str;
      }
    }
  }
});

// node_modules/@remix-run/server-runtime/dist/warnings.js
var require_warnings = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/warnings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var alreadyWarned = {};
    function warnOnce(condition, message2) {
      !condition && !alreadyWarned[message2] && (alreadyWarned[message2] = !0, console.warn(message2));
    }
    exports.warnOnce = warnOnce;
  }
});

// node_modules/@remix-run/server-runtime/dist/cookies.js
var require_cookies = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/cookies.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var cookie = require_cookie(), warnings = require_warnings(), createCookieFactory = ({
      sign,
      unsign
    }) => (name, cookieOptions = {}) => {
      let {
        secrets = [],
        ...options
      } = {
        path: "/",
        sameSite: "lax",
        ...cookieOptions
      };
      return warnOnceAboutExpiresCookie(name, options.expires), {
        get name() {
          return name;
        },
        get isSigned() {
          return secrets.length > 0;
        },
        get expires() {
          return typeof options.maxAge < "u" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;
        },
        async parse(cookieHeader, parseOptions) {
          if (!cookieHeader)
            return null;
          let cookies = cookie.parse(cookieHeader, {
            ...options,
            ...parseOptions
          });
          return name in cookies ? cookies[name] === "" ? "" : await decodeCookieValue(unsign, cookies[name], secrets) : null;
        },
        async serialize(value, serializeOptions) {
          return cookie.serialize(name, value === "" ? "" : await encodeCookieValue(sign, value, secrets), {
            ...options,
            ...serializeOptions
          });
        }
      };
    }, isCookie = (object) => object != null && typeof object.name == "string" && typeof object.isSigned == "boolean" && typeof object.parse == "function" && typeof object.serialize == "function";
    async function encodeCookieValue(sign, value, secrets) {
      let encoded = encodeData(value);
      return secrets.length > 0 && (encoded = await sign(encoded, secrets[0])), encoded;
    }
    async function decodeCookieValue(unsign, value, secrets) {
      if (secrets.length > 0) {
        for (let secret of secrets) {
          let unsignedValue = await unsign(value, secret);
          if (unsignedValue !== !1)
            return decodeData(unsignedValue);
        }
        return null;
      }
      return decodeData(value);
    }
    function encodeData(value) {
      return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
    }
    function decodeData(value) {
      try {
        return JSON.parse(decodeURIComponent(myEscape(atob(value))));
      } catch {
        return {};
      }
    }
    function myEscape(value) {
      let str = value.toString(), result = "", index2 = 0, chr, code;
      for (; index2 < str.length; )
        chr = str.charAt(index2++), /[\w*+\-./@]/.exec(chr) ? result += chr : (code = chr.charCodeAt(0), code < 256 ? result += "%" + hex2(code, 2) : result += "%u" + hex2(code, 4).toUpperCase());
      return result;
    }
    function hex2(code, length) {
      let result = code.toString(16);
      for (; result.length < length; )
        result = "0" + result;
      return result;
    }
    function myUnescape(value) {
      let str = value.toString(), result = "", index2 = 0, chr, part;
      for (; index2 < str.length; ) {
        if (chr = str.charAt(index2++), chr === "%") {
          if (str.charAt(index2) === "u") {
            if (part = str.slice(index2 + 1, index2 + 5), /^[\da-f]{4}$/i.exec(part)) {
              result += String.fromCharCode(parseInt(part, 16)), index2 += 5;
              continue;
            }
          } else if (part = str.slice(index2, index2 + 2), /^[\da-f]{2}$/i.exec(part)) {
            result += String.fromCharCode(parseInt(part, 16)), index2 += 2;
            continue;
          }
        }
        result += chr;
      }
      return result;
    }
    function warnOnceAboutExpiresCookie(name, expires) {
      warnings.warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
    }
    exports.createCookieFactory = createCookieFactory;
    exports.isCookie = isCookie;
  }
});

// node_modules/@remix-run/server-runtime/dist/formData.js
var require_formData = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/formData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var multipartParser = require_src2();
    function composeUploadHandlers(...handlers) {
      return async (part) => {
        for (let handler of handlers) {
          let value = await handler(part);
          if (typeof value < "u" && value !== null)
            return value;
        }
      };
    }
    async function parseMultipartFormData(request, uploadHandler) {
      let contentType = request.headers.get("Content-Type") || "", [type2, boundary] = contentType.split(/\s*;\s*boundary=/);
      if (!request.body || !boundary || type2 !== "multipart/form-data")
        throw new TypeError("Could not parse content as FormData.");
      let formData = new FormData(), parts = multipartParser.streamMultipart(request.body, boundary);
      for await (let part of parts) {
        if (part.done)
          break;
        typeof part.filename == "string" && (part.filename = part.filename.split(/[/\\]/).pop());
        let value = await uploadHandler(part);
        typeof value < "u" && value !== null && formData.append(part.name, value);
      }
      return formData;
    }
    exports.composeUploadHandlers = composeUploadHandlers;
    exports.parseMultipartFormData = parseMultipartFormData;
  }
});

// node_modules/@remix-run/router/dist/router.cjs.js
var require_router_cjs = __commonJS({
  "node_modules/@remix-run/router/dist/router.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _extends2() {
      return _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i13 = 1; i13 < arguments.length; i13++) {
          var source = arguments[i13];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends2.apply(this, arguments);
    }
    exports.Action = void 0;
    (function(Action) {
      Action.Pop = "POP", Action.Push = "PUSH", Action.Replace = "REPLACE";
    })(exports.Action || (exports.Action = {}));
    var PopStateEventType = "popstate";
    function createMemoryHistory(options) {
      options === void 0 && (options = {});
      let {
        initialEntries = ["/"],
        initialIndex,
        v5Compat = !1
      } = options, entries;
      entries = initialEntries.map((entry2, index3) => createMemoryLocation(entry2, typeof entry2 == "string" ? null : entry2.state, index3 === 0 ? "default" : void 0));
      let index2 = clampIndex(initialIndex ?? entries.length - 1), action = exports.Action.Pop, listener = null;
      function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
      }
      function getCurrentLocation() {
        return entries[index2];
      }
      function createMemoryLocation(to, state, key) {
        state === void 0 && (state = null);
        let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
        return warning2(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to)), location;
      }
      function createHref(to) {
        return typeof to == "string" ? to : createPath(to);
      }
      return {
        get index() {
          return index2;
        },
        get action() {
          return action;
        },
        get location() {
          return getCurrentLocation();
        },
        createHref,
        createURL(to) {
          return new URL(createHref(to), "http://localhost");
        },
        encodeLocation(to) {
          let path = typeof to == "string" ? parsePath(to) : to;
          return {
            pathname: path.pathname || "",
            search: path.search || "",
            hash: path.hash || ""
          };
        },
        push(to, state) {
          action = exports.Action.Push;
          let nextLocation = createMemoryLocation(to, state);
          index2 += 1, entries.splice(index2, entries.length, nextLocation), v5Compat && listener && listener({
            action,
            location: nextLocation,
            delta: 1
          });
        },
        replace(to, state) {
          action = exports.Action.Replace;
          let nextLocation = createMemoryLocation(to, state);
          entries[index2] = nextLocation, v5Compat && listener && listener({
            action,
            location: nextLocation,
            delta: 0
          });
        },
        go(delta) {
          action = exports.Action.Pop;
          let nextIndex = clampIndex(index2 + delta), nextLocation = entries[nextIndex];
          index2 = nextIndex, listener && listener({
            action,
            location: nextLocation,
            delta
          });
        },
        listen(fn) {
          return listener = fn, () => {
            listener = null;
          };
        }
      };
    }
    function createBrowserHistory(options) {
      options === void 0 && (options = {});
      function createBrowserLocation(window2, globalHistory) {
        let {
          pathname,
          search,
          hash
        } = window2.location;
        return createLocation(
          "",
          {
            pathname,
            search,
            hash
          },
          // state defaults to `null` because `window.history.state` does
          globalHistory.state && globalHistory.state.usr || null,
          globalHistory.state && globalHistory.state.key || "default"
        );
      }
      function createBrowserHref(window2, to) {
        return typeof to == "string" ? to : createPath(to);
      }
      return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
    }
    function createHashHistory(options) {
      options === void 0 && (options = {});
      function createHashLocation(window2, globalHistory) {
        let {
          pathname = "/",
          search = "",
          hash = ""
        } = parsePath(window2.location.hash.substr(1));
        return createLocation(
          "",
          {
            pathname,
            search,
            hash
          },
          // state defaults to `null` because `window.history.state` does
          globalHistory.state && globalHistory.state.usr || null,
          globalHistory.state && globalHistory.state.key || "default"
        );
      }
      function createHashHref(window2, to) {
        let base = window2.document.querySelector("base"), href = "";
        if (base && base.getAttribute("href")) {
          let url = window2.location.href, hashIndex = url.indexOf("#");
          href = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href + "#" + (typeof to == "string" ? to : createPath(to));
      }
      function validateHashLocation(location, to) {
        warning2(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
      }
      return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
    }
    function invariant2(value, message2) {
      if (value === !1 || value === null || typeof value > "u")
        throw new Error(message2);
    }
    function warning2(cond, message2) {
      if (!cond) {
        typeof console < "u" && console.warn(message2);
        try {
          throw new Error(message2);
        } catch {
        }
      }
    }
    function createKey() {
      return Math.random().toString(36).substr(2, 8);
    }
    function getHistoryState(location, index2) {
      return {
        usr: location.state,
        key: location.key,
        idx: index2
      };
    }
    function createLocation(current, to, state, key) {
      return state === void 0 && (state = null), _extends2({
        pathname: typeof current == "string" ? current : current.pathname,
        search: "",
        hash: ""
      }, typeof to == "string" ? parsePath(to) : to, {
        state,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: to && to.key || key || createKey()
      });
    }
    function createPath(_ref) {
      let {
        pathname = "/",
        search = "",
        hash = ""
      } = _ref;
      return search && search !== "?" && (pathname += search.charAt(0) === "?" ? search : "?" + search), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
    }
    function parsePath(path) {
      let parsedPath = {};
      if (path) {
        let hashIndex = path.indexOf("#");
        hashIndex >= 0 && (parsedPath.hash = path.substr(hashIndex), path = path.substr(0, hashIndex));
        let searchIndex = path.indexOf("?");
        searchIndex >= 0 && (parsedPath.search = path.substr(searchIndex), path = path.substr(0, searchIndex)), path && (parsedPath.pathname = path);
      }
      return parsedPath;
    }
    function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
      options === void 0 && (options = {});
      let {
        window: window2 = document.defaultView,
        v5Compat = !1
      } = options, globalHistory = window2.history, action = exports.Action.Pop, listener = null, index2 = getIndex();
      index2 == null && (index2 = 0, globalHistory.replaceState(_extends2({}, globalHistory.state, {
        idx: index2
      }), ""));
      function getIndex() {
        return (globalHistory.state || {
          idx: null
        }).idx;
      }
      function handlePop() {
        action = exports.Action.Pop;
        let nextIndex = getIndex(), delta = nextIndex == null ? null : nextIndex - index2;
        index2 = nextIndex, listener && listener({
          action,
          location: history.location,
          delta
        });
      }
      function push(to, state) {
        action = exports.Action.Push;
        let location = createLocation(history.location, to, state);
        validateLocation && validateLocation(location, to), index2 = getIndex() + 1;
        let historyState = getHistoryState(location, index2), url = history.createHref(location);
        try {
          globalHistory.pushState(historyState, "", url);
        } catch (error2) {
          if (error2 instanceof DOMException && error2.name === "DataCloneError")
            throw error2;
          window2.location.assign(url);
        }
        v5Compat && listener && listener({
          action,
          location: history.location,
          delta: 1
        });
      }
      function replace(to, state) {
        action = exports.Action.Replace;
        let location = createLocation(history.location, to, state);
        validateLocation && validateLocation(location, to), index2 = getIndex();
        let historyState = getHistoryState(location, index2), url = history.createHref(location);
        globalHistory.replaceState(historyState, "", url), v5Compat && listener && listener({
          action,
          location: history.location,
          delta: 0
        });
      }
      function createURL(to) {
        let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href, href = typeof to == "string" ? to : createPath(to);
        return invariant2(base, "No window.location.(origin|href) available to create URL for href: " + href), new URL(href, base);
      }
      let history = {
        get action() {
          return action;
        },
        get location() {
          return getLocation(window2, globalHistory);
        },
        listen(fn) {
          if (listener)
            throw new Error("A history only accepts one active listener");
          return window2.addEventListener(PopStateEventType, handlePop), listener = fn, () => {
            window2.removeEventListener(PopStateEventType, handlePop), listener = null;
          };
        },
        createHref(to) {
          return createHref(window2, to);
        },
        createURL,
        encodeLocation(to) {
          let url = createURL(to);
          return {
            pathname: url.pathname,
            search: url.search,
            hash: url.hash
          };
        },
        push,
        replace,
        go(n) {
          return globalHistory.go(n);
        }
      };
      return history;
    }
    var ResultType;
    (function(ResultType2) {
      ResultType2.data = "data", ResultType2.deferred = "deferred", ResultType2.redirect = "redirect", ResultType2.error = "error";
    })(ResultType || (ResultType = {}));
    var immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
    function isIndexRoute(route) {
      return route.index === !0;
    }
    function convertRoutesToDataRoutes(routes2, mapRouteProperties, parentPath, manifest) {
      return parentPath === void 0 && (parentPath = []), manifest === void 0 && (manifest = {}), routes2.map((route, index2) => {
        let treePath = [...parentPath, index2], id3 = typeof route.id == "string" ? route.id : treePath.join("-");
        if (invariant2(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant2(!manifest[id3], 'Found a route id collision on id "' + id3 + `".  Route id's must be globally unique within Data Router usages`), isIndexRoute(route)) {
          let indexRoute = _extends2({}, route, mapRouteProperties(route), {
            id: id3
          });
          return manifest[id3] = indexRoute, indexRoute;
        } else {
          let pathOrLayoutRoute = _extends2({}, route, mapRouteProperties(route), {
            id: id3,
            children: void 0
          });
          return manifest[id3] = pathOrLayoutRoute, route.children && (pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest)), pathOrLayoutRoute;
        }
      });
    }
    function matchRoutes(routes2, locationArg, basename) {
      basename === void 0 && (basename = "/");
      let location = typeof locationArg == "string" ? parsePath(locationArg) : locationArg, pathname = stripBasename(location.pathname || "/", basename);
      if (pathname == null)
        return null;
      let branches = flattenRoutes(routes2);
      rankRouteBranches(branches);
      let matches = null;
      for (let i13 = 0; matches == null && i13 < branches.length; ++i13)
        matches = matchRouteBranch(
          branches[i13],
          // Incoming pathnames are generally encoded from either window.location
          // or from router.navigate, but we want to match against the unencoded
          // paths in the route definitions.  Memory router locations won't be
          // encoded here but there also shouldn't be anything to decode so this
          // should be a safe operation.  This avoids needing matchRoutes to be
          // history-aware.
          safelyDecodeURI(pathname)
        );
      return matches;
    }
    function flattenRoutes(routes2, branches, parentsMeta, parentPath) {
      branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
      let flattenRoute = (route, index2, relativePath) => {
        let meta = {
          relativePath: relativePath === void 0 ? route.path || "" : relativePath,
          caseSensitive: route.caseSensitive === !0,
          childrenIndex: index2,
          route
        };
        meta.relativePath.startsWith("/") && (invariant2(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta.relativePath = meta.relativePath.slice(parentPath.length));
        let path = joinPaths([parentPath, meta.relativePath]), routesMeta = parentsMeta.concat(meta);
        route.children && route.children.length > 0 && (invariant2(
          // Our types know better, but runtime JS may not!
          // @ts-expect-error
          route.index !== !0,
          "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
        ), flattenRoutes(route.children, branches, routesMeta, path)), !(route.path == null && !route.index) && branches.push({
          path,
          score: computeScore(path, route.index),
          routesMeta
        });
      };
      return routes2.forEach((route, index2) => {
        var _route$path;
        if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
          flattenRoute(route, index2);
        else
          for (let exploded of explodeOptionalSegments(route.path))
            flattenRoute(route, index2, exploded);
      }), branches;
    }
    function explodeOptionalSegments(path) {
      let segments = path.split("/");
      if (segments.length === 0)
        return [];
      let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
      if (rest.length === 0)
        return isOptional ? [required, ""] : [required];
      let restExploded = explodeOptionalSegments(rest.join("/")), result = [];
      return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
    }
    function rankRouteBranches(branches) {
      branches.sort((a8, b) => a8.score !== b.score ? b.score - a8.score : compareIndexes(a8.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));
    }
    var paramRe = /^:\w+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (s) => s === "*";
    function computeScore(path, index2) {
      let segments = path.split("/"), initialScore = segments.length;
      return segments.some(isSplat) && (initialScore += splatPenalty), index2 && (initialScore += indexRouteValue), segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
    }
    function compareIndexes(a8, b) {
      return a8.length === b.length && a8.slice(0, -1).every((n, i13) => n === b[i13]) ? (
        // If two routes are siblings, we should try to match the earlier sibling
        // first. This allows people to have fine-grained control over the matching
        // behavior by simply putting routes with identical paths in the order they
        // want them tried.
        a8[a8.length - 1] - b[b.length - 1]
      ) : (
        // Otherwise, it doesn't really make sense to rank non-siblings by index,
        // so they sort equally.
        0
      );
    }
    function matchRouteBranch(branch, pathname) {
      let {
        routesMeta
      } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
      for (let i13 = 0; i13 < routesMeta.length; ++i13) {
        let meta = routesMeta[i13], end = i13 === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match = matchPath({
          path: meta.relativePath,
          caseSensitive: meta.caseSensitive,
          end
        }, remainingPathname);
        if (!match)
          return null;
        Object.assign(matchedParams, match.params);
        let route = meta.route;
        matches.push({
          // TODO: Can this as be avoided?
          params: matchedParams,
          pathname: joinPaths([matchedPathname, match.pathname]),
          pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
          route
        }), match.pathnameBase !== "/" && (matchedPathname = joinPaths([matchedPathname, match.pathnameBase]));
      }
      return matches;
    }
    function generatePath(originalPath, params) {
      params === void 0 && (params = {});
      let path = originalPath;
      path.endsWith("*") && path !== "*" && !path.endsWith("/*") && (warning2(!1, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".')), path = path.replace(/\*$/, "/*"));
      let prefix2 = path.startsWith("/") ? "/" : "", segments = path.split(/\/+/).map((segment, index2, array) => {
        if (index2 === array.length - 1 && segment === "*")
          return params["*"];
        let keyMatch = segment.match(/^:(\w+)(\??)$/);
        if (keyMatch) {
          let [, key, optional] = keyMatch, param = params[key];
          return optional === "?" ? param ?? "" : (param == null && invariant2(!1, 'Missing ":' + key + '" param'), param);
        }
        return segment.replace(/\?$/g, "");
      }).filter((segment) => !!segment);
      return prefix2 + segments.join("/");
    }
    function matchPath(pattern, pathname) {
      typeof pattern == "string" && (pattern = {
        path: pattern,
        caseSensitive: !1,
        end: !0
      });
      let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end), match = pathname.match(matcher);
      if (!match)
        return null;
      let matchedPathname = match[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match.slice(1);
      return {
        params: paramNames.reduce((memo, paramName, index2) => {
          if (paramName === "*") {
            let splatValue = captureGroups[index2] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
          }
          return memo[paramName] = safelyDecodeURIComponent(captureGroups[index2] || "", paramName), memo;
        }, {}),
        pathname: matchedPathname,
        pathnameBase,
        pattern
      };
    }
    function compilePath(path, caseSensitive, end) {
      caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning2(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
      let paramNames = [], regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_, paramName) => (paramNames.push(paramName), "/([^\\/]+)"));
      return path.endsWith("*") ? (paramNames.push("*"), regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path !== "" && path !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), paramNames];
    }
    function safelyDecodeURI(value) {
      try {
        return decodeURI(value);
      } catch (error2) {
        return warning2(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error2 + ").")), value;
      }
    }
    function safelyDecodeURIComponent(value, paramName) {
      try {
        return decodeURIComponent(value);
      } catch (error2) {
        return warning2(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error2 + ").")), value;
      }
    }
    function stripBasename(pathname, basename) {
      if (basename === "/")
        return pathname;
      if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
        return null;
      let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
      return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
    }
    function resolvePath(to, fromPathname) {
      fromPathname === void 0 && (fromPathname = "/");
      let {
        pathname: toPathname,
        search = "",
        hash = ""
      } = typeof to == "string" ? parsePath(to) : to;
      return {
        pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname,
        search: normalizeSearch(search),
        hash: normalizeHash(hash)
      };
    }
    function resolvePathname(relativePath, fromPathname) {
      let segments = fromPathname.replace(/\/+$/, "").split("/");
      return relativePath.split("/").forEach((segment) => {
        segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
      }), segments.length > 1 ? segments.join("/") : "/";
    }
    function getInvalidPathError(char, field, dest, path) {
      return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
    }
    function getPathContributingMatches(matches) {
      return matches.filter((match, index2) => index2 === 0 || match.route.path && match.route.path.length > 0);
    }
    function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
      isPathRelative === void 0 && (isPathRelative = !1);
      let to;
      typeof toArg == "string" ? to = parsePath(toArg) : (to = _extends2({}, toArg), invariant2(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to)), invariant2(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to)), invariant2(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to)));
      let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
      if (isPathRelative || toPathname == null)
        from = locationPathname;
      else {
        let routePathnameIndex = routePathnames.length - 1;
        if (toPathname.startsWith("..")) {
          let toSegments = toPathname.split("/");
          for (; toSegments[0] === ".."; )
            toSegments.shift(), routePathnameIndex -= 1;
          to.pathname = toSegments.join("/");
        }
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
      }
      let path = resolvePath(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
      return !path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path.pathname += "/"), path;
    }
    function getToPathname(to) {
      return to === "" || to.pathname === "" ? "/" : typeof to == "string" ? parsePath(to).pathname : to.pathname;
    }
    var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search, normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), _extends2({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError = class extends Error {
    }, DeferredData = class {
      constructor(data, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant2(data && typeof data == "object" && !Array.isArray(data), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_, r24) => reject = r24), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data).reduce((acc, _ref) => {
          let [key, value] = _ref;
          return Object.assign(acc, {
            [key]: this.trackPromise(key, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key), this.pendingKeysSet.add(key);
        let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key, null, data), (error2) => this.onSettle(promise, key, error2));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key, error2, data) {
        return this.controller.signal.aborted && error2 instanceof AbortedDeferredError ? (this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
          get: () => error2
        }), Promise.reject(error2)) : (this.pendingKeysSet.delete(key), this.done && this.unlistenAbortSignal(), error2 ? (Object.defineProperty(promise, "_error", {
          get: () => error2
        }), this.emit(!1, key), Promise.reject(error2)) : (Object.defineProperty(promise, "_data", {
          get: () => data
        }), this.emit(!1, key), data));
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant2(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref2) => {
          let [key, value] = _ref2;
          return Object.assign(acc, {
            [key]: unwrapTrackedPromise(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    function isTrackedPromise(value) {
      return value instanceof Promise && value._tracked === !0;
    }
    function unwrapTrackedPromise(value) {
      if (!isTrackedPromise(value))
        return value;
      if (value._error)
        throw value._error;
      return value._data;
    }
    var defer = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData(data, responseInit);
    }, redirect = function(url, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url), new Response(null, _extends2({}, responseInit, {
        headers
      }));
    }, ErrorResponse = class {
      constructor(status, statusText, data, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data instanceof Error ? (this.data = data.toString(), this.error = data) : this.data = data;
      }
    };
    function isRouteErrorResponse(error2) {
      return error2 != null && typeof error2.status == "number" && typeof error2.statusText == "string" && typeof error2.internal == "boolean" && "data" in error2;
    }
    var validMutationMethodsArr = ["post", "put", "patch", "delete"], validMutationMethods = new Set(validMutationMethodsArr), validRequestMethodsArr = ["get", ...validMutationMethodsArr], validRequestMethods = new Set(validRequestMethodsArr), redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]), IDLE_NAVIGATION = {
      state: "idle",
      location: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_FETCHER = {
      state: "idle",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_BLOCKER = {
      state: "unblocked",
      proceed: void 0,
      reset: void 0,
      location: void 0
    }, ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, defaultMapRouteProperties = (route) => ({
      hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
    function createRouter(init) {
      let routerWindow = init.window ? init.window : typeof window < "u" ? window : void 0, isBrowser2 = typeof routerWindow < "u" && typeof routerWindow.document < "u" && typeof routerWindow.document.createElement < "u", isServer = !isBrowser2;
      invariant2(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
      let mapRouteProperties;
      if (init.mapRouteProperties)
        mapRouteProperties = init.mapRouteProperties;
      else if (init.detectErrorBoundary) {
        let detectErrorBoundary = init.detectErrorBoundary;
        mapRouteProperties = (route) => ({
          hasErrorBoundary: detectErrorBoundary(route)
        });
      } else
        mapRouteProperties = defaultMapRouteProperties;
      let manifest = {}, dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, void 0, manifest), inFlightDataRoutes, basename = init.basename || "/", future2 = _extends2({
        v7_normalizeFormMethod: !1,
        v7_prependBasename: !1
      }, init.future), unlistenHistory = null, subscribers = /* @__PURE__ */ new Set(), savedScrollPositions = null, getScrollRestorationKey = null, getScrollPosition = null, initialScrollRestored = init.hydrationData != null, initialMatches = matchRoutes(dataRoutes, init.history.location, basename), initialErrors = null;
      if (initialMatches == null) {
        let error2 = getInternalRouterError(404, {
          pathname: init.history.location.pathname
        }), {
          matches,
          route
        } = getShortCircuitMatches(dataRoutes);
        initialMatches = matches, initialErrors = {
          [route.id]: error2
        };
      }
      let initialized = (
        // All initialMatches need to be loaded before we're ready.  If we have lazy
        // functions around still then we'll need to run them in initialize()
        !initialMatches.some((m) => m.route.lazy) && // And we have to either have no loaders or have been provided hydrationData
        (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null)
      ), router, state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized,
        navigation: IDLE_NAVIGATION,
        // Don't restore on initial updateState() if we were SSR'd
        restoreScrollPosition: init.hydrationData != null ? !1 : null,
        preventScrollReset: !1,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
      }, pendingAction = exports.Action.Pop, pendingPreventScrollReset = !1, pendingNavigationController, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [], fetchControllers = /* @__PURE__ */ new Map(), incrementingLoadId = 0, pendingNavigationLoadId = -1, fetchReloadIds = /* @__PURE__ */ new Map(), fetchRedirectIds = /* @__PURE__ */ new Set(), fetchLoadMatches = /* @__PURE__ */ new Map(), activeDeferreds = /* @__PURE__ */ new Map(), blockerFunctions = /* @__PURE__ */ new Map(), ignoreNextHistoryUpdate = !1;
      function initialize() {
        return unlistenHistory = init.history.listen((_ref) => {
          let {
            action: historyAction,
            location,
            delta
          } = _ref;
          if (ignoreNextHistoryUpdate) {
            ignoreNextHistoryUpdate = !1;
            return;
          }
          warning2(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
          let blockerKey = shouldBlockNavigation({
            currentLocation: state.location,
            nextLocation: location,
            historyAction
          });
          if (blockerKey && delta != null) {
            ignoreNextHistoryUpdate = !0, init.history.go(delta * -1), updateBlocker(blockerKey, {
              state: "blocked",
              location,
              proceed() {
                updateBlocker(blockerKey, {
                  state: "proceeding",
                  proceed: void 0,
                  reset: void 0,
                  location
                }), init.history.go(delta);
              },
              reset() {
                deleteBlocker(blockerKey), updateState({
                  blockers: new Map(router.state.blockers)
                });
              }
            });
            return;
          }
          return startNavigation(historyAction, location);
        }), state.initialized || startNavigation(exports.Action.Pop, state.location), router;
      }
      function dispose() {
        unlistenHistory && unlistenHistory(), subscribers.clear(), pendingNavigationController && pendingNavigationController.abort(), state.fetchers.forEach((_, key) => deleteFetcher(key)), state.blockers.forEach((_, key) => deleteBlocker(key));
      }
      function subscribe(fn) {
        return subscribers.add(fn), () => subscribers.delete(fn);
      }
      function updateState(newState) {
        state = _extends2({}, state, newState), subscribers.forEach((subscriber) => subscriber(state));
      }
      function completeNavigation(location, newState) {
        var _location$state, _location$state2;
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== !0, actionData;
        newState.actionData ? Object.keys(newState.actionData).length > 0 ? actionData = newState.actionData : actionData = null : isActionReload ? actionData = state.actionData : actionData = null;
        let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
        for (let [key] of blockerFunctions)
          deleteBlocker(key);
        let preventScrollReset = pendingPreventScrollReset === !0 || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== !0;
        inFlightDataRoutes && (dataRoutes = inFlightDataRoutes, inFlightDataRoutes = void 0), updateState(_extends2({}, newState, {
          // matches, errors, fetchers go through as-is
          actionData,
          loaderData,
          historyAction: pendingAction,
          location,
          initialized: !0,
          navigation: IDLE_NAVIGATION,
          revalidation: "idle",
          restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
          preventScrollReset,
          blockers: new Map(state.blockers)
        })), isUninterruptedRevalidation || pendingAction === exports.Action.Pop || (pendingAction === exports.Action.Push ? init.history.push(location, location.state) : pendingAction === exports.Action.Replace && init.history.replace(location, location.state)), pendingAction = exports.Action.Pop, pendingPreventScrollReset = !1, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [];
      }
      async function navigate(to, opts) {
        if (typeof to == "number") {
          init.history.go(to);
          return;
        }
        let normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative), {
          path,
          submission,
          error: error2
        } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !1, normalizedPath, opts), currentLocation = state.location, nextLocation = createLocation(state.location, path, opts && opts.state);
        nextLocation = _extends2({}, nextLocation, init.history.encodeLocation(nextLocation));
        let userReplace = opts && opts.replace != null ? opts.replace : void 0, historyAction = exports.Action.Push;
        userReplace === !0 ? historyAction = exports.Action.Replace : userReplace === !1 || submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search && (historyAction = exports.Action.Replace);
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === !0 : void 0, blockerKey = shouldBlockNavigation({
          currentLocation,
          nextLocation,
          historyAction
        });
        if (blockerKey) {
          updateBlocker(blockerKey, {
            state: "blocked",
            location: nextLocation,
            proceed() {
              updateBlocker(blockerKey, {
                state: "proceeding",
                proceed: void 0,
                reset: void 0,
                location: nextLocation
              }), navigate(to, opts);
            },
            reset() {
              deleteBlocker(blockerKey), updateState({
                blockers: new Map(state.blockers)
              });
            }
          });
          return;
        }
        return await startNavigation(historyAction, nextLocation, {
          submission,
          // Send through the formData serialization error if we have one so we can
          // render at the right error boundary after we match routes
          pendingError: error2,
          preventScrollReset,
          replace: opts && opts.replace
        });
      }
      function revalidate() {
        if (interruptActiveLoads(), updateState({
          revalidation: "loading"
        }), state.navigation.state !== "submitting") {
          if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
              startUninterruptedRevalidation: !0
            });
            return;
          }
          startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation
          });
        }
      }
      async function startNavigation(historyAction, location, opts) {
        pendingNavigationController && pendingNavigationController.abort(), pendingNavigationController = null, pendingAction = historyAction, isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === !0, saveScrollPosition(state.location, state.matches), pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0;
        let routesToUse = inFlightDataRoutes || dataRoutes, loadingNavigation = opts && opts.overrideNavigation, matches = matchRoutes(routesToUse, location, basename);
        if (!matches) {
          let error2 = getInternalRouterError(404, {
            pathname: location.pathname
          }), {
            matches: notFoundMatches,
            route
          } = getShortCircuitMatches(routesToUse);
          cancelActiveDeferreds(), completeNavigation(location, {
            matches: notFoundMatches,
            loaderData: {},
            errors: {
              [route.id]: error2
            }
          });
          return;
        }
        if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
          completeNavigation(location, {
            matches
          });
          return;
        }
        pendingNavigationController = new AbortController();
        let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission), pendingActionData, pendingError;
        if (opts && opts.pendingError)
          pendingError = {
            [findNearestBoundary(matches).route.id]: opts.pendingError
          };
        else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
          let actionOutput = await handleAction(request, location, opts.submission, matches, {
            replace: opts.replace
          });
          if (actionOutput.shortCircuited)
            return;
          pendingActionData = actionOutput.pendingActionData, pendingError = actionOutput.pendingActionError, loadingNavigation = _extends2({
            state: "loading",
            location
          }, opts.submission), request = new Request(request.url, {
            signal: request.signal
          });
        }
        let {
          shortCircuited,
          loaderData,
          errors
        } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
        shortCircuited || (pendingNavigationController = null, completeNavigation(location, _extends2({
          matches
        }, pendingActionData ? {
          actionData: pendingActionData
        } : {}, {
          loaderData,
          errors
        })));
      }
      async function handleAction(request, location, submission, matches, opts) {
        interruptActiveLoads();
        let navigation = _extends2({
          state: "submitting",
          location
        }, submission);
        updateState({
          navigation
        });
        let result, actionMatch = getTargetMatch(matches, location);
        if (!actionMatch.route.action && !actionMatch.route.lazy)
          result = {
            type: ResultType.error,
            error: getInternalRouterError(405, {
              method: request.method,
              pathname: location.pathname,
              routeId: actionMatch.route.id
            })
          };
        else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename), request.signal.aborted)
          return {
            shortCircuited: !0
          };
        if (isRedirectResult(result)) {
          let replace;
          return opts && opts.replace != null ? replace = opts.replace : replace = result.location === state.location.pathname + state.location.search, await startRedirectNavigation(state, result, {
            submission,
            replace
          }), {
            shortCircuited: !0
          };
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
          return (opts && opts.replace) !== !0 && (pendingAction = exports.Action.Push), {
            // Send back an empty object we can use to clear out any prior actionData
            pendingActionData: {},
            pendingActionError: {
              [boundaryMatch.route.id]: result.error
            }
          };
        }
        if (isDeferredResult(result))
          throw getInternalRouterError(400, {
            type: "defer-action"
          });
        return {
          pendingActionData: {
            [actionMatch.route.id]: result.data
          }
        };
      }
      async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
        let loadingNavigation = overrideNavigation;
        loadingNavigation || (loadingNavigation = _extends2({
          state: "loading",
          location,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0
        }, submission));
        let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
          formMethod: loadingNavigation.formMethod,
          formAction: loadingNavigation.formAction,
          formData: loadingNavigation.formData,
          formEncType: loadingNavigation.formEncType
        } : void 0, routesToUse = inFlightDataRoutes || dataRoutes, [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError);
        if (cancelActiveDeferreds((routeId) => !(matches && matches.some((m) => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId)), matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
          let updatedFetchers2 = markFetchRedirectsDone();
          return completeNavigation(location, _extends2({
            matches,
            loaderData: {},
            // Commit pending error if we're short circuiting
            errors: pendingError || null
          }, pendingActionData ? {
            actionData: pendingActionData
          } : {}, updatedFetchers2 ? {
            fetchers: new Map(state.fetchers)
          } : {})), {
            shortCircuited: !0
          };
        }
        if (!isUninterruptedRevalidation) {
          revalidatingFetchers.forEach((rf) => {
            let fetcher = state.fetchers.get(rf.key), revalidatingFetcher = {
              state: "loading",
              data: fetcher && fetcher.data,
              formMethod: void 0,
              formAction: void 0,
              formEncType: void 0,
              formData: void 0,
              " _hasFetcherDoneAnything ": !0
            };
            state.fetchers.set(rf.key, revalidatingFetcher);
          });
          let actionData = pendingActionData || state.actionData;
          updateState(_extends2({
            navigation: loadingNavigation
          }, actionData ? Object.keys(actionData).length === 0 ? {
            actionData: null
          } : {
            actionData
          } : {}, revalidatingFetchers.length > 0 ? {
            fetchers: new Map(state.fetchers)
          } : {}));
        }
        pendingNavigationLoadId = ++incrementingLoadId, revalidatingFetchers.forEach((rf) => {
          rf.controller && fetchControllers.set(rf.key, rf.controller);
        });
        let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));
        pendingNavigationController && pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let {
          results: results2,
          loaderResults,
          fetcherResults
        } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
        if (request.signal.aborted)
          return {
            shortCircuited: !0
          };
        pendingNavigationController && pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations), revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
        let redirect2 = findRedirect(results2);
        if (redirect2)
          return await startRedirectNavigation(state, redirect2, {
            replace
          }), {
            shortCircuited: !0
          };
        let {
          loaderData,
          errors
        } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
        activeDeferreds.forEach((deferredData, routeId) => {
          deferredData.subscribe((aborted) => {
            (aborted || deferredData.done) && activeDeferreds.delete(routeId);
          });
        });
        let updatedFetchers = markFetchRedirectsDone(), didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId), shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
        return _extends2({
          loaderData,
          errors
        }, shouldUpdateFetchers ? {
          fetchers: new Map(state.fetchers)
        } : {});
      }
      function getFetcher(key) {
        return state.fetchers.get(key) || IDLE_FETCHER;
      }
      function fetch2(key, routeId, href, opts) {
        if (isServer)
          throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
        fetchControllers.has(key) && abortFetcher(key);
        let routesToUse = inFlightDataRoutes || dataRoutes, normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative), matches = matchRoutes(routesToUse, normalizedPath, basename);
        if (!matches) {
          setFetcherError(key, routeId, getInternalRouterError(404, {
            pathname: normalizedPath
          }));
          return;
        }
        let {
          path,
          submission
        } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !0, normalizedPath, opts), match = getTargetMatch(matches, path);
        if (pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, submission && isMutationMethod(submission.formMethod)) {
          handleFetcherAction(key, routeId, path, match, matches, submission);
          return;
        }
        fetchLoadMatches.set(key, {
          routeId,
          path
        }), handleFetcherLoader(key, routeId, path, match, matches, submission);
      }
      async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {
        if (interruptActiveLoads(), fetchLoadMatches.delete(key), !match.route.action && !match.route.lazy) {
          let error2 = getInternalRouterError(405, {
            method: submission.formMethod,
            pathname: path,
            routeId
          });
          setFetcherError(key, routeId, error2);
          return;
        }
        let existingFetcher = state.fetchers.get(key), fetcher = _extends2({
          state: "submitting"
        }, submission, {
          data: existingFetcher && existingFetcher.data,
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key, fetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
        fetchControllers.set(key, abortController);
        let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);
        if (fetchRequest.signal.aborted) {
          fetchControllers.get(key) === abortController && fetchControllers.delete(key);
          return;
        }
        if (isRedirectResult(actionResult)) {
          fetchControllers.delete(key), fetchRedirectIds.add(key);
          let loadingFetcher = _extends2({
            state: "loading"
          }, submission, {
            data: void 0,
            " _hasFetcherDoneAnything ": !0
          });
          return state.fetchers.set(key, loadingFetcher), updateState({
            fetchers: new Map(state.fetchers)
          }), startRedirectNavigation(state, actionResult, {
            submission,
            isFetchActionRedirect: !0
          });
        }
        if (isErrorResult(actionResult)) {
          setFetcherError(key, routeId, actionResult.error);
          return;
        }
        if (isDeferredResult(actionResult))
          throw getInternalRouterError(400, {
            type: "defer-action"
          });
        let nextLocation = state.navigation.location || state.location, revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal), routesToUse = inFlightDataRoutes || dataRoutes, matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
        invariant2(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let loadFetcher = _extends2({
          state: "loading",
          data: actionResult.data
        }, submission, {
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key, loadFetcher);
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
          init.history,
          state,
          matches,
          submission,
          nextLocation,
          isRevalidationRequired,
          cancelledDeferredRoutes,
          cancelledFetcherLoads,
          fetchLoadMatches,
          routesToUse,
          basename,
          {
            [match.route.id]: actionResult.data
          },
          void 0
          // No need to send through errors since we short circuit above
        );
        revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
          let staleKey = rf.key, existingFetcher2 = state.fetchers.get(staleKey), revalidatingFetcher = {
            state: "loading",
            data: existingFetcher2 && existingFetcher2.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(staleKey, revalidatingFetcher), rf.controller && fetchControllers.set(staleKey, rf.controller);
        }), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
        abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let {
          results: results2,
          loaderResults,
          fetcherResults
        } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
        if (abortController.signal.aborted)
          return;
        abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations), fetchReloadIds.delete(key), fetchControllers.delete(key), revalidatingFetchers.forEach((r24) => fetchControllers.delete(r24.key));
        let redirect2 = findRedirect(results2);
        if (redirect2)
          return startRedirectNavigation(state, redirect2);
        let {
          loaderData,
          errors
        } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);
        if (state.fetchers.has(key)) {
          let doneFetcher = {
            state: "idle",
            data: actionResult.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(key, doneFetcher);
        }
        let didAbortFetchLoads = abortStaleFetchLoads(loadId);
        state.navigation.state === "loading" && loadId > pendingNavigationLoadId ? (invariant2(pendingAction, "Expected pending action"), pendingNavigationController && pendingNavigationController.abort(), completeNavigation(state.navigation.location, {
          matches,
          loaderData,
          errors,
          fetchers: new Map(state.fetchers)
        })) : (updateState(_extends2({
          errors,
          loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
        }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
          fetchers: new Map(state.fetchers)
        } : {})), isRevalidationRequired = !1);
      }
      async function handleFetcherLoader(key, routeId, path, match, matches, submission) {
        let existingFetcher = state.fetchers.get(key), loadingFetcher = _extends2({
          state: "loading",
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0
        }, submission, {
          data: existingFetcher && existingFetcher.data,
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key, loadingFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
        fetchControllers.set(key, abortController);
        let result = await callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties, basename);
        if (isDeferredResult(result) && (result = await resolveDeferredData(result, fetchRequest.signal, !0) || result), fetchControllers.get(key) === abortController && fetchControllers.delete(key), fetchRequest.signal.aborted)
          return;
        if (isRedirectResult(result)) {
          fetchRedirectIds.add(key), await startRedirectNavigation(state, result);
          return;
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(state.matches, routeId);
          state.fetchers.delete(key), updateState({
            fetchers: new Map(state.fetchers),
            errors: {
              [boundaryMatch.route.id]: result.error
            }
          });
          return;
        }
        invariant2(!isDeferredResult(result), "Unhandled fetcher deferred data");
        let doneFetcher = {
          state: "idle",
          data: result.data,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          " _hasFetcherDoneAnything ": !0
        };
        state.fetchers.set(key, doneFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
      }
      async function startRedirectNavigation(state2, redirect2, _temp) {
        let {
          submission,
          replace,
          isFetchActionRedirect
        } = _temp === void 0 ? {} : _temp;
        redirect2.revalidate && (isRevalidationRequired = !0);
        let redirectLocation = createLocation(
          state2.location,
          redirect2.location,
          // TODO: This can be removed once we get rid of useTransition in Remix v2
          _extends2({
            _isRedirect: !0
          }, isFetchActionRedirect ? {
            _isFetchActionRedirect: !0
          } : {})
        );
        if (invariant2(redirectLocation, "Expected a location on the redirect navigation"), ABSOLUTE_URL_REGEX.test(redirect2.location) && isBrowser2) {
          let url = init.history.createURL(redirect2.location), isDifferentBasename = stripBasename(url.pathname, basename) == null;
          if (routerWindow.location.origin !== url.origin || isDifferentBasename) {
            replace ? routerWindow.location.replace(redirect2.location) : routerWindow.location.assign(redirect2.location);
            return;
          }
        }
        pendingNavigationController = null;
        let redirectHistoryAction = replace === !0 ? exports.Action.Replace : exports.Action.Push, {
          formMethod,
          formAction,
          formEncType,
          formData
        } = state2.navigation;
        !submission && formMethod && formAction && formData && formEncType && (submission = {
          formMethod,
          formAction,
          formEncType,
          formData
        }), redirectPreserveMethodStatusCodes.has(redirect2.status) && submission && isMutationMethod(submission.formMethod) ? await startNavigation(redirectHistoryAction, redirectLocation, {
          submission: _extends2({}, submission, {
            formAction: redirect2.location
          }),
          // Preserve this flag across redirects
          preventScrollReset: pendingPreventScrollReset
        }) : isFetchActionRedirect ? await startNavigation(redirectHistoryAction, redirectLocation, {
          overrideNavigation: {
            state: "loading",
            location: redirectLocation,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0
          },
          fetcherSubmission: submission,
          // Preserve this flag across redirects
          preventScrollReset: pendingPreventScrollReset
        }) : await startNavigation(redirectHistoryAction, redirectLocation, {
          overrideNavigation: {
            state: "loading",
            location: redirectLocation,
            formMethod: submission ? submission.formMethod : void 0,
            formAction: submission ? submission.formAction : void 0,
            formEncType: submission ? submission.formEncType : void 0,
            formData: submission ? submission.formData : void 0
          },
          // Preserve this flag across redirects
          preventScrollReset: pendingPreventScrollReset
        });
      }
      async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
        let results2 = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map((f) => f.matches && f.match && f.controller ? callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename) : {
          type: ResultType.error,
          error: getInternalRouterError(404, {
            pathname: f.path
          })
        })]), loaderResults = results2.slice(0, matchesToLoad.length), fetcherResults = results2.slice(matchesToLoad.length);
        return await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), !1, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f) => f.match), fetcherResults, fetchersToLoad.map((f) => f.controller ? f.controller.signal : null), !0)]), {
          results: results2,
          loaderResults,
          fetcherResults
        };
      }
      function interruptActiveLoads() {
        isRevalidationRequired = !0, cancelledDeferredRoutes.push(...cancelActiveDeferreds()), fetchLoadMatches.forEach((_, key) => {
          fetchControllers.has(key) && (cancelledFetcherLoads.push(key), abortFetcher(key));
        });
      }
      function setFetcherError(key, routeId, error2) {
        let boundaryMatch = findNearestBoundary(state.matches, routeId);
        deleteFetcher(key), updateState({
          errors: {
            [boundaryMatch.route.id]: error2
          },
          fetchers: new Map(state.fetchers)
        });
      }
      function deleteFetcher(key) {
        let fetcher = state.fetchers.get(key);
        fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key)) && abortFetcher(key), fetchLoadMatches.delete(key), fetchReloadIds.delete(key), fetchRedirectIds.delete(key), state.fetchers.delete(key);
      }
      function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        invariant2(controller, "Expected fetch controller: " + key), controller.abort(), fetchControllers.delete(key);
      }
      function markFetchersDone(keys) {
        for (let key of keys) {
          let doneFetcher = {
            state: "idle",
            data: getFetcher(key).data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(key, doneFetcher);
        }
      }
      function markFetchRedirectsDone() {
        let doneKeys = [], updatedFetchers = !1;
        for (let key of fetchRedirectIds) {
          let fetcher = state.fetchers.get(key);
          invariant2(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (fetchRedirectIds.delete(key), doneKeys.push(key), updatedFetchers = !0);
        }
        return markFetchersDone(doneKeys), updatedFetchers;
      }
      function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id3] of fetchReloadIds)
          if (id3 < landedId) {
            let fetcher = state.fetchers.get(key);
            invariant2(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (abortFetcher(key), fetchReloadIds.delete(key), yeetedKeys.push(key));
          }
        return markFetchersDone(yeetedKeys), yeetedKeys.length > 0;
      }
      function getBlocker(key, fn) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        return blockerFunctions.get(key) !== fn && blockerFunctions.set(key, fn), blocker;
      }
      function deleteBlocker(key) {
        state.blockers.delete(key), blockerFunctions.delete(key);
      }
      function updateBlocker(key, newBlocker) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        invariant2(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state), state.blockers.set(key, newBlocker), updateState({
          blockers: new Map(state.blockers)
        });
      }
      function shouldBlockNavigation(_ref2) {
        let {
          currentLocation,
          nextLocation,
          historyAction
        } = _ref2;
        if (blockerFunctions.size === 0)
          return;
        blockerFunctions.size > 1 && warning2(!1, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries()), [blockerKey, blockerFunction] = entries[entries.length - 1], blocker = state.blockers.get(blockerKey);
        if (!(blocker && blocker.state === "proceeding") && blockerFunction({
          currentLocation,
          nextLocation,
          historyAction
        }))
          return blockerKey;
      }
      function cancelActiveDeferreds(predicate) {
        let cancelledRouteIds = [];
        return activeDeferreds.forEach((dfd, routeId) => {
          (!predicate || predicate(routeId)) && (dfd.cancel(), cancelledRouteIds.push(routeId), activeDeferreds.delete(routeId));
        }), cancelledRouteIds;
      }
      function enableScrollRestoration(positions, getPosition, getKey) {
        if (savedScrollPositions = positions, getScrollPosition = getPosition, getScrollRestorationKey = getKey || ((location) => location.key), !initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
          initialScrollRestored = !0;
          let y = getSavedScrollPosition(state.location, state.matches);
          y != null && updateState({
            restoreScrollPosition: y
          });
        }
        return () => {
          savedScrollPositions = null, getScrollPosition = null, getScrollRestorationKey = null;
        };
      }
      function saveScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
          let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key = getScrollRestorationKey(location, userMatches) || location.key;
          savedScrollPositions[key] = getScrollPosition();
        }
      }
      function getSavedScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
          let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key = getScrollRestorationKey(location, userMatches) || location.key, y = savedScrollPositions[key];
          if (typeof y == "number")
            return y;
        }
        return null;
      }
      function _internalSetRoutes(newRoutes) {
        manifest = {}, inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, void 0, manifest);
      }
      return router = {
        get basename() {
          return basename;
        },
        get state() {
          return state;
        },
        get routes() {
          return dataRoutes;
        },
        initialize,
        subscribe,
        enableScrollRestoration,
        navigate,
        fetch: fetch2,
        revalidate,
        // Passthrough to history-aware createHref used by useHref so we get proper
        // hash-aware URLs in DOM paths
        createHref: (to) => init.history.createHref(to),
        encodeLocation: (to) => init.history.encodeLocation(to),
        getFetcher,
        deleteFetcher,
        dispose,
        getBlocker,
        deleteBlocker,
        _internalFetchControllers: fetchControllers,
        _internalActiveDeferreds: activeDeferreds,
        // TODO: Remove setRoutes, it's temporary to avoid dealing with
        // updating the tree while validating the update algorithm.
        _internalSetRoutes
      }, router;
    }
    var UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
    function createStaticHandler(routes2, opts) {
      invariant2(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
      let manifest = {}, basename = (opts ? opts.basename : null) || "/", mapRouteProperties;
      if (opts != null && opts.mapRouteProperties)
        mapRouteProperties = opts.mapRouteProperties;
      else if (opts != null && opts.detectErrorBoundary) {
        let detectErrorBoundary = opts.detectErrorBoundary;
        mapRouteProperties = (route) => ({
          hasErrorBoundary: detectErrorBoundary(route)
        });
      } else
        mapRouteProperties = defaultMapRouteProperties;
      let dataRoutes = convertRoutesToDataRoutes(routes2, mapRouteProperties, void 0, manifest);
      async function query(request, _temp2) {
        let {
          requestContext
        } = _temp2 === void 0 ? {} : _temp2, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
        if (!isValidMethod(method) && method !== "HEAD") {
          let error2 = getInternalRouterError(405, {
            method
          }), {
            matches: methodNotAllowedMatches,
            route
          } = getShortCircuitMatches(dataRoutes);
          return {
            basename,
            location,
            matches: methodNotAllowedMatches,
            loaderData: {},
            actionData: null,
            errors: {
              [route.id]: error2
            },
            statusCode: error2.status,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        } else if (!matches) {
          let error2 = getInternalRouterError(404, {
            pathname: location.pathname
          }), {
            matches: notFoundMatches,
            route
          } = getShortCircuitMatches(dataRoutes);
          return {
            basename,
            location,
            matches: notFoundMatches,
            loaderData: {},
            actionData: null,
            errors: {
              [route.id]: error2
            },
            statusCode: error2.status,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        }
        let result = await queryImpl(request, location, matches, requestContext);
        return isResponse(result) ? result : _extends2({
          location,
          basename
        }, result);
      }
      async function queryRoute(request, _temp3) {
        let {
          routeId,
          requestContext
        } = _temp3 === void 0 ? {} : _temp3, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
        if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS")
          throw getInternalRouterError(405, {
            method
          });
        if (!matches)
          throw getInternalRouterError(404, {
            pathname: location.pathname
          });
        let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);
        if (routeId && !match)
          throw getInternalRouterError(403, {
            pathname: location.pathname,
            routeId
          });
        if (!match)
          throw getInternalRouterError(404, {
            pathname: location.pathname
          });
        let result = await queryImpl(request, location, matches, requestContext, match);
        if (isResponse(result))
          return result;
        let error2 = result.errors ? Object.values(result.errors)[0] : void 0;
        if (error2 !== void 0)
          throw error2;
        if (result.actionData)
          return Object.values(result.actionData)[0];
        if (result.loaderData) {
          var _result$activeDeferre;
          let data = Object.values(result.loaderData)[0];
          return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id] && (data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id]), data;
        }
      }
      async function queryImpl(request, location, matches, requestContext, routeMatch) {
        invariant2(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
          if (isMutationMethod(request.method.toLowerCase()))
            return await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
          let result = await loadRouteData(request, matches, requestContext, routeMatch);
          return isResponse(result) ? result : _extends2({}, result, {
            actionData: null,
            actionHeaders: {}
          });
        } catch (e23) {
          if (isQueryRouteResponse(e23)) {
            if (e23.type === ResultType.error && !isRedirectResponse(e23.response))
              throw e23.response;
            return e23.response;
          }
          if (isRedirectResponse(e23))
            return e23;
          throw e23;
        }
      }
      async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
        let result;
        if (!actionMatch.route.action && !actionMatch.route.lazy) {
          let error2 = getInternalRouterError(405, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: actionMatch.route.id
          });
          if (isRouteRequest)
            throw error2;
          result = {
            type: ResultType.error,
            error: error2
          };
        } else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename, !0, isRouteRequest, requestContext), request.signal.aborted) {
          let method = isRouteRequest ? "queryRoute" : "query";
          throw new Error(method + "() call aborted");
        }
        if (isRedirectResult(result))
          throw new Response(null, {
            status: result.status,
            headers: {
              Location: result.location
            }
          });
        if (isDeferredResult(result)) {
          let error2 = getInternalRouterError(400, {
            type: "defer-action"
          });
          if (isRouteRequest)
            throw error2;
          result = {
            type: ResultType.error,
            error: error2
          };
        }
        if (isRouteRequest) {
          if (isErrorResult(result))
            throw result.error;
          return {
            matches: [actionMatch],
            loaderData: {},
            actionData: {
              [actionMatch.route.id]: result.data
            },
            errors: null,
            // Note: statusCode + headers are unused here since queryRoute will
            // return the raw Response or value
            statusCode: 200,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
            [boundaryMatch.route.id]: result.error
          });
          return _extends2({}, context2, {
            statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
            actionData: null,
            actionHeaders: _extends2({}, result.headers ? {
              [actionMatch.route.id]: result.headers
            } : {})
          });
        }
        let loaderRequest = new Request(request.url, {
          headers: request.headers,
          redirect: request.redirect,
          signal: request.signal
        }), context = await loadRouteData(loaderRequest, matches, requestContext);
        return _extends2({}, context, result.statusCode ? {
          statusCode: result.statusCode
        } : {}, {
          actionData: {
            [actionMatch.route.id]: result.data
          },
          actionHeaders: _extends2({}, result.headers ? {
            [actionMatch.route.id]: result.headers
          } : {})
        });
      }
      async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
        let isRouteRequest = routeMatch != null;
        if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))
          throw getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch == null ? void 0 : routeMatch.route.id
          });
        let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0])).filter((m) => m.route.loader || m.route.lazy);
        if (matchesToLoad.length === 0)
          return {
            matches,
            // Add a null for all matched routes for proper revalidation on the client
            loaderData: matches.reduce((acc, m) => Object.assign(acc, {
              [m.route.id]: null
            }), {}),
            errors: pendingActionError || null,
            statusCode: 200,
            loaderHeaders: {},
            activeDeferreds: null
          };
        let results2 = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename, !0, isRouteRequest, requestContext))]);
        if (request.signal.aborted) {
          let method = isRouteRequest ? "queryRoute" : "query";
          throw new Error(method + "() call aborted");
        }
        let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData(matches, matchesToLoad, results2, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match) => match.route.id));
        return matches.forEach((match) => {
          executedLoaders.has(match.route.id) || (context.loaderData[match.route.id] = null);
        }), _extends2({}, context, {
          matches,
          activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
        });
      }
      return {
        dataRoutes,
        query,
        queryRoute
      };
    }
    function getStaticContextFromError(routes2, context, error2) {
      return _extends2({}, context, {
        statusCode: 500,
        errors: {
          [context._deepestRenderedBoundaryId || routes2[0].id]: error2
        }
      });
    }
    function isSubmissionNavigation(opts) {
      return opts != null && "formData" in opts;
    }
    function normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {
      let contextualMatches, activeRouteMatch;
      if (fromRouteId != null && relative !== "path") {
        contextualMatches = [];
        for (let match of matches)
          if (contextualMatches.push(match), match.route.id === fromRouteId) {
            activeRouteMatch = match;
            break;
          }
      } else
        contextualMatches = matches, activeRouteMatch = matches[matches.length - 1];
      let path = resolveTo(to || ".", getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
      return to == null && (path.search = location.search, path.hash = location.hash), (to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search) && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), prependBasename && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
    }
    function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
      if (!opts || !isSubmissionNavigation(opts))
        return {
          path
        };
      if (opts.formMethod && !isValidMethod(opts.formMethod))
        return {
          path,
          error: getInternalRouterError(405, {
            method: opts.formMethod
          })
        };
      let submission;
      if (opts.formData) {
        let formMethod = opts.formMethod || "get";
        if (submission = {
          formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),
          formAction: stripHashFromPath(path),
          formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
          formData: opts.formData
        }, isMutationMethod(submission.formMethod))
          return {
            path,
            submission
          };
      }
      let parsedPath = parsePath(path), searchParams = convertFormDataToSearchParams(opts.formData);
      return isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search) && searchParams.append("index", ""), parsedPath.search = "?" + searchParams, {
        path: createPath(parsedPath),
        submission
      };
    }
    function getLoaderMatchesUntilBoundary(matches, boundaryId) {
      let boundaryMatches = matches;
      if (boundaryId) {
        let index2 = matches.findIndex((m) => m.route.id === boundaryId);
        index2 >= 0 && (boundaryMatches = matches.slice(0, index2));
      }
      return boundaryMatches;
    }
    function getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {
      let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0, currentUrl = history.createURL(state.location), nextUrl = history.createURL(location), boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0, navigationMatches = getLoaderMatchesUntilBoundary(matches, boundaryId).filter((match, index2) => {
        if (match.route.lazy)
          return !0;
        if (match.route.loader == null)
          return !1;
        if (isNewLoader(state.loaderData, state.matches[index2], match) || cancelledDeferredRoutes.some((id3) => id3 === match.route.id))
          return !0;
        let currentRouteMatch = state.matches[index2], nextRouteMatch = match;
        return shouldRevalidateLoader(match, _extends2({
          currentUrl,
          currentParams: currentRouteMatch.params,
          nextUrl,
          nextParams: nextRouteMatch.params
        }, submission, {
          actionResult,
          defaultShouldRevalidate: (
            // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
            isRevalidationRequired || // Clicked the same link, resubmitted a GET form
            currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
            currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
          )
        }));
      }), revalidatingFetchers = [];
      return fetchLoadMatches.forEach((f, key) => {
        if (!matches.some((m) => m.route.id === f.routeId))
          return;
        let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
        if (!fetcherMatches) {
          revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: null,
            match: null,
            controller: null
          });
          return;
        }
        let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
        if (cancelledFetcherLoads.includes(key)) {
          revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: fetcherMatches,
            match: fetcherMatch,
            controller: new AbortController()
          });
          return;
        }
        shouldRevalidateLoader(fetcherMatch, _extends2({
          currentUrl,
          currentParams: state.matches[state.matches.length - 1].params,
          nextUrl,
          nextParams: matches[matches.length - 1].params
        }, submission, {
          actionResult,
          // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
          defaultShouldRevalidate: isRevalidationRequired
        })) && revalidatingFetchers.push({
          key,
          routeId: f.routeId,
          path: f.path,
          matches: fetcherMatches,
          match: fetcherMatch,
          controller: new AbortController()
        });
      }), [navigationMatches, revalidatingFetchers];
    }
    function isNewLoader(currentLoaderData, currentMatch, match) {
      let isNew = (
        // [a] -> [a, b]
        !currentMatch || // [a, b] -> [a, c]
        match.route.id !== currentMatch.route.id
      ), isMissingData = currentLoaderData[match.route.id] === void 0;
      return isNew || isMissingData;
    }
    function isNewRouteInstance(currentMatch, match) {
      let currentPath = currentMatch.route.path;
      return (
        // param change for this match, /users/123 -> /users/456
        currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
        // e.g. /files/images/avatar.jpg -> files/finances.xls
        currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
      );
    }
    function shouldRevalidateLoader(loaderMatch, arg) {
      if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice == "boolean")
          return routeChoice;
      }
      return arg.defaultShouldRevalidate;
    }
    async function loadLazyRouteModule(route, mapRouteProperties, manifest) {
      if (!route.lazy)
        return;
      let lazyRoute = await route.lazy();
      if (!route.lazy)
        return;
      let routeToUpdate = manifest[route.id];
      invariant2(routeToUpdate, "No route found in manifest");
      let routeUpdates = {};
      for (let lazyRouteProperty in lazyRoute) {
        let isPropertyStaticallyDefined = routeToUpdate[lazyRouteProperty] !== void 0 && // This property isn't static since it should always be updated based
        // on the route updates
        lazyRouteProperty !== "hasErrorBoundary";
        warning2(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.')), !isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty) && (routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty]);
      }
      Object.assign(routeToUpdate, routeUpdates), Object.assign(routeToUpdate, _extends2({}, mapRouteProperties(routeToUpdate), {
        lazy: void 0
      }));
    }
    async function callLoaderOrAction(type2, request, match, matches, manifest, mapRouteProperties, basename, isStaticRequest, isRouteRequest, requestContext) {
      isStaticRequest === void 0 && (isStaticRequest = !1), isRouteRequest === void 0 && (isRouteRequest = !1);
      let resultType, result, onReject, runHandler = (handler) => {
        let reject, abortPromise = new Promise((_, r24) => reject = r24);
        return onReject = () => reject(), request.signal.addEventListener("abort", onReject), Promise.race([handler({
          request,
          params: match.params,
          context: requestContext
        }), abortPromise]);
      };
      try {
        let handler = match.route[type2];
        if (match.route.lazy)
          if (handler)
            result = (await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]))[0];
          else if (await loadLazyRouteModule(match.route, mapRouteProperties, manifest), handler = match.route[type2], handler)
            result = await runHandler(handler);
          else if (type2 === "action") {
            let url = new URL(request.url), pathname = url.pathname + url.search;
            throw getInternalRouterError(405, {
              method: request.method,
              pathname,
              routeId: match.route.id
            });
          } else
            return {
              type: ResultType.data,
              data: void 0
            };
        else if (handler)
          result = await runHandler(handler);
        else {
          let url = new URL(request.url), pathname = url.pathname + url.search;
          throw getInternalRouterError(404, {
            pathname
          });
        }
        invariant2(result !== void 0, "You defined " + (type2 === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type2 + "` ") + "function. Please return a value or `null`.");
      } catch (e23) {
        resultType = ResultType.error, result = e23;
      } finally {
        onReject && request.signal.removeEventListener("abort", onReject);
      }
      if (isResponse(result)) {
        let status = result.status;
        if (redirectStatusCodes.has(status)) {
          let location = result.headers.get("Location");
          if (invariant2(location, "Redirects returned/thrown from loaders/actions must have a Location header"), !ABSOLUTE_URL_REGEX.test(location))
            location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, !0, location);
          else if (!isStaticRequest) {
            let currentUrl = new URL(request.url), url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location), isSameBasename = stripBasename(url.pathname, basename) != null;
            url.origin === currentUrl.origin && isSameBasename && (location = url.pathname + url.search + url.hash);
          }
          if (isStaticRequest)
            throw result.headers.set("Location", location), result;
          return {
            type: ResultType.redirect,
            status,
            location,
            revalidate: result.headers.get("X-Remix-Revalidate") !== null
          };
        }
        if (isRouteRequest)
          throw {
            type: resultType || ResultType.data,
            response: result
          };
        let data, contentType = result.headers.get("Content-Type");
        return contentType && /\bapplication\/json\b/.test(contentType) ? data = await result.json() : data = await result.text(), resultType === ResultType.error ? {
          type: resultType,
          error: new ErrorResponse(status, result.statusText, data),
          headers: result.headers
        } : {
          type: ResultType.data,
          data,
          statusCode: result.status,
          headers: result.headers
        };
      }
      if (resultType === ResultType.error)
        return {
          type: resultType,
          error: result
        };
      if (isDeferredData(result)) {
        var _result$init, _result$init2;
        return {
          type: ResultType.deferred,
          deferredData: result,
          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
          headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
        };
      }
      return {
        type: ResultType.data,
        data: result
      };
    }
    function createClientSideRequest(history, location, signal, submission) {
      let url = history.createURL(stripHashFromPath(location)).toString(), init = {
        signal
      };
      if (submission && isMutationMethod(submission.formMethod)) {
        let {
          formMethod,
          formEncType,
          formData
        } = submission;
        init.method = formMethod.toUpperCase(), init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
      }
      return new Request(url, init);
    }
    function convertFormDataToSearchParams(formData) {
      let searchParams = new URLSearchParams();
      for (let [key, value] of formData.entries())
        searchParams.append(key, value instanceof File ? value.name : value);
      return searchParams;
    }
    function processRouteLoaderData(matches, matchesToLoad, results2, pendingError, activeDeferreds) {
      let loaderData = {}, errors = null, statusCode, foundError = !1, loaderHeaders = {};
      return results2.forEach((result, index2) => {
        let id3 = matchesToLoad[index2].route.id;
        if (invariant2(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData"), isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, id3), error2 = result.error;
          pendingError && (error2 = Object.values(pendingError)[0], pendingError = void 0), errors = errors || {}, errors[boundaryMatch.route.id] == null && (errors[boundaryMatch.route.id] = error2), loaderData[id3] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id3] = result.headers);
        } else
          isDeferredResult(result) ? (activeDeferreds.set(id3, result.deferredData), loaderData[id3] = result.deferredData.data) : loaderData[id3] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id3] = result.headers);
      }), pendingError && (errors = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
        loaderData,
        errors,
        statusCode: statusCode || 200,
        loaderHeaders
      };
    }
    function processLoaderData(state, matches, matchesToLoad, results2, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
      let {
        loaderData,
        errors
      } = processRouteLoaderData(matches, matchesToLoad, results2, pendingError, activeDeferreds);
      for (let index2 = 0; index2 < revalidatingFetchers.length; index2++) {
        let {
          key,
          match,
          controller
        } = revalidatingFetchers[index2];
        invariant2(fetcherResults !== void 0 && fetcherResults[index2] !== void 0, "Did not find corresponding fetcher result");
        let result = fetcherResults[index2];
        if (!(controller && controller.signal.aborted))
          if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
            errors && errors[boundaryMatch.route.id] || (errors = _extends2({}, errors, {
              [boundaryMatch.route.id]: result.error
            })), state.fetchers.delete(key);
          } else if (isRedirectResult(result))
            invariant2(!1, "Unhandled fetcher revalidation redirect");
          else if (isDeferredResult(result))
            invariant2(!1, "Unhandled fetcher deferred data");
          else {
            let doneFetcher = {
              state: "idle",
              data: result.data,
              formMethod: void 0,
              formAction: void 0,
              formEncType: void 0,
              formData: void 0,
              " _hasFetcherDoneAnything ": !0
            };
            state.fetchers.set(key, doneFetcher);
          }
      }
      return {
        loaderData,
        errors
      };
    }
    function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
      let mergedLoaderData = _extends2({}, newLoaderData);
      for (let match of matches) {
        let id3 = match.route.id;
        if (newLoaderData.hasOwnProperty(id3) ? newLoaderData[id3] !== void 0 && (mergedLoaderData[id3] = newLoaderData[id3]) : loaderData[id3] !== void 0 && match.route.loader && (mergedLoaderData[id3] = loaderData[id3]), errors && errors.hasOwnProperty(id3))
          break;
      }
      return mergedLoaderData;
    }
    function findNearestBoundary(matches, routeId) {
      return (routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches]).reverse().find((m) => m.route.hasErrorBoundary === !0) || matches[0];
    }
    function getShortCircuitMatches(routes2) {
      let route = routes2.find((r24) => r24.index || !r24.path || r24.path === "/") || {
        id: "__shim-error-route__"
      };
      return {
        matches: [{
          params: {},
          pathname: "",
          pathnameBase: "",
          route
        }],
        route
      };
    }
    function getInternalRouterError(status, _temp4) {
      let {
        pathname,
        routeId,
        method,
        type: type2
      } = _temp4 === void 0 ? {} : _temp4, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
      return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type2 === "defer-action" && (errorMessage = "defer() is not supported in actions")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponse(status || 500, statusText, new Error(errorMessage), !0);
    }
    function findRedirect(results2) {
      for (let i13 = results2.length - 1; i13 >= 0; i13--) {
        let result = results2[i13];
        if (isRedirectResult(result))
          return result;
      }
    }
    function stripHashFromPath(path) {
      let parsedPath = typeof path == "string" ? parsePath(path) : path;
      return createPath(_extends2({}, parsedPath, {
        hash: ""
      }));
    }
    function isHashChangeOnly(a8, b) {
      return a8.pathname !== b.pathname || a8.search !== b.search ? !1 : a8.hash === "" ? b.hash !== "" : a8.hash === b.hash ? !0 : b.hash !== "";
    }
    function isDeferredResult(result) {
      return result.type === ResultType.deferred;
    }
    function isErrorResult(result) {
      return result.type === ResultType.error;
    }
    function isRedirectResult(result) {
      return (result && result.type) === ResultType.redirect;
    }
    function isDeferredData(value) {
      let deferred = value;
      return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
    }
    function isResponse(value) {
      return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
    }
    function isRedirectResponse(result) {
      if (!isResponse(result))
        return !1;
      let status = result.status, location = result.headers.get("Location");
      return status >= 300 && status <= 399 && location != null;
    }
    function isQueryRouteResponse(obj) {
      return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
    }
    function isValidMethod(method) {
      return validRequestMethods.has(method.toLowerCase());
    }
    function isMutationMethod(method) {
      return validMutationMethods.has(method.toLowerCase());
    }
    async function resolveDeferredResults(currentMatches, matchesToLoad, results2, signals, isFetcher, currentLoaderData) {
      for (let index2 = 0; index2 < results2.length; index2++) {
        let result = results2[index2], match = matchesToLoad[index2];
        if (!match)
          continue;
        let currentMatch = currentMatches.find((m) => m.route.id === match.route.id), isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;
        if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
          let signal = signals[index2];
          invariant2(signal, "Expected an AbortSignal for revalidating fetcher deferred result"), await resolveDeferredData(result, signal, isFetcher).then((result2) => {
            result2 && (results2[index2] = result2 || results2[index2]);
          });
        }
      }
    }
    async function resolveDeferredData(result, signal, unwrap) {
      if (unwrap === void 0 && (unwrap = !1), !await result.deferredData.resolveData(signal)) {
        if (unwrap)
          try {
            return {
              type: ResultType.data,
              data: result.deferredData.unwrappedData
            };
          } catch (e23) {
            return {
              type: ResultType.error,
              error: e23
            };
          }
        return {
          type: ResultType.data,
          data: result.deferredData.data
        };
      }
    }
    function hasNakedIndexQuery(search) {
      return new URLSearchParams(search).getAll("index").some((v) => v === "");
    }
    function createUseMatchesMatch(match, loaderData) {
      let {
        route,
        pathname,
        params
      } = match;
      return {
        id: route.id,
        pathname,
        params,
        data: loaderData[route.id],
        handle: route.handle
      };
    }
    function getTargetMatch(matches, location) {
      let search = typeof location == "string" ? parsePath(location).search : location.search;
      if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || ""))
        return matches[matches.length - 1];
      let pathMatches = getPathContributingMatches(matches);
      return pathMatches[pathMatches.length - 1];
    }
    exports.AbortedDeferredError = AbortedDeferredError;
    exports.ErrorResponse = ErrorResponse;
    exports.IDLE_BLOCKER = IDLE_BLOCKER;
    exports.IDLE_FETCHER = IDLE_FETCHER;
    exports.IDLE_NAVIGATION = IDLE_NAVIGATION;
    exports.UNSAFE_DEFERRED_SYMBOL = UNSAFE_DEFERRED_SYMBOL;
    exports.UNSAFE_DeferredData = DeferredData;
    exports.UNSAFE_convertRoutesToDataRoutes = convertRoutesToDataRoutes;
    exports.UNSAFE_getPathContributingMatches = getPathContributingMatches;
    exports.UNSAFE_invariant = invariant2;
    exports.UNSAFE_warning = warning2;
    exports.createBrowserHistory = createBrowserHistory;
    exports.createHashHistory = createHashHistory;
    exports.createMemoryHistory = createMemoryHistory;
    exports.createPath = createPath;
    exports.createRouter = createRouter;
    exports.createStaticHandler = createStaticHandler;
    exports.defer = defer;
    exports.generatePath = generatePath;
    exports.getStaticContextFromError = getStaticContextFromError;
    exports.getToPathname = getToPathname;
    exports.isDeferredData = isDeferredData;
    exports.isRouteErrorResponse = isRouteErrorResponse;
    exports.joinPaths = joinPaths;
    exports.json = json;
    exports.matchPath = matchPath;
    exports.matchRoutes = matchRoutes;
    exports.normalizePathname = normalizePathname;
    exports.parsePath = parsePath;
    exports.redirect = redirect;
    exports.resolvePath = resolvePath;
    exports.resolveTo = resolveTo;
    exports.stripBasename = stripBasename;
  }
});

// node_modules/@remix-run/server-runtime/dist/mode.js
var require_mode = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/mode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var ServerMode = /* @__PURE__ */ function(ServerMode2) {
      return ServerMode2.Development = "development", ServerMode2.Production = "production", ServerMode2.Test = "test", ServerMode2;
    }({});
    function isServerMode(value) {
      return value === ServerMode.Development || value === ServerMode.Production || value === ServerMode.Test;
    }
    exports.ServerMode = ServerMode;
    exports.isServerMode = isServerMode;
  }
});

// node_modules/@remix-run/server-runtime/dist/errors.js
var require_errors = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var router = require_router_cjs(), mode = require_mode();
    function sanitizeError(error2, serverMode) {
      if (error2 instanceof Error && serverMode !== mode.ServerMode.Development) {
        let sanitized = new Error("Unexpected Server Error");
        return sanitized.stack = void 0, sanitized;
      }
      return error2;
    }
    function sanitizeErrors(errors, serverMode) {
      return Object.entries(errors).reduce((acc, [routeId, error2]) => Object.assign(acc, {
        [routeId]: sanitizeError(error2, serverMode)
      }), {});
    }
    function serializeError(error2, serverMode) {
      let sanitized = sanitizeError(error2, serverMode);
      return {
        message: sanitized.message,
        stack: sanitized.stack
      };
    }
    function serializeErrors(errors, serverMode) {
      if (!errors)
        return null;
      let entries = Object.entries(errors), serialized = {};
      for (let [key, val] of entries)
        if (router.isRouteErrorResponse(val))
          serialized[key] = {
            ...val,
            __type: "RouteErrorResponse"
          };
        else if (val instanceof Error) {
          let sanitized = sanitizeError(val, serverMode);
          serialized[key] = {
            message: sanitized.message,
            stack: sanitized.stack,
            __type: "Error"
          };
        } else
          serialized[key] = val;
      return serialized;
    }
    exports.sanitizeError = sanitizeError;
    exports.sanitizeErrors = sanitizeErrors;
    exports.serializeError = serializeError;
    exports.serializeErrors = serializeErrors;
  }
});

// node_modules/@remix-run/server-runtime/dist/responses.js
var require_responses = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/responses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var router = require_router_cjs(), errors = require_errors(), json = (data, init = {}) => router.json(data, init), defer = (data, init = {}) => router.defer(data, init), redirect = (url, init = 302) => router.redirect(url, init);
    function isDeferredData(value) {
      let deferred = value;
      return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
    }
    function isResponse(value) {
      return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
    }
    var redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
    function isRedirectStatusCode(statusCode) {
      return redirectStatusCodes.has(statusCode);
    }
    function isRedirectResponse(response) {
      return isRedirectStatusCode(response.status);
    }
    function isTrackedPromise(value) {
      return value != null && typeof value.then == "function" && value._tracked === !0;
    }
    var DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
    function createDeferredReadableStream(deferredData, signal, serverMode) {
      let encoder = new TextEncoder();
      return new ReadableStream({
        async start(controller) {
          let criticalData = {}, preresolvedKeys = [];
          for (let [key, value] of Object.entries(deferredData.data))
            isTrackedPromise(value) ? (criticalData[key] = `${DEFERRED_VALUE_PLACEHOLDER_PREFIX}${key}`, (typeof value._data < "u" || typeof value._error < "u") && preresolvedKeys.push(key)) : criticalData[key] = value;
          controller.enqueue(encoder.encode(JSON.stringify(criticalData) + `

`));
          for (let preresolvedKey of preresolvedKeys)
            enqueueTrackedPromise(controller, encoder, preresolvedKey, deferredData.data[preresolvedKey], serverMode);
          let unsubscribe = deferredData.subscribe((aborted, settledKey) => {
            settledKey && enqueueTrackedPromise(controller, encoder, settledKey, deferredData.data[settledKey], serverMode);
          });
          await deferredData.resolveData(signal), unsubscribe(), controller.close();
        }
      });
    }
    function enqueueTrackedPromise(controller, encoder, settledKey, promise, serverMode) {
      "_error" in promise ? controller.enqueue(encoder.encode("error:" + JSON.stringify({
        [settledKey]: promise._error instanceof Error ? errors.serializeError(promise._error, serverMode) : promise._error
      }) + `

`)) : controller.enqueue(encoder.encode("data:" + JSON.stringify({
        [settledKey]: promise._data ?? null
      }) + `

`));
    }
    exports.createDeferredReadableStream = createDeferredReadableStream;
    exports.defer = defer;
    exports.isDeferredData = isDeferredData;
    exports.isRedirectResponse = isRedirectResponse;
    exports.isRedirectStatusCode = isRedirectStatusCode;
    exports.isResponse = isResponse;
    exports.json = json;
    exports.redirect = redirect;
  }
});

// node_modules/@remix-run/server-runtime/dist/entry.js
var require_entry = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/entry.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function createEntryRouteModules(manifest) {
      return Object.keys(manifest).reduce((memo, routeId) => (memo[routeId] = manifest[routeId].module, memo), {});
    }
    exports.createEntryRouteModules = createEntryRouteModules;
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports, module2) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: !0,
      map: !1,
      silent: !1
    };
    function isNonEmptyString(str) {
      return typeof str == "string" && !!str.trim();
    }
    function parseString(setCookieValue, options) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString), nameValuePairStr = parts.shift(), parsed = parseNameValuePair(nameValuePairStr), name = parsed.name, value = parsed.value;
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      try {
        value = options.decodeValues ? decodeURIComponent(value) : value;
      } catch (e23) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e23
        );
      }
      var cookie = {
        name,
        value
      };
      return parts.forEach(function(part) {
        var sides2 = part.split("="), key = sides2.shift().trimLeft().toLowerCase(), value2 = sides2.join("=");
        key === "expires" ? cookie.expires = new Date(value2) : key === "max-age" ? cookie.maxAge = parseInt(value2, 10) : key === "secure" ? cookie.secure = !0 : key === "httponly" ? cookie.httpOnly = !0 : key === "samesite" ? cookie.sameSite = value2 : cookie[key] = value2;
      }), cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "", value = "", nameValueArr = nameValuePairStr.split("=");
      return nameValueArr.length > 1 ? (name = nameValueArr.shift(), value = nameValueArr.join("=")) : value = nameValuePairStr, { name, value };
    }
    function parse(input, options) {
      if (options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions, !input)
        return options.map ? {} : [];
      if (input.headers)
        if (typeof input.headers.getSetCookie == "function")
          input = input.headers.getSetCookie();
        else if (input.headers["set-cookie"])
          input = input.headers["set-cookie"];
        else {
          var sch = input.headers[Object.keys(input.headers).find(function(key) {
            return key.toLowerCase() === "set-cookie";
          })];
          !sch && input.headers.cookie && !options.silent && console.warn(
            "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
          ), input = sch;
        }
      if (Array.isArray(input) || (input = [input]), options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions, options.map) {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString(str, options);
          return cookies2[cookie.name] = cookie, cookies2;
        }, cookies);
      } else
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString(str, options);
        });
    }
    function splitCookiesString(cookiesString) {
      if (Array.isArray(cookiesString))
        return cookiesString;
      if (typeof cookiesString != "string")
        return [];
      var cookiesStrings = [], pos = 0, start, ch, lastComma, nextStart, cookiesSeparatorFound;
      function skipWhitespace() {
        for (; pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)); )
          pos += 1;
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        return ch = cookiesString.charAt(pos), ch !== "=" && ch !== ";" && ch !== ",";
      }
      for (; pos < cookiesString.length; ) {
        for (start = pos, cookiesSeparatorFound = !1; skipWhitespace(); )
          if (ch = cookiesString.charAt(pos), ch === ",") {
            for (lastComma = pos, pos += 1, skipWhitespace(), nextStart = pos; pos < cookiesString.length && notSpecialChar(); )
              pos += 1;
            pos < cookiesString.length && cookiesString.charAt(pos) === "=" ? (cookiesSeparatorFound = !0, pos = nextStart, cookiesStrings.push(cookiesString.substring(start, lastComma)), start = pos) : pos = lastComma + 1;
          } else
            pos += 1;
        (!cookiesSeparatorFound || pos >= cookiesString.length) && cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
      }
      return cookiesStrings;
    }
    module2.exports = parse;
    module2.exports.parse = parse;
    module2.exports.parseString = parseString;
    module2.exports.splitCookiesString = splitCookiesString;
  }
});

// node_modules/@remix-run/server-runtime/dist/headers.js
var require_headers = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/headers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var setCookieParser = require_set_cookie();
    function getDocumentHeadersRR(build, context) {
      let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1, matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches, errorHeaders;
      if (boundaryIdx >= 0) {
        let {
          actionHeaders,
          actionData,
          loaderHeaders,
          loaderData
        } = context;
        context.matches.slice(boundaryIdx).some((match) => {
          let id3 = match.route.id;
          return actionHeaders[id3] && (!actionData || actionData[id3] === void 0) ? errorHeaders = actionHeaders[id3] : loaderHeaders[id3] && loaderData[id3] === void 0 && (errorHeaders = loaderHeaders[id3]), errorHeaders != null;
        });
      }
      return matches.reduce((parentHeaders, match, idx) => {
        let {
          id: id3
        } = match.route, routeModule = build.routes[id3].module, loaderHeaders = context.loaderHeaders[id3] || new Headers(), actionHeaders = context.actionHeaders[id3] || new Headers(), includeErrorHeaders = errorHeaders != null && idx === matches.length - 1, includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;
        if (routeModule.headers == null && build.future.v2_headers) {
          let headers2 = new Headers(parentHeaders);
          return includeErrorCookies && prependCookies(errorHeaders, headers2), prependCookies(actionHeaders, headers2), prependCookies(loaderHeaders, headers2), headers2;
        }
        let headers = new Headers(routeModule.headers ? typeof routeModule.headers == "function" ? routeModule.headers({
          loaderHeaders,
          parentHeaders,
          actionHeaders,
          errorHeaders: includeErrorHeaders ? errorHeaders : void 0
        }) : routeModule.headers : void 0);
        return includeErrorCookies && prependCookies(errorHeaders, headers), prependCookies(actionHeaders, headers), prependCookies(loaderHeaders, headers), prependCookies(parentHeaders, headers), headers;
      }, new Headers());
    }
    function prependCookies(parentHeaders, childHeaders) {
      let parentSetCookieString = parentHeaders.get("Set-Cookie");
      parentSetCookieString && setCookieParser.splitCookiesString(parentSetCookieString).forEach((cookie) => {
        childHeaders.append("Set-Cookie", cookie);
      });
    }
    exports.getDocumentHeadersRR = getDocumentHeadersRR;
  }
});

// node_modules/@remix-run/server-runtime/dist/invariant.js
var require_invariant = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/invariant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function invariant2(value, message2) {
      if (value === !1 || value === null || typeof value > "u")
        throw console.error("The following error is a bug in Remix; please open an issue! https://github.com/remix-run/remix/issues/new"), new Error(message2);
    }
    exports.default = invariant2;
  }
});

// node_modules/@remix-run/server-runtime/dist/routeMatching.js
var require_routeMatching = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/routeMatching.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var router = require_router_cjs();
    function matchServerRoutes(routes2, pathname) {
      let matches = router.matchRoutes(routes2, pathname);
      return matches ? matches.map((match) => ({
        params: match.params,
        pathname: match.pathname,
        route: match.route
      })) : null;
    }
    exports.matchServerRoutes = matchServerRoutes;
  }
});

// node_modules/@remix-run/server-runtime/dist/data.js
var require_data = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/data.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var responses = require_responses();
    async function callRouteActionRR({
      loadContext,
      action,
      params,
      request,
      routeId
    }) {
      let result = await action({
        request: stripDataParam(stripIndexParam(request)),
        context: loadContext,
        params
      });
      if (result === void 0)
        throw new Error(`You defined an action for route "${routeId}" but didn't return anything from your \`action\` function. Please return a value or \`null\`.`);
      return responses.isResponse(result) ? result : responses.json(result);
    }
    async function callRouteLoaderRR({
      loadContext,
      loader,
      params,
      request,
      routeId
    }) {
      let result = await loader({
        request: stripDataParam(stripIndexParam(request)),
        context: loadContext,
        params
      });
      if (result === void 0)
        throw new Error(`You defined a loader for route "${routeId}" but didn't return anything from your \`loader\` function. Please return a value or \`null\`.`);
      return responses.isDeferredData(result) ? result.init && responses.isRedirectStatusCode(result.init.status || 200) ? responses.redirect(new Headers(result.init.headers).get("Location"), result.init) : result : responses.isResponse(result) ? result : responses.json(result);
    }
    function stripIndexParam(request) {
      let url = new URL(request.url), indexValues = url.searchParams.getAll("index");
      url.searchParams.delete("index");
      let indexValuesToKeep = [];
      for (let indexValue of indexValues)
        indexValue && indexValuesToKeep.push(indexValue);
      for (let toKeep of indexValuesToKeep)
        url.searchParams.append("index", toKeep);
      return new Request(url.href, request);
    }
    function stripDataParam(request) {
      let url = new URL(request.url);
      return url.searchParams.delete("_data"), new Request(url.href, request);
    }
    exports.callRouteActionRR = callRouteActionRR;
    exports.callRouteLoaderRR = callRouteLoaderRR;
  }
});

// node_modules/@remix-run/server-runtime/dist/routes.js
var require_routes = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/routes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var data = require_data();
    function groupRoutesByParentId(manifest) {
      let routes2 = {};
      return Object.values(manifest).forEach((route) => {
        let parentId = route.parentId || "";
        routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
      }), routes2;
    }
    function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => ({
        ...route,
        children: createRoutes(manifest, route.id, routesByParentId)
      }));
    }
    function createStaticHandlerDataRoutes(manifest, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => {
        let commonRoute = {
          // Always include root due to default boundaries
          hasErrorBoundary: future2.v2_errorBoundary === !0 ? route.id === "root" || route.module.ErrorBoundary != null : route.id === "root" || route.module.CatchBoundary != null || route.module.ErrorBoundary != null,
          id: route.id,
          path: route.path,
          loader: route.module.loader ? (args) => data.callRouteLoaderRR({
            request: args.request,
            params: args.params,
            loadContext: args.context,
            loader: route.module.loader,
            routeId: route.id
          }) : void 0,
          action: route.module.action ? (args) => data.callRouteActionRR({
            request: args.request,
            params: args.params,
            loadContext: args.context,
            action: route.module.action,
            routeId: route.id
          }) : void 0,
          handle: route.module.handle
        };
        return route.index ? {
          index: !0,
          ...commonRoute
        } : {
          caseSensitive: route.caseSensitive,
          children: createStaticHandlerDataRoutes(manifest, future2, route.id, routesByParentId),
          ...commonRoute
        };
      });
    }
    exports.createRoutes = createRoutes;
    exports.createStaticHandlerDataRoutes = createStaticHandlerDataRoutes;
  }
});

// node_modules/@remix-run/server-runtime/dist/markup.js
var require_markup = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/markup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
    function escapeHtml(html) {
      return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
    }
    exports.escapeHtml = escapeHtml;
  }
});

// node_modules/@remix-run/server-runtime/dist/serverHandoff.js
var require_serverHandoff = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/serverHandoff.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var markup = require_markup();
    function createServerHandoffString(serverHandoff) {
      return markup.escapeHtml(JSON.stringify(serverHandoff));
    }
    exports.createServerHandoffString = createServerHandoffString;
  }
});

// node_modules/@remix-run/server-runtime/dist/server.js
var require_server = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var router = require_router_cjs(), entry2 = require_entry(), errors = require_errors(), headers = require_headers(), invariant2 = require_invariant(), mode = require_mode(), routeMatching = require_routeMatching(), routes2 = require_routes(), responses = require_responses(), serverHandoff = require_serverHandoff(), createRequestHandler = (build, mode$1) => {
      let routes$1 = routes2.createRoutes(build.routes), dataRoutes = routes2.createStaticHandlerDataRoutes(build.routes, build.future), serverMode = mode.isServerMode(mode$1) ? mode$1 : mode.ServerMode.Production, staticHandler = router.createStaticHandler(dataRoutes), errorHandler = build.entry.module.handleError || ((error2, {
        request
      }) => {
        serverMode !== mode.ServerMode.Test && !request.signal.aborted && console.error(error2);
      });
      return async function(request, loadContext = {}) {
        let url = new URL(request.url), matches = routeMatching.matchServerRoutes(routes$1, url.pathname), handleError = (error2) => errorHandler(error2, {
          context: loadContext,
          params: matches && matches.length > 0 ? matches[0].params : {},
          request
        }), response;
        if (url.searchParams.has("_data")) {
          let routeId = url.searchParams.get("_data");
          if (response = await handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError), build.entry.module.handleDataRequest) {
            let match = matches.find((match2) => match2.route.id == routeId);
            response = await build.entry.module.handleDataRequest(response, {
              context: loadContext,
              params: match ? match.params : {},
              request
            });
          }
        } else
          matches && matches[matches.length - 1].route.module.default == null ? response = await handleResourceRequestRR(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError) : response = await handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext, handleError);
        return request.method === "HEAD" ? new Response(null, {
          headers: response.headers,
          status: response.status,
          statusText: response.statusText
        }) : response;
      };
    };
    async function handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {
      try {
        let response = await staticHandler.queryRoute(request, {
          routeId,
          requestContext: loadContext
        });
        if (responses.isRedirectResponse(response)) {
          let headers2 = new Headers(response.headers);
          return headers2.set("X-Remix-Redirect", headers2.get("Location")), headers2.set("X-Remix-Status", response.status), headers2.delete("Location"), response.headers.get("Set-Cookie") !== null && headers2.set("X-Remix-Revalidate", "yes"), new Response(null, {
            status: 204,
            headers: headers2
          });
        }
        if (router.UNSAFE_DEFERRED_SYMBOL in response) {
          let deferredData = response[router.UNSAFE_DEFERRED_SYMBOL], body = responses.createDeferredReadableStream(deferredData, request.signal, serverMode), init = deferredData.init || {}, headers2 = new Headers(init.headers);
          return headers2.set("Content-Type", "text/remix-deferred"), init.headers = headers2, new Response(body, init);
        }
        return response;
      } catch (error2) {
        if (responses.isResponse(error2))
          return error2.headers.set("X-Remix-Catch", "yes"), error2;
        if (router.isRouteErrorResponse(error2))
          return error2.error && handleError(error2.error), errorResponseToJson(error2, serverMode);
        let errorInstance = error2 instanceof Error ? error2 : new Error("Unexpected Server Error");
        return handleError(errorInstance), router.json(errors.serializeError(errorInstance, serverMode), {
          status: 500,
          headers: {
            "X-Remix-Error": "yes"
          }
        });
      }
    }
    function findParentBoundary(routes3, routeId, error2) {
      let route = routes3[routeId] || routes3.root, isCatch = router.isRouteErrorResponse(error2) && (!error2.error || error2.status === 404);
      return isCatch && route.module.CatchBoundary || !isCatch && route.module.ErrorBoundary || !route.parentId ? route.id : findParentBoundary(routes3, route.parentId, error2);
    }
    function differentiateCatchVersusErrorBoundaries(build, context) {
      if (!context.errors)
        return;
      let errors2 = {};
      for (let routeId of Object.keys(context.errors)) {
        let error2 = context.errors[routeId], handlingRouteId = findParentBoundary(build.routes, routeId, error2);
        errors2[handlingRouteId] = error2;
      }
      context.errors = errors2;
    }
    async function handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext, handleError) {
      let context;
      try {
        context = await staticHandler.query(request, {
          requestContext: loadContext
        });
      } catch (error2) {
        return handleError(error2), new Response(null, {
          status: 500
        });
      }
      if (responses.isResponse(context))
        return context;
      context.errors && (Object.values(context.errors).forEach((err) => {
        (!router.isRouteErrorResponse(err) || err.error) && handleError(err);
      }), context.errors = errors.sanitizeErrors(context.errors, serverMode)), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context);
      let headers$1 = headers.getDocumentHeadersRR(build, context), entryContext = {
        manifest: build.assets,
        routeModules: entry2.createEntryRouteModules(build.routes),
        staticHandlerContext: context,
        serverHandoffString: serverHandoff.createServerHandoffString({
          state: {
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: errors.serializeErrors(context.errors, serverMode)
          },
          future: build.future,
          dev: build.dev
        }),
        future: build.future
      }, handleDocumentRequestFunction = build.entry.module.default;
      try {
        return await handleDocumentRequestFunction(request, context.statusCode, headers$1, entryContext, loadContext);
      } catch (error2) {
        handleError(error2), context = router.getStaticContextFromError(staticHandler.dataRoutes, context, error2), context.errors && (context.errors = errors.sanitizeErrors(context.errors, serverMode)), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context), entryContext = {
          ...entryContext,
          staticHandlerContext: context,
          serverHandoffString: serverHandoff.createServerHandoffString({
            state: {
              loaderData: context.loaderData,
              actionData: context.actionData,
              errors: errors.serializeErrors(context.errors, serverMode)
            },
            future: build.future
          })
        };
        try {
          return await handleDocumentRequestFunction(request, context.statusCode, headers$1, entryContext, loadContext);
        } catch (error3) {
          return handleError(error3), returnLastResortErrorResponse(error3, serverMode);
        }
      }
    }
    async function handleResourceRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {
      try {
        let response = await staticHandler.queryRoute(request, {
          routeId,
          requestContext: loadContext
        });
        return invariant2.default(responses.isResponse(response), "Expected a Response to be returned from queryRoute"), response;
      } catch (error2) {
        return responses.isResponse(error2) ? (error2.headers.set("X-Remix-Catch", "yes"), error2) : router.isRouteErrorResponse(error2) ? (error2.error && handleError(error2.error), errorResponseToJson(error2, serverMode)) : (handleError(error2), returnLastResortErrorResponse(error2, serverMode));
      }
    }
    function errorResponseToJson(errorResponse, serverMode) {
      return router.json(errors.serializeError(errorResponse.error || new Error("Unexpected Server Error"), serverMode), {
        status: errorResponse.status,
        statusText: errorResponse.statusText,
        headers: {
          "X-Remix-Error": "yes"
        }
      });
    }
    function returnLastResortErrorResponse(error2, serverMode) {
      let message2 = "Unexpected Server Error";
      return serverMode !== mode.ServerMode.Production && (message2 += `

${String(error2)}`), new Response(message2, {
        status: 500,
        headers: {
          "Content-Type": "text/plain"
        }
      });
    }
    exports.createRequestHandler = createRequestHandler;
    exports.differentiateCatchVersusErrorBoundaries = differentiateCatchVersusErrorBoundaries;
  }
});

// node_modules/@remix-run/server-runtime/dist/sessions.js
var require_sessions = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/sessions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var cookies = require_cookies(), warnings = require_warnings();
    function flash(name) {
      return `__flash_${name}__`;
    }
    var createSession = (initialData = {}, id3 = "") => {
      let map = new Map(Object.entries(initialData));
      return {
        get id() {
          return id3;
        },
        get data() {
          return Object.fromEntries(map);
        },
        has(name) {
          return map.has(name) || map.has(flash(name));
        },
        get(name) {
          if (map.has(name))
            return map.get(name);
          let flashName = flash(name);
          if (map.has(flashName)) {
            let value = map.get(flashName);
            return map.delete(flashName), value;
          }
        },
        set(name, value) {
          map.set(name, value);
        },
        flash(name, value) {
          map.set(flash(name), value);
        },
        unset(name) {
          map.delete(name);
        }
      };
    }, isSession = (object) => object != null && typeof object.id == "string" && typeof object.data < "u" && typeof object.has == "function" && typeof object.get == "function" && typeof object.set == "function" && typeof object.flash == "function" && typeof object.unset == "function", createSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg,
      createData,
      readData,
      updateData,
      deleteData
    }) => {
      let cookie = cookies.isCookie(cookieArg) ? cookieArg : createCookie((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
      return warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options) {
          let id3 = cookieHeader && await cookie.parse(cookieHeader, options), data = id3 && await readData(id3);
          return createSession(data || {}, id3 || "");
        },
        async commitSession(session, options) {
          let {
            id: id3,
            data
          } = session;
          return id3 ? await updateData(id3, data, cookie.expires) : id3 = await createData(data, cookie.expires), cookie.serialize(id3, options);
        },
        async destroySession(session, options) {
          return await deleteData(session.id), cookie.serialize("", {
            ...options,
            expires: /* @__PURE__ */ new Date(0)
          });
        }
      };
    };
    function warnOnceAboutSigningSessionCookie(cookie) {
      warnings.warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);
    }
    exports.createSession = createSession;
    exports.createSessionStorageFactory = createSessionStorageFactory;
    exports.isSession = isSession;
    exports.warnOnceAboutSigningSessionCookie = warnOnceAboutSigningSessionCookie;
  }
});

// node_modules/@remix-run/server-runtime/dist/sessions/cookieStorage.js
var require_cookieStorage = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/sessions/cookieStorage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var cookies = require_cookies(), sessions = require_sessions(), createCookieSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg
    } = {}) => {
      let cookie = cookies.isCookie(cookieArg) ? cookieArg : createCookie((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
      return sessions.warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options) {
          return sessions.createSession(cookieHeader && await cookie.parse(cookieHeader, options) || {});
        },
        async commitSession(session, options) {
          let serializedCookie = await cookie.serialize(session.data, options);
          if (serializedCookie.length > 4096)
            throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
          return serializedCookie;
        },
        async destroySession(_session, options) {
          return cookie.serialize("", {
            ...options,
            expires: /* @__PURE__ */ new Date(0)
          });
        }
      };
    };
    exports.createCookieSessionStorageFactory = createCookieSessionStorageFactory;
  }
});

// node_modules/@remix-run/server-runtime/dist/sessions/memoryStorage.js
var require_memoryStorage = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/sessions/memoryStorage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var createMemorySessionStorageFactory = (createSessionStorage) => ({
      cookie
    } = {}) => {
      let uniqueId = 0, map = /* @__PURE__ */ new Map();
      return createSessionStorage({
        cookie,
        async createData(data, expires) {
          let id3 = (++uniqueId).toString();
          return map.set(id3, {
            data,
            expires
          }), id3;
        },
        async readData(id3) {
          if (map.has(id3)) {
            let {
              data,
              expires
            } = map.get(id3);
            if (!expires || expires > /* @__PURE__ */ new Date())
              return data;
            expires && map.delete(id3);
          }
          return null;
        },
        async updateData(id3, data, expires) {
          map.set(id3, {
            data,
            expires
          });
        },
        async deleteData(id3) {
          map.delete(id3);
        }
      });
    };
    exports.createMemorySessionStorageFactory = createMemorySessionStorageFactory;
  }
});

// node_modules/@remix-run/server-runtime/dist/upload/errors.js
var require_errors2 = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/upload/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var MaxPartSizeExceededError = class extends Error {
      constructor(field, maxBytes) {
        super(`Field "${field}" exceeded upload size of ${maxBytes} bytes.`), this.field = field, this.maxBytes = maxBytes;
      }
    };
    exports.MaxPartSizeExceededError = MaxPartSizeExceededError;
  }
});

// node_modules/@remix-run/server-runtime/dist/upload/memoryUploadHandler.js
var require_memoryUploadHandler = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/upload/memoryUploadHandler.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var errors = require_errors2();
    function createMemoryUploadHandler({
      filter: filter2,
      maxPartSize = 3e6
    } = {}) {
      return async ({
        filename,
        contentType,
        name,
        data
      }) => {
        if (filter2 && !await filter2({
          filename,
          contentType,
          name
        }))
          return;
        let size2 = 0, chunks = [];
        for await (let chunk of data) {
          if (size2 += chunk.byteLength, size2 > maxPartSize)
            throw new errors.MaxPartSizeExceededError(name, maxPartSize);
          chunks.push(chunk);
        }
        return typeof filename == "string" ? new File(chunks, filename, {
          type: contentType
        }) : await new Blob(chunks, {
          type: contentType
        }).text();
      };
    }
    exports.createMemoryUploadHandler = createMemoryUploadHandler;
  }
});

// node_modules/@remix-run/server-runtime/dist/dev.js
var require_dev = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/dev.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function broadcastDevReady(build, origin) {
      if (origin ?? (origin = ""), !origin)
        throw Error("Dev server origin not set");
      fetch(`${origin}/ping`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          buildHash: build.assets.version
        })
      }).catch((error2) => {
        console.error(`Could not reach Remix dev server at ${origin}`);
      });
    }
    function logDevReady(build) {
      console.log(`[REMIX DEV] ${build.assets.version} ready`);
    }
    exports.broadcastDevReady = broadcastDevReady;
    exports.logDevReady = logDevReady;
  }
});

// node_modules/@remix-run/server-runtime/dist/index.js
var require_dist = __commonJS({
  "node_modules/@remix-run/server-runtime/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var cookies = require_cookies(), formData = require_formData(), responses = require_responses(), server = require_server(), sessions = require_sessions(), cookieStorage = require_cookieStorage(), memoryStorage = require_memoryStorage(), memoryUploadHandler = require_memoryUploadHandler(), errors = require_errors2(), dev = require_dev();
    exports.createCookieFactory = cookies.createCookieFactory;
    exports.isCookie = cookies.isCookie;
    exports.unstable_composeUploadHandlers = formData.composeUploadHandlers;
    exports.unstable_parseMultipartFormData = formData.parseMultipartFormData;
    exports.defer = responses.defer;
    exports.json = responses.json;
    exports.redirect = responses.redirect;
    exports.createRequestHandler = server.createRequestHandler;
    exports.createSession = sessions.createSession;
    exports.createSessionStorageFactory = sessions.createSessionStorageFactory;
    exports.isSession = sessions.isSession;
    exports.createCookieSessionStorageFactory = cookieStorage.createCookieSessionStorageFactory;
    exports.createMemorySessionStorageFactory = memoryStorage.createMemorySessionStorageFactory;
    exports.unstable_createMemoryUploadHandler = memoryUploadHandler.createMemoryUploadHandler;
    exports.MaxPartSizeExceededError = errors.MaxPartSizeExceededError;
    exports.broadcastDevReady = dev.broadcastDevReady;
    exports.logDevReady = dev.logDevReady;
  }
});

// node_modules/cookie-signature/index.js
var require_cookie_signature = __commonJS({
  "node_modules/cookie-signature/index.js"(exports) {
    var crypto = require("crypto");
    exports.sign = function(val, secret) {
      if (typeof val != "string")
        throw new TypeError("Cookie value must be provided as a string.");
      if (secret == null)
        throw new TypeError("Secret key must be provided.");
      return val + "." + crypto.createHmac("sha256", secret).update(val).digest("base64").replace(/\=+$/, "");
    };
    exports.unsign = function(input, secret) {
      if (typeof input != "string")
        throw new TypeError("Signed cookie string must be provided.");
      if (secret == null)
        throw new TypeError("Secret key must be provided.");
      var tentativeValue = input.slice(0, input.lastIndexOf(".")), expectedInput = exports.sign(tentativeValue, secret), expectedBuffer = Buffer.from(expectedInput), inputBuffer = Buffer.from(input);
      return expectedBuffer.length === inputBuffer.length && crypto.timingSafeEqual(expectedBuffer, inputBuffer) ? tentativeValue : !1;
    };
  }
});

// node_modules/@remix-run/node/dist/crypto.js
var require_crypto = __commonJS({
  "node_modules/@remix-run/node/dist/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var cookieSignature = require_cookie_signature();
    function _interopDefaultLegacy(e23) {
      return e23 && typeof e23 == "object" && "default" in e23 ? e23 : { default: e23 };
    }
    var cookieSignature__default = /* @__PURE__ */ _interopDefaultLegacy(cookieSignature), sign = async (value, secret) => cookieSignature__default.default.sign(value, secret), unsign = async (signed, secret) => cookieSignature__default.default.unsign(signed, secret);
    exports.sign = sign;
    exports.unsign = unsign;
  }
});

// node_modules/@remix-run/node/dist/implementations.js
var require_implementations = __commonJS({
  "node_modules/@remix-run/node/dist/implementations.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var serverRuntime = require_dist(), crypto = require_crypto(), createCookie = serverRuntime.createCookieFactory({
      sign: crypto.sign,
      unsign: crypto.unsign
    }), createCookieSessionStorage = serverRuntime.createCookieSessionStorageFactory(createCookie), createSessionStorage = serverRuntime.createSessionStorageFactory(createCookie), createMemorySessionStorage = serverRuntime.createMemorySessionStorageFactory(createSessionStorage);
    exports.createCookie = createCookie;
    exports.createCookieSessionStorage = createCookieSessionStorage;
    exports.createMemorySessionStorage = createMemorySessionStorage;
    exports.createSessionStorage = createSessionStorage;
  }
});

// node_modules/@remix-run/node/dist/sessions/fileStorage.js
var require_fileStorage = __commonJS({
  "node_modules/@remix-run/node/dist/sessions/fileStorage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var crypto = require("crypto"), fs = require("fs"), path = require("path"), implementations = require_implementations();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var crypto__namespace = /* @__PURE__ */ _interopNamespace(crypto), path__namespace = /* @__PURE__ */ _interopNamespace(path);
    function createFileSessionStorage({
      cookie,
      dir
    }) {
      return implementations.createSessionStorage({
        cookie,
        async createData(data, expires) {
          let content = JSON.stringify({
            data,
            expires
          });
          for (; ; ) {
            let randomBytes = crypto__namespace.randomBytes(8), id3 = Buffer.from(randomBytes).toString("hex");
            try {
              let file = getFile(dir, id3);
              return await fs.promises.mkdir(path__namespace.dirname(file), {
                recursive: !0
              }), await fs.promises.writeFile(file, content, {
                encoding: "utf-8",
                flag: "wx"
              }), id3;
            } catch (error2) {
              if (error2.code !== "EEXIST")
                throw error2;
            }
          }
        },
        async readData(id3) {
          try {
            let file = getFile(dir, id3), content = JSON.parse(await fs.promises.readFile(file, "utf-8")), data = content.data, expires = typeof content.expires == "string" ? new Date(content.expires) : null;
            return !expires || expires > /* @__PURE__ */ new Date() ? data : (expires && await fs.promises.unlink(file), null);
          } catch (error2) {
            if (error2.code !== "ENOENT")
              throw error2;
            return null;
          }
        },
        async updateData(id3, data, expires) {
          let content = JSON.stringify({
            data,
            expires
          }), file = getFile(dir, id3);
          await fs.promises.mkdir(path__namespace.dirname(file), {
            recursive: !0
          }), await fs.promises.writeFile(file, content, "utf-8");
        },
        async deleteData(id3) {
          if (id3)
            try {
              await fs.promises.unlink(getFile(dir, id3));
            } catch (error2) {
              if (error2.code !== "ENOENT")
                throw error2;
            }
        }
      });
    }
    function getFile(dir, id3) {
      return path__namespace.join(dir, id3.slice(0, 4), id3.slice(4));
    }
    exports.createFileSessionStorage = createFileSessionStorage;
  }
});

// node_modules/stream-slice/index.js
var require_stream_slice = __commonJS({
  "node_modules/stream-slice/index.js"(exports) {
    var util = require("util"), Transform = require("stream").Transform;
    util.inherits(SliceStream, Transform);
    function SliceStream(start, end) {
      if (!(this instanceof SliceStream))
        return new SliceStream();
      Transform.call(this), this._start = start || 0, this._end = end || 1 / 0, this._offset = 0, this._state = 0, this._emitUp = !1, this._emitDown = !1;
    }
    SliceStream.prototype._transform = function(chunk, encoding, done) {
      if (this._offset += chunk.length, !this._emitUp && this._offset >= this._start) {
        this._emitUp = !0;
        var start = chunk.length - (this._offset - this._start);
        if (this._offset > this._end) {
          var end = chunk.length - (this._offset - this._end);
          this._emitDown = !0, this.push(chunk.slice(start, end));
        } else
          this.push(chunk.slice(start, chunk.length));
        return done();
      }
      return this._emitUp && !this._emitDown && (this._offset >= this._end ? (this._emitDown = !0, this.push(chunk.slice(0, chunk.length - (this._offset - this._end)))) : this.push(chunk)), done();
    };
    exports.slice = function(start, end) {
      return new SliceStream(start, end);
    };
  }
});

// node_modules/@remix-run/node/dist/stream.js
var require_stream2 = __commonJS({
  "node_modules/@remix-run/node/dist/stream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var stream = require("stream");
    async function writeReadableStreamToWritable(stream2, writable) {
      let reader = stream2.getReader();
      async function read() {
        let {
          done,
          value
        } = await reader.read();
        if (done) {
          writable.end();
          return;
        }
        writable.write(value);
        let flushable = writable;
        typeof flushable.flush == "function" && flushable.flush(), await read();
      }
      try {
        await read();
      } catch (error2) {
        throw writable.destroy(error2), error2;
      }
    }
    async function writeAsyncIterableToWritable(iterable, writable) {
      try {
        for await (let chunk of iterable)
          writable.write(chunk);
        writable.end();
      } catch (error2) {
        throw writable.destroy(error2), error2;
      }
    }
    async function readableStreamToString(stream2, encoding) {
      let reader = stream2.getReader(), chunks = [];
      async function read() {
        let {
          done,
          value
        } = await reader.read();
        done || (value && chunks.push(value), await read());
      }
      return await read(), Buffer.concat(chunks).toString(encoding);
    }
    var createReadableStreamFromReadable = (source) => {
      let pump = new StreamPump(source);
      return new ReadableStream(pump, pump);
    }, StreamPump = class {
      constructor(stream$1) {
        this.highWaterMark = stream$1.readableHighWaterMark || new stream.Stream.Readable().readableHighWaterMark, this.accumalatedSize = 0, this.stream = stream$1, this.enqueue = this.enqueue.bind(this), this.error = this.error.bind(this), this.close = this.close.bind(this);
      }
      size(chunk) {
        return (chunk == null ? void 0 : chunk.byteLength) || 0;
      }
      start(controller) {
        this.controller = controller, this.stream.on("data", this.enqueue), this.stream.once("error", this.error), this.stream.once("end", this.close), this.stream.once("close", this.close);
      }
      pull() {
        this.resume();
      }
      cancel(reason) {
        this.stream.destroy && this.stream.destroy(reason), this.stream.off("data", this.enqueue), this.stream.off("error", this.error), this.stream.off("end", this.close), this.stream.off("close", this.close);
      }
      enqueue(chunk) {
        if (this.controller)
          try {
            let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk), available = (this.controller.desiredSize || 0) - bytes.byteLength;
            this.controller.enqueue(bytes), available <= 0 && this.pause();
          } catch {
            this.controller.error(new Error("Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object")), this.cancel();
          }
      }
      pause() {
        this.stream.pause && this.stream.pause();
      }
      resume() {
        this.stream.readable && this.stream.resume && this.stream.resume();
      }
      close() {
        this.controller && (this.controller.close(), delete this.controller);
      }
      error(error2) {
        this.controller && (this.controller.error(error2), delete this.controller);
      }
    };
    exports.createReadableStreamFromReadable = createReadableStreamFromReadable;
    exports.readableStreamToString = readableStreamToString;
    exports.writeAsyncIterableToWritable = writeAsyncIterableToWritable;
    exports.writeReadableStreamToWritable = writeReadableStreamToWritable;
  }
});

// node_modules/@remix-run/node/dist/upload/fileUploadHandler.js
var require_fileUploadHandler = __commonJS({
  "node_modules/@remix-run/node/dist/upload/fileUploadHandler.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var crypto = require("crypto"), fs = require("fs"), promises = require("fs/promises"), os = require("os"), path = require("path"), stream = require("stream"), util = require("util"), serverRuntime = require_dist(), streamSlice = require_stream_slice(), stream$1 = require_stream2();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var streamSlice__namespace = /* @__PURE__ */ _interopNamespace(streamSlice), defaultFilePathResolver = ({
      filename
    }) => {
      let ext = filename ? path.extname(filename) : "";
      return "upload_" + crypto.randomBytes(4).readUInt32LE(0) + ext;
    };
    async function uniqueFile(filepath) {
      let ext = path.extname(filepath), uniqueFilepath = filepath;
      for (let i13 = 1; await promises.stat(uniqueFilepath).then(() => !0).catch(() => !1); i13++)
        uniqueFilepath = (ext ? filepath.slice(0, -ext.length) : filepath) + `-${(/* @__PURE__ */ new Date()).getTime()}${ext}`;
      return uniqueFilepath;
    }
    function createFileUploadHandler({
      directory = os.tmpdir(),
      avoidFileConflicts = !0,
      file = defaultFilePathResolver,
      filter: filter2,
      maxPartSize = 3e6
    } = {}) {
      return async ({
        name,
        filename,
        contentType,
        data
      }) => {
        if (!filename || filter2 && !await filter2({
          name,
          filename,
          contentType
        }))
          return;
        let dir = typeof directory == "string" ? directory : directory({
          name,
          filename,
          contentType
        });
        if (!dir)
          return;
        let filedir = path.resolve(dir), path$1 = typeof file == "string" ? file : file({
          name,
          filename,
          contentType
        });
        if (!path$1)
          return;
        let filepath = path.resolve(filedir, path$1);
        avoidFileConflicts && (filepath = await uniqueFile(filepath)), await promises.mkdir(path.dirname(filepath), {
          recursive: !0
        }).catch(() => {
        });
        let writeFileStream = fs.createWriteStream(filepath), size2 = 0, deleteFile = !1;
        try {
          for await (let chunk of data) {
            if (size2 += chunk.byteLength, size2 > maxPartSize)
              throw deleteFile = !0, new serverRuntime.MaxPartSizeExceededError(name, maxPartSize);
            writeFileStream.write(chunk);
          }
        } finally {
          writeFileStream.end(), await util.promisify(stream.finished)(writeFileStream), deleteFile && await promises.rm(filepath).catch(() => {
          });
        }
        return new NodeOnDiskFile(filepath, contentType);
      };
    }
    var NodeOnDiskFile = class {
      lastModified = 0;
      webkitRelativePath = "";
      constructor(filepath, type2, slicer) {
        this.filepath = filepath, this.type = type2, this.slicer = slicer, this.name = path.basename(filepath);
      }
      get size() {
        let stats = fs.statSync(this.filepath);
        if (this.slicer) {
          let slice = this.slicer.end - this.slicer.start;
          return slice < 0 ? 0 : slice > stats.size ? stats.size : slice;
        }
        return stats.size;
      }
      slice(start, end, type2) {
        var _this$slicer;
        typeof start == "number" && start < 0 && (start = this.size + start), typeof end == "number" && end < 0 && (end = this.size + end);
        let startOffset = ((_this$slicer = this.slicer) === null || _this$slicer === void 0 ? void 0 : _this$slicer.start) || 0;
        return start = startOffset + (start || 0), end = startOffset + (end || this.size), new NodeOnDiskFile(this.filepath, typeof type2 == "string" ? type2 : this.type, {
          start,
          end
        });
      }
      async arrayBuffer() {
        let stream2 = fs.createReadStream(this.filepath);
        return this.slicer && (stream2 = stream2.pipe(streamSlice__namespace.slice(this.slicer.start, this.slicer.end))), new Promise((resolve, reject) => {
          let buf = [];
          stream2.on("data", (chunk) => buf.push(chunk)), stream2.on("end", () => resolve(Buffer.concat(buf))), stream2.on("error", (err) => reject(err));
        });
      }
      stream() {
        let stream2 = fs.createReadStream(this.filepath);
        return this.slicer && (stream2 = stream2.pipe(streamSlice__namespace.slice(this.slicer.start, this.slicer.end))), stream$1.createReadableStreamFromReadable(stream2);
      }
      async text() {
        return stream$1.readableStreamToString(this.stream());
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
      remove() {
        return promises.unlink(this.filepath);
      }
      getFilePath() {
        return this.filepath;
      }
    };
    exports.NodeOnDiskFile = NodeOnDiskFile;
    exports.createFileUploadHandler = createFileUploadHandler;
  }
});

// node_modules/@remix-run/node/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/@remix-run/node/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var sourceMapSupport = require_source_map_support(), abortController = require_abort_controller(), fetch2 = require_fetch(), globals = require_globals(), fileStorage = require_fileStorage(), fileUploadHandler = require_fileUploadHandler(), implementations = require_implementations(), stream = require_stream2(), serverRuntime = require_dist(), webFetch = require_lib_node3();
    function _interopDefaultLegacy(e23) {
      return e23 && typeof e23 == "object" && "default" in e23 ? e23 : { default: e23 };
    }
    var sourceMapSupport__default = /* @__PURE__ */ _interopDefaultLegacy(sourceMapSupport);
    sourceMapSupport__default.default.install();
    Object.defineProperty(exports, "AbortController", {
      enumerable: !0,
      get: function() {
        return abortController.AbortController;
      }
    });
    exports.Request = fetch2.Request;
    exports.Response = fetch2.Response;
    exports.fetch = fetch2.fetch;
    exports.installGlobals = globals.installGlobals;
    exports.createFileSessionStorage = fileStorage.createFileSessionStorage;
    exports.NodeOnDiskFile = fileUploadHandler.NodeOnDiskFile;
    exports.unstable_createFileUploadHandler = fileUploadHandler.createFileUploadHandler;
    exports.createCookie = implementations.createCookie;
    exports.createCookieSessionStorage = implementations.createCookieSessionStorage;
    exports.createMemorySessionStorage = implementations.createMemorySessionStorage;
    exports.createSessionStorage = implementations.createSessionStorage;
    exports.createReadableStreamFromReadable = stream.createReadableStreamFromReadable;
    exports.readableStreamToString = stream.readableStreamToString;
    exports.writeAsyncIterableToWritable = stream.writeAsyncIterableToWritable;
    exports.writeReadableStreamToWritable = stream.writeReadableStreamToWritable;
    Object.defineProperty(exports, "MaxPartSizeExceededError", {
      enumerable: !0,
      get: function() {
        return serverRuntime.MaxPartSizeExceededError;
      }
    });
    Object.defineProperty(exports, "broadcastDevReady", {
      enumerable: !0,
      get: function() {
        return serverRuntime.broadcastDevReady;
      }
    });
    Object.defineProperty(exports, "createRequestHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createRequestHandler;
      }
    });
    Object.defineProperty(exports, "createSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createSession;
      }
    });
    Object.defineProperty(exports, "defer", {
      enumerable: !0,
      get: function() {
        return serverRuntime.defer;
      }
    });
    Object.defineProperty(exports, "isCookie", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isCookie;
      }
    });
    Object.defineProperty(exports, "isSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isSession;
      }
    });
    Object.defineProperty(exports, "json", {
      enumerable: !0,
      get: function() {
        return serverRuntime.json;
      }
    });
    Object.defineProperty(exports, "logDevReady", {
      enumerable: !0,
      get: function() {
        return serverRuntime.logDevReady;
      }
    });
    Object.defineProperty(exports, "redirect", {
      enumerable: !0,
      get: function() {
        return serverRuntime.redirect;
      }
    });
    Object.defineProperty(exports, "unstable_composeUploadHandlers", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_composeUploadHandlers;
      }
    });
    Object.defineProperty(exports, "unstable_createMemoryUploadHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_createMemoryUploadHandler;
      }
    });
    Object.defineProperty(exports, "unstable_parseMultipartFormData", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_parseMultipartFormData;
      }
    });
    Object.defineProperty(exports, "FormData", {
      enumerable: !0,
      get: function() {
        return webFetch.FormData;
      }
    });
    Object.defineProperty(exports, "Headers", {
      enumerable: !0,
      get: function() {
        return webFetch.Headers;
      }
    });
  }
});

// ../../../node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  "../../../node_modules/react/cjs/react.production.min.js"(exports) {
    "use strict";
    var l9 = Symbol.for("react.element"), n = Symbol.for("react.portal"), p = Symbol.for("react.fragment"), q = Symbol.for("react.strict_mode"), r24 = Symbol.for("react.profiler"), t17 = Symbol.for("react.provider"), u = Symbol.for("react.context"), v = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), z = Symbol.iterator;
    function A(a8) {
      return a8 === null || typeof a8 != "object" ? null : (a8 = z && a8[z] || a8["@@iterator"], typeof a8 == "function" ? a8 : null);
    }
    var B = { isMounted: function() {
      return !1;
    }, enqueueForceUpdate: function() {
    }, enqueueReplaceState: function() {
    }, enqueueSetState: function() {
    } }, C = Object.assign, D = {};
    function E(a8, b, e23) {
      this.props = a8, this.context = b, this.refs = D, this.updater = e23 || B;
    }
    E.prototype.isReactComponent = {};
    E.prototype.setState = function(a8, b) {
      if (typeof a8 != "object" && typeof a8 != "function" && a8 != null)
        throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
      this.updater.enqueueSetState(this, a8, b, "setState");
    };
    E.prototype.forceUpdate = function(a8) {
      this.updater.enqueueForceUpdate(this, a8, "forceUpdate");
    };
    function F() {
    }
    F.prototype = E.prototype;
    function G(a8, b, e23) {
      this.props = a8, this.context = b, this.refs = D, this.updater = e23 || B;
    }
    var H = G.prototype = new F();
    H.constructor = G;
    C(H, E.prototype);
    H.isPureReactComponent = !0;
    var I = Array.isArray, J = Object.prototype.hasOwnProperty, K = { current: null }, L = { key: !0, ref: !0, __self: !0, __source: !0 };
    function M(a8, b, e23) {
      var d, c = {}, k = null, h = null;
      if (b != null)
        for (d in b.ref !== void 0 && (h = b.ref), b.key !== void 0 && (k = "" + b.key), b)
          J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
      var g = arguments.length - 2;
      if (g === 1)
        c.children = e23;
      else if (1 < g) {
        for (var f = Array(g), m = 0; m < g; m++)
          f[m] = arguments[m + 2];
        c.children = f;
      }
      if (a8 && a8.defaultProps)
        for (d in g = a8.defaultProps, g)
          c[d] === void 0 && (c[d] = g[d]);
      return { $$typeof: l9, type: a8, key: k, ref: h, props: c, _owner: K.current };
    }
    function N(a8, b) {
      return { $$typeof: l9, type: a8.type, key: b, ref: a8.ref, props: a8.props, _owner: a8._owner };
    }
    function O(a8) {
      return typeof a8 == "object" && a8 !== null && a8.$$typeof === l9;
    }
    function escape2(a8) {
      var b = { "=": "=0", ":": "=2" };
      return "$" + a8.replace(/[=:]/g, function(a9) {
        return b[a9];
      });
    }
    var P = /\/+/g;
    function Q(a8, b) {
      return typeof a8 == "object" && a8 !== null && a8.key != null ? escape2("" + a8.key) : b.toString(36);
    }
    function R(a8, b, e23, d, c) {
      var k = typeof a8;
      (k === "undefined" || k === "boolean") && (a8 = null);
      var h = !1;
      if (a8 === null)
        h = !0;
      else
        switch (k) {
          case "string":
          case "number":
            h = !0;
            break;
          case "object":
            switch (a8.$$typeof) {
              case l9:
              case n:
                h = !0;
            }
        }
      if (h)
        return h = a8, c = c(h), a8 = d === "" ? "." + Q(h, 0) : d, I(c) ? (e23 = "", a8 != null && (e23 = a8.replace(P, "$&/") + "/"), R(c, b, e23, "", function(a9) {
          return a9;
        })) : c != null && (O(c) && (c = N(c, e23 + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a8)), b.push(c)), 1;
      if (h = 0, d = d === "" ? "." : d + ":", I(a8))
        for (var g = 0; g < a8.length; g++) {
          k = a8[g];
          var f = d + Q(k, g);
          h += R(k, b, e23, f, c);
        }
      else if (f = A(a8), typeof f == "function")
        for (a8 = f.call(a8), g = 0; !(k = a8.next()).done; )
          k = k.value, f = d + Q(k, g++), h += R(k, b, e23, f, c);
      else if (k === "object")
        throw b = String(a8), Error("Objects are not valid as a React child (found: " + (b === "[object Object]" ? "object with keys {" + Object.keys(a8).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
      return h;
    }
    function S(a8, b, e23) {
      if (a8 == null)
        return a8;
      var d = [], c = 0;
      return R(a8, d, "", "", function(a9) {
        return b.call(e23, a9, c++);
      }), d;
    }
    function T(a8) {
      if (a8._status === -1) {
        var b = a8._result;
        b = b(), b.then(function(b2) {
          (a8._status === 0 || a8._status === -1) && (a8._status = 1, a8._result = b2);
        }, function(b2) {
          (a8._status === 0 || a8._status === -1) && (a8._status = 2, a8._result = b2);
        }), a8._status === -1 && (a8._status = 0, a8._result = b);
      }
      if (a8._status === 1)
        return a8._result.default;
      throw a8._result;
    }
    var U = { current: null }, V = { transition: null }, W = { ReactCurrentDispatcher: U, ReactCurrentBatchConfig: V, ReactCurrentOwner: K };
    exports.Children = { map: S, forEach: function(a8, b, e23) {
      S(a8, function() {
        b.apply(this, arguments);
      }, e23);
    }, count: function(a8) {
      var b = 0;
      return S(a8, function() {
        b++;
      }), b;
    }, toArray: function(a8) {
      return S(a8, function(a9) {
        return a9;
      }) || [];
    }, only: function(a8) {
      if (!O(a8))
        throw Error("React.Children.only expected to receive a single React element child.");
      return a8;
    } };
    exports.Component = E;
    exports.Fragment = p;
    exports.Profiler = r24;
    exports.PureComponent = G;
    exports.StrictMode = q;
    exports.Suspense = w;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
    exports.cloneElement = function(a8, b, e23) {
      if (a8 == null)
        throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a8 + ".");
      var d = C({}, a8.props), c = a8.key, k = a8.ref, h = a8._owner;
      if (b != null) {
        if (b.ref !== void 0 && (k = b.ref, h = K.current), b.key !== void 0 && (c = "" + b.key), a8.type && a8.type.defaultProps)
          var g = a8.type.defaultProps;
        for (f in b)
          J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = b[f] === void 0 && g !== void 0 ? g[f] : b[f]);
      }
      var f = arguments.length - 2;
      if (f === 1)
        d.children = e23;
      else if (1 < f) {
        g = Array(f);
        for (var m = 0; m < f; m++)
          g[m] = arguments[m + 2];
        d.children = g;
      }
      return { $$typeof: l9, type: a8.type, key: c, ref: k, props: d, _owner: h };
    };
    exports.createContext = function(a8) {
      return a8 = { $$typeof: u, _currentValue: a8, _currentValue2: a8, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, a8.Provider = { $$typeof: t17, _context: a8 }, a8.Consumer = a8;
    };
    exports.createElement = M;
    exports.createFactory = function(a8) {
      var b = M.bind(null, a8);
      return b.type = a8, b;
    };
    exports.createRef = function() {
      return { current: null };
    };
    exports.forwardRef = function(a8) {
      return { $$typeof: v, render: a8 };
    };
    exports.isValidElement = O;
    exports.lazy = function(a8) {
      return { $$typeof: y, _payload: { _status: -1, _result: a8 }, _init: T };
    };
    exports.memo = function(a8, b) {
      return { $$typeof: x, type: a8, compare: b === void 0 ? null : b };
    };
    exports.startTransition = function(a8) {
      var b = V.transition;
      V.transition = {};
      try {
        a8();
      } finally {
        V.transition = b;
      }
    };
    exports.unstable_act = function() {
      throw Error("act(...) is not supported in production builds of React.");
    };
    exports.useCallback = function(a8, b) {
      return U.current.useCallback(a8, b);
    };
    exports.useContext = function(a8) {
      return U.current.useContext(a8);
    };
    exports.useDebugValue = function() {
    };
    exports.useDeferredValue = function(a8) {
      return U.current.useDeferredValue(a8);
    };
    exports.useEffect = function(a8, b) {
      return U.current.useEffect(a8, b);
    };
    exports.useId = function() {
      return U.current.useId();
    };
    exports.useImperativeHandle = function(a8, b, e23) {
      return U.current.useImperativeHandle(a8, b, e23);
    };
    exports.useInsertionEffect = function(a8, b) {
      return U.current.useInsertionEffect(a8, b);
    };
    exports.useLayoutEffect = function(a8, b) {
      return U.current.useLayoutEffect(a8, b);
    };
    exports.useMemo = function(a8, b) {
      return U.current.useMemo(a8, b);
    };
    exports.useReducer = function(a8, b, e23) {
      return U.current.useReducer(a8, b, e23);
    };
    exports.useRef = function(a8) {
      return U.current.useRef(a8);
    };
    exports.useState = function(a8) {
      return U.current.useState(a8);
    };
    exports.useSyncExternalStore = function(a8, b, e23) {
      return U.current.useSyncExternalStore(a8, b, e23);
    };
    exports.useTransition = function() {
      return U.current.useTransition();
    };
    exports.version = "18.2.0";
  }
});

// ../../../node_modules/react/index.js
var require_react = __commonJS({
  "../../../node_modules/react/index.js"(exports, module2) {
    "use strict";
    module2.exports = require_react_production_min();
  }
});

// ../../../node_modules/@remix-run/router/dist/router.cjs.js
var require_router_cjs2 = __commonJS({
  "../../../node_modules/@remix-run/router/dist/router.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _extends2() {
      return _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i13 = 1; i13 < arguments.length; i13++) {
          var source = arguments[i13];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends2.apply(this, arguments);
    }
    exports.Action = void 0;
    (function(Action) {
      Action.Pop = "POP", Action.Push = "PUSH", Action.Replace = "REPLACE";
    })(exports.Action || (exports.Action = {}));
    var PopStateEventType = "popstate";
    function createMemoryHistory(options) {
      options === void 0 && (options = {});
      let {
        initialEntries = ["/"],
        initialIndex,
        v5Compat = !1
      } = options, entries;
      entries = initialEntries.map((entry2, index3) => createMemoryLocation(entry2, typeof entry2 == "string" ? null : entry2.state, index3 === 0 ? "default" : void 0));
      let index2 = clampIndex(initialIndex ?? entries.length - 1), action = exports.Action.Pop, listener = null;
      function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
      }
      function getCurrentLocation() {
        return entries[index2];
      }
      function createMemoryLocation(to, state, key) {
        state === void 0 && (state = null);
        let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
        return warning2(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to)), location;
      }
      function createHref(to) {
        return typeof to == "string" ? to : createPath(to);
      }
      return {
        get index() {
          return index2;
        },
        get action() {
          return action;
        },
        get location() {
          return getCurrentLocation();
        },
        createHref,
        createURL(to) {
          return new URL(createHref(to), "http://localhost");
        },
        encodeLocation(to) {
          let path = typeof to == "string" ? parsePath(to) : to;
          return {
            pathname: path.pathname || "",
            search: path.search || "",
            hash: path.hash || ""
          };
        },
        push(to, state) {
          action = exports.Action.Push;
          let nextLocation = createMemoryLocation(to, state);
          index2 += 1, entries.splice(index2, entries.length, nextLocation), v5Compat && listener && listener({
            action,
            location: nextLocation,
            delta: 1
          });
        },
        replace(to, state) {
          action = exports.Action.Replace;
          let nextLocation = createMemoryLocation(to, state);
          entries[index2] = nextLocation, v5Compat && listener && listener({
            action,
            location: nextLocation,
            delta: 0
          });
        },
        go(delta) {
          action = exports.Action.Pop;
          let nextIndex = clampIndex(index2 + delta), nextLocation = entries[nextIndex];
          index2 = nextIndex, listener && listener({
            action,
            location: nextLocation,
            delta
          });
        },
        listen(fn) {
          return listener = fn, () => {
            listener = null;
          };
        }
      };
    }
    function createBrowserHistory(options) {
      options === void 0 && (options = {});
      function createBrowserLocation(window2, globalHistory) {
        let {
          pathname,
          search,
          hash
        } = window2.location;
        return createLocation(
          "",
          {
            pathname,
            search,
            hash
          },
          // state defaults to `null` because `window.history.state` does
          globalHistory.state && globalHistory.state.usr || null,
          globalHistory.state && globalHistory.state.key || "default"
        );
      }
      function createBrowserHref(window2, to) {
        return typeof to == "string" ? to : createPath(to);
      }
      return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
    }
    function createHashHistory(options) {
      options === void 0 && (options = {});
      function createHashLocation(window2, globalHistory) {
        let {
          pathname = "/",
          search = "",
          hash = ""
        } = parsePath(window2.location.hash.substr(1));
        return createLocation(
          "",
          {
            pathname,
            search,
            hash
          },
          // state defaults to `null` because `window.history.state` does
          globalHistory.state && globalHistory.state.usr || null,
          globalHistory.state && globalHistory.state.key || "default"
        );
      }
      function createHashHref(window2, to) {
        let base = window2.document.querySelector("base"), href = "";
        if (base && base.getAttribute("href")) {
          let url = window2.location.href, hashIndex = url.indexOf("#");
          href = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href + "#" + (typeof to == "string" ? to : createPath(to));
      }
      function validateHashLocation(location, to) {
        warning2(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
      }
      return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
    }
    function invariant2(value, message2) {
      if (value === !1 || value === null || typeof value > "u")
        throw new Error(message2);
    }
    function warning2(cond, message2) {
      if (!cond) {
        typeof console < "u" && console.warn(message2);
        try {
          throw new Error(message2);
        } catch {
        }
      }
    }
    function createKey() {
      return Math.random().toString(36).substr(2, 8);
    }
    function getHistoryState(location, index2) {
      return {
        usr: location.state,
        key: location.key,
        idx: index2
      };
    }
    function createLocation(current, to, state, key) {
      return state === void 0 && (state = null), _extends2({
        pathname: typeof current == "string" ? current : current.pathname,
        search: "",
        hash: ""
      }, typeof to == "string" ? parsePath(to) : to, {
        state,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: to && to.key || key || createKey()
      });
    }
    function createPath(_ref) {
      let {
        pathname = "/",
        search = "",
        hash = ""
      } = _ref;
      return search && search !== "?" && (pathname += search.charAt(0) === "?" ? search : "?" + search), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
    }
    function parsePath(path) {
      let parsedPath = {};
      if (path) {
        let hashIndex = path.indexOf("#");
        hashIndex >= 0 && (parsedPath.hash = path.substr(hashIndex), path = path.substr(0, hashIndex));
        let searchIndex = path.indexOf("?");
        searchIndex >= 0 && (parsedPath.search = path.substr(searchIndex), path = path.substr(0, searchIndex)), path && (parsedPath.pathname = path);
      }
      return parsedPath;
    }
    function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
      options === void 0 && (options = {});
      let {
        window: window2 = document.defaultView,
        v5Compat = !1
      } = options, globalHistory = window2.history, action = exports.Action.Pop, listener = null, index2 = getIndex();
      index2 == null && (index2 = 0, globalHistory.replaceState(_extends2({}, globalHistory.state, {
        idx: index2
      }), ""));
      function getIndex() {
        return (globalHistory.state || {
          idx: null
        }).idx;
      }
      function handlePop() {
        action = exports.Action.Pop;
        let nextIndex = getIndex(), delta = nextIndex == null ? null : nextIndex - index2;
        index2 = nextIndex, listener && listener({
          action,
          location: history.location,
          delta
        });
      }
      function push(to, state) {
        action = exports.Action.Push;
        let location = createLocation(history.location, to, state);
        validateLocation && validateLocation(location, to), index2 = getIndex() + 1;
        let historyState = getHistoryState(location, index2), url = history.createHref(location);
        try {
          globalHistory.pushState(historyState, "", url);
        } catch (error2) {
          if (error2 instanceof DOMException && error2.name === "DataCloneError")
            throw error2;
          window2.location.assign(url);
        }
        v5Compat && listener && listener({
          action,
          location: history.location,
          delta: 1
        });
      }
      function replace(to, state) {
        action = exports.Action.Replace;
        let location = createLocation(history.location, to, state);
        validateLocation && validateLocation(location, to), index2 = getIndex();
        let historyState = getHistoryState(location, index2), url = history.createHref(location);
        globalHistory.replaceState(historyState, "", url), v5Compat && listener && listener({
          action,
          location: history.location,
          delta: 0
        });
      }
      function createURL(to) {
        let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href, href = typeof to == "string" ? to : createPath(to);
        return invariant2(base, "No window.location.(origin|href) available to create URL for href: " + href), new URL(href, base);
      }
      let history = {
        get action() {
          return action;
        },
        get location() {
          return getLocation(window2, globalHistory);
        },
        listen(fn) {
          if (listener)
            throw new Error("A history only accepts one active listener");
          return window2.addEventListener(PopStateEventType, handlePop), listener = fn, () => {
            window2.removeEventListener(PopStateEventType, handlePop), listener = null;
          };
        },
        createHref(to) {
          return createHref(window2, to);
        },
        createURL,
        encodeLocation(to) {
          let url = createURL(to);
          return {
            pathname: url.pathname,
            search: url.search,
            hash: url.hash
          };
        },
        push,
        replace,
        go(n) {
          return globalHistory.go(n);
        }
      };
      return history;
    }
    var ResultType;
    (function(ResultType2) {
      ResultType2.data = "data", ResultType2.deferred = "deferred", ResultType2.redirect = "redirect", ResultType2.error = "error";
    })(ResultType || (ResultType = {}));
    var immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
    function isIndexRoute(route) {
      return route.index === !0;
    }
    function convertRoutesToDataRoutes(routes2, mapRouteProperties, parentPath, manifest) {
      return parentPath === void 0 && (parentPath = []), manifest === void 0 && (manifest = {}), routes2.map((route, index2) => {
        let treePath = [...parentPath, index2], id3 = typeof route.id == "string" ? route.id : treePath.join("-");
        if (invariant2(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant2(!manifest[id3], 'Found a route id collision on id "' + id3 + `".  Route id's must be globally unique within Data Router usages`), isIndexRoute(route)) {
          let indexRoute = _extends2({}, route, mapRouteProperties(route), {
            id: id3
          });
          return manifest[id3] = indexRoute, indexRoute;
        } else {
          let pathOrLayoutRoute = _extends2({}, route, mapRouteProperties(route), {
            id: id3,
            children: void 0
          });
          return manifest[id3] = pathOrLayoutRoute, route.children && (pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest)), pathOrLayoutRoute;
        }
      });
    }
    function matchRoutes(routes2, locationArg, basename) {
      basename === void 0 && (basename = "/");
      let location = typeof locationArg == "string" ? parsePath(locationArg) : locationArg, pathname = stripBasename(location.pathname || "/", basename);
      if (pathname == null)
        return null;
      let branches = flattenRoutes(routes2);
      rankRouteBranches(branches);
      let matches = null;
      for (let i13 = 0; matches == null && i13 < branches.length; ++i13)
        matches = matchRouteBranch(
          branches[i13],
          // Incoming pathnames are generally encoded from either window.location
          // or from router.navigate, but we want to match against the unencoded
          // paths in the route definitions.  Memory router locations won't be
          // encoded here but there also shouldn't be anything to decode so this
          // should be a safe operation.  This avoids needing matchRoutes to be
          // history-aware.
          safelyDecodeURI(pathname)
        );
      return matches;
    }
    function flattenRoutes(routes2, branches, parentsMeta, parentPath) {
      branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
      let flattenRoute = (route, index2, relativePath) => {
        let meta = {
          relativePath: relativePath === void 0 ? route.path || "" : relativePath,
          caseSensitive: route.caseSensitive === !0,
          childrenIndex: index2,
          route
        };
        meta.relativePath.startsWith("/") && (invariant2(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta.relativePath = meta.relativePath.slice(parentPath.length));
        let path = joinPaths([parentPath, meta.relativePath]), routesMeta = parentsMeta.concat(meta);
        route.children && route.children.length > 0 && (invariant2(
          // Our types know better, but runtime JS may not!
          // @ts-expect-error
          route.index !== !0,
          "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
        ), flattenRoutes(route.children, branches, routesMeta, path)), !(route.path == null && !route.index) && branches.push({
          path,
          score: computeScore(path, route.index),
          routesMeta
        });
      };
      return routes2.forEach((route, index2) => {
        var _route$path;
        if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
          flattenRoute(route, index2);
        else
          for (let exploded of explodeOptionalSegments(route.path))
            flattenRoute(route, index2, exploded);
      }), branches;
    }
    function explodeOptionalSegments(path) {
      let segments = path.split("/");
      if (segments.length === 0)
        return [];
      let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
      if (rest.length === 0)
        return isOptional ? [required, ""] : [required];
      let restExploded = explodeOptionalSegments(rest.join("/")), result = [];
      return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
    }
    function rankRouteBranches(branches) {
      branches.sort((a8, b) => a8.score !== b.score ? b.score - a8.score : compareIndexes(a8.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));
    }
    var paramRe = /^:\w+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (s) => s === "*";
    function computeScore(path, index2) {
      let segments = path.split("/"), initialScore = segments.length;
      return segments.some(isSplat) && (initialScore += splatPenalty), index2 && (initialScore += indexRouteValue), segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
    }
    function compareIndexes(a8, b) {
      return a8.length === b.length && a8.slice(0, -1).every((n, i13) => n === b[i13]) ? (
        // If two routes are siblings, we should try to match the earlier sibling
        // first. This allows people to have fine-grained control over the matching
        // behavior by simply putting routes with identical paths in the order they
        // want them tried.
        a8[a8.length - 1] - b[b.length - 1]
      ) : (
        // Otherwise, it doesn't really make sense to rank non-siblings by index,
        // so they sort equally.
        0
      );
    }
    function matchRouteBranch(branch, pathname) {
      let {
        routesMeta
      } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
      for (let i13 = 0; i13 < routesMeta.length; ++i13) {
        let meta = routesMeta[i13], end = i13 === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match = matchPath({
          path: meta.relativePath,
          caseSensitive: meta.caseSensitive,
          end
        }, remainingPathname);
        if (!match)
          return null;
        Object.assign(matchedParams, match.params);
        let route = meta.route;
        matches.push({
          // TODO: Can this as be avoided?
          params: matchedParams,
          pathname: joinPaths([matchedPathname, match.pathname]),
          pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
          route
        }), match.pathnameBase !== "/" && (matchedPathname = joinPaths([matchedPathname, match.pathnameBase]));
      }
      return matches;
    }
    function generatePath(originalPath, params) {
      params === void 0 && (params = {});
      let path = originalPath;
      path.endsWith("*") && path !== "*" && !path.endsWith("/*") && (warning2(!1, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".')), path = path.replace(/\*$/, "/*"));
      let prefix2 = path.startsWith("/") ? "/" : "", segments = path.split(/\/+/).map((segment, index2, array) => {
        if (index2 === array.length - 1 && segment === "*")
          return params["*"];
        let keyMatch = segment.match(/^:(\w+)(\??)$/);
        if (keyMatch) {
          let [, key, optional] = keyMatch, param = params[key];
          return optional === "?" ? param ?? "" : (param == null && invariant2(!1, 'Missing ":' + key + '" param'), param);
        }
        return segment.replace(/\?$/g, "");
      }).filter((segment) => !!segment);
      return prefix2 + segments.join("/");
    }
    function matchPath(pattern, pathname) {
      typeof pattern == "string" && (pattern = {
        path: pattern,
        caseSensitive: !1,
        end: !0
      });
      let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end), match = pathname.match(matcher);
      if (!match)
        return null;
      let matchedPathname = match[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match.slice(1);
      return {
        params: paramNames.reduce((memo, paramName, index2) => {
          if (paramName === "*") {
            let splatValue = captureGroups[index2] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
          }
          return memo[paramName] = safelyDecodeURIComponent(captureGroups[index2] || "", paramName), memo;
        }, {}),
        pathname: matchedPathname,
        pathnameBase,
        pattern
      };
    }
    function compilePath(path, caseSensitive, end) {
      caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning2(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
      let paramNames = [], regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_, paramName) => (paramNames.push(paramName), "/([^\\/]+)"));
      return path.endsWith("*") ? (paramNames.push("*"), regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path !== "" && path !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), paramNames];
    }
    function safelyDecodeURI(value) {
      try {
        return decodeURI(value);
      } catch (error2) {
        return warning2(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error2 + ").")), value;
      }
    }
    function safelyDecodeURIComponent(value, paramName) {
      try {
        return decodeURIComponent(value);
      } catch (error2) {
        return warning2(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error2 + ").")), value;
      }
    }
    function stripBasename(pathname, basename) {
      if (basename === "/")
        return pathname;
      if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
        return null;
      let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
      return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
    }
    function resolvePath(to, fromPathname) {
      fromPathname === void 0 && (fromPathname = "/");
      let {
        pathname: toPathname,
        search = "",
        hash = ""
      } = typeof to == "string" ? parsePath(to) : to;
      return {
        pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname,
        search: normalizeSearch(search),
        hash: normalizeHash(hash)
      };
    }
    function resolvePathname(relativePath, fromPathname) {
      let segments = fromPathname.replace(/\/+$/, "").split("/");
      return relativePath.split("/").forEach((segment) => {
        segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
      }), segments.length > 1 ? segments.join("/") : "/";
    }
    function getInvalidPathError(char, field, dest, path) {
      return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
    }
    function getPathContributingMatches(matches) {
      return matches.filter((match, index2) => index2 === 0 || match.route.path && match.route.path.length > 0);
    }
    function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
      isPathRelative === void 0 && (isPathRelative = !1);
      let to;
      typeof toArg == "string" ? to = parsePath(toArg) : (to = _extends2({}, toArg), invariant2(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to)), invariant2(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to)), invariant2(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to)));
      let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
      if (isPathRelative || toPathname == null)
        from = locationPathname;
      else {
        let routePathnameIndex = routePathnames.length - 1;
        if (toPathname.startsWith("..")) {
          let toSegments = toPathname.split("/");
          for (; toSegments[0] === ".."; )
            toSegments.shift(), routePathnameIndex -= 1;
          to.pathname = toSegments.join("/");
        }
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
      }
      let path = resolvePath(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
      return !path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path.pathname += "/"), path;
    }
    function getToPathname(to) {
      return to === "" || to.pathname === "" ? "/" : typeof to == "string" ? parsePath(to).pathname : to.pathname;
    }
    var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search, normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), _extends2({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError = class extends Error {
    }, DeferredData = class {
      constructor(data, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant2(data && typeof data == "object" && !Array.isArray(data), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_, r24) => reject = r24), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data).reduce((acc, _ref) => {
          let [key, value] = _ref;
          return Object.assign(acc, {
            [key]: this.trackPromise(key, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key), this.pendingKeysSet.add(key);
        let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key, null, data), (error2) => this.onSettle(promise, key, error2));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key, error2, data) {
        return this.controller.signal.aborted && error2 instanceof AbortedDeferredError ? (this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
          get: () => error2
        }), Promise.reject(error2)) : (this.pendingKeysSet.delete(key), this.done && this.unlistenAbortSignal(), error2 ? (Object.defineProperty(promise, "_error", {
          get: () => error2
        }), this.emit(!1, key), Promise.reject(error2)) : (Object.defineProperty(promise, "_data", {
          get: () => data
        }), this.emit(!1, key), data));
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant2(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref2) => {
          let [key, value] = _ref2;
          return Object.assign(acc, {
            [key]: unwrapTrackedPromise(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    function isTrackedPromise(value) {
      return value instanceof Promise && value._tracked === !0;
    }
    function unwrapTrackedPromise(value) {
      if (!isTrackedPromise(value))
        return value;
      if (value._error)
        throw value._error;
      return value._data;
    }
    var defer = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData(data, responseInit);
    }, redirect = function(url, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url), new Response(null, _extends2({}, responseInit, {
        headers
      }));
    }, ErrorResponse = class {
      constructor(status, statusText, data, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data instanceof Error ? (this.data = data.toString(), this.error = data) : this.data = data;
      }
    };
    function isRouteErrorResponse(error2) {
      return error2 != null && typeof error2.status == "number" && typeof error2.statusText == "string" && typeof error2.internal == "boolean" && "data" in error2;
    }
    var validMutationMethodsArr = ["post", "put", "patch", "delete"], validMutationMethods = new Set(validMutationMethodsArr), validRequestMethodsArr = ["get", ...validMutationMethodsArr], validRequestMethods = new Set(validRequestMethodsArr), redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]), IDLE_NAVIGATION = {
      state: "idle",
      location: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_FETCHER = {
      state: "idle",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0
    }, IDLE_BLOCKER = {
      state: "unblocked",
      proceed: void 0,
      reset: void 0,
      location: void 0
    }, ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, defaultMapRouteProperties = (route) => ({
      hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
    function createRouter(init) {
      let routerWindow = init.window ? init.window : typeof window < "u" ? window : void 0, isBrowser2 = typeof routerWindow < "u" && typeof routerWindow.document < "u" && typeof routerWindow.document.createElement < "u", isServer = !isBrowser2;
      invariant2(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
      let mapRouteProperties;
      if (init.mapRouteProperties)
        mapRouteProperties = init.mapRouteProperties;
      else if (init.detectErrorBoundary) {
        let detectErrorBoundary = init.detectErrorBoundary;
        mapRouteProperties = (route) => ({
          hasErrorBoundary: detectErrorBoundary(route)
        });
      } else
        mapRouteProperties = defaultMapRouteProperties;
      let manifest = {}, dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, void 0, manifest), inFlightDataRoutes, basename = init.basename || "/", future2 = _extends2({
        v7_normalizeFormMethod: !1,
        v7_prependBasename: !1
      }, init.future), unlistenHistory = null, subscribers = /* @__PURE__ */ new Set(), savedScrollPositions = null, getScrollRestorationKey = null, getScrollPosition = null, initialScrollRestored = init.hydrationData != null, initialMatches = matchRoutes(dataRoutes, init.history.location, basename), initialErrors = null;
      if (initialMatches == null) {
        let error2 = getInternalRouterError(404, {
          pathname: init.history.location.pathname
        }), {
          matches,
          route
        } = getShortCircuitMatches(dataRoutes);
        initialMatches = matches, initialErrors = {
          [route.id]: error2
        };
      }
      let initialized = (
        // All initialMatches need to be loaded before we're ready.  If we have lazy
        // functions around still then we'll need to run them in initialize()
        !initialMatches.some((m) => m.route.lazy) && // And we have to either have no loaders or have been provided hydrationData
        (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null)
      ), router, state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized,
        navigation: IDLE_NAVIGATION,
        // Don't restore on initial updateState() if we were SSR'd
        restoreScrollPosition: init.hydrationData != null ? !1 : null,
        preventScrollReset: !1,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
      }, pendingAction = exports.Action.Pop, pendingPreventScrollReset = !1, pendingNavigationController, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [], fetchControllers = /* @__PURE__ */ new Map(), incrementingLoadId = 0, pendingNavigationLoadId = -1, fetchReloadIds = /* @__PURE__ */ new Map(), fetchRedirectIds = /* @__PURE__ */ new Set(), fetchLoadMatches = /* @__PURE__ */ new Map(), activeDeferreds = /* @__PURE__ */ new Map(), blockerFunctions = /* @__PURE__ */ new Map(), ignoreNextHistoryUpdate = !1;
      function initialize() {
        return unlistenHistory = init.history.listen((_ref) => {
          let {
            action: historyAction,
            location,
            delta
          } = _ref;
          if (ignoreNextHistoryUpdate) {
            ignoreNextHistoryUpdate = !1;
            return;
          }
          warning2(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
          let blockerKey = shouldBlockNavigation({
            currentLocation: state.location,
            nextLocation: location,
            historyAction
          });
          if (blockerKey && delta != null) {
            ignoreNextHistoryUpdate = !0, init.history.go(delta * -1), updateBlocker(blockerKey, {
              state: "blocked",
              location,
              proceed() {
                updateBlocker(blockerKey, {
                  state: "proceeding",
                  proceed: void 0,
                  reset: void 0,
                  location
                }), init.history.go(delta);
              },
              reset() {
                deleteBlocker(blockerKey), updateState({
                  blockers: new Map(router.state.blockers)
                });
              }
            });
            return;
          }
          return startNavigation(historyAction, location);
        }), state.initialized || startNavigation(exports.Action.Pop, state.location), router;
      }
      function dispose() {
        unlistenHistory && unlistenHistory(), subscribers.clear(), pendingNavigationController && pendingNavigationController.abort(), state.fetchers.forEach((_, key) => deleteFetcher(key)), state.blockers.forEach((_, key) => deleteBlocker(key));
      }
      function subscribe(fn) {
        return subscribers.add(fn), () => subscribers.delete(fn);
      }
      function updateState(newState) {
        state = _extends2({}, state, newState), subscribers.forEach((subscriber) => subscriber(state));
      }
      function completeNavigation(location, newState) {
        var _location$state, _location$state2;
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== !0, actionData;
        newState.actionData ? Object.keys(newState.actionData).length > 0 ? actionData = newState.actionData : actionData = null : isActionReload ? actionData = state.actionData : actionData = null;
        let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
        for (let [key] of blockerFunctions)
          deleteBlocker(key);
        let preventScrollReset = pendingPreventScrollReset === !0 || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== !0;
        inFlightDataRoutes && (dataRoutes = inFlightDataRoutes, inFlightDataRoutes = void 0), updateState(_extends2({}, newState, {
          // matches, errors, fetchers go through as-is
          actionData,
          loaderData,
          historyAction: pendingAction,
          location,
          initialized: !0,
          navigation: IDLE_NAVIGATION,
          revalidation: "idle",
          restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
          preventScrollReset,
          blockers: new Map(state.blockers)
        })), isUninterruptedRevalidation || pendingAction === exports.Action.Pop || (pendingAction === exports.Action.Push ? init.history.push(location, location.state) : pendingAction === exports.Action.Replace && init.history.replace(location, location.state)), pendingAction = exports.Action.Pop, pendingPreventScrollReset = !1, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [];
      }
      async function navigate(to, opts) {
        if (typeof to == "number") {
          init.history.go(to);
          return;
        }
        let normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative), {
          path,
          submission,
          error: error2
        } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !1, normalizedPath, opts), currentLocation = state.location, nextLocation = createLocation(state.location, path, opts && opts.state);
        nextLocation = _extends2({}, nextLocation, init.history.encodeLocation(nextLocation));
        let userReplace = opts && opts.replace != null ? opts.replace : void 0, historyAction = exports.Action.Push;
        userReplace === !0 ? historyAction = exports.Action.Replace : userReplace === !1 || submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search && (historyAction = exports.Action.Replace);
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === !0 : void 0, blockerKey = shouldBlockNavigation({
          currentLocation,
          nextLocation,
          historyAction
        });
        if (blockerKey) {
          updateBlocker(blockerKey, {
            state: "blocked",
            location: nextLocation,
            proceed() {
              updateBlocker(blockerKey, {
                state: "proceeding",
                proceed: void 0,
                reset: void 0,
                location: nextLocation
              }), navigate(to, opts);
            },
            reset() {
              deleteBlocker(blockerKey), updateState({
                blockers: new Map(state.blockers)
              });
            }
          });
          return;
        }
        return await startNavigation(historyAction, nextLocation, {
          submission,
          // Send through the formData serialization error if we have one so we can
          // render at the right error boundary after we match routes
          pendingError: error2,
          preventScrollReset,
          replace: opts && opts.replace
        });
      }
      function revalidate() {
        if (interruptActiveLoads(), updateState({
          revalidation: "loading"
        }), state.navigation.state !== "submitting") {
          if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
              startUninterruptedRevalidation: !0
            });
            return;
          }
          startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation
          });
        }
      }
      async function startNavigation(historyAction, location, opts) {
        pendingNavigationController && pendingNavigationController.abort(), pendingNavigationController = null, pendingAction = historyAction, isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === !0, saveScrollPosition(state.location, state.matches), pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0;
        let routesToUse = inFlightDataRoutes || dataRoutes, loadingNavigation = opts && opts.overrideNavigation, matches = matchRoutes(routesToUse, location, basename);
        if (!matches) {
          let error2 = getInternalRouterError(404, {
            pathname: location.pathname
          }), {
            matches: notFoundMatches,
            route
          } = getShortCircuitMatches(routesToUse);
          cancelActiveDeferreds(), completeNavigation(location, {
            matches: notFoundMatches,
            loaderData: {},
            errors: {
              [route.id]: error2
            }
          });
          return;
        }
        if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
          completeNavigation(location, {
            matches
          });
          return;
        }
        pendingNavigationController = new AbortController();
        let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission), pendingActionData, pendingError;
        if (opts && opts.pendingError)
          pendingError = {
            [findNearestBoundary(matches).route.id]: opts.pendingError
          };
        else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
          let actionOutput = await handleAction(request, location, opts.submission, matches, {
            replace: opts.replace
          });
          if (actionOutput.shortCircuited)
            return;
          pendingActionData = actionOutput.pendingActionData, pendingError = actionOutput.pendingActionError, loadingNavigation = _extends2({
            state: "loading",
            location
          }, opts.submission), request = new Request(request.url, {
            signal: request.signal
          });
        }
        let {
          shortCircuited,
          loaderData,
          errors
        } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
        shortCircuited || (pendingNavigationController = null, completeNavigation(location, _extends2({
          matches
        }, pendingActionData ? {
          actionData: pendingActionData
        } : {}, {
          loaderData,
          errors
        })));
      }
      async function handleAction(request, location, submission, matches, opts) {
        interruptActiveLoads();
        let navigation = _extends2({
          state: "submitting",
          location
        }, submission);
        updateState({
          navigation
        });
        let result, actionMatch = getTargetMatch(matches, location);
        if (!actionMatch.route.action && !actionMatch.route.lazy)
          result = {
            type: ResultType.error,
            error: getInternalRouterError(405, {
              method: request.method,
              pathname: location.pathname,
              routeId: actionMatch.route.id
            })
          };
        else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename), request.signal.aborted)
          return {
            shortCircuited: !0
          };
        if (isRedirectResult(result)) {
          let replace;
          return opts && opts.replace != null ? replace = opts.replace : replace = result.location === state.location.pathname + state.location.search, await startRedirectNavigation(state, result, {
            submission,
            replace
          }), {
            shortCircuited: !0
          };
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
          return (opts && opts.replace) !== !0 && (pendingAction = exports.Action.Push), {
            // Send back an empty object we can use to clear out any prior actionData
            pendingActionData: {},
            pendingActionError: {
              [boundaryMatch.route.id]: result.error
            }
          };
        }
        if (isDeferredResult(result))
          throw getInternalRouterError(400, {
            type: "defer-action"
          });
        return {
          pendingActionData: {
            [actionMatch.route.id]: result.data
          }
        };
      }
      async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
        let loadingNavigation = overrideNavigation;
        loadingNavigation || (loadingNavigation = _extends2({
          state: "loading",
          location,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0
        }, submission));
        let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {
          formMethod: loadingNavigation.formMethod,
          formAction: loadingNavigation.formAction,
          formData: loadingNavigation.formData,
          formEncType: loadingNavigation.formEncType
        } : void 0, routesToUse = inFlightDataRoutes || dataRoutes, [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError);
        if (cancelActiveDeferreds((routeId) => !(matches && matches.some((m) => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId)), matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
          let updatedFetchers2 = markFetchRedirectsDone();
          return completeNavigation(location, _extends2({
            matches,
            loaderData: {},
            // Commit pending error if we're short circuiting
            errors: pendingError || null
          }, pendingActionData ? {
            actionData: pendingActionData
          } : {}, updatedFetchers2 ? {
            fetchers: new Map(state.fetchers)
          } : {})), {
            shortCircuited: !0
          };
        }
        if (!isUninterruptedRevalidation) {
          revalidatingFetchers.forEach((rf) => {
            let fetcher = state.fetchers.get(rf.key), revalidatingFetcher = {
              state: "loading",
              data: fetcher && fetcher.data,
              formMethod: void 0,
              formAction: void 0,
              formEncType: void 0,
              formData: void 0,
              " _hasFetcherDoneAnything ": !0
            };
            state.fetchers.set(rf.key, revalidatingFetcher);
          });
          let actionData = pendingActionData || state.actionData;
          updateState(_extends2({
            navigation: loadingNavigation
          }, actionData ? Object.keys(actionData).length === 0 ? {
            actionData: null
          } : {
            actionData
          } : {}, revalidatingFetchers.length > 0 ? {
            fetchers: new Map(state.fetchers)
          } : {}));
        }
        pendingNavigationLoadId = ++incrementingLoadId, revalidatingFetchers.forEach((rf) => {
          rf.controller && fetchControllers.set(rf.key, rf.controller);
        });
        let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));
        pendingNavigationController && pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let {
          results: results2,
          loaderResults,
          fetcherResults
        } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
        if (request.signal.aborted)
          return {
            shortCircuited: !0
          };
        pendingNavigationController && pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations), revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
        let redirect2 = findRedirect(results2);
        if (redirect2)
          return await startRedirectNavigation(state, redirect2, {
            replace
          }), {
            shortCircuited: !0
          };
        let {
          loaderData,
          errors
        } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
        activeDeferreds.forEach((deferredData, routeId) => {
          deferredData.subscribe((aborted) => {
            (aborted || deferredData.done) && activeDeferreds.delete(routeId);
          });
        });
        let updatedFetchers = markFetchRedirectsDone(), didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId), shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
        return _extends2({
          loaderData,
          errors
        }, shouldUpdateFetchers ? {
          fetchers: new Map(state.fetchers)
        } : {});
      }
      function getFetcher(key) {
        return state.fetchers.get(key) || IDLE_FETCHER;
      }
      function fetch2(key, routeId, href, opts) {
        if (isServer)
          throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
        fetchControllers.has(key) && abortFetcher(key);
        let routesToUse = inFlightDataRoutes || dataRoutes, normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative), matches = matchRoutes(routesToUse, normalizedPath, basename);
        if (!matches) {
          setFetcherError(key, routeId, getInternalRouterError(404, {
            pathname: normalizedPath
          }));
          return;
        }
        let {
          path,
          submission
        } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !0, normalizedPath, opts), match = getTargetMatch(matches, path);
        if (pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, submission && isMutationMethod(submission.formMethod)) {
          handleFetcherAction(key, routeId, path, match, matches, submission);
          return;
        }
        fetchLoadMatches.set(key, {
          routeId,
          path
        }), handleFetcherLoader(key, routeId, path, match, matches, submission);
      }
      async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {
        if (interruptActiveLoads(), fetchLoadMatches.delete(key), !match.route.action && !match.route.lazy) {
          let error2 = getInternalRouterError(405, {
            method: submission.formMethod,
            pathname: path,
            routeId
          });
          setFetcherError(key, routeId, error2);
          return;
        }
        let existingFetcher = state.fetchers.get(key), fetcher = _extends2({
          state: "submitting"
        }, submission, {
          data: existingFetcher && existingFetcher.data,
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key, fetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
        fetchControllers.set(key, abortController);
        let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);
        if (fetchRequest.signal.aborted) {
          fetchControllers.get(key) === abortController && fetchControllers.delete(key);
          return;
        }
        if (isRedirectResult(actionResult)) {
          fetchControllers.delete(key), fetchRedirectIds.add(key);
          let loadingFetcher = _extends2({
            state: "loading"
          }, submission, {
            data: void 0,
            " _hasFetcherDoneAnything ": !0
          });
          return state.fetchers.set(key, loadingFetcher), updateState({
            fetchers: new Map(state.fetchers)
          }), startRedirectNavigation(state, actionResult, {
            submission,
            isFetchActionRedirect: !0
          });
        }
        if (isErrorResult(actionResult)) {
          setFetcherError(key, routeId, actionResult.error);
          return;
        }
        if (isDeferredResult(actionResult))
          throw getInternalRouterError(400, {
            type: "defer-action"
          });
        let nextLocation = state.navigation.location || state.location, revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal), routesToUse = inFlightDataRoutes || dataRoutes, matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
        invariant2(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let loadFetcher = _extends2({
          state: "loading",
          data: actionResult.data
        }, submission, {
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key, loadFetcher);
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
          init.history,
          state,
          matches,
          submission,
          nextLocation,
          isRevalidationRequired,
          cancelledDeferredRoutes,
          cancelledFetcherLoads,
          fetchLoadMatches,
          routesToUse,
          basename,
          {
            [match.route.id]: actionResult.data
          },
          void 0
          // No need to send through errors since we short circuit above
        );
        revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
          let staleKey = rf.key, existingFetcher2 = state.fetchers.get(staleKey), revalidatingFetcher = {
            state: "loading",
            data: existingFetcher2 && existingFetcher2.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(staleKey, revalidatingFetcher), rf.controller && fetchControllers.set(staleKey, rf.controller);
        }), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
        abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let {
          results: results2,
          loaderResults,
          fetcherResults
        } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
        if (abortController.signal.aborted)
          return;
        abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations), fetchReloadIds.delete(key), fetchControllers.delete(key), revalidatingFetchers.forEach((r24) => fetchControllers.delete(r24.key));
        let redirect2 = findRedirect(results2);
        if (redirect2)
          return startRedirectNavigation(state, redirect2);
        let {
          loaderData,
          errors
        } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);
        if (state.fetchers.has(key)) {
          let doneFetcher = {
            state: "idle",
            data: actionResult.data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(key, doneFetcher);
        }
        let didAbortFetchLoads = abortStaleFetchLoads(loadId);
        state.navigation.state === "loading" && loadId > pendingNavigationLoadId ? (invariant2(pendingAction, "Expected pending action"), pendingNavigationController && pendingNavigationController.abort(), completeNavigation(state.navigation.location, {
          matches,
          loaderData,
          errors,
          fetchers: new Map(state.fetchers)
        })) : (updateState(_extends2({
          errors,
          loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
        }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
          fetchers: new Map(state.fetchers)
        } : {})), isRevalidationRequired = !1);
      }
      async function handleFetcherLoader(key, routeId, path, match, matches, submission) {
        let existingFetcher = state.fetchers.get(key), loadingFetcher = _extends2({
          state: "loading",
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0
        }, submission, {
          data: existingFetcher && existingFetcher.data,
          " _hasFetcherDoneAnything ": !0
        });
        state.fetchers.set(key, loadingFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
        fetchControllers.set(key, abortController);
        let result = await callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties, basename);
        if (isDeferredResult(result) && (result = await resolveDeferredData(result, fetchRequest.signal, !0) || result), fetchControllers.get(key) === abortController && fetchControllers.delete(key), fetchRequest.signal.aborted)
          return;
        if (isRedirectResult(result)) {
          fetchRedirectIds.add(key), await startRedirectNavigation(state, result);
          return;
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(state.matches, routeId);
          state.fetchers.delete(key), updateState({
            fetchers: new Map(state.fetchers),
            errors: {
              [boundaryMatch.route.id]: result.error
            }
          });
          return;
        }
        invariant2(!isDeferredResult(result), "Unhandled fetcher deferred data");
        let doneFetcher = {
          state: "idle",
          data: result.data,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          " _hasFetcherDoneAnything ": !0
        };
        state.fetchers.set(key, doneFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
      }
      async function startRedirectNavigation(state2, redirect2, _temp) {
        let {
          submission,
          replace,
          isFetchActionRedirect
        } = _temp === void 0 ? {} : _temp;
        redirect2.revalidate && (isRevalidationRequired = !0);
        let redirectLocation = createLocation(
          state2.location,
          redirect2.location,
          // TODO: This can be removed once we get rid of useTransition in Remix v2
          _extends2({
            _isRedirect: !0
          }, isFetchActionRedirect ? {
            _isFetchActionRedirect: !0
          } : {})
        );
        if (invariant2(redirectLocation, "Expected a location on the redirect navigation"), ABSOLUTE_URL_REGEX.test(redirect2.location) && isBrowser2) {
          let url = init.history.createURL(redirect2.location), isDifferentBasename = stripBasename(url.pathname, basename) == null;
          if (routerWindow.location.origin !== url.origin || isDifferentBasename) {
            replace ? routerWindow.location.replace(redirect2.location) : routerWindow.location.assign(redirect2.location);
            return;
          }
        }
        pendingNavigationController = null;
        let redirectHistoryAction = replace === !0 ? exports.Action.Replace : exports.Action.Push, {
          formMethod,
          formAction,
          formEncType,
          formData
        } = state2.navigation;
        !submission && formMethod && formAction && formData && formEncType && (submission = {
          formMethod,
          formAction,
          formEncType,
          formData
        }), redirectPreserveMethodStatusCodes.has(redirect2.status) && submission && isMutationMethod(submission.formMethod) ? await startNavigation(redirectHistoryAction, redirectLocation, {
          submission: _extends2({}, submission, {
            formAction: redirect2.location
          }),
          // Preserve this flag across redirects
          preventScrollReset: pendingPreventScrollReset
        }) : isFetchActionRedirect ? await startNavigation(redirectHistoryAction, redirectLocation, {
          overrideNavigation: {
            state: "loading",
            location: redirectLocation,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0
          },
          fetcherSubmission: submission,
          // Preserve this flag across redirects
          preventScrollReset: pendingPreventScrollReset
        }) : await startNavigation(redirectHistoryAction, redirectLocation, {
          overrideNavigation: {
            state: "loading",
            location: redirectLocation,
            formMethod: submission ? submission.formMethod : void 0,
            formAction: submission ? submission.formAction : void 0,
            formEncType: submission ? submission.formEncType : void 0,
            formData: submission ? submission.formData : void 0
          },
          // Preserve this flag across redirects
          preventScrollReset: pendingPreventScrollReset
        });
      }
      async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
        let results2 = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map((f) => f.matches && f.match && f.controller ? callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename) : {
          type: ResultType.error,
          error: getInternalRouterError(404, {
            pathname: f.path
          })
        })]), loaderResults = results2.slice(0, matchesToLoad.length), fetcherResults = results2.slice(matchesToLoad.length);
        return await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), !1, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f) => f.match), fetcherResults, fetchersToLoad.map((f) => f.controller ? f.controller.signal : null), !0)]), {
          results: results2,
          loaderResults,
          fetcherResults
        };
      }
      function interruptActiveLoads() {
        isRevalidationRequired = !0, cancelledDeferredRoutes.push(...cancelActiveDeferreds()), fetchLoadMatches.forEach((_, key) => {
          fetchControllers.has(key) && (cancelledFetcherLoads.push(key), abortFetcher(key));
        });
      }
      function setFetcherError(key, routeId, error2) {
        let boundaryMatch = findNearestBoundary(state.matches, routeId);
        deleteFetcher(key), updateState({
          errors: {
            [boundaryMatch.route.id]: error2
          },
          fetchers: new Map(state.fetchers)
        });
      }
      function deleteFetcher(key) {
        let fetcher = state.fetchers.get(key);
        fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key)) && abortFetcher(key), fetchLoadMatches.delete(key), fetchReloadIds.delete(key), fetchRedirectIds.delete(key), state.fetchers.delete(key);
      }
      function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        invariant2(controller, "Expected fetch controller: " + key), controller.abort(), fetchControllers.delete(key);
      }
      function markFetchersDone(keys) {
        for (let key of keys) {
          let doneFetcher = {
            state: "idle",
            data: getFetcher(key).data,
            formMethod: void 0,
            formAction: void 0,
            formEncType: void 0,
            formData: void 0,
            " _hasFetcherDoneAnything ": !0
          };
          state.fetchers.set(key, doneFetcher);
        }
      }
      function markFetchRedirectsDone() {
        let doneKeys = [], updatedFetchers = !1;
        for (let key of fetchRedirectIds) {
          let fetcher = state.fetchers.get(key);
          invariant2(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (fetchRedirectIds.delete(key), doneKeys.push(key), updatedFetchers = !0);
        }
        return markFetchersDone(doneKeys), updatedFetchers;
      }
      function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id3] of fetchReloadIds)
          if (id3 < landedId) {
            let fetcher = state.fetchers.get(key);
            invariant2(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (abortFetcher(key), fetchReloadIds.delete(key), yeetedKeys.push(key));
          }
        return markFetchersDone(yeetedKeys), yeetedKeys.length > 0;
      }
      function getBlocker(key, fn) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        return blockerFunctions.get(key) !== fn && blockerFunctions.set(key, fn), blocker;
      }
      function deleteBlocker(key) {
        state.blockers.delete(key), blockerFunctions.delete(key);
      }
      function updateBlocker(key, newBlocker) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        invariant2(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state), state.blockers.set(key, newBlocker), updateState({
          blockers: new Map(state.blockers)
        });
      }
      function shouldBlockNavigation(_ref2) {
        let {
          currentLocation,
          nextLocation,
          historyAction
        } = _ref2;
        if (blockerFunctions.size === 0)
          return;
        blockerFunctions.size > 1 && warning2(!1, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries()), [blockerKey, blockerFunction] = entries[entries.length - 1], blocker = state.blockers.get(blockerKey);
        if (!(blocker && blocker.state === "proceeding") && blockerFunction({
          currentLocation,
          nextLocation,
          historyAction
        }))
          return blockerKey;
      }
      function cancelActiveDeferreds(predicate) {
        let cancelledRouteIds = [];
        return activeDeferreds.forEach((dfd, routeId) => {
          (!predicate || predicate(routeId)) && (dfd.cancel(), cancelledRouteIds.push(routeId), activeDeferreds.delete(routeId));
        }), cancelledRouteIds;
      }
      function enableScrollRestoration(positions, getPosition, getKey) {
        if (savedScrollPositions = positions, getScrollPosition = getPosition, getScrollRestorationKey = getKey || ((location) => location.key), !initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
          initialScrollRestored = !0;
          let y = getSavedScrollPosition(state.location, state.matches);
          y != null && updateState({
            restoreScrollPosition: y
          });
        }
        return () => {
          savedScrollPositions = null, getScrollPosition = null, getScrollRestorationKey = null;
        };
      }
      function saveScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
          let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key = getScrollRestorationKey(location, userMatches) || location.key;
          savedScrollPositions[key] = getScrollPosition();
        }
      }
      function getSavedScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {
          let userMatches = matches.map((m) => createUseMatchesMatch(m, state.loaderData)), key = getScrollRestorationKey(location, userMatches) || location.key, y = savedScrollPositions[key];
          if (typeof y == "number")
            return y;
        }
        return null;
      }
      function _internalSetRoutes(newRoutes) {
        manifest = {}, inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, void 0, manifest);
      }
      return router = {
        get basename() {
          return basename;
        },
        get state() {
          return state;
        },
        get routes() {
          return dataRoutes;
        },
        initialize,
        subscribe,
        enableScrollRestoration,
        navigate,
        fetch: fetch2,
        revalidate,
        // Passthrough to history-aware createHref used by useHref so we get proper
        // hash-aware URLs in DOM paths
        createHref: (to) => init.history.createHref(to),
        encodeLocation: (to) => init.history.encodeLocation(to),
        getFetcher,
        deleteFetcher,
        dispose,
        getBlocker,
        deleteBlocker,
        _internalFetchControllers: fetchControllers,
        _internalActiveDeferreds: activeDeferreds,
        // TODO: Remove setRoutes, it's temporary to avoid dealing with
        // updating the tree while validating the update algorithm.
        _internalSetRoutes
      }, router;
    }
    var UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
    function createStaticHandler(routes2, opts) {
      invariant2(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
      let manifest = {}, basename = (opts ? opts.basename : null) || "/", mapRouteProperties;
      if (opts != null && opts.mapRouteProperties)
        mapRouteProperties = opts.mapRouteProperties;
      else if (opts != null && opts.detectErrorBoundary) {
        let detectErrorBoundary = opts.detectErrorBoundary;
        mapRouteProperties = (route) => ({
          hasErrorBoundary: detectErrorBoundary(route)
        });
      } else
        mapRouteProperties = defaultMapRouteProperties;
      let dataRoutes = convertRoutesToDataRoutes(routes2, mapRouteProperties, void 0, manifest);
      async function query(request, _temp2) {
        let {
          requestContext
        } = _temp2 === void 0 ? {} : _temp2, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
        if (!isValidMethod(method) && method !== "HEAD") {
          let error2 = getInternalRouterError(405, {
            method
          }), {
            matches: methodNotAllowedMatches,
            route
          } = getShortCircuitMatches(dataRoutes);
          return {
            basename,
            location,
            matches: methodNotAllowedMatches,
            loaderData: {},
            actionData: null,
            errors: {
              [route.id]: error2
            },
            statusCode: error2.status,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        } else if (!matches) {
          let error2 = getInternalRouterError(404, {
            pathname: location.pathname
          }), {
            matches: notFoundMatches,
            route
          } = getShortCircuitMatches(dataRoutes);
          return {
            basename,
            location,
            matches: notFoundMatches,
            loaderData: {},
            actionData: null,
            errors: {
              [route.id]: error2
            },
            statusCode: error2.status,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        }
        let result = await queryImpl(request, location, matches, requestContext);
        return isResponse(result) ? result : _extends2({
          location,
          basename
        }, result);
      }
      async function queryRoute(request, _temp3) {
        let {
          routeId,
          requestContext
        } = _temp3 === void 0 ? {} : _temp3, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
        if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS")
          throw getInternalRouterError(405, {
            method
          });
        if (!matches)
          throw getInternalRouterError(404, {
            pathname: location.pathname
          });
        let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);
        if (routeId && !match)
          throw getInternalRouterError(403, {
            pathname: location.pathname,
            routeId
          });
        if (!match)
          throw getInternalRouterError(404, {
            pathname: location.pathname
          });
        let result = await queryImpl(request, location, matches, requestContext, match);
        if (isResponse(result))
          return result;
        let error2 = result.errors ? Object.values(result.errors)[0] : void 0;
        if (error2 !== void 0)
          throw error2;
        if (result.actionData)
          return Object.values(result.actionData)[0];
        if (result.loaderData) {
          var _result$activeDeferre;
          let data = Object.values(result.loaderData)[0];
          return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id] && (data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id]), data;
        }
      }
      async function queryImpl(request, location, matches, requestContext, routeMatch) {
        invariant2(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
          if (isMutationMethod(request.method.toLowerCase()))
            return await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
          let result = await loadRouteData(request, matches, requestContext, routeMatch);
          return isResponse(result) ? result : _extends2({}, result, {
            actionData: null,
            actionHeaders: {}
          });
        } catch (e23) {
          if (isQueryRouteResponse(e23)) {
            if (e23.type === ResultType.error && !isRedirectResponse(e23.response))
              throw e23.response;
            return e23.response;
          }
          if (isRedirectResponse(e23))
            return e23;
          throw e23;
        }
      }
      async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
        let result;
        if (!actionMatch.route.action && !actionMatch.route.lazy) {
          let error2 = getInternalRouterError(405, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: actionMatch.route.id
          });
          if (isRouteRequest)
            throw error2;
          result = {
            type: ResultType.error,
            error: error2
          };
        } else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename, !0, isRouteRequest, requestContext), request.signal.aborted) {
          let method = isRouteRequest ? "queryRoute" : "query";
          throw new Error(method + "() call aborted");
        }
        if (isRedirectResult(result))
          throw new Response(null, {
            status: result.status,
            headers: {
              Location: result.location
            }
          });
        if (isDeferredResult(result)) {
          let error2 = getInternalRouterError(400, {
            type: "defer-action"
          });
          if (isRouteRequest)
            throw error2;
          result = {
            type: ResultType.error,
            error: error2
          };
        }
        if (isRouteRequest) {
          if (isErrorResult(result))
            throw result.error;
          return {
            matches: [actionMatch],
            loaderData: {},
            actionData: {
              [actionMatch.route.id]: result.data
            },
            errors: null,
            // Note: statusCode + headers are unused here since queryRoute will
            // return the raw Response or value
            statusCode: 200,
            loaderHeaders: {},
            actionHeaders: {},
            activeDeferreds: null
          };
        }
        if (isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
            [boundaryMatch.route.id]: result.error
          });
          return _extends2({}, context2, {
            statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
            actionData: null,
            actionHeaders: _extends2({}, result.headers ? {
              [actionMatch.route.id]: result.headers
            } : {})
          });
        }
        let loaderRequest = new Request(request.url, {
          headers: request.headers,
          redirect: request.redirect,
          signal: request.signal
        }), context = await loadRouteData(loaderRequest, matches, requestContext);
        return _extends2({}, context, result.statusCode ? {
          statusCode: result.statusCode
        } : {}, {
          actionData: {
            [actionMatch.route.id]: result.data
          },
          actionHeaders: _extends2({}, result.headers ? {
            [actionMatch.route.id]: result.headers
          } : {})
        });
      }
      async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
        let isRouteRequest = routeMatch != null;
        if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))
          throw getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch == null ? void 0 : routeMatch.route.id
          });
        let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0])).filter((m) => m.route.loader || m.route.lazy);
        if (matchesToLoad.length === 0)
          return {
            matches,
            // Add a null for all matched routes for proper revalidation on the client
            loaderData: matches.reduce((acc, m) => Object.assign(acc, {
              [m.route.id]: null
            }), {}),
            errors: pendingActionError || null,
            statusCode: 200,
            loaderHeaders: {},
            activeDeferreds: null
          };
        let results2 = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename, !0, isRouteRequest, requestContext))]);
        if (request.signal.aborted) {
          let method = isRouteRequest ? "queryRoute" : "query";
          throw new Error(method + "() call aborted");
        }
        let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData(matches, matchesToLoad, results2, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match) => match.route.id));
        return matches.forEach((match) => {
          executedLoaders.has(match.route.id) || (context.loaderData[match.route.id] = null);
        }), _extends2({}, context, {
          matches,
          activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
        });
      }
      return {
        dataRoutes,
        query,
        queryRoute
      };
    }
    function getStaticContextFromError(routes2, context, error2) {
      return _extends2({}, context, {
        statusCode: 500,
        errors: {
          [context._deepestRenderedBoundaryId || routes2[0].id]: error2
        }
      });
    }
    function isSubmissionNavigation(opts) {
      return opts != null && "formData" in opts;
    }
    function normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {
      let contextualMatches, activeRouteMatch;
      if (fromRouteId != null && relative !== "path") {
        contextualMatches = [];
        for (let match of matches)
          if (contextualMatches.push(match), match.route.id === fromRouteId) {
            activeRouteMatch = match;
            break;
          }
      } else
        contextualMatches = matches, activeRouteMatch = matches[matches.length - 1];
      let path = resolveTo(to || ".", getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
      return to == null && (path.search = location.search, path.hash = location.hash), (to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search) && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), prependBasename && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
    }
    function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
      if (!opts || !isSubmissionNavigation(opts))
        return {
          path
        };
      if (opts.formMethod && !isValidMethod(opts.formMethod))
        return {
          path,
          error: getInternalRouterError(405, {
            method: opts.formMethod
          })
        };
      let submission;
      if (opts.formData) {
        let formMethod = opts.formMethod || "get";
        if (submission = {
          formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),
          formAction: stripHashFromPath(path),
          formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
          formData: opts.formData
        }, isMutationMethod(submission.formMethod))
          return {
            path,
            submission
          };
      }
      let parsedPath = parsePath(path), searchParams = convertFormDataToSearchParams(opts.formData);
      return isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search) && searchParams.append("index", ""), parsedPath.search = "?" + searchParams, {
        path: createPath(parsedPath),
        submission
      };
    }
    function getLoaderMatchesUntilBoundary(matches, boundaryId) {
      let boundaryMatches = matches;
      if (boundaryId) {
        let index2 = matches.findIndex((m) => m.route.id === boundaryId);
        index2 >= 0 && (boundaryMatches = matches.slice(0, index2));
      }
      return boundaryMatches;
    }
    function getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {
      let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0, currentUrl = history.createURL(state.location), nextUrl = history.createURL(location), boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0, navigationMatches = getLoaderMatchesUntilBoundary(matches, boundaryId).filter((match, index2) => {
        if (match.route.lazy)
          return !0;
        if (match.route.loader == null)
          return !1;
        if (isNewLoader(state.loaderData, state.matches[index2], match) || cancelledDeferredRoutes.some((id3) => id3 === match.route.id))
          return !0;
        let currentRouteMatch = state.matches[index2], nextRouteMatch = match;
        return shouldRevalidateLoader(match, _extends2({
          currentUrl,
          currentParams: currentRouteMatch.params,
          nextUrl,
          nextParams: nextRouteMatch.params
        }, submission, {
          actionResult,
          defaultShouldRevalidate: (
            // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
            isRevalidationRequired || // Clicked the same link, resubmitted a GET form
            currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
            currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
          )
        }));
      }), revalidatingFetchers = [];
      return fetchLoadMatches.forEach((f, key) => {
        if (!matches.some((m) => m.route.id === f.routeId))
          return;
        let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
        if (!fetcherMatches) {
          revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: null,
            match: null,
            controller: null
          });
          return;
        }
        let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
        if (cancelledFetcherLoads.includes(key)) {
          revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: fetcherMatches,
            match: fetcherMatch,
            controller: new AbortController()
          });
          return;
        }
        shouldRevalidateLoader(fetcherMatch, _extends2({
          currentUrl,
          currentParams: state.matches[state.matches.length - 1].params,
          nextUrl,
          nextParams: matches[matches.length - 1].params
        }, submission, {
          actionResult,
          // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
          defaultShouldRevalidate: isRevalidationRequired
        })) && revalidatingFetchers.push({
          key,
          routeId: f.routeId,
          path: f.path,
          matches: fetcherMatches,
          match: fetcherMatch,
          controller: new AbortController()
        });
      }), [navigationMatches, revalidatingFetchers];
    }
    function isNewLoader(currentLoaderData, currentMatch, match) {
      let isNew = (
        // [a] -> [a, b]
        !currentMatch || // [a, b] -> [a, c]
        match.route.id !== currentMatch.route.id
      ), isMissingData = currentLoaderData[match.route.id] === void 0;
      return isNew || isMissingData;
    }
    function isNewRouteInstance(currentMatch, match) {
      let currentPath = currentMatch.route.path;
      return (
        // param change for this match, /users/123 -> /users/456
        currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
        // e.g. /files/images/avatar.jpg -> files/finances.xls
        currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
      );
    }
    function shouldRevalidateLoader(loaderMatch, arg) {
      if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice == "boolean")
          return routeChoice;
      }
      return arg.defaultShouldRevalidate;
    }
    async function loadLazyRouteModule(route, mapRouteProperties, manifest) {
      if (!route.lazy)
        return;
      let lazyRoute = await route.lazy();
      if (!route.lazy)
        return;
      let routeToUpdate = manifest[route.id];
      invariant2(routeToUpdate, "No route found in manifest");
      let routeUpdates = {};
      for (let lazyRouteProperty in lazyRoute) {
        let isPropertyStaticallyDefined = routeToUpdate[lazyRouteProperty] !== void 0 && // This property isn't static since it should always be updated based
        // on the route updates
        lazyRouteProperty !== "hasErrorBoundary";
        warning2(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.')), !isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty) && (routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty]);
      }
      Object.assign(routeToUpdate, routeUpdates), Object.assign(routeToUpdate, _extends2({}, mapRouteProperties(routeToUpdate), {
        lazy: void 0
      }));
    }
    async function callLoaderOrAction(type2, request, match, matches, manifest, mapRouteProperties, basename, isStaticRequest, isRouteRequest, requestContext) {
      isStaticRequest === void 0 && (isStaticRequest = !1), isRouteRequest === void 0 && (isRouteRequest = !1);
      let resultType, result, onReject, runHandler = (handler) => {
        let reject, abortPromise = new Promise((_, r24) => reject = r24);
        return onReject = () => reject(), request.signal.addEventListener("abort", onReject), Promise.race([handler({
          request,
          params: match.params,
          context: requestContext
        }), abortPromise]);
      };
      try {
        let handler = match.route[type2];
        if (match.route.lazy)
          if (handler)
            result = (await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]))[0];
          else if (await loadLazyRouteModule(match.route, mapRouteProperties, manifest), handler = match.route[type2], handler)
            result = await runHandler(handler);
          else if (type2 === "action") {
            let url = new URL(request.url), pathname = url.pathname + url.search;
            throw getInternalRouterError(405, {
              method: request.method,
              pathname,
              routeId: match.route.id
            });
          } else
            return {
              type: ResultType.data,
              data: void 0
            };
        else if (handler)
          result = await runHandler(handler);
        else {
          let url = new URL(request.url), pathname = url.pathname + url.search;
          throw getInternalRouterError(404, {
            pathname
          });
        }
        invariant2(result !== void 0, "You defined " + (type2 === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type2 + "` ") + "function. Please return a value or `null`.");
      } catch (e23) {
        resultType = ResultType.error, result = e23;
      } finally {
        onReject && request.signal.removeEventListener("abort", onReject);
      }
      if (isResponse(result)) {
        let status = result.status;
        if (redirectStatusCodes.has(status)) {
          let location = result.headers.get("Location");
          if (invariant2(location, "Redirects returned/thrown from loaders/actions must have a Location header"), !ABSOLUTE_URL_REGEX.test(location))
            location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, !0, location);
          else if (!isStaticRequest) {
            let currentUrl = new URL(request.url), url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location), isSameBasename = stripBasename(url.pathname, basename) != null;
            url.origin === currentUrl.origin && isSameBasename && (location = url.pathname + url.search + url.hash);
          }
          if (isStaticRequest)
            throw result.headers.set("Location", location), result;
          return {
            type: ResultType.redirect,
            status,
            location,
            revalidate: result.headers.get("X-Remix-Revalidate") !== null
          };
        }
        if (isRouteRequest)
          throw {
            type: resultType || ResultType.data,
            response: result
          };
        let data, contentType = result.headers.get("Content-Type");
        return contentType && /\bapplication\/json\b/.test(contentType) ? data = await result.json() : data = await result.text(), resultType === ResultType.error ? {
          type: resultType,
          error: new ErrorResponse(status, result.statusText, data),
          headers: result.headers
        } : {
          type: ResultType.data,
          data,
          statusCode: result.status,
          headers: result.headers
        };
      }
      if (resultType === ResultType.error)
        return {
          type: resultType,
          error: result
        };
      if (isDeferredData(result)) {
        var _result$init, _result$init2;
        return {
          type: ResultType.deferred,
          deferredData: result,
          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
          headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
        };
      }
      return {
        type: ResultType.data,
        data: result
      };
    }
    function createClientSideRequest(history, location, signal, submission) {
      let url = history.createURL(stripHashFromPath(location)).toString(), init = {
        signal
      };
      if (submission && isMutationMethod(submission.formMethod)) {
        let {
          formMethod,
          formEncType,
          formData
        } = submission;
        init.method = formMethod.toUpperCase(), init.body = formEncType === "application/x-www-form-urlencoded" ? convertFormDataToSearchParams(formData) : formData;
      }
      return new Request(url, init);
    }
    function convertFormDataToSearchParams(formData) {
      let searchParams = new URLSearchParams();
      for (let [key, value] of formData.entries())
        searchParams.append(key, value instanceof File ? value.name : value);
      return searchParams;
    }
    function processRouteLoaderData(matches, matchesToLoad, results2, pendingError, activeDeferreds) {
      let loaderData = {}, errors = null, statusCode, foundError = !1, loaderHeaders = {};
      return results2.forEach((result, index2) => {
        let id3 = matchesToLoad[index2].route.id;
        if (invariant2(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData"), isErrorResult(result)) {
          let boundaryMatch = findNearestBoundary(matches, id3), error2 = result.error;
          pendingError && (error2 = Object.values(pendingError)[0], pendingError = void 0), errors = errors || {}, errors[boundaryMatch.route.id] == null && (errors[boundaryMatch.route.id] = error2), loaderData[id3] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id3] = result.headers);
        } else
          isDeferredResult(result) ? (activeDeferreds.set(id3, result.deferredData), loaderData[id3] = result.deferredData.data) : loaderData[id3] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id3] = result.headers);
      }), pendingError && (errors = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
        loaderData,
        errors,
        statusCode: statusCode || 200,
        loaderHeaders
      };
    }
    function processLoaderData(state, matches, matchesToLoad, results2, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
      let {
        loaderData,
        errors
      } = processRouteLoaderData(matches, matchesToLoad, results2, pendingError, activeDeferreds);
      for (let index2 = 0; index2 < revalidatingFetchers.length; index2++) {
        let {
          key,
          match,
          controller
        } = revalidatingFetchers[index2];
        invariant2(fetcherResults !== void 0 && fetcherResults[index2] !== void 0, "Did not find corresponding fetcher result");
        let result = fetcherResults[index2];
        if (!(controller && controller.signal.aborted))
          if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
            errors && errors[boundaryMatch.route.id] || (errors = _extends2({}, errors, {
              [boundaryMatch.route.id]: result.error
            })), state.fetchers.delete(key);
          } else if (isRedirectResult(result))
            invariant2(!1, "Unhandled fetcher revalidation redirect");
          else if (isDeferredResult(result))
            invariant2(!1, "Unhandled fetcher deferred data");
          else {
            let doneFetcher = {
              state: "idle",
              data: result.data,
              formMethod: void 0,
              formAction: void 0,
              formEncType: void 0,
              formData: void 0,
              " _hasFetcherDoneAnything ": !0
            };
            state.fetchers.set(key, doneFetcher);
          }
      }
      return {
        loaderData,
        errors
      };
    }
    function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
      let mergedLoaderData = _extends2({}, newLoaderData);
      for (let match of matches) {
        let id3 = match.route.id;
        if (newLoaderData.hasOwnProperty(id3) ? newLoaderData[id3] !== void 0 && (mergedLoaderData[id3] = newLoaderData[id3]) : loaderData[id3] !== void 0 && match.route.loader && (mergedLoaderData[id3] = loaderData[id3]), errors && errors.hasOwnProperty(id3))
          break;
      }
      return mergedLoaderData;
    }
    function findNearestBoundary(matches, routeId) {
      return (routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches]).reverse().find((m) => m.route.hasErrorBoundary === !0) || matches[0];
    }
    function getShortCircuitMatches(routes2) {
      let route = routes2.find((r24) => r24.index || !r24.path || r24.path === "/") || {
        id: "__shim-error-route__"
      };
      return {
        matches: [{
          params: {},
          pathname: "",
          pathnameBase: "",
          route
        }],
        route
      };
    }
    function getInternalRouterError(status, _temp4) {
      let {
        pathname,
        routeId,
        method,
        type: type2
      } = _temp4 === void 0 ? {} : _temp4, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
      return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type2 === "defer-action" && (errorMessage = "defer() is not supported in actions")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponse(status || 500, statusText, new Error(errorMessage), !0);
    }
    function findRedirect(results2) {
      for (let i13 = results2.length - 1; i13 >= 0; i13--) {
        let result = results2[i13];
        if (isRedirectResult(result))
          return result;
      }
    }
    function stripHashFromPath(path) {
      let parsedPath = typeof path == "string" ? parsePath(path) : path;
      return createPath(_extends2({}, parsedPath, {
        hash: ""
      }));
    }
    function isHashChangeOnly(a8, b) {
      return a8.pathname !== b.pathname || a8.search !== b.search ? !1 : a8.hash === "" ? b.hash !== "" : a8.hash === b.hash ? !0 : b.hash !== "";
    }
    function isDeferredResult(result) {
      return result.type === ResultType.deferred;
    }
    function isErrorResult(result) {
      return result.type === ResultType.error;
    }
    function isRedirectResult(result) {
      return (result && result.type) === ResultType.redirect;
    }
    function isDeferredData(value) {
      let deferred = value;
      return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
    }
    function isResponse(value) {
      return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
    }
    function isRedirectResponse(result) {
      if (!isResponse(result))
        return !1;
      let status = result.status, location = result.headers.get("Location");
      return status >= 300 && status <= 399 && location != null;
    }
    function isQueryRouteResponse(obj) {
      return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
    }
    function isValidMethod(method) {
      return validRequestMethods.has(method.toLowerCase());
    }
    function isMutationMethod(method) {
      return validMutationMethods.has(method.toLowerCase());
    }
    async function resolveDeferredResults(currentMatches, matchesToLoad, results2, signals, isFetcher, currentLoaderData) {
      for (let index2 = 0; index2 < results2.length; index2++) {
        let result = results2[index2], match = matchesToLoad[index2];
        if (!match)
          continue;
        let currentMatch = currentMatches.find((m) => m.route.id === match.route.id), isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;
        if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
          let signal = signals[index2];
          invariant2(signal, "Expected an AbortSignal for revalidating fetcher deferred result"), await resolveDeferredData(result, signal, isFetcher).then((result2) => {
            result2 && (results2[index2] = result2 || results2[index2]);
          });
        }
      }
    }
    async function resolveDeferredData(result, signal, unwrap) {
      if (unwrap === void 0 && (unwrap = !1), !await result.deferredData.resolveData(signal)) {
        if (unwrap)
          try {
            return {
              type: ResultType.data,
              data: result.deferredData.unwrappedData
            };
          } catch (e23) {
            return {
              type: ResultType.error,
              error: e23
            };
          }
        return {
          type: ResultType.data,
          data: result.deferredData.data
        };
      }
    }
    function hasNakedIndexQuery(search) {
      return new URLSearchParams(search).getAll("index").some((v) => v === "");
    }
    function createUseMatchesMatch(match, loaderData) {
      let {
        route,
        pathname,
        params
      } = match;
      return {
        id: route.id,
        pathname,
        params,
        data: loaderData[route.id],
        handle: route.handle
      };
    }
    function getTargetMatch(matches, location) {
      let search = typeof location == "string" ? parsePath(location).search : location.search;
      if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || ""))
        return matches[matches.length - 1];
      let pathMatches = getPathContributingMatches(matches);
      return pathMatches[pathMatches.length - 1];
    }
    exports.AbortedDeferredError = AbortedDeferredError;
    exports.ErrorResponse = ErrorResponse;
    exports.IDLE_BLOCKER = IDLE_BLOCKER;
    exports.IDLE_FETCHER = IDLE_FETCHER;
    exports.IDLE_NAVIGATION = IDLE_NAVIGATION;
    exports.UNSAFE_DEFERRED_SYMBOL = UNSAFE_DEFERRED_SYMBOL;
    exports.UNSAFE_DeferredData = DeferredData;
    exports.UNSAFE_convertRoutesToDataRoutes = convertRoutesToDataRoutes;
    exports.UNSAFE_getPathContributingMatches = getPathContributingMatches;
    exports.UNSAFE_invariant = invariant2;
    exports.UNSAFE_warning = warning2;
    exports.createBrowserHistory = createBrowserHistory;
    exports.createHashHistory = createHashHistory;
    exports.createMemoryHistory = createMemoryHistory;
    exports.createPath = createPath;
    exports.createRouter = createRouter;
    exports.createStaticHandler = createStaticHandler;
    exports.defer = defer;
    exports.generatePath = generatePath;
    exports.getStaticContextFromError = getStaticContextFromError;
    exports.getToPathname = getToPathname;
    exports.isDeferredData = isDeferredData;
    exports.isRouteErrorResponse = isRouteErrorResponse;
    exports.joinPaths = joinPaths;
    exports.json = json;
    exports.matchPath = matchPath;
    exports.matchRoutes = matchRoutes;
    exports.normalizePathname = normalizePathname;
    exports.parsePath = parsePath;
    exports.redirect = redirect;
    exports.resolvePath = resolvePath;
    exports.resolveTo = resolveTo;
    exports.stripBasename = stripBasename;
  }
});

// ../../../node_modules/react-router/dist/umd/react-router.production.min.js
var require_react_router_production_min = __commonJS({
  "../../../node_modules/react-router/dist/umd/react-router.production.min.js"(exports, module2) {
    (function(e23, t17) {
      typeof exports == "object" && typeof module2 < "u" ? t17(exports, require_react(), require_router_cjs2()) : typeof define == "function" && define.amd ? define(["exports", "react", "@remix-run/router"], t17) : t17((e23 = typeof globalThis < "u" ? globalThis : e23 || self).ReactRouter = {}, e23.React, e23.RemixRouter);
    })(exports, function(e23, t17, r24) {
      "use strict";
      function n(e24) {
        if (e24 && e24.__esModule)
          return e24;
        var t18 = /* @__PURE__ */ Object.create(null);
        return e24 && Object.keys(e24).forEach(function(r25) {
          if (r25 !== "default") {
            var n2 = Object.getOwnPropertyDescriptor(e24, r25);
            Object.defineProperty(t18, r25, n2.get ? n2 : { enumerable: !0, get: function() {
              return e24[r25];
            } });
          }
        }), t18.default = e24, Object.freeze(t18);
      }
      var a8 = n(t17);
      function o3() {
        return o3 = Object.assign ? Object.assign.bind() : function(e24) {
          for (var t18 = 1; t18 < arguments.length; t18++) {
            var r25 = arguments[t18];
            for (var n2 in r25)
              Object.prototype.hasOwnProperty.call(r25, n2) && (e24[n2] = r25[n2]);
          }
          return e24;
        }, o3.apply(this, arguments);
      }
      var i13 = a8.startTransition;
      let u = a8.createContext(null), l9 = a8.createContext(null), s = a8.createContext(null), c = a8.createContext(null), d = a8.createContext(null), p = a8.createContext({ outlet: null, matches: [], isDataRoute: !1 }), m = a8.createContext(null);
      function h() {
        return a8.useContext(d) != null;
      }
      function f() {
        return h() || r24.UNSAFE_invariant(!1), a8.useContext(d).location;
      }
      function v(e24) {
        a8.useContext(c).static || a8.useLayoutEffect(e24);
      }
      function g() {
        let { isDataRoute: e24 } = a8.useContext(p);
        return e24 ? function() {
          let { router: e25 } = O(N.UseNavigateStable), t18 = F(A.UseNavigateStable), r25 = a8.useRef(!1);
          return v(() => {
            r25.current = !0;
          }), a8.useCallback(function(n2, a9) {
            a9 === void 0 && (a9 = {}), r25.current && (typeof n2 == "number" ? e25.navigate(n2) : e25.navigate(n2, o3({ fromRouteId: t18 }, a9)));
          }, [e25, t18]);
        }() : function() {
          h() || r24.UNSAFE_invariant(!1);
          let e25 = a8.useContext(u), { basename: t18, navigator: n2 } = a8.useContext(c), { matches: o4 } = a8.useContext(p), { pathname: i14 } = f(), l10 = JSON.stringify(r24.UNSAFE_getPathContributingMatches(o4).map((e26) => e26.pathnameBase)), s2 = a8.useRef(!1);
          return v(() => {
            s2.current = !0;
          }), a8.useCallback(function(a9, o5) {
            if (o5 === void 0 && (o5 = {}), !s2.current)
              return;
            if (typeof a9 == "number")
              return void n2.go(a9);
            let u2 = r24.resolveTo(a9, JSON.parse(l10), i14, o5.relative === "path");
            e25 == null && t18 !== "/" && (u2.pathname = u2.pathname === "/" ? t18 : r24.joinPaths([t18, u2.pathname])), (o5.replace ? n2.replace : n2.push)(u2, o5.state, o5);
          }, [t18, n2, l10, i14, e25]);
        }();
      }
      let E = a8.createContext(null);
      function y(e24) {
        let t18 = a8.useContext(p).outlet;
        return t18 && a8.createElement(E.Provider, { value: e24 }, t18);
      }
      function b(e24, t18) {
        let { relative: n2 } = t18 === void 0 ? {} : t18, { matches: o4 } = a8.useContext(p), { pathname: i14 } = f(), u2 = JSON.stringify(r24.UNSAFE_getPathContributingMatches(o4).map((e25) => e25.pathnameBase));
        return a8.useMemo(() => r24.resolveTo(e24, JSON.parse(u2), i14, n2 === "path"), [e24, u2, i14, n2]);
      }
      function R(e24, t18) {
        return C(e24, t18);
      }
      function C(e24, t18, n2) {
        h() || r24.UNSAFE_invariant(!1);
        let { navigator: i14 } = a8.useContext(c), { matches: u2 } = a8.useContext(p), l10 = u2[u2.length - 1], s2 = l10 ? l10.params : {};
        !l10 || l10.pathname;
        let m2 = l10 ? l10.pathnameBase : "/";
        l10 && l10.route;
        let v2, g2 = f();
        if (t18) {
          var E2;
          let e25 = typeof t18 == "string" ? r24.parsePath(t18) : t18;
          m2 === "/" || (E2 = e25.pathname) != null && E2.startsWith(m2) || r24.UNSAFE_invariant(!1), v2 = e25;
        } else
          v2 = g2;
        let y2 = v2.pathname || "/", b2 = m2 === "/" ? y2 : y2.slice(m2.length) || "/", R2 = r24.matchRoutes(e24, { pathname: b2 }), C2 = _(R2 && R2.map((e25) => Object.assign({}, e25, { params: Object.assign({}, s2, e25.params), pathname: r24.joinPaths([m2, i14.encodeLocation ? i14.encodeLocation(e25.pathname).pathname : e25.pathname]), pathnameBase: e25.pathnameBase === "/" ? m2 : r24.joinPaths([m2, i14.encodeLocation ? i14.encodeLocation(e25.pathnameBase).pathname : e25.pathnameBase]) })), u2, n2);
        return t18 && C2 ? a8.createElement(d.Provider, { value: { location: o3({ pathname: "/", search: "", hash: "", state: null, key: "default" }, v2), navigationType: r24.Action.Pop } }, C2) : C2;
      }
      function P() {
        let e24 = D(), t18 = r24.isRouteErrorResponse(e24) ? e24.status + " " + e24.statusText : e24 instanceof Error ? e24.message : JSON.stringify(e24), n2 = e24 instanceof Error ? e24.stack : null, o4 = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" };
        return a8.createElement(a8.Fragment, null, a8.createElement("h2", null, "Unexpected Application Error!"), a8.createElement("h3", { style: { fontStyle: "italic" } }, t18), n2 ? a8.createElement("pre", { style: o4 }, n2) : null, null);
      }
      let x = a8.createElement(P, null);
      class U extends a8.Component {
        constructor(e24) {
          super(e24), this.state = { location: e24.location, revalidation: e24.revalidation, error: e24.error };
        }
        static getDerivedStateFromError(e24) {
          return { error: e24 };
        }
        static getDerivedStateFromProps(e24, t18) {
          return t18.location !== e24.location || t18.revalidation !== "idle" && e24.revalidation === "idle" ? { error: e24.error, location: e24.location, revalidation: e24.revalidation } : { error: e24.error || t18.error, location: t18.location, revalidation: e24.revalidation || t18.revalidation };
        }
        componentDidCatch(e24, t18) {
          console.error("React Router caught the following error during render", e24, t18);
        }
        render() {
          return this.state.error ? a8.createElement(p.Provider, { value: this.props.routeContext }, a8.createElement(m.Provider, { value: this.state.error, children: this.props.component })) : this.props.children;
        }
      }
      function S(e24) {
        let { routeContext: t18, match: r25, children: n2 } = e24, o4 = a8.useContext(u);
        return o4 && o4.static && o4.staticContext && (r25.route.errorElement || r25.route.ErrorBoundary) && (o4.staticContext._deepestRenderedBoundaryId = r25.route.id), a8.createElement(p.Provider, { value: t18 }, n2);
      }
      function _(e24, t18, n2) {
        var o4;
        if (t18 === void 0 && (t18 = []), n2 === void 0 && (n2 = null), e24 == null) {
          var i14;
          if ((i14 = n2) == null || !i14.errors)
            return null;
          e24 = n2.matches;
        }
        let u2 = e24, l10 = (o4 = n2) == null ? void 0 : o4.errors;
        if (l10 != null) {
          let e25 = u2.findIndex((e26) => e26.route.id && (l10 == null ? void 0 : l10[e26.route.id]));
          e25 >= 0 || r24.UNSAFE_invariant(!1), u2 = u2.slice(0, Math.min(u2.length, e25 + 1));
        }
        return u2.reduceRight((e25, r25, o5) => {
          let i15 = r25.route.id ? l10 == null ? void 0 : l10[r25.route.id] : null, s2 = null;
          n2 && (s2 = r25.route.errorElement || x);
          let c2 = t18.concat(u2.slice(0, o5 + 1)), d2 = () => {
            let t19;
            return t19 = i15 ? s2 : r25.route.Component ? a8.createElement(r25.route.Component, null) : r25.route.element ? r25.route.element : e25, a8.createElement(S, { match: r25, routeContext: { outlet: e25, matches: c2, isDataRoute: n2 != null }, children: t19 });
          };
          return n2 && (r25.route.ErrorBoundary || r25.route.errorElement || o5 === 0) ? a8.createElement(U, { location: n2.location, revalidation: n2.revalidation, component: s2, error: i15, children: d2(), routeContext: { outlet: null, matches: c2, isDataRoute: !0 } }) : d2();
        }, null);
      }
      var N, A;
      function O(e24) {
        let t18 = a8.useContext(u);
        return t18 || r24.UNSAFE_invariant(!1), t18;
      }
      function j(e24) {
        let t18 = a8.useContext(l9);
        return t18 || r24.UNSAFE_invariant(!1), t18;
      }
      function F(e24) {
        let t18 = function(e25) {
          let t19 = a8.useContext(p);
          return t19 || r24.UNSAFE_invariant(!1), t19;
        }(), n2 = t18.matches[t18.matches.length - 1];
        return n2.route.id || r24.UNSAFE_invariant(!1), n2.route.id;
      }
      function D() {
        var e24;
        let t18 = a8.useContext(m), r25 = j(A.UseRouteError), n2 = F(A.UseRouteError);
        return t18 || ((e24 = r25.errors) == null ? void 0 : e24[n2]);
      }
      function B() {
        let e24 = a8.useContext(s);
        return e24 == null ? void 0 : e24._data;
      }
      (function(e24) {
        e24.UseBlocker = "useBlocker", e24.UseRevalidator = "useRevalidator", e24.UseNavigateStable = "useNavigate";
      })(N || (N = {})), function(e24) {
        e24.UseBlocker = "useBlocker", e24.UseLoaderData = "useLoaderData", e24.UseActionData = "useActionData", e24.UseRouteError = "useRouteError", e24.UseNavigation = "useNavigation", e24.UseRouteLoaderData = "useRouteLoaderData", e24.UseMatches = "useMatches", e24.UseRevalidator = "useRevalidator", e24.UseNavigateStable = "useNavigate", e24.UseRouteId = "useRouteId";
      }(A || (A = {}));
      let k = 0;
      function M(e24) {
        let { routes: t18, state: r25 } = e24;
        return C(t18, void 0, r25);
      }
      function L(e24) {
        r24.UNSAFE_invariant(!1);
      }
      function T(e24) {
        let { basename: t18 = "/", children: n2 = null, location: o4, navigationType: i14 = r24.Action.Pop, navigator: u2, static: l10 = !1 } = e24;
        h() && r24.UNSAFE_invariant(!1);
        let s2 = t18.replace(/^\/*/, "/"), p2 = a8.useMemo(() => ({ basename: s2, navigator: u2, static: l10 }), [s2, u2, l10]);
        typeof o4 == "string" && (o4 = r24.parsePath(o4));
        let { pathname: m2 = "/", search: f2 = "", hash: v2 = "", state: g2 = null, key: E2 = "default" } = o4, y2 = a8.useMemo(() => {
          let e25 = r24.stripBasename(m2, s2);
          return e25 == null ? null : { location: { pathname: e25, search: f2, hash: v2, state: g2, key: E2 }, navigationType: i14 };
        }, [s2, m2, f2, v2, g2, E2, i14]);
        return y2 == null ? null : a8.createElement(c.Provider, { value: p2 }, a8.createElement(d.Provider, { children: n2, value: y2 }));
      }
      var I;
      (function(e24) {
        e24[e24.pending = 0] = "pending", e24[e24.success = 1] = "success", e24[e24.error = 2] = "error";
      })(I || (I = {}));
      let w = new Promise(() => {
      });
      class J extends a8.Component {
        constructor(e24) {
          super(e24), this.state = { error: null };
        }
        static getDerivedStateFromError(e24) {
          return { error: e24 };
        }
        componentDidCatch(e24, t18) {
          console.error("<Await> caught the following error during render", e24, t18);
        }
        render() {
          let { children: e24, errorElement: t18, resolve: n2 } = this.props, o4 = null, i14 = I.pending;
          if (n2 instanceof Promise)
            if (this.state.error) {
              i14 = I.error;
              let e25 = this.state.error;
              o4 = Promise.reject().catch(() => {
              }), Object.defineProperty(o4, "_tracked", { get: () => !0 }), Object.defineProperty(o4, "_error", { get: () => e25 });
            } else
              n2._tracked ? (o4 = n2, i14 = o4._error !== void 0 ? I.error : o4._data !== void 0 ? I.success : I.pending) : (i14 = I.pending, Object.defineProperty(n2, "_tracked", { get: () => !0 }), o4 = n2.then((e25) => Object.defineProperty(n2, "_data", { get: () => e25 }), (e25) => Object.defineProperty(n2, "_error", { get: () => e25 })));
          else
            i14 = I.success, o4 = Promise.resolve(), Object.defineProperty(o4, "_tracked", { get: () => !0 }), Object.defineProperty(o4, "_data", { get: () => n2 });
          if (i14 === I.error && o4._error instanceof r24.AbortedDeferredError)
            throw w;
          if (i14 === I.error && !t18)
            throw o4._error;
          if (i14 === I.error)
            return a8.createElement(s.Provider, { value: o4, children: t18 });
          if (i14 === I.success)
            return a8.createElement(s.Provider, { value: o4, children: e24 });
          throw o4;
        }
      }
      function H(e24) {
        let { children: t18 } = e24, r25 = B(), n2 = typeof t18 == "function" ? t18(r25) : t18;
        return a8.createElement(a8.Fragment, null, n2);
      }
      function z(e24, t18) {
        t18 === void 0 && (t18 = []);
        let n2 = [];
        return a8.Children.forEach(e24, (e25, o4) => {
          if (!a8.isValidElement(e25))
            return;
          let i14 = [...t18, o4];
          if (e25.type === a8.Fragment)
            return void n2.push.apply(n2, z(e25.props.children, i14));
          e25.type !== L && r24.UNSAFE_invariant(!1), e25.props.index && e25.props.children && r24.UNSAFE_invariant(!1);
          let u2 = { id: e25.props.id || i14.join("-"), caseSensitive: e25.props.caseSensitive, element: e25.props.element, Component: e25.props.Component, index: e25.props.index, path: e25.props.path, loader: e25.props.loader, action: e25.props.action, errorElement: e25.props.errorElement, ErrorBoundary: e25.props.ErrorBoundary, hasErrorBoundary: e25.props.ErrorBoundary != null || e25.props.errorElement != null, shouldRevalidate: e25.props.shouldRevalidate, handle: e25.props.handle, lazy: e25.props.lazy };
          e25.props.children && (u2.children = z(e25.props.children, i14)), n2.push(u2);
        }), n2;
      }
      function q(e24) {
        let t18 = { hasErrorBoundary: e24.ErrorBoundary != null || e24.errorElement != null };
        return e24.Component && Object.assign(t18, { element: a8.createElement(e24.Component), Component: void 0 }), e24.ErrorBoundary && Object.assign(t18, { errorElement: a8.createElement(e24.ErrorBoundary), ErrorBoundary: void 0 }), t18;
      }
      Object.defineProperty(e23, "AbortedDeferredError", { enumerable: !0, get: function() {
        return r24.AbortedDeferredError;
      } }), Object.defineProperty(e23, "NavigationType", { enumerable: !0, get: function() {
        return r24.Action;
      } }), Object.defineProperty(e23, "createPath", { enumerable: !0, get: function() {
        return r24.createPath;
      } }), Object.defineProperty(e23, "defer", { enumerable: !0, get: function() {
        return r24.defer;
      } }), Object.defineProperty(e23, "generatePath", { enumerable: !0, get: function() {
        return r24.generatePath;
      } }), Object.defineProperty(e23, "isRouteErrorResponse", { enumerable: !0, get: function() {
        return r24.isRouteErrorResponse;
      } }), Object.defineProperty(e23, "json", { enumerable: !0, get: function() {
        return r24.json;
      } }), Object.defineProperty(e23, "matchPath", { enumerable: !0, get: function() {
        return r24.matchPath;
      } }), Object.defineProperty(e23, "matchRoutes", { enumerable: !0, get: function() {
        return r24.matchRoutes;
      } }), Object.defineProperty(e23, "parsePath", { enumerable: !0, get: function() {
        return r24.parsePath;
      } }), Object.defineProperty(e23, "redirect", { enumerable: !0, get: function() {
        return r24.redirect;
      } }), Object.defineProperty(e23, "resolvePath", { enumerable: !0, get: function() {
        return r24.resolvePath;
      } }), e23.Await = function(e24) {
        let { children: t18, errorElement: r25, resolve: n2 } = e24;
        return a8.createElement(J, { resolve: n2, errorElement: r25 }, a8.createElement(H, null, t18));
      }, e23.MemoryRouter = function(e24) {
        let { basename: t18, children: n2, initialEntries: o4, initialIndex: u2, future: l10 } = e24, s2 = a8.useRef();
        s2.current == null && (s2.current = r24.createMemoryHistory({ initialEntries: o4, initialIndex: u2, v5Compat: !0 }));
        let c2 = s2.current, [d2, p2] = a8.useState({ action: c2.action, location: c2.location }), { v7_startTransition: m2 } = l10 || {}, h2 = a8.useCallback((e25) => {
          m2 && i13 ? i13(() => p2(e25)) : p2(e25);
        }, [p2, m2]);
        return a8.useLayoutEffect(() => c2.listen(h2), [c2, h2]), a8.createElement(T, { basename: t18, children: n2, location: d2.location, navigationType: d2.action, navigator: c2 });
      }, e23.Navigate = function(e24) {
        let { to: t18, replace: n2, state: o4, relative: i14 } = e24;
        h() || r24.UNSAFE_invariant(!1);
        let { matches: u2 } = a8.useContext(p), { pathname: l10 } = f(), s2 = g(), c2 = r24.resolveTo(t18, r24.UNSAFE_getPathContributingMatches(u2).map((e25) => e25.pathnameBase), l10, i14 === "path"), d2 = JSON.stringify(c2);
        return a8.useEffect(() => s2(JSON.parse(d2), { replace: n2, state: o4, relative: i14 }), [s2, d2, i14, n2, o4]), null;
      }, e23.Outlet = function(e24) {
        return y(e24.context);
      }, e23.Route = L, e23.Router = T, e23.RouterProvider = function(e24) {
        let { fallbackElement: t18, router: r25, future: n2 } = e24, [o4, s2] = a8.useState(r25.state), { v7_startTransition: c2 } = n2 || {}, d2 = a8.useCallback((e25) => {
          c2 && i13 ? i13(() => s2(e25)) : s2(e25);
        }, [s2, c2]);
        a8.useLayoutEffect(() => r25.subscribe(d2), [r25, d2]);
        let p2 = a8.useMemo(() => ({ createHref: r25.createHref, encodeLocation: r25.encodeLocation, go: (e25) => r25.navigate(e25), push: (e25, t19, n3) => r25.navigate(e25, { state: t19, preventScrollReset: n3 == null ? void 0 : n3.preventScrollReset }), replace: (e25, t19, n3) => r25.navigate(e25, { replace: !0, state: t19, preventScrollReset: n3 == null ? void 0 : n3.preventScrollReset }) }), [r25]), m2 = r25.basename || "/", h2 = a8.useMemo(() => ({ router: r25, navigator: p2, static: !1, basename: m2 }), [r25, p2, m2]);
        return a8.createElement(a8.Fragment, null, a8.createElement(u.Provider, { value: h2 }, a8.createElement(l9.Provider, { value: o4 }, a8.createElement(T, { basename: m2, location: o4.location, navigationType: o4.historyAction, navigator: p2 }, o4.initialized ? a8.createElement(M, { routes: r25.routes, state: o4 }) : t18))), null);
      }, e23.Routes = function(e24) {
        let { children: t18, location: r25 } = e24;
        return R(z(t18), r25);
      }, e23.UNSAFE_DataRouterContext = u, e23.UNSAFE_DataRouterStateContext = l9, e23.UNSAFE_LocationContext = d, e23.UNSAFE_NavigationContext = c, e23.UNSAFE_RouteContext = p, e23.UNSAFE_mapRouteProperties = q, e23.UNSAFE_startTransitionImpl = i13, e23.UNSAFE_useRouteId = function() {
        return F(A.UseRouteId);
      }, e23.UNSAFE_useRoutesImpl = C, e23.createMemoryRouter = function(e24, t18) {
        return r24.createRouter({ basename: t18 == null ? void 0 : t18.basename, future: o3({}, t18 == null ? void 0 : t18.future, { v7_prependBasename: !0 }), history: r24.createMemoryHistory({ initialEntries: t18 == null ? void 0 : t18.initialEntries, initialIndex: t18 == null ? void 0 : t18.initialIndex }), hydrationData: t18 == null ? void 0 : t18.hydrationData, routes: e24, mapRouteProperties: q }).initialize();
      }, e23.createRoutesFromChildren = z, e23.createRoutesFromElements = z, e23.renderMatches = function(e24) {
        return _(e24);
      }, e23.unstable_useBlocker = function(e24) {
        let { router: t18 } = O(N.UseBlocker), r25 = j(A.UseBlocker), [n2] = a8.useState(() => String(++k)), o4 = a8.useCallback((t19) => typeof e24 == "function" ? !!e24(t19) : !!e24, [e24]), i14 = t18.getBlocker(n2, o4);
        return a8.useEffect(() => () => t18.deleteBlocker(n2), [t18, n2]), r25.blockers.get(n2) || i14;
      }, e23.useActionData = function() {
        let e24 = j(A.UseActionData);
        return a8.useContext(p) || r24.UNSAFE_invariant(!1), Object.values((e24 == null ? void 0 : e24.actionData) || {})[0];
      }, e23.useAsyncError = function() {
        let e24 = a8.useContext(s);
        return e24 == null ? void 0 : e24._error;
      }, e23.useAsyncValue = B, e23.useHref = function(e24, t18) {
        let { relative: n2 } = t18 === void 0 ? {} : t18;
        h() || r24.UNSAFE_invariant(!1);
        let { basename: o4, navigator: i14 } = a8.useContext(c), { hash: u2, pathname: l10, search: s2 } = b(e24, { relative: n2 }), d2 = l10;
        return o4 !== "/" && (d2 = l10 === "/" ? o4 : r24.joinPaths([o4, l10])), i14.createHref({ pathname: d2, search: s2, hash: u2 });
      }, e23.useInRouterContext = h, e23.useLoaderData = function() {
        let e24 = j(A.UseLoaderData), t18 = F(A.UseLoaderData);
        if (!e24.errors || e24.errors[t18] == null)
          return e24.loaderData[t18];
        console.error("You cannot `useLoaderData` in an errorElement (routeId: " + t18 + ")");
      }, e23.useLocation = f, e23.useMatch = function(e24) {
        h() || r24.UNSAFE_invariant(!1);
        let { pathname: t18 } = f();
        return a8.useMemo(() => r24.matchPath(e24, t18), [t18, e24]);
      }, e23.useMatches = function() {
        let { matches: e24, loaderData: t18 } = j(A.UseMatches);
        return a8.useMemo(() => e24.map((e25) => {
          let { pathname: r25, params: n2 } = e25;
          return { id: e25.route.id, pathname: r25, params: n2, data: t18[e25.route.id], handle: e25.route.handle };
        }), [e24, t18]);
      }, e23.useNavigate = g, e23.useNavigation = function() {
        return j(A.UseNavigation).navigation;
      }, e23.useNavigationType = function() {
        return a8.useContext(d).navigationType;
      }, e23.useOutlet = y, e23.useOutletContext = function() {
        return a8.useContext(E);
      }, e23.useParams = function() {
        let { matches: e24 } = a8.useContext(p), t18 = e24[e24.length - 1];
        return t18 ? t18.params : {};
      }, e23.useResolvedPath = b, e23.useRevalidator = function() {
        let e24 = O(N.UseRevalidator), t18 = j(A.UseRevalidator);
        return { revalidate: e24.router.revalidate, state: t18.revalidation };
      }, e23.useRouteError = D, e23.useRouteLoaderData = function(e24) {
        return j(A.UseRouteLoaderData).loaderData[e24];
      }, e23.useRoutes = R, Object.defineProperty(e23, "__esModule", { value: !0 });
    });
  }
});

// ../../../node_modules/react-router/dist/main.js
var require_main = __commonJS({
  "../../../node_modules/react-router/dist/main.js"(exports, module2) {
    "use strict";
    module2.exports = require_react_router_production_min();
  }
});

// ../../../node_modules/react-router-dom/dist/umd/react-router-dom.production.min.js
var require_react_router_dom_production_min = __commonJS({
  "../../../node_modules/react-router-dom/dist/umd/react-router-dom.production.min.js"(exports, module2) {
    (function(e23, t17) {
      typeof exports == "object" && typeof module2 < "u" ? t17(exports, require_react(), require_main(), require_router_cjs2()) : typeof define == "function" && define.amd ? define(["exports", "react", "react-router", "@remix-run/router"], t17) : t17((e23 = typeof globalThis < "u" ? globalThis : e23 || self).ReactRouterDOM = {}, e23.React, e23.ReactRouter, e23.RemixRouter);
    })(exports, function(e23, t17, r24, n) {
      "use strict";
      function o3(e24) {
        if (e24 && e24.__esModule)
          return e24;
        var t18 = /* @__PURE__ */ Object.create(null);
        return e24 && Object.keys(e24).forEach(function(r25) {
          if (r25 !== "default") {
            var n2 = Object.getOwnPropertyDescriptor(e24, r25);
            Object.defineProperty(t18, r25, n2.get ? n2 : { enumerable: !0, get: function() {
              return e24[r25];
            } });
          }
        }), t18.default = e24, Object.freeze(t18);
      }
      var a8 = o3(t17);
      function u() {
        return u = Object.assign ? Object.assign.bind() : function(e24) {
          for (var t18 = 1; t18 < arguments.length; t18++) {
            var r25 = arguments[t18];
            for (var n2 in r25)
              Object.prototype.hasOwnProperty.call(r25, n2) && (e24[n2] = r25[n2]);
          }
          return e24;
        }, u.apply(this, arguments);
      }
      function i13(e24, t18) {
        if (e24 == null)
          return {};
        var r25, n2, o4 = {}, a9 = Object.keys(e24);
        for (n2 = 0; n2 < a9.length; n2++)
          r25 = a9[n2], t18.indexOf(r25) >= 0 || (o4[r25] = e24[r25]);
        return o4;
      }
      let c = "get", s = "application/x-www-form-urlencoded";
      function l9(e24) {
        return e24 != null && typeof e24.tagName == "string";
      }
      function f(e24) {
        return e24 === void 0 && (e24 = ""), new URLSearchParams(typeof e24 == "string" || Array.isArray(e24) || e24 instanceof URLSearchParams ? e24 : Object.keys(e24).reduce((t18, r25) => {
          let n2 = e24[r25];
          return t18.concat(Array.isArray(n2) ? n2.map((e25) => [r25, e25]) : [[r25, n2]]);
        }, []));
      }
      function d(e24, t18, r25) {
        let o4, a9, u2, i14 = null;
        if (l9(f2 = e24) && f2.tagName.toLowerCase() === "form") {
          let l10 = t18.submissionTrigger;
          if (t18.action)
            i14 = t18.action;
          else {
            let t19 = e24.getAttribute("action");
            i14 = t19 ? n.stripBasename(t19, r25) : null;
          }
          o4 = t18.method || e24.getAttribute("method") || c, a9 = t18.encType || e24.getAttribute("enctype") || s, u2 = new FormData(e24), l10 && l10.name && u2.append(l10.name, l10.value);
        } else if (function(e25) {
          return l9(e25) && e25.tagName.toLowerCase() === "button";
        }(e24) || function(e25) {
          return l9(e25) && e25.tagName.toLowerCase() === "input";
        }(e24) && (e24.type === "submit" || e24.type === "image")) {
          let l10 = e24.form;
          if (l10 == null)
            throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
          if (t18.action)
            i14 = t18.action;
          else {
            let t19 = e24.getAttribute("formaction") || l10.getAttribute("action");
            i14 = t19 ? n.stripBasename(t19, r25) : null;
          }
          o4 = t18.method || e24.getAttribute("formmethod") || l10.getAttribute("method") || c, a9 = t18.encType || e24.getAttribute("formenctype") || l10.getAttribute("enctype") || s, u2 = new FormData(l10), e24.name && u2.append(e24.name, e24.value);
        } else {
          if (l9(e24))
            throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
          if (o4 = t18.method || c, i14 = t18.action || null, a9 = t18.encType || s, e24 instanceof FormData)
            u2 = e24;
          else if (u2 = new FormData(), e24 instanceof URLSearchParams)
            for (let [t19, r26] of e24)
              u2.append(t19, r26);
          else if (e24 != null)
            for (let t19 of Object.keys(e24))
              u2.append(t19, e24[t19]);
        }
        var f2;
        return { action: i14, method: o4.toLowerCase(), encType: a9, formData: u2 };
      }
      let m = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"], p = ["aria-current", "caseSensitive", "className", "end", "style", "to", "children"], b = ["reloadDocument", "replace", "method", "action", "onSubmit", "fetcherKey", "routeId", "relative", "preventScrollReset"];
      function g() {
        var e24;
        let t18 = (e24 = window) == null ? void 0 : e24.__staticRouterHydrationData;
        return t18 && t18.errors && (t18 = u({}, t18, { errors: h(t18.errors) })), t18;
      }
      function h(e24) {
        if (!e24)
          return null;
        let t18 = Object.entries(e24), r25 = {};
        for (let [e25, o4] of t18)
          if (o4 && o4.__type === "RouteErrorResponse")
            r25[e25] = new n.ErrorResponse(o4.status, o4.statusText, o4.data, o4.internal === !0);
          else if (o4 && o4.__type === "Error") {
            let t19 = new Error(o4.message);
            t19.stack = "", r25[e25] = t19;
          } else
            r25[e25] = o4;
        return r25;
      }
      let y = typeof window < "u" && window.document !== void 0 && window.document.createElement !== void 0, v = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, R = a8.forwardRef(function(e24, t18) {
        let o4, { onClick: c2, relative: s2, reloadDocument: l10, replace: f2, state: d2, target: p2, to: b2, preventScrollReset: g2 } = e24, h2 = i13(e24, m), { basename: R2 } = a8.useContext(r24.UNSAFE_NavigationContext), w2 = !1;
        if (typeof b2 == "string" && v.test(b2) && (o4 = b2, y))
          try {
            let e25 = new URL(window.location.href), t19 = b2.startsWith("//") ? new URL(e25.protocol + b2) : new URL(b2), r25 = n.stripBasename(t19.pathname, R2);
            t19.origin === e25.origin && r25 != null ? b2 = r25 + t19.search + t19.hash : w2 = !0;
          } catch {
          }
        let P2 = r24.useHref(b2, { relative: s2 }), S2 = j(b2, { replace: f2, state: d2, target: p2, preventScrollReset: g2, relative: s2 });
        return a8.createElement("a", u({}, h2, { href: o4 || P2, onClick: w2 || l10 ? c2 : function(e25) {
          c2 && c2(e25), e25.defaultPrevented || S2(e25);
        }, ref: t18, target: p2 }));
      }), w = a8.forwardRef(function(e24, t18) {
        let { "aria-current": n2 = "page", caseSensitive: o4 = !1, className: c2 = "", end: s2 = !1, style: l10, to: f2, children: d2 } = e24, m2 = i13(e24, p), b2 = r24.useResolvedPath(f2, { relative: m2.relative }), g2 = r24.useLocation(), h2 = a8.useContext(r24.UNSAFE_DataRouterStateContext), { navigator: y2 } = a8.useContext(r24.UNSAFE_NavigationContext), v2 = y2.encodeLocation ? y2.encodeLocation(b2).pathname : b2.pathname, w2 = g2.pathname, P2 = h2 && h2.navigation && h2.navigation.location ? h2.navigation.location.pathname : null;
        o4 || (w2 = w2.toLowerCase(), P2 = P2 ? P2.toLowerCase() : null, v2 = v2.toLowerCase());
        let S2, E2 = w2 === v2 || !s2 && w2.startsWith(v2) && w2.charAt(v2.length) === "/", O2 = P2 != null && (P2 === v2 || !s2 && P2.startsWith(v2) && P2.charAt(v2.length) === "/"), A2 = E2 ? n2 : void 0;
        S2 = typeof c2 == "function" ? c2({ isActive: E2, isPending: O2 }) : [c2, E2 ? "active" : null, O2 ? "pending" : null].filter(Boolean).join(" ");
        let N2 = typeof l10 == "function" ? l10({ isActive: E2, isPending: O2 }) : l10;
        return a8.createElement(R, u({}, m2, { "aria-current": A2, className: S2, ref: t18, style: N2, to: f2 }), typeof d2 == "function" ? d2({ isActive: E2, isPending: O2 }) : d2);
      }), P = a8.forwardRef((e24, t18) => a8.createElement(S, u({}, e24, { ref: t18 }))), S = a8.forwardRef((e24, t18) => {
        let { reloadDocument: r25, replace: n2, method: o4 = c, action: s2, onSubmit: l10, fetcherKey: f2, routeId: d2, relative: m2, preventScrollReset: p2 } = e24, g2 = i13(e24, b), h2 = F(f2, d2), y2 = o4.toLowerCase() === "get" ? "get" : "post", v2 = _(s2, { relative: m2 });
        return a8.createElement("form", u({ ref: t18, method: y2, action: v2, onSubmit: r25 ? l10 : (e25) => {
          if (l10 && l10(e25), e25.defaultPrevented)
            return;
          e25.preventDefault();
          let t19 = e25.nativeEvent.submitter, r26 = (t19 == null ? void 0 : t19.getAttribute("formmethod")) || o4;
          h2(t19 || e25.currentTarget, { method: r26, replace: n2, relative: m2, preventScrollReset: p2 });
        } }, g2));
      });
      var E, O;
      function A(e24) {
        let t18 = a8.useContext(r24.UNSAFE_DataRouterContext);
        return t18 || n.UNSAFE_invariant(!1), t18;
      }
      function N(e24) {
        let t18 = a8.useContext(r24.UNSAFE_DataRouterStateContext);
        return t18 || n.UNSAFE_invariant(!1), t18;
      }
      function j(e24, t18) {
        let { target: n2, replace: o4, state: u2, preventScrollReset: i14, relative: c2 } = t18 === void 0 ? {} : t18, s2 = r24.useNavigate(), l10 = r24.useLocation(), f2 = r24.useResolvedPath(e24, { relative: c2 });
        return a8.useCallback((t19) => {
          if (function(e25, t20) {
            return !(e25.button !== 0 || t20 && t20 !== "_self" || function(e26) {
              return !!(e26.metaKey || e26.altKey || e26.ctrlKey || e26.shiftKey);
            }(e25));
          }(t19, n2)) {
            t19.preventDefault();
            let n3 = o4 !== void 0 ? o4 : r24.createPath(l10) === r24.createPath(f2);
            s2(e24, { replace: n3, state: u2, preventScrollReset: i14, relative: c2 });
          }
        }, [l10, s2, f2, o4, u2, n2, e24, i14, c2]);
      }
      function F(e24, t18) {
        let { router: o4 } = A(E.UseSubmitImpl), { basename: i14 } = a8.useContext(r24.UNSAFE_NavigationContext), c2 = r24.UNSAFE_useRouteId();
        return a8.useCallback(function(r25, a9) {
          if (a9 === void 0 && (a9 = {}), typeof document > "u")
            throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
          let { action: s2, method: l10, encType: f2, formData: m2 } = d(r25, a9, i14), p2 = { preventScrollReset: a9.preventScrollReset, formData: m2, formMethod: l10, formEncType: f2 };
          e24 ? (t18 == null && n.UNSAFE_invariant(!1), o4.fetch(e24, t18, s2, p2)) : o4.navigate(s2, u({}, p2, { replace: a9.replace, fromRouteId: c2 }));
        }, [o4, i14, e24, t18, c2]);
      }
      function _(e24, t18) {
        let { relative: o4 } = t18 === void 0 ? {} : t18, { basename: i14 } = a8.useContext(r24.UNSAFE_NavigationContext), c2 = a8.useContext(r24.UNSAFE_RouteContext);
        c2 || n.UNSAFE_invariant(!1);
        let [s2] = c2.matches.slice(-1), l10 = u({}, r24.useResolvedPath(e24 || ".", { relative: o4 })), f2 = r24.useLocation();
        if (e24 == null && (l10.search = f2.search, l10.hash = f2.hash, s2.route.index)) {
          let e25 = new URLSearchParams(l10.search);
          e25.delete("index"), l10.search = e25.toString() ? "?" + e25.toString() : "";
        }
        return e24 && e24 !== "." || !s2.route.index || (l10.search = l10.search ? l10.search.replace(/^\?/, "?index&") : "?index"), i14 !== "/" && (l10.pathname = l10.pathname === "/" ? i14 : n.joinPaths([i14, l10.pathname])), r24.createPath(l10);
      }
      (function(e24) {
        e24.UseScrollRestoration = "useScrollRestoration", e24.UseSubmitImpl = "useSubmitImpl", e24.UseFetcher = "useFetcher";
      })(E || (E = {})), function(e24) {
        e24.UseFetchers = "useFetchers", e24.UseScrollRestoration = "useScrollRestoration";
      }(O || (O = {}));
      let U = 0, C = "react-router-scroll-positions", x = {};
      function L(e24) {
        let { getKey: t18, storageKey: n2 } = e24 === void 0 ? {} : e24, { router: o4 } = A(E.UseScrollRestoration), { restoreScrollPosition: u2, preventScrollReset: i14 } = N(O.UseScrollRestoration), c2 = r24.useLocation(), s2 = r24.useMatches(), l10 = r24.useNavigation();
        a8.useEffect(() => (window.history.scrollRestoration = "manual", () => {
          window.history.scrollRestoration = "auto";
        }), []), function(e25, t19) {
          let { capture: r25 } = t19 || {};
          a8.useEffect(() => {
            let t20 = r25 != null ? { capture: r25 } : void 0;
            return window.addEventListener("pagehide", e25, t20), () => {
              window.removeEventListener("pagehide", e25, t20);
            };
          }, [e25, r25]);
        }(a8.useCallback(() => {
          if (l10.state === "idle") {
            let e25 = (t18 ? t18(c2, s2) : null) || c2.key;
            x[e25] = window.scrollY;
          }
          sessionStorage.setItem(n2 || C, JSON.stringify(x)), window.history.scrollRestoration = "auto";
        }, [n2, t18, l10.state, c2, s2])), typeof document < "u" && (a8.useLayoutEffect(() => {
          try {
            let e25 = sessionStorage.getItem(n2 || C);
            e25 && (x = JSON.parse(e25));
          } catch {
          }
        }, [n2]), a8.useLayoutEffect(() => {
          let e25 = o4 == null ? void 0 : o4.enableScrollRestoration(x, () => window.scrollY, t18);
          return () => e25 && e25();
        }, [o4, t18]), a8.useLayoutEffect(() => {
          if (u2 !== !1)
            if (typeof u2 != "number") {
              if (c2.hash) {
                let e25 = document.getElementById(c2.hash.slice(1));
                if (e25)
                  return void e25.scrollIntoView();
              }
              i14 !== !0 && window.scrollTo(0, 0);
            } else
              window.scrollTo(0, u2);
        }, [c2, u2, i14]));
      }
      Object.defineProperty(e23, "AbortedDeferredError", { enumerable: !0, get: function() {
        return r24.AbortedDeferredError;
      } }), Object.defineProperty(e23, "Await", { enumerable: !0, get: function() {
        return r24.Await;
      } }), Object.defineProperty(e23, "MemoryRouter", { enumerable: !0, get: function() {
        return r24.MemoryRouter;
      } }), Object.defineProperty(e23, "Navigate", { enumerable: !0, get: function() {
        return r24.Navigate;
      } }), Object.defineProperty(e23, "NavigationType", { enumerable: !0, get: function() {
        return r24.NavigationType;
      } }), Object.defineProperty(e23, "Outlet", { enumerable: !0, get: function() {
        return r24.Outlet;
      } }), Object.defineProperty(e23, "Route", { enumerable: !0, get: function() {
        return r24.Route;
      } }), Object.defineProperty(e23, "Router", { enumerable: !0, get: function() {
        return r24.Router;
      } }), Object.defineProperty(e23, "RouterProvider", { enumerable: !0, get: function() {
        return r24.RouterProvider;
      } }), Object.defineProperty(e23, "Routes", { enumerable: !0, get: function() {
        return r24.Routes;
      } }), Object.defineProperty(e23, "UNSAFE_DataRouterContext", { enumerable: !0, get: function() {
        return r24.UNSAFE_DataRouterContext;
      } }), Object.defineProperty(e23, "UNSAFE_DataRouterStateContext", { enumerable: !0, get: function() {
        return r24.UNSAFE_DataRouterStateContext;
      } }), Object.defineProperty(e23, "UNSAFE_LocationContext", { enumerable: !0, get: function() {
        return r24.UNSAFE_LocationContext;
      } }), Object.defineProperty(e23, "UNSAFE_NavigationContext", { enumerable: !0, get: function() {
        return r24.UNSAFE_NavigationContext;
      } }), Object.defineProperty(e23, "UNSAFE_RouteContext", { enumerable: !0, get: function() {
        return r24.UNSAFE_RouteContext;
      } }), Object.defineProperty(e23, "UNSAFE_useRouteId", { enumerable: !0, get: function() {
        return r24.UNSAFE_useRouteId;
      } }), Object.defineProperty(e23, "createMemoryRouter", { enumerable: !0, get: function() {
        return r24.createMemoryRouter;
      } }), Object.defineProperty(e23, "createPath", { enumerable: !0, get: function() {
        return r24.createPath;
      } }), Object.defineProperty(e23, "createRoutesFromChildren", { enumerable: !0, get: function() {
        return r24.createRoutesFromChildren;
      } }), Object.defineProperty(e23, "createRoutesFromElements", { enumerable: !0, get: function() {
        return r24.createRoutesFromElements;
      } }), Object.defineProperty(e23, "defer", { enumerable: !0, get: function() {
        return r24.defer;
      } }), Object.defineProperty(e23, "generatePath", { enumerable: !0, get: function() {
        return r24.generatePath;
      } }), Object.defineProperty(e23, "isRouteErrorResponse", { enumerable: !0, get: function() {
        return r24.isRouteErrorResponse;
      } }), Object.defineProperty(e23, "json", { enumerable: !0, get: function() {
        return r24.json;
      } }), Object.defineProperty(e23, "matchPath", { enumerable: !0, get: function() {
        return r24.matchPath;
      } }), Object.defineProperty(e23, "matchRoutes", { enumerable: !0, get: function() {
        return r24.matchRoutes;
      } }), Object.defineProperty(e23, "parsePath", { enumerable: !0, get: function() {
        return r24.parsePath;
      } }), Object.defineProperty(e23, "redirect", { enumerable: !0, get: function() {
        return r24.redirect;
      } }), Object.defineProperty(e23, "renderMatches", { enumerable: !0, get: function() {
        return r24.renderMatches;
      } }), Object.defineProperty(e23, "resolvePath", { enumerable: !0, get: function() {
        return r24.resolvePath;
      } }), Object.defineProperty(e23, "unstable_useBlocker", { enumerable: !0, get: function() {
        return r24.unstable_useBlocker;
      } }), Object.defineProperty(e23, "useActionData", { enumerable: !0, get: function() {
        return r24.useActionData;
      } }), Object.defineProperty(e23, "useAsyncError", { enumerable: !0, get: function() {
        return r24.useAsyncError;
      } }), Object.defineProperty(e23, "useAsyncValue", { enumerable: !0, get: function() {
        return r24.useAsyncValue;
      } }), Object.defineProperty(e23, "useHref", { enumerable: !0, get: function() {
        return r24.useHref;
      } }), Object.defineProperty(e23, "useInRouterContext", { enumerable: !0, get: function() {
        return r24.useInRouterContext;
      } }), Object.defineProperty(e23, "useLoaderData", { enumerable: !0, get: function() {
        return r24.useLoaderData;
      } }), Object.defineProperty(e23, "useLocation", { enumerable: !0, get: function() {
        return r24.useLocation;
      } }), Object.defineProperty(e23, "useMatch", { enumerable: !0, get: function() {
        return r24.useMatch;
      } }), Object.defineProperty(e23, "useMatches", { enumerable: !0, get: function() {
        return r24.useMatches;
      } }), Object.defineProperty(e23, "useNavigate", { enumerable: !0, get: function() {
        return r24.useNavigate;
      } }), Object.defineProperty(e23, "useNavigation", { enumerable: !0, get: function() {
        return r24.useNavigation;
      } }), Object.defineProperty(e23, "useNavigationType", { enumerable: !0, get: function() {
        return r24.useNavigationType;
      } }), Object.defineProperty(e23, "useOutlet", { enumerable: !0, get: function() {
        return r24.useOutlet;
      } }), Object.defineProperty(e23, "useOutletContext", { enumerable: !0, get: function() {
        return r24.useOutletContext;
      } }), Object.defineProperty(e23, "useParams", { enumerable: !0, get: function() {
        return r24.useParams;
      } }), Object.defineProperty(e23, "useResolvedPath", { enumerable: !0, get: function() {
        return r24.useResolvedPath;
      } }), Object.defineProperty(e23, "useRevalidator", { enumerable: !0, get: function() {
        return r24.useRevalidator;
      } }), Object.defineProperty(e23, "useRouteError", { enumerable: !0, get: function() {
        return r24.useRouteError;
      } }), Object.defineProperty(e23, "useRouteLoaderData", { enumerable: !0, get: function() {
        return r24.useRouteLoaderData;
      } }), Object.defineProperty(e23, "useRoutes", { enumerable: !0, get: function() {
        return r24.useRoutes;
      } }), e23.BrowserRouter = function(e24) {
        let { basename: t18, children: o4, future: u2, window: i14 } = e24, c2 = a8.useRef();
        c2.current == null && (c2.current = n.createBrowserHistory({ window: i14, v5Compat: !0 }));
        let s2 = c2.current, [l10, f2] = a8.useState({ action: s2.action, location: s2.location }), { v7_startTransition: d2 } = u2 || {}, m2 = a8.useCallback((e25) => {
          d2 && r24.UNSAFE_startTransitionImpl ? r24.UNSAFE_startTransitionImpl(() => f2(e25)) : f2(e25);
        }, [f2, d2]);
        return a8.useLayoutEffect(() => s2.listen(m2), [s2, m2]), a8.createElement(r24.Router, { basename: t18, children: o4, location: l10.location, navigationType: l10.action, navigator: s2 });
      }, e23.Form = P, e23.HashRouter = function(e24) {
        let { basename: t18, children: o4, future: u2, window: i14 } = e24, c2 = a8.useRef();
        c2.current == null && (c2.current = n.createHashHistory({ window: i14, v5Compat: !0 }));
        let s2 = c2.current, [l10, f2] = a8.useState({ action: s2.action, location: s2.location }), { v7_startTransition: d2 } = u2 || {}, m2 = a8.useCallback((e25) => {
          d2 && r24.UNSAFE_startTransitionImpl ? r24.UNSAFE_startTransitionImpl(() => f2(e25)) : f2(e25);
        }, [f2, d2]);
        return a8.useLayoutEffect(() => s2.listen(m2), [s2, m2]), a8.createElement(r24.Router, { basename: t18, children: o4, location: l10.location, navigationType: l10.action, navigator: s2 });
      }, e23.Link = R, e23.NavLink = w, e23.ScrollRestoration = function(e24) {
        let { getKey: t18, storageKey: r25 } = e24;
        return L({ getKey: t18, storageKey: r25 }), null;
      }, e23.UNSAFE_useScrollRestoration = L, e23.createBrowserRouter = function(e24, t18) {
        return n.createRouter({ basename: t18 == null ? void 0 : t18.basename, future: u({}, t18 == null ? void 0 : t18.future, { v7_prependBasename: !0 }), history: n.createBrowserHistory({ window: t18 == null ? void 0 : t18.window }), hydrationData: (t18 == null ? void 0 : t18.hydrationData) || g(), routes: e24, mapRouteProperties: r24.UNSAFE_mapRouteProperties }).initialize();
      }, e23.createHashRouter = function(e24, t18) {
        return n.createRouter({ basename: t18 == null ? void 0 : t18.basename, future: u({}, t18 == null ? void 0 : t18.future, { v7_prependBasename: !0 }), history: n.createHashHistory({ window: t18 == null ? void 0 : t18.window }), hydrationData: (t18 == null ? void 0 : t18.hydrationData) || g(), routes: e24, mapRouteProperties: r24.UNSAFE_mapRouteProperties }).initialize();
      }, e23.createSearchParams = f, e23.unstable_HistoryRouter = function(e24) {
        let { basename: t18, children: n2, future: o4, history: u2 } = e24, [i14, c2] = a8.useState({ action: u2.action, location: u2.location }), { v7_startTransition: s2 } = o4 || {}, l10 = a8.useCallback((e25) => {
          s2 && r24.UNSAFE_startTransitionImpl ? r24.UNSAFE_startTransitionImpl(() => c2(e25)) : c2(e25);
        }, [c2, s2]);
        return a8.useLayoutEffect(() => u2.listen(l10), [u2, l10]), a8.createElement(r24.Router, { basename: t18, children: n2, location: i14.location, navigationType: i14.action, navigator: u2 });
      }, e23.unstable_usePrompt = function(e24) {
        let { when: t18, message: n2 } = e24, o4 = r24.unstable_useBlocker(t18);
        a8.useEffect(() => {
          o4.state !== "blocked" || t18 || o4.reset();
        }, [o4, t18]), a8.useEffect(() => {
          o4.state === "blocked" && (window.confirm(n2) ? setTimeout(o4.proceed, 0) : o4.reset());
        }, [o4, n2]);
      }, e23.useBeforeUnload = function(e24, t18) {
        let { capture: r25 } = t18 || {};
        a8.useEffect(() => {
          let t19 = r25 != null ? { capture: r25 } : void 0;
          return window.addEventListener("beforeunload", e24, t19), () => {
            window.removeEventListener("beforeunload", e24, t19);
          };
        }, [e24, r25]);
      }, e23.useFetcher = function() {
        var e24;
        let { router: t18 } = A(E.UseFetcher), o4 = a8.useContext(r24.UNSAFE_RouteContext);
        o4 || n.UNSAFE_invariant(!1);
        let i14 = (e24 = o4.matches[o4.matches.length - 1]) == null ? void 0 : e24.route.id;
        i14 == null && n.UNSAFE_invariant(!1);
        let [c2] = a8.useState(() => String(++U)), [s2] = a8.useState(() => (i14 || n.UNSAFE_invariant(!1), function(e25, t19) {
          return a8.forwardRef((r25, n2) => a8.createElement(S, u({}, r25, { ref: n2, fetcherKey: e25, routeId: t19 })));
        }(c2, i14))), [l10] = a8.useState(() => (e25) => {
          t18 || n.UNSAFE_invariant(!1), i14 || n.UNSAFE_invariant(!1), t18.fetch(c2, i14, e25);
        }), f2 = F(c2, i14), d2 = t18.getFetcher(c2), m2 = a8.useMemo(() => u({ Form: s2, submit: f2, load: l10 }, d2), [d2, s2, f2, l10]);
        return a8.useEffect(() => () => {
          t18 ? t18.deleteFetcher(c2) : console.warn("No router available to clean up from useFetcher()");
        }, [t18, c2]), m2;
      }, e23.useFetchers = function() {
        return [...N(O.UseFetchers).fetchers.values()];
      }, e23.useFormAction = _, e23.useLinkClickHandler = j, e23.useSearchParams = function(e24) {
        let t18 = a8.useRef(f(e24)), n2 = a8.useRef(!1), o4 = r24.useLocation(), u2 = a8.useMemo(() => function(e25, t19) {
          let r25 = f(e25);
          if (t19)
            for (let e26 of t19.keys())
              r25.has(e26) || t19.getAll(e26).forEach((t20) => {
                r25.append(e26, t20);
              });
          return r25;
        }(o4.search, n2.current ? null : t18.current), [o4.search]), i14 = r24.useNavigate(), c2 = a8.useCallback((e25, t19) => {
          let r25 = f(typeof e25 == "function" ? e25(u2) : e25);
          n2.current = !0, i14("?" + r25, t19);
        }, [i14, u2]);
        return [u2, c2];
      }, e23.useSubmit = function() {
        return F();
      }, Object.defineProperty(e23, "__esModule", { value: !0 });
    });
  }
});

// ../../../node_modules/react-router-dom/dist/main.js
var require_main2 = __commonJS({
  "../../../node_modules/react-router-dom/dist/main.js"(exports, module2) {
    "use strict";
    module2.exports = require_react_router_dom_production_min();
  }
});

// ../../../node_modules/@remix-run/react/dist/_virtual/_rollupPluginBabelHelpers.js
var require_rollupPluginBabelHelpers = __commonJS({
  "../../../node_modules/@remix-run/react/dist/_virtual/_rollupPluginBabelHelpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _extends2() {
      return _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i13 = 1; i13 < arguments.length; i13++) {
          var source = arguments[i13];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends2.apply(this, arguments);
    }
    exports.extends = _extends2;
  }
});

// ../../../node_modules/@remix-run/react/dist/errorBoundaries.js
var require_errorBoundaries = __commonJS({
  "../../../node_modules/@remix-run/react/dist/errorBoundaries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React10 = require_react(), reactRouterDom = require_main2();
    function _interopDefaultLegacy(e23) {
      return e23 && typeof e23 == "object" && "default" in e23 ? e23 : { default: e23 };
    }
    var React__default2 = /* @__PURE__ */ _interopDefaultLegacy(React10), RemixErrorBoundary = class extends React__default2.default.Component {
      constructor(props) {
        super(props), this.state = {
          error: props.error || null,
          location: props.location
        };
      }
      static getDerivedStateFromError(error2) {
        return {
          error: error2
        };
      }
      static getDerivedStateFromProps(props, state) {
        return state.location !== props.location ? {
          error: props.error || null,
          location: props.location
        } : {
          error: props.error || state.error,
          location: state.location
        };
      }
      render() {
        return this.state.error ? /* @__PURE__ */ React__default2.default.createElement(this.props.component, {
          error: this.state.error
        }) : this.props.children;
      }
    };
    function RemixRootDefaultErrorBoundary({
      error: error2
    }) {
      return React__default2.default.useEffect(() => {
        console.error(error2);
      }, [error2]), /* @__PURE__ */ React__default2.default.createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React__default2.default.createElement("head", null, /* @__PURE__ */ React__default2.default.createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React__default2.default.createElement("meta", {
        name: "viewport",
        content: "width=device-width, initial-scale=1, viewport-fit=cover"
      }), /* @__PURE__ */ React__default2.default.createElement("title", null, "Application Error!")), /* @__PURE__ */ React__default2.default.createElement("body", null, /* @__PURE__ */ React__default2.default.createElement("main", {
        style: {
          fontFamily: "system-ui, sans-serif",
          padding: "2rem"
        }
      }, /* @__PURE__ */ React__default2.default.createElement("h1", {
        style: {
          fontSize: "24px"
        }
      }, "Application Error"), error2.stack ? /* @__PURE__ */ React__default2.default.createElement("pre", {
        style: {
          padding: "2rem",
          background: "hsla(10, 50%, 50%, 0.1)",
          color: "red",
          overflow: "auto"
        }
      }, error2.stack) : null), /* @__PURE__ */ React__default2.default.createElement("script", {
        dangerouslySetInnerHTML: {
          __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
              );
            `
        }
      })));
    }
    function V2_RemixRootDefaultErrorBoundary() {
      let error2 = reactRouterDom.useRouteError();
      if (reactRouterDom.isRouteErrorResponse(error2))
        return /* @__PURE__ */ React__default2.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
          caught: error2
        });
      if (error2 instanceof Error)
        return /* @__PURE__ */ React__default2.default.createElement(RemixRootDefaultErrorBoundary, {
          error: error2
        });
      {
        let errorString = error2 == null ? "Unknown Error" : typeof error2 == "object" && "toString" in error2 ? error2.toString() : JSON.stringify(error2);
        return /* @__PURE__ */ React__default2.default.createElement(RemixRootDefaultErrorBoundary, {
          error: new Error(errorString)
        });
      }
    }
    var RemixCatchContext = /* @__PURE__ */ React__default2.default.createContext(void 0);
    function useCatch() {
      return React10.useContext(RemixCatchContext);
    }
    function RemixCatchBoundary({
      catch: catchVal,
      component: Component,
      children
    }) {
      return catchVal ? /* @__PURE__ */ React__default2.default.createElement(RemixCatchContext.Provider, {
        value: catchVal
      }, /* @__PURE__ */ React__default2.default.createElement(Component, null)) : /* @__PURE__ */ React__default2.default.createElement(React__default2.default.Fragment, null, children);
    }
    function RemixRootDefaultCatchBoundary() {
      let caught = useCatch();
      return /* @__PURE__ */ React__default2.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
        caught
      });
    }
    function RemixRootDefaultCatchBoundaryImpl({
      caught
    }) {
      return /* @__PURE__ */ React__default2.default.createElement("html", {
        lang: "en"
      }, /* @__PURE__ */ React__default2.default.createElement("head", null, /* @__PURE__ */ React__default2.default.createElement("meta", {
        charSet: "utf-8"
      }), /* @__PURE__ */ React__default2.default.createElement("meta", {
        name: "viewport",
        content: "width=device-width, initial-scale=1, viewport-fit=cover"
      }), /* @__PURE__ */ React__default2.default.createElement("title", null, "Unhandled Thrown Response!")), /* @__PURE__ */ React__default2.default.createElement("body", null, /* @__PURE__ */ React__default2.default.createElement("h1", {
        style: {
          fontFamily: "system-ui, sans-serif",
          padding: "2rem"
        }
      }, caught.status, " ", caught.statusText), /* @__PURE__ */ React__default2.default.createElement("script", {
        dangerouslySetInnerHTML: {
          __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information."
              );
            `
        }
      })));
    }
    exports.RemixCatchBoundary = RemixCatchBoundary;
    exports.RemixErrorBoundary = RemixErrorBoundary;
    exports.RemixRootDefaultCatchBoundary = RemixRootDefaultCatchBoundary;
    exports.RemixRootDefaultErrorBoundary = RemixRootDefaultErrorBoundary;
    exports.V2_RemixRootDefaultErrorBoundary = V2_RemixRootDefaultErrorBoundary;
    exports.useCatch = useCatch;
  }
});

// ../../../node_modules/@remix-run/react/dist/invariant.js
var require_invariant2 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/invariant.js"(exports, module2) {
    "use strict";
    function invariant2(value, message2) {
      if (value === !1 || value === null || typeof value > "u")
        throw new Error(message2);
    }
    module2.exports = invariant2;
  }
});

// ../../../node_modules/@remix-run/react/dist/routeModules.js
var require_routeModules = __commonJS({
  "../../../node_modules/@remix-run/react/dist/routeModules.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    async function loadRouteModule(route, routeModulesCache) {
      if (route.id in routeModulesCache)
        return routeModulesCache[route.id];
      try {
        let routeModule = await function(t17) {
          return Promise.resolve().then(function() {
            return /* @__PURE__ */ _interopNamespace(require(t17));
          });
        }(
          /* webpackIgnore: true */
          route.module
        );
        return routeModulesCache[route.id] = routeModule, routeModule;
      } catch {
        return window.location.reload(), new Promise(() => {
        });
      }
    }
    exports.loadRouteModule = loadRouteModule;
  }
});

// ../../../node_modules/@remix-run/react/dist/links.js
var require_links = __commonJS({
  "../../../node_modules/@remix-run/react/dist/links.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var reactRouterDom = require_main2(), routeModules = require_routeModules();
    function getLinksForMatches(matches, routeModules2, manifest) {
      let descriptors = matches.map((match) => {
        var _module$links;
        let module3 = routeModules2[match.route.id];
        return ((_module$links = module3.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module3)) || [];
      }).flat(1), preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
      return dedupe(descriptors, preloads);
    }
    async function prefetchStyleLinks(routeModule) {
      if (!routeModule.links)
        return;
      let descriptors = routeModule.links();
      if (!descriptors)
        return;
      let styleLinks = [];
      for (let descriptor of descriptors)
        !isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet" && styleLinks.push({
          ...descriptor,
          rel: "preload",
          as: "style"
        });
      let matchingLinks = styleLinks.filter((link) => !link.media || window.matchMedia(link.media).matches);
      await Promise.all(matchingLinks.map(prefetchStyleLink));
    }
    async function prefetchStyleLink(descriptor) {
      return new Promise((resolve) => {
        let link = document.createElement("link");
        Object.assign(link, descriptor);
        function removeLink() {
          document.head.contains(link) && document.head.removeChild(link);
        }
        link.onload = () => {
          removeLink(), resolve();
        }, link.onerror = () => {
          removeLink(), resolve();
        }, document.head.appendChild(link);
      });
    }
    function isPageLinkDescriptor(object) {
      return object != null && typeof object.page == "string";
    }
    function isHtmlLinkDescriptor(object) {
      return object == null ? !1 : object.href == null ? object.rel === "preload" && (typeof object.imageSrcSet == "string" || typeof object.imagesrcset == "string") && (typeof object.imageSizes == "string" || typeof object.imagesizes == "string") : typeof object.rel == "string" && typeof object.href == "string";
    }
    async function getStylesheetPrefetchLinks(matches, manifest, routeModules$1) {
      return (await Promise.all(matches.map(async (match) => {
        let mod = await routeModules.loadRouteModule(manifest.routes[match.route.id], routeModules$1);
        return mod.links ? mod.links() : [];
      }))).flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map((link) => link.rel === "preload" ? {
        ...link,
        rel: "prefetch"
      } : {
        ...link,
        rel: "prefetch",
        as: "style"
      });
    }
    function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
      let path = parsePathPatch(page), isNew = (match, index2) => currentMatches[index2] ? match.route.id !== currentMatches[index2].route.id : !0, matchPathChanged = (match, index2) => {
        var _currentMatches$index;
        return (
          // param change, /users/123 -> /users/456
          currentMatches[index2].pathname !== match.pathname || // splat param changed, which is not present in match.path
          // e.g. /files/images/avatar.jpg -> files/finances.xls
          ((_currentMatches$index = currentMatches[index2].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith("*")) && currentMatches[index2].params["*"] !== match.params["*"]
        );
      };
      return mode === "data" && location.search !== path.search ? (
        // this is really similar to stuff in transition.ts, maybe somebody smarter
        // than me (or in less of a hurry) can share some of it. You're the best.
        nextMatches.filter((match, index2) => {
          if (!manifest.routes[match.route.id].hasLoader)
            return !1;
          if (isNew(match, index2) || matchPathChanged(match, index2))
            return !0;
          if (match.route.shouldRevalidate) {
            var _currentMatches$;
            let routeChoice = match.route.shouldRevalidate({
              currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),
              currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},
              nextUrl: new URL(page, window.origin),
              nextParams: match.params,
              defaultShouldRevalidate: !0
            });
            if (typeof routeChoice == "boolean")
              return routeChoice;
          }
          return !0;
        })
      ) : nextMatches.filter((match, index2) => {
        let manifestRoute = manifest.routes[match.route.id];
        return (mode === "assets" || manifestRoute.hasLoader) && (isNew(match, index2) || matchPathChanged(match, index2));
      });
    }
    function getDataLinkHrefs(page, matches, manifest) {
      let path = parsePathPatch(page);
      return dedupeHrefs(matches.filter((match) => manifest.routes[match.route.id].hasLoader).map((match) => {
        let {
          pathname,
          search
        } = path, searchParams = new URLSearchParams(search);
        return searchParams.set("_data", match.route.id), `${pathname}?${searchParams}`;
      }));
    }
    function getModuleLinkHrefs(matches, manifestPatch) {
      return dedupeHrefs(matches.map((match) => {
        let route = manifestPatch.routes[match.route.id], hrefs = [route.module];
        return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
      }).flat(1));
    }
    function getCurrentPageModulePreloadHrefs(matches, manifest) {
      return dedupeHrefs(matches.map((match) => {
        let route = manifest.routes[match.route.id], hrefs = [route.module];
        return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
      }).flat(1));
    }
    function dedupeHrefs(hrefs) {
      return [...new Set(hrefs)];
    }
    function dedupe(descriptors, preloads) {
      let set = /* @__PURE__ */ new Set(), preloadsSet = new Set(preloads);
      return descriptors.reduce((deduped, descriptor) => {
        if (!isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href))
          return deduped;
        let str = JSON.stringify(descriptor);
        return set.has(str) || (set.add(str), deduped.push(descriptor)), deduped;
      }, []);
    }
    function parsePathPatch(href) {
      let path = reactRouterDom.parsePath(href);
      return path.search === void 0 && (path.search = ""), path;
    }
    exports.dedupe = dedupe;
    exports.getDataLinkHrefs = getDataLinkHrefs;
    exports.getLinksForMatches = getLinksForMatches;
    exports.getModuleLinkHrefs = getModuleLinkHrefs;
    exports.getNewMatchesForLinks = getNewMatchesForLinks;
    exports.getStylesheetPrefetchLinks = getStylesheetPrefetchLinks;
    exports.isHtmlLinkDescriptor = isHtmlLinkDescriptor;
    exports.isPageLinkDescriptor = isPageLinkDescriptor;
    exports.prefetchStyleLinks = prefetchStyleLinks;
  }
});

// ../../../node_modules/@remix-run/react/dist/markup.js
var require_markup2 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/markup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
    function escapeHtml(html) {
      return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
    }
    function createHtml(html) {
      return {
        __html: html
      };
    }
    exports.createHtml = createHtml;
    exports.escapeHtml = escapeHtml;
  }
});

// ../../../node_modules/@remix-run/react/dist/transition.js
var require_transition = __commonJS({
  "../../../node_modules/@remix-run/react/dist/transition.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var IDLE_TRANSITION = {
      state: "idle",
      submission: void 0,
      location: void 0,
      type: "idle"
    }, IDLE_FETCHER = {
      state: "idle",
      type: "init",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formData: void 0,
      formEncType: void 0,
      submission: void 0
    };
    exports.IDLE_FETCHER = IDLE_FETCHER;
    exports.IDLE_TRANSITION = IDLE_TRANSITION;
  }
});

// ../../../node_modules/@remix-run/react/dist/warnings.js
var require_warnings2 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/warnings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function logDeprecationOnce(message2, key = message2) {
    }
    exports.logDeprecationOnce = logDeprecationOnce;
  }
});

// ../../../node_modules/@remix-run/react/dist/components.js
var require_components = __commonJS({
  "../../../node_modules/@remix-run/react/dist/components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var _rollupPluginBabelHelpers = require_rollupPluginBabelHelpers(), React10 = require_react(), reactRouterDom = require_main2(), errorBoundaries = require_errorBoundaries(), invariant2 = require_invariant2(), links2 = require_links(), markup = require_markup2(), transition = require_transition(), warnings = require_warnings2();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React10);
    function useDataRouterContext() {
      let context = React__namespace.useContext(reactRouterDom.UNSAFE_DataRouterContext);
      return invariant2(context, "You must render this element inside a <DataRouterContext.Provider> element"), context;
    }
    function useDataRouterStateContext() {
      let context = React__namespace.useContext(reactRouterDom.UNSAFE_DataRouterStateContext);
      return invariant2(context, "You must render this element inside a <DataRouterStateContext.Provider> element"), context;
    }
    var RemixContext = /* @__PURE__ */ React__namespace.createContext(void 0);
    RemixContext.displayName = "Remix";
    function useRemixContext() {
      let context = React__namespace.useContext(RemixContext);
      return invariant2(context, "You must render this element inside a <Remix> element"), context;
    }
    function RemixRoute({
      id: id3
    }) {
      let {
        routeModules,
        future: future2
      } = useRemixContext();
      invariant2(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
      let {
        default: Component,
        ErrorBoundary,
        CatchBoundary
      } = routeModules[id3];
      return !Component && (ErrorBoundary || !future2.v2_errorBoundary && CatchBoundary) && (Component = reactRouterDom.Outlet), invariant2(Component, `Route "${id3}" has no component! Please go add a \`default\` export in the route module file.
If you were trying to navigate or submit to a resource route, use \`<a>\` instead of \`<Link>\` or \`<Form reloadDocument>\`.`), /* @__PURE__ */ React__namespace.createElement(Component, null);
    }
    function RemixRouteError({
      id: id3
    }) {
      let {
        future: future2,
        routeModules
      } = useRemixContext();
      invariant2(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
      let error2 = reactRouterDom.useRouteError(), {
        CatchBoundary,
        ErrorBoundary
      } = routeModules[id3];
      if (future2.v2_errorBoundary) {
        if (id3 === "root" && (ErrorBoundary || (ErrorBoundary = errorBoundaries.V2_RemixRootDefaultErrorBoundary)), ErrorBoundary)
          return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, null);
        throw error2;
      }
      if (id3 === "root" && (CatchBoundary || (CatchBoundary = errorBoundaries.RemixRootDefaultCatchBoundary), ErrorBoundary || (ErrorBoundary = errorBoundaries.RemixRootDefaultErrorBoundary)), reactRouterDom.isRouteErrorResponse(error2)) {
        let tError = error2;
        if (tError != null && tError.error && tError.status !== 404 && ErrorBoundary)
          return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, {
            error: tError.error
          });
        if (CatchBoundary)
          return /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixCatchBoundary, {
            catch: error2,
            component: CatchBoundary
          });
      }
      if (error2 instanceof Error && ErrorBoundary)
        return /* @__PURE__ */ React__namespace.createElement(ErrorBoundary, {
          error: error2
        });
      throw error2;
    }
    function usePrefetchBehavior(prefetch, theirElementProps) {
      let [maybePrefetch, setMaybePrefetch] = React__namespace.useState(!1), [shouldPrefetch, setShouldPrefetch] = React__namespace.useState(!1), {
        onFocus,
        onBlur,
        onMouseEnter,
        onMouseLeave,
        onTouchStart
      } = theirElementProps;
      React__namespace.useEffect(() => {
        prefetch === "render" && setShouldPrefetch(!0);
      }, [prefetch]);
      let setIntent = () => {
        prefetch === "intent" && setMaybePrefetch(!0);
      }, cancelIntent = () => {
        prefetch === "intent" && (setMaybePrefetch(!1), setShouldPrefetch(!1));
      };
      return React__namespace.useEffect(() => {
        if (maybePrefetch) {
          let id3 = setTimeout(() => {
            setShouldPrefetch(!0);
          }, 100);
          return () => {
            clearTimeout(id3);
          };
        }
      }, [maybePrefetch]), [shouldPrefetch, {
        onFocus: composeEventHandlers(onFocus, setIntent),
        onBlur: composeEventHandlers(onBlur, cancelIntent),
        onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
        onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
        onTouchStart: composeEventHandlers(onTouchStart, setIntent)
      }];
    }
    var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, NavLink = /* @__PURE__ */ React__namespace.forwardRef(({
      to,
      prefetch = "none",
      ...props
    }, forwardedRef) => {
      let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX.test(to), href = reactRouterDom.useHref(to), [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.NavLink, _rollupPluginBabelHelpers.extends({
        ref: forwardedRef,
        to
      }, props, prefetchHandlers)), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, {
        page: href
      }) : null);
    });
    NavLink.displayName = "NavLink";
    var Link5 = /* @__PURE__ */ React__namespace.forwardRef(({
      to,
      prefetch = "none",
      ...props
    }, forwardedRef) => {
      let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX.test(to), href = reactRouterDom.useHref(to), [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Link, _rollupPluginBabelHelpers.extends({
        ref: forwardedRef,
        to
      }, props, prefetchHandlers)), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, {
        page: href
      }) : null);
    });
    Link5.displayName = "Link";
    function composeEventHandlers(theirHandler, ourHandler) {
      return (event) => {
        theirHandler && theirHandler(event), event.defaultPrevented || ourHandler(event);
      };
    }
    var linksWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE: The behavior of links `imagesizes` and `imagesrcset` will be changing in v2. Only the React camel case versions will be valid. Please change to `imageSizes` and `imageSrcSet`. For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#links-imagesizes-and-imagesrcset", useTransitionWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE: `useTransition` will be removed in v2 in favor of `useNavigation`. You can prepare for this change at your convenience by updating to `useNavigation`. For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#usetransition", fetcherTypeWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE: `fetcher.type` will be removed in v2. Please use `fetcher.state`, `fetcher.formData`, and `fetcher.data` to achieve the same UX. For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#usefetcher", fetcherSubmissionWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE : `fetcher.submission` will be removed in v2. The submission fields are now part of the fetcher object itself (`fetcher.formData`). For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#usefetcher";
    function Links4() {
      let {
        manifest,
        routeModules
      } = useRemixContext(), {
        errors,
        matches: routerMatches
      } = useDataRouterStateContext(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m) => errors[m.route.id]) + 1) : routerMatches, links$1 = React__namespace.useMemo(() => links2.getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
      return React__namespace.useEffect(() => {
        links$1.some((link) => "imagesizes" in link || "imagesrcset" in link) && warnings.logDeprecationOnce(linksWarning);
      }, [links$1]), /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, links$1.map((link) => {
        if (links2.isPageLinkDescriptor(link))
          return /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinks, _rollupPluginBabelHelpers.extends({
            key: link.page
          }, link));
        let imageSrcSet = null;
        return "useId" in React__namespace ? (link.imagesrcset && (link.imageSrcSet = imageSrcSet = link.imagesrcset, delete link.imagesrcset), link.imagesizes && (link.imageSizes = link.imagesizes, delete link.imagesizes)) : (link.imageSrcSet && (link.imagesrcset = imageSrcSet = link.imageSrcSet, delete link.imageSrcSet), link.imageSizes && (link.imagesizes = link.imageSizes, delete link.imageSizes)), /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
          key: link.rel + (link.href || "") + (imageSrcSet || "")
        }, link));
      }));
    }
    function PrefetchPageLinks({
      page,
      ...dataLinkProps
    }) {
      let {
        router
      } = useDataRouterContext(), matches = React__namespace.useMemo(() => reactRouterDom.matchRoutes(router.routes, page), [router.routes, page]);
      return matches ? /* @__PURE__ */ React__namespace.createElement(PrefetchPageLinksImpl, _rollupPluginBabelHelpers.extends({
        page,
        matches
      }, dataLinkProps)) : (console.warn(`Tried to prefetch ${page} but no routes matched.`), null);
    }
    function usePrefetchedStylesheets(matches) {
      let {
        manifest,
        routeModules
      } = useRemixContext(), [styleLinks, setStyleLinks] = React__namespace.useState([]);
      return React__namespace.useEffect(() => {
        let interrupted = !1;
        return links2.getStylesheetPrefetchLinks(matches, manifest, routeModules).then((links3) => {
          interrupted || setStyleLinks(links3);
        }), () => {
          interrupted = !0;
        };
      }, [matches, manifest, routeModules]), styleLinks;
    }
    function PrefetchPageLinksImpl({
      page,
      matches: nextMatches,
      ...linkProps
    }) {
      let location = reactRouterDom.useLocation(), {
        manifest
      } = useRemixContext(), {
        matches
      } = useDataRouterStateContext(), newMatchesForData = React__namespace.useMemo(() => links2.getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "data"), [page, nextMatches, matches, manifest, location]), newMatchesForAssets = React__namespace.useMemo(() => links2.getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "assets"), [page, nextMatches, matches, manifest, location]), dataHrefs = React__namespace.useMemo(() => links2.getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]), moduleHrefs = React__namespace.useMemo(() => links2.getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]), styleLinks = usePrefetchedStylesheets(newMatchesForAssets);
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
        key: href,
        rel: "prefetch",
        as: "fetch",
        href
      }, linkProps))), moduleHrefs.map((href) => /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
        key: href,
        rel: "modulepreload",
        href
      }, linkProps))), styleLinks.map((link) => (
        // these don't spread `linkProps` because they are full link descriptors
        // already with their own props
        /* @__PURE__ */ React__namespace.createElement("link", _rollupPluginBabelHelpers.extends({
          key: link.href
        }, link))
      )));
    }
    function V1Meta() {
      let {
        routeModules
      } = useRemixContext(), {
        errors,
        matches: routerMatches,
        loaderData
      } = useDataRouterStateContext(), location = reactRouterDom.useLocation(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m) => errors[m.route.id]) + 1) : routerMatches, meta = {}, parentsData = {};
      for (let match of matches) {
        let routeId = match.route.id, data = loaderData[routeId], params = match.params, routeModule = routeModules[routeId];
        if (routeModule.meta) {
          let routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
            data,
            parentsData,
            params,
            location
          }) : routeModule.meta;
          if (routeMeta && Array.isArray(routeMeta))
            throw new Error(
              "The route at " + match.route.path + " returns an array. This is only supported with the `v2_meta` future flag in the Remix config. Either set the flag to `true` or update the route's meta function to return an object.\n\nTo reference the v1 meta function API, see https://remix.run/route/meta"
              // TODO: Add link to the docs once they are written
              // + "\n\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta."
            );
          Object.assign(meta, routeMeta);
        }
        parentsData[routeId] = data;
      }
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, Object.entries(meta).map(([name, value]) => {
        if (!value)
          return null;
        if (["charset", "charSet"].includes(name))
          return /* @__PURE__ */ React__namespace.createElement("meta", {
            key: "charSet",
            charSet: value
          });
        if (name === "title")
          return /* @__PURE__ */ React__namespace.createElement("title", {
            key: "title"
          }, String(value));
        let isOpenGraphTag = /^(og|music|video|article|book|profile|fb):.+$/.test(name);
        return [value].flat().map((content) => isOpenGraphTag ? /* @__PURE__ */ React__namespace.createElement("meta", {
          property: name,
          content,
          key: name + content
        }) : typeof content == "string" ? /* @__PURE__ */ React__namespace.createElement("meta", {
          name,
          content,
          key: name + content
        }) : /* @__PURE__ */ React__namespace.createElement("meta", _rollupPluginBabelHelpers.extends({
          key: name + JSON.stringify(content)
        }, content)));
      }));
    }
    function V2Meta() {
      let {
        routeModules
      } = useRemixContext(), {
        errors,
        matches: routerMatches,
        loaderData
      } = useDataRouterStateContext(), location = reactRouterDom.useLocation(), _matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m) => errors[m.route.id]) + 1) : routerMatches, meta = [], leafMeta = null, matches = [];
      for (let i13 = 0; i13 < _matches.length; i13++) {
        let _match = _matches[i13], routeId = _match.route.id, data = loaderData[routeId], params = _match.params, routeModule = routeModules[routeId], routeMeta = [], match = {
          id: routeId,
          data,
          meta: [],
          params: _match.params,
          pathname: _match.pathname,
          handle: _match.route.handle,
          // TODO: Remove in v2. Only leaving it for now because we used it in
          // examples and there's no reason to crash someone's build for one line.
          // They'll get a TS error from the type updates anyway.
          // @ts-expect-error
          get route() {
            return console.warn("The meta function in " + _match.route.path + " accesses the `route` property on `matches`. This is deprecated and will be removed in Remix version 2. See"), _match.route;
          }
        };
        if (matches[i13] = match, routeModule != null && routeModule.meta ? routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
          data,
          params,
          location,
          matches
        }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta : leafMeta && (routeMeta = [...leafMeta]), routeMeta = routeMeta || [], !Array.isArray(routeMeta))
          throw new Error("The `v2_meta` API is enabled in the Remix config, but the route at " + _match.route.path + ` returns an invalid value. In v2, all route meta functions must return an array of meta objects.

To reference the v1 meta function API, see https://remix.run/route/meta`);
        match.meta = routeMeta, matches[i13] = match, meta = [...routeMeta], leafMeta = meta;
      }
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, meta.flat().map((metaProps) => {
        if (!metaProps)
          return null;
        if ("tagName" in metaProps) {
          let tagName = metaProps.tagName;
          if (delete metaProps.tagName, !isValidMetaTag(tagName))
            return console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`), null;
          let Comp = tagName;
          return /* @__PURE__ */ React__namespace.createElement(Comp, _rollupPluginBabelHelpers.extends({
            key: JSON.stringify(metaProps)
          }, metaProps));
        }
        if ("title" in metaProps)
          return /* @__PURE__ */ React__namespace.createElement("title", {
            key: "title"
          }, String(metaProps.title));
        if ("charset" in metaProps && (metaProps.charSet ?? (metaProps.charSet = metaProps.charset), delete metaProps.charset), "charSet" in metaProps && metaProps.charSet != null)
          return typeof metaProps.charSet == "string" ? /* @__PURE__ */ React__namespace.createElement("meta", {
            key: "charSet",
            charSet: metaProps.charSet
          }) : null;
        if ("script:ld+json" in metaProps) {
          let json = null;
          try {
            json = JSON.stringify(metaProps["script:ld+json"]);
          } catch {
          }
          return json != null && /* @__PURE__ */ React__namespace.createElement("script", {
            key: "script:ld+json",
            type: "application/ld+json",
            dangerouslySetInnerHTML: {
              __html: JSON.stringify(metaProps["script:ld+json"])
            }
          });
        }
        return /* @__PURE__ */ React__namespace.createElement("meta", _rollupPluginBabelHelpers.extends({
          key: JSON.stringify(metaProps)
        }, metaProps));
      }));
    }
    function isValidMetaTag(tagName) {
      return typeof tagName == "string" && /^(meta|link)$/.test(tagName);
    }
    function Meta() {
      let {
        future: future2
      } = useRemixContext();
      return future2 != null && future2.v2_meta ? /* @__PURE__ */ React__namespace.createElement(V2Meta, null) : /* @__PURE__ */ React__namespace.createElement(V1Meta, null);
    }
    function Await(props) {
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Await, props);
    }
    var isHydrated = !1;
    function Scripts2(props) {
      let {
        manifest,
        serverHandoffString,
        abortDelay
      } = useRemixContext(), {
        router,
        static: isStatic,
        staticContext
      } = useDataRouterContext(), {
        matches
      } = useDataRouterStateContext(), navigation = reactRouterDom.useNavigation();
      React__namespace.useEffect(() => {
        isHydrated = !0;
      }, []);
      let deferredScripts = [], initialScripts = React__namespace.useMemo(() => {
        var _manifest$hmr;
        let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : " ", activeDeferreds = staticContext == null ? void 0 : staticContext.activeDeferreds;
        contextScript += activeDeferreds ? ["__remixContext.p = function(v,e,p,x) {", "  if (typeof e !== 'undefined') {", `    x=new Error("Unexpected Server Error");
    x.stack=undefined;`, "    p=Promise.reject(x);", "  } else {", "    p=Promise.resolve(v);", "  }", "  return p;", "};", "__remixContext.n = function(i,k) {", "  __remixContext.t = __remixContext.t || {};", "  __remixContext.t[i] = __remixContext.t[i] || {};", "  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});", typeof abortDelay == "number" ? `setTimeout(() => {if(typeof p._error !== "undefined" || typeof p._data !== "undefined"){return;} __remixContext.t[i][k].e(new Error("Server timeout."))}, ${abortDelay});` : "", "  return p;", "};", "__remixContext.r = function(i,k,v,e,p,x) {", "  p = __remixContext.t[i][k];", "  if (typeof e !== 'undefined') {", `    x=new Error("Unexpected Server Error");
    x.stack=undefined;`, "    p.e(x);", "  } else {", "    p.r(v);", "  }", "};"].join(`
`) + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {
          let pendingKeys = new Set(deferredData.pendingKeys), promiseKeyValues = deferredData.deferredKeys.map((key) => {
            if (pendingKeys.has(key))
              return deferredScripts.push(/* @__PURE__ */ React__namespace.createElement(DeferredHydrationScript, {
                key: `${routeId} | ${key}`,
                deferredData,
                routeId,
                dataKey: key
              })), `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;
            {
              let trackedPromise = deferredData.data[key];
              if (typeof trackedPromise._error < "u") {
                let toSerialize = {
                  message: "Unexpected Server Error",
                  stack: void 0
                };
                return `${JSON.stringify(key)}:__remixContext.p(!1, ${markup.escapeHtml(JSON.stringify(toSerialize))})`;
              } else {
                if (typeof trackedPromise._data > "u")
                  throw new Error(`The deferred data for ${key} was not resolved, did you forget to return data from a deferred promise?`);
                return `${JSON.stringify(key)}:__remixContext.p(${markup.escapeHtml(JSON.stringify(trackedPromise._data))})`;
              }
            }
          }).join(`,
`);
          return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;
        }).join(`
`) + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : "") : "";
        let routeModulesScript = isStatic ? `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}import ${JSON.stringify(manifest.url)};
${matches.map((match, index2) => `import * as route${index2} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(`
`)}
window.__remixRouteModules = {${matches.map((match, index2) => `${JSON.stringify(match.route.id)}:route${index2}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});` : " ";
        return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers.extends({}, props, {
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: markup.createHtml(contextScript),
          type: void 0
        })), /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers.extends({}, props, {
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: markup.createHtml(routeModulesScript),
          type: "module",
          async: !0
        })));
      }, []);
      if (!isStatic && typeof __remixContext == "object" && __remixContext.a)
        for (let i13 = 0; i13 < __remixContext.a; i13++)
          deferredScripts.push(/* @__PURE__ */ React__namespace.createElement(DeferredHydrationScript, {
            key: i13
          }));
      let nextMatches = React__namespace.useMemo(() => {
        if (navigation.location) {
          let matches2 = reactRouterDom.matchRoutes(router.routes, navigation.location);
          return invariant2(matches2, `No routes match path "${navigation.location.pathname}"`), matches2;
        }
        return [];
      }, [navigation.location, router.routes]), routePreloads = matches.concat(nextMatches).map((match) => {
        let route = manifest.routes[match.route.id];
        return (route.imports || []).concat([route.module]);
      }).flat(1), preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);
      return isHydrated ? null : /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement("link", {
        rel: "modulepreload",
        href: manifest.entry.module,
        crossOrigin: props.crossOrigin
      }), dedupe(preloads).map((path) => /* @__PURE__ */ React__namespace.createElement("link", {
        key: path,
        rel: "modulepreload",
        href: path,
        crossOrigin: props.crossOrigin
      })), initialScripts, deferredScripts);
    }
    function DeferredHydrationScript({
      dataKey,
      deferredData,
      routeId
    }) {
      return typeof document > "u" && deferredData && dataKey && routeId && invariant2(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`), /* @__PURE__ */ React__namespace.createElement(React__namespace.Suspense, {
        fallback: (
          // This makes absolutely no sense. The server renders null as a fallback,
          // but when hydrating, we need to render a script tag to avoid a hydration issue.
          // To reproduce a hydration mismatch, just render null as a fallback.
          typeof document > "u" && deferredData && dataKey && routeId ? null : /* @__PURE__ */ React__namespace.createElement("script", {
            async: !0,
            suppressHydrationWarning: !0,
            dangerouslySetInnerHTML: {
              __html: " "
            }
          })
        )
      }, typeof document > "u" && deferredData && dataKey && routeId ? /* @__PURE__ */ React__namespace.createElement(Await, {
        resolve: deferredData.data[dataKey],
        errorElement: /* @__PURE__ */ React__namespace.createElement(ErrorDeferredHydrationScript, {
          dataKey,
          routeId
        }),
        children: (data) => /* @__PURE__ */ React__namespace.createElement("script", {
          async: !0,
          suppressHydrationWarning: !0,
          dangerouslySetInnerHTML: {
            __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, ${markup.escapeHtml(JSON.stringify(data))});`
          }
        })
      }) : /* @__PURE__ */ React__namespace.createElement("script", {
        async: !0,
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: " "
        }
      }));
    }
    function ErrorDeferredHydrationScript({
      dataKey,
      routeId
    }) {
      let error2 = reactRouterDom.useAsyncError(), toSerialize = {
        message: "Unexpected Server Error",
        stack: void 0
      };
      return /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, !1, ${markup.escapeHtml(JSON.stringify(toSerialize))});`
        }
      });
    }
    function dedupe(array) {
      return [...new Set(array)];
    }
    function useMatches() {
      let {
        routeModules
      } = useRemixContext(), matches = reactRouterDom.useMatches();
      return React__namespace.useMemo(() => matches.map((match) => ({
        id: match.id,
        pathname: match.pathname,
        params: match.params,
        data: match.data,
        // Need to grab handle here since we don't have it at client-side route
        // creation time
        handle: routeModules[match.id].handle
      })), [matches, routeModules]);
    }
    function useLoaderData() {
      return reactRouterDom.useLoaderData();
    }
    function useActionData() {
      return reactRouterDom.useActionData();
    }
    function useTransition() {
      let navigation = reactRouterDom.useNavigation();
      return React__namespace.useEffect(() => {
        warnings.logDeprecationOnce(useTransitionWarning);
      }, []), React__namespace.useMemo(() => convertNavigationToTransition(navigation), [navigation]);
    }
    function convertNavigationToTransition(navigation) {
      let {
        location,
        state,
        formMethod,
        formAction,
        formEncType,
        formData
      } = navigation;
      if (!location)
        return transition.IDLE_TRANSITION;
      let isActionSubmission = formMethod != null && ["POST", "PUT", "PATCH", "DELETE"].includes(formMethod.toUpperCase());
      if (state === "submitting" && formMethod && formAction && formEncType && formData) {
        if (isActionSubmission)
          return {
            location,
            state,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            type: "actionSubmission"
          };
        invariant2(!1, "Encountered an unexpected navigation scenario in useTransition()");
      }
      if (state === "loading") {
        let {
          _isRedirect,
          _isFetchActionRedirect
        } = location.state || {};
        if (formMethod && formAction && formEncType && formData) {
          if (_isRedirect)
            return isActionSubmission ? {
              location,
              state,
              submission: {
                method: formMethod.toUpperCase(),
                action: formAction,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "actionRedirect"
            } : {
              location,
              state,
              submission: {
                method: formMethod.toUpperCase(),
                action: formAction,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "loaderSubmissionRedirect"
            };
          if (isActionSubmission)
            return {
              location,
              state,
              submission: {
                method: formMethod.toUpperCase(),
                action: formAction,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "actionReload"
            };
          {
            let url = new URL(formAction, window.location.origin);
            return url.search = new URLSearchParams(formData.entries()).toString(), {
              location,
              state: "submitting",
              submission: {
                method: formMethod.toUpperCase(),
                action: url.pathname + url.search,
                encType: formEncType,
                formData,
                key: ""
              },
              type: "loaderSubmission"
            };
          }
        } else if (_isRedirect)
          return _isFetchActionRedirect ? {
            location,
            state,
            submission: void 0,
            type: "fetchActionRedirect"
          } : {
            location,
            state,
            submission: void 0,
            type: "normalRedirect"
          };
      }
      return {
        location,
        state: "loading",
        submission: void 0,
        type: "normalLoad"
      };
    }
    function useFetchers() {
      return reactRouterDom.useFetchers().map((f) => {
        let fetcher = convertRouterFetcherToRemixFetcher({
          state: f.state,
          data: f.data,
          formMethod: f.formMethod,
          formAction: f.formAction,
          formData: f.formData,
          formEncType: f.formEncType,
          " _hasFetcherDoneAnything ": f[" _hasFetcherDoneAnything "]
        });
        return addFetcherDeprecationWarnings(fetcher), fetcher;
      });
    }
    function useFetcher() {
      let fetcherRR = reactRouterDom.useFetcher();
      return React__namespace.useMemo(() => {
        let fetcherWithComponents = {
          ...convertRouterFetcherToRemixFetcher({
            state: fetcherRR.state,
            data: fetcherRR.data,
            formMethod: fetcherRR.formMethod,
            formAction: fetcherRR.formAction,
            formData: fetcherRR.formData,
            formEncType: fetcherRR.formEncType,
            " _hasFetcherDoneAnything ": fetcherRR[" _hasFetcherDoneAnything "]
          }),
          load: fetcherRR.load,
          submit: fetcherRR.submit,
          Form: fetcherRR.Form
        };
        return addFetcherDeprecationWarnings(fetcherWithComponents), fetcherWithComponents;
      }, [fetcherRR]);
    }
    function addFetcherDeprecationWarnings(fetcher) {
      let type2 = fetcher.type;
      Object.defineProperty(fetcher, "type", {
        get() {
          return warnings.logDeprecationOnce(fetcherTypeWarning), type2;
        },
        set(value) {
          type2 = value;
        },
        // These settings should make this behave like a normal object `type` field
        configurable: !0,
        enumerable: !0
      });
      let submission = fetcher.submission;
      Object.defineProperty(fetcher, "submission", {
        get() {
          return warnings.logDeprecationOnce(fetcherSubmissionWarning), submission;
        },
        set(value) {
          submission = value;
        },
        // These settings should make this behave like a normal object `type` field
        configurable: !0,
        enumerable: !0
      });
    }
    function convertRouterFetcherToRemixFetcher(fetcherRR) {
      let {
        state,
        formMethod,
        formAction,
        formEncType,
        formData,
        data
      } = fetcherRR, isActionSubmission = formMethod != null && ["POST", "PUT", "PATCH", "DELETE"].includes(formMethod.toUpperCase());
      if (state === "idle")
        return fetcherRR[" _hasFetcherDoneAnything "] === !0 ? {
          state: "idle",
          type: "done",
          formMethod: void 0,
          formAction: void 0,
          formData: void 0,
          formEncType: void 0,
          submission: void 0,
          data
        } : transition.IDLE_FETCHER;
      if (state === "submitting" && formMethod && formAction && formEncType && formData) {
        if (isActionSubmission)
          return {
            state,
            type: "actionSubmission",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            data
          };
        invariant2(!1, "Encountered an unexpected fetcher scenario in useFetcher()");
      }
      if (state === "loading" && formMethod && formAction && formEncType && formData) {
        if (isActionSubmission)
          return data ? {
            state,
            type: "actionReload",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            data
          } : {
            state,
            type: "actionRedirect",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: formAction,
              encType: formEncType,
              formData,
              key: ""
            },
            data: void 0
          };
        {
          let url = new URL(formAction, window.location.origin);
          return url.search = new URLSearchParams(formData.entries()).toString(), {
            state: "submitting",
            type: "loaderSubmission",
            formMethod: formMethod.toUpperCase(),
            formAction,
            formEncType,
            formData,
            submission: {
              method: formMethod.toUpperCase(),
              action: url.pathname + url.search,
              encType: formEncType,
              formData,
              key: ""
            },
            data
          };
        }
      }
      return {
        state: "loading",
        type: "normalLoad",
        formMethod: void 0,
        formAction: void 0,
        formData: void 0,
        formEncType: void 0,
        submission: void 0,
        data
      };
    }
    var LiveReload4 = () => null;
    exports.Await = Await;
    exports.Link = Link5;
    exports.Links = Links4;
    exports.LiveReload = LiveReload4;
    exports.Meta = Meta;
    exports.NavLink = NavLink;
    exports.PrefetchPageLinks = PrefetchPageLinks;
    exports.RemixContext = RemixContext;
    exports.RemixRoute = RemixRoute;
    exports.RemixRouteError = RemixRouteError;
    exports.Scripts = Scripts2;
    exports.composeEventHandlers = composeEventHandlers;
    exports.useActionData = useActionData;
    exports.useFetcher = useFetcher;
    exports.useFetchers = useFetchers;
    exports.useLoaderData = useLoaderData;
    exports.useMatches = useMatches;
    exports.useTransition = useTransition;
  }
});

// ../../../node_modules/@remix-run/react/dist/errors.js
var require_errors3 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var router = require_router_cjs2();
    function deserializeErrors(errors) {
      if (!errors)
        return null;
      let entries = Object.entries(errors), serialized = {};
      for (let [key, val] of entries)
        if (val && val.__type === "RouteErrorResponse")
          serialized[key] = new router.ErrorResponse(val.status, val.statusText, val.data, val.internal === !0);
        else if (val && val.__type === "Error") {
          let error2 = new Error(val.message);
          error2.stack = val.stack, serialized[key] = error2;
        } else
          serialized[key] = val;
      return serialized;
    }
    exports.deserializeErrors = deserializeErrors;
  }
});

// ../../../node_modules/@remix-run/react/dist/data.js
var require_data2 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/data.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var router = require_router_cjs2();
    function isCatchResponse(response) {
      return response.headers.get("X-Remix-Catch") != null;
    }
    function isErrorResponse(response) {
      return response.headers.get("X-Remix-Error") != null;
    }
    function isRedirectResponse(response) {
      return response.headers.get("X-Remix-Redirect") != null;
    }
    function isDeferredResponse(response) {
      var _response$headers$get;
      return !!((_response$headers$get = response.headers.get("Content-Type")) !== null && _response$headers$get !== void 0 && _response$headers$get.match(/text\/remix-deferred/));
    }
    async function fetchData(request, routeId, retry = 0) {
      let url = new URL(request.url);
      url.searchParams.set("_data", routeId);
      let init = {
        signal: request.signal
      };
      if (request.method !== "GET") {
        init.method = request.method;
        let contentType = request.headers.get("Content-Type");
        init.body = // Check between word boundaries instead of startsWith() due to the last
        // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type
        contentType && /\bapplication\/x-www-form-urlencoded\b/.test(contentType) ? new URLSearchParams(await request.text()) : await request.formData();
      }
      retry > 0 && await new Promise((resolve) => setTimeout(resolve, 5 ** retry * 10));
      let revalidation = window.__remixRevalidation, response = await fetch(url.href, init).catch((error2) => {
        if (typeof revalidation == "number" && revalidation === window.__remixRevalidation && (error2 == null ? void 0 : error2.name) === "TypeError" && retry < 3)
          return fetchData(request, routeId, retry + 1);
        throw error2;
      });
      if (isErrorResponse(response)) {
        let data = await response.json(), error2 = new Error(data.message);
        return error2.stack = data.stack, error2;
      }
      return response;
    }
    var DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
    async function parseDeferredReadableStream(stream) {
      if (!stream)
        throw new Error("parseDeferredReadableStream requires stream argument");
      let deferredData, deferredResolvers = {};
      try {
        let sectionReader = readStreamSections(stream), initialSection = (await sectionReader.next()).value;
        if (!initialSection)
          throw new Error("no critical data");
        let criticalData = JSON.parse(initialSection);
        if (typeof criticalData == "object" && criticalData !== null)
          for (let [eventKey, value] of Object.entries(criticalData))
            typeof value != "string" || !value.startsWith(DEFERRED_VALUE_PLACEHOLDER_PREFIX) || (deferredData = deferredData || {}, deferredData[eventKey] = new Promise((resolve, reject) => {
              deferredResolvers[eventKey] = {
                resolve: (value2) => {
                  resolve(value2), delete deferredResolvers[eventKey];
                },
                reject: (error2) => {
                  reject(error2), delete deferredResolvers[eventKey];
                }
              };
            }));
        return (async () => {
          try {
            for await (let section of sectionReader) {
              let [event, ...sectionDataStrings] = section.split(":"), sectionDataString = sectionDataStrings.join(":"), data = JSON.parse(sectionDataString);
              if (event === "data")
                for (let [key, value] of Object.entries(data))
                  deferredResolvers[key] && deferredResolvers[key].resolve(value);
              else if (event === "error")
                for (let [key, value] of Object.entries(data)) {
                  let err = new Error(value.message);
                  err.stack = value.stack, deferredResolvers[key] && deferredResolvers[key].reject(err);
                }
            }
            for (let [key, resolver] of Object.entries(deferredResolvers))
              resolver.reject(new router.AbortedDeferredError(`Deferred ${key} will never be resolved`));
          } catch (error2) {
            for (let resolver of Object.values(deferredResolvers))
              resolver.reject(error2);
          }
        })(), new router.UNSAFE_DeferredData({
          ...criticalData,
          ...deferredData
        });
      } catch (error2) {
        for (let resolver of Object.values(deferredResolvers))
          resolver.reject(error2);
        throw error2;
      }
    }
    async function* readStreamSections(stream) {
      let reader = stream.getReader(), buffer = [], sections = [], closed = !1, encoder = new TextEncoder(), decoder = new TextDecoder(), readStreamSection = async () => {
        if (sections.length > 0)
          return sections.shift();
        for (; !closed && sections.length === 0; ) {
          let chunk = await reader.read();
          if (chunk.done) {
            closed = !0;
            break;
          }
          buffer.push(chunk.value);
          try {
            let splitSections = decoder.decode(mergeArrays(...buffer)).split(`

`);
            if (splitSections.length >= 2 && (sections.push(...splitSections.slice(0, -1)), buffer = [encoder.encode(splitSections.slice(-1).join(`

`))]), sections.length > 0)
              break;
          } catch {
            continue;
          }
        }
        return sections.length > 0 || buffer.length > 0 && (sections = decoder.decode(mergeArrays(...buffer)).split(`

`).filter((s) => s), buffer = []), sections.shift();
      }, section = await readStreamSection();
      for (; section; )
        yield section, section = await readStreamSection();
    }
    function mergeArrays(...arrays) {
      let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0)), offset2 = 0;
      for (let arr of arrays)
        out.set(arr, offset2), offset2 += arr.length;
      return out;
    }
    exports.fetchData = fetchData;
    exports.isCatchResponse = isCatchResponse;
    exports.isDeferredResponse = isDeferredResponse;
    exports.isErrorResponse = isErrorResponse;
    exports.isRedirectResponse = isRedirectResponse;
    exports.parseDeferredReadableStream = parseDeferredReadableStream;
  }
});

// ../../../node_modules/@remix-run/react/dist/routes.js
var require_routes2 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/routes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React10 = require_react(), reactRouterDom = require_main2(), routeModules = require_routeModules(), data = require_data2(), links2 = require_links(), invariant2 = require_invariant2(), components = require_components();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React10);
    function groupRoutesByParentId(manifest) {
      let routes2 = {};
      return Object.values(manifest).forEach((route) => {
        let parentId = route.parentId || "";
        routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
      }), routes2;
    }
    function createServerRoutes(manifest, routeModules2, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
      return (routesByParentId[parentId] || []).map((route) => {
        let hasErrorBoundary = future2.v2_errorBoundary === !0 ? route.id === "root" || route.hasErrorBoundary : route.id === "root" || route.hasCatchBoundary || route.hasErrorBoundary, dataRoute = {
          caseSensitive: route.caseSensitive,
          element: /* @__PURE__ */ React__namespace.createElement(components.RemixRoute, {
            id: route.id
          }),
          errorElement: hasErrorBoundary ? /* @__PURE__ */ React__namespace.createElement(components.RemixRouteError, {
            id: route.id
          }) : void 0,
          id: route.id,
          index: route.index,
          path: route.path,
          handle: routeModules2[route.id].handle
          // Note: we don't need loader/action/shouldRevalidate on these routes
          // since they're for a static render
        }, children = createServerRoutes(manifest, routeModules2, future2, route.id, routesByParentId);
        return children.length > 0 && (dataRoute.children = children), dataRoute;
      });
    }
    function createClientRoutes(manifest, routeModulesCache, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {
      return (routesByParentId[parentId] || []).map((route) => {
        let hasErrorBoundary = future2.v2_errorBoundary === !0 ? route.id === "root" || route.hasErrorBoundary : route.id === "root" || route.hasCatchBoundary || route.hasErrorBoundary, dataRoute = {
          caseSensitive: route.caseSensitive,
          element: /* @__PURE__ */ React__namespace.createElement(components.RemixRoute, {
            id: route.id
          }),
          errorElement: hasErrorBoundary ? /* @__PURE__ */ React__namespace.createElement(components.RemixRouteError, {
            id: route.id
          }) : void 0,
          id: route.id,
          index: route.index,
          path: route.path,
          // handle gets added in via useMatches since we aren't guaranteed to
          // have the route module available here
          handle: void 0,
          loader: createDataFunction(route, routeModulesCache, !1),
          action: createDataFunction(route, routeModulesCache, !0),
          shouldRevalidate: createShouldRevalidate(route, routeModulesCache, needsRevalidation)
        }, children = createClientRoutes(manifest, routeModulesCache, future2, route.id, routesByParentId, needsRevalidation);
        return children.length > 0 && (dataRoute.children = children), dataRoute;
      });
    }
    function createShouldRevalidate(route, routeModules2, needsRevalidation) {
      let handledRevalidation = !1;
      return function(arg) {
        let module3 = routeModules2[route.id];
        return invariant2(module3, `Expected route module to be loaded for ${route.id}`), needsRevalidation !== void 0 && !handledRevalidation ? (handledRevalidation = !0, needsRevalidation.has(route.id)) : module3.shouldRevalidate ? module3.shouldRevalidate(arg) : arg.defaultShouldRevalidate;
      };
    }
    async function loadRouteModuleWithBlockingLinks(route, routeModules$1) {
      let routeModule = await routeModules.loadRouteModule(route, routeModules$1);
      return await links2.prefetchStyleLinks(routeModule), routeModule;
    }
    function createDataFunction(route, routeModules2, isAction) {
      return async ({
        request
      }) => {
        let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModules2);
        try {
          if (isAction && !route.hasAction) {
            let msg = `Route "${route.id}" does not have an action, but you are trying to submit to it. To fix this, please add an \`action\` function to the route`;
            throw console.error(msg), new Error(msg);
          } else if (!isAction && !route.hasLoader)
            return null;
          let result = await data.fetchData(request, route.id);
          if (result instanceof Error)
            throw result;
          if (data.isRedirectResponse(result))
            throw getRedirect(result);
          if (data.isCatchResponse(result))
            throw result;
          return data.isDeferredResponse(result) && result.body ? await data.parseDeferredReadableStream(result.body) : result;
        } finally {
          await routeModulePromise;
        }
      };
    }
    function getRedirect(response) {
      let status = parseInt(response.headers.get("X-Remix-Status"), 10) || 302, url = response.headers.get("X-Remix-Redirect"), headers = {}, revalidate = response.headers.get("X-Remix-Revalidate");
      return revalidate && (headers["X-Remix-Revalidate"] = revalidate), reactRouterDom.redirect(url, {
        status,
        headers
      });
    }
    exports.createClientRoutes = createClientRoutes;
    exports.createServerRoutes = createServerRoutes;
  }
});

// ../../../node_modules/@remix-run/react/dist/browser.js
var require_browser = __commonJS({
  "../../../node_modules/@remix-run/react/dist/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React10 = require_react(), reactRouterDom = require_main2(), components = require_components(), errorBoundaries = require_errorBoundaries(), errors = require_errors3(), routes2 = require_routes2();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React10), router;
    function RemixBrowser(_props) {
      if (!router) {
        let routes$1 = routes2.createClientRoutes(window.__remixManifest.routes, window.__remixRouteModules, window.__remixContext.future), hydrationData = window.__remixContext.state;
        hydrationData && hydrationData.errors && (hydrationData = {
          ...hydrationData,
          errors: errors.deserializeErrors(hydrationData.errors)
        }), router = reactRouterDom.createBrowserRouter(routes$1, {
          hydrationData,
          future: {
            // Pass through the Remix future flag to avoid a v1 breaking change in
            // useNavigation() - users can control the casing via the flag in v1.
            // useFetcher still always uppercases in the back-compat layer in v1.
            // In v2 we can just always pass true here and remove the back-compat
            // layer
            v7_normalizeFormMethod: window.__remixContext.future.v2_normalizeFormMethod
          }
        });
      }
      let [location, setLocation] = React__namespace.useState(router.state.location);
      return React__namespace.useLayoutEffect(() => router.subscribe((newState) => {
        newState.location !== location && setLocation(newState.location);
      }), [location]), /* @__PURE__ */ React__namespace.createElement(components.RemixContext.Provider, {
        value: {
          manifest: window.__remixManifest,
          routeModules: window.__remixRouteModules,
          future: window.__remixContext.future
        }
      }, /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
        location,
        component: errorBoundaries.RemixRootDefaultErrorBoundary
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.RouterProvider, {
        router,
        fallbackElement: null,
        future: {
          v7_startTransition: !0
        }
      })));
    }
    exports.RemixBrowser = RemixBrowser;
  }
});

// ../../../node_modules/@remix-run/react/dist/scroll-restoration.js
var require_scroll_restoration = __commonJS({
  "../../../node_modules/@remix-run/react/dist/scroll-restoration.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var _rollupPluginBabelHelpers = require_rollupPluginBabelHelpers(), React10 = require_react(), reactRouterDom = require_main2(), components = require_components();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React10), STORAGE_KEY = "positions";
    function ScrollRestoration({
      getKey,
      ...props
    }) {
      let location = reactRouterDom.useLocation(), matches = components.useMatches();
      reactRouterDom.UNSAFE_useScrollRestoration({
        getKey,
        storageKey: STORAGE_KEY
      });
      let key = React__namespace.useMemo(
        () => {
          if (!getKey)
            return null;
          let userKey = getKey(location, matches);
          return userKey !== location.key ? userKey : null;
        },
        // Nah, we only need this the first time for the SSR render
        // eslint-disable-next-line react-hooks/exhaustive-deps
        []
      ), restoreScroll = ((STORAGE_KEY2, restoreKey) => {
        if (!window.history.state || !window.history.state.key) {
          let key2 = Math.random().toString(32).slice(2);
          window.history.replaceState({
            key: key2
          }, "");
        }
        try {
          let storedY = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}")[restoreKey || window.history.state.key];
          typeof storedY == "number" && window.scrollTo(0, storedY);
        } catch (error2) {
          console.error(error2), sessionStorage.removeItem(STORAGE_KEY2);
        }
      }).toString();
      return /* @__PURE__ */ React__namespace.createElement("script", _rollupPluginBabelHelpers.extends({}, props, {
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key)})`
        }
      }));
    }
    exports.ScrollRestoration = ScrollRestoration;
  }
});

// ../../../node_modules/react-router-dom/server.js
var require_server2 = __commonJS({
  "../../../node_modules/react-router-dom/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React10 = require_react(), router = require_router_cjs2(), reactRouter = require_main(), reactRouterDom = require_main2();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React10);
    function StaticRouter({
      basename,
      children,
      location: locationProp = "/"
    }) {
      typeof locationProp == "string" && (locationProp = reactRouterDom.parsePath(locationProp));
      let action = router.Action.Pop, location = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state || null,
        key: locationProp.key || "default"
      }, staticNavigator = getStatelessNavigator();
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename,
        children,
        location,
        navigationType: action,
        navigator: staticNavigator,
        static: !0
      });
    }
    function StaticRouterProvider({
      context,
      router: router$1,
      hydrate = !0,
      nonce
    }) {
      router$1 && context || router.UNSAFE_invariant(!1);
      let dataRouterContext = {
        router: router$1,
        navigator: getStatelessNavigator(),
        static: !0,
        staticContext: context,
        basename: context.basename || "/"
      }, hydrateScript = "";
      if (hydrate !== !1) {
        let data = {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors(context.errors)
        };
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${htmlEscape(JSON.stringify(JSON.stringify(data)))});`;
      }
      let {
        state
      } = dataRouterContext.router;
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {
        value: dataRouterContext
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {
        value: state
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename: dataRouterContext.basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: dataRouterContext.navigator,
        static: dataRouterContext.static
      }, /* @__PURE__ */ React__namespace.createElement(DataRoutes, {
        routes: router$1.routes,
        state
      })))), hydrateScript ? /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        nonce,
        dangerouslySetInnerHTML: {
          __html: hydrateScript
        }
      }) : null);
    }
    function DataRoutes({
      routes: routes2,
      state
    }) {
      return reactRouter.UNSAFE_useRoutesImpl(routes2, void 0, state);
    }
    function serializeErrors(errors) {
      if (!errors)
        return null;
      let entries = Object.entries(errors), serialized = {};
      for (let [key, val] of entries)
        router.isRouteErrorResponse(val) ? serialized[key] = {
          ...val,
          __type: "RouteErrorResponse"
        } : val instanceof Error ? serialized[key] = {
          message: val.message,
          __type: "Error"
        } : serialized[key] = val;
      return serialized;
    }
    function getStatelessNavigator() {
      return {
        createHref,
        encodeLocation,
        push(to) {
          throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace(to) {
          throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go(delta) {
          throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back() {
          throw new Error("You cannot use navigator.back() on the server because it is a stateless environment.");
        },
        forward() {
          throw new Error("You cannot use navigator.forward() on the server because it is a stateless environment.");
        }
      };
    }
    function createStaticHandler(routes2, opts) {
      return router.createStaticHandler(routes2, {
        ...opts,
        mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties
      });
    }
    function createStaticRouter(routes2, context) {
      let manifest = {}, dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(routes2, reactRouter.UNSAFE_mapRouteProperties, void 0, manifest), matches = context.matches.map((match) => {
        let route = manifest[match.route.id] || match.route;
        return {
          ...match,
          route
        };
      }), msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
      return {
        get basename() {
          return context.basename;
        },
        get state() {
          return {
            historyAction: router.Action.Pop,
            location: context.location,
            matches,
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: context.errors,
            initialized: !0,
            navigation: router.IDLE_NAVIGATION,
            restoreScrollPosition: null,
            preventScrollReset: !1,
            revalidation: "idle",
            fetchers: /* @__PURE__ */ new Map(),
            blockers: /* @__PURE__ */ new Map()
          };
        },
        get routes() {
          return dataRoutes;
        },
        initialize() {
          throw msg("initialize");
        },
        subscribe() {
          throw msg("subscribe");
        },
        enableScrollRestoration() {
          throw msg("enableScrollRestoration");
        },
        navigate() {
          throw msg("navigate");
        },
        fetch() {
          throw msg("fetch");
        },
        revalidate() {
          throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher() {
          return router.IDLE_FETCHER;
        },
        deleteFetcher() {
          throw msg("deleteFetcher");
        },
        dispose() {
          throw msg("dispose");
        },
        getBlocker() {
          return router.IDLE_BLOCKER;
        },
        deleteBlocker() {
          throw msg("deleteBlocker");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalActiveDeferreds: /* @__PURE__ */ new Map(),
        _internalSetRoutes() {
          throw msg("_internalSetRoutes");
        }
      };
    }
    function createHref(to) {
      return typeof to == "string" ? to : reactRouterDom.createPath(to);
    }
    function encodeLocation(to) {
      let path = typeof to == "string" ? reactRouterDom.parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    }
    var ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
    function htmlEscape(str) {
      return str.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
    }
    exports.StaticRouter = StaticRouter;
    exports.StaticRouterProvider = StaticRouterProvider;
    exports.createStaticHandler = createStaticHandler;
    exports.createStaticRouter = createStaticRouter;
  }
});

// ../../../node_modules/@remix-run/react/dist/server.js
var require_server3 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React10 = require_react(), server = require_server2(), components = require_components(), errorBoundaries = require_errorBoundaries(), routes2 = require_routes2();
    function _interopNamespace(e23) {
      if (e23 && e23.__esModule)
        return e23;
      var n = /* @__PURE__ */ Object.create(null);
      return e23 && Object.keys(e23).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e23, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e23[k];
            }
          });
        }
      }), n.default = e23, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React10);
    function RemixServer2({
      context,
      url,
      abortDelay
    }) {
      typeof url == "string" && (url = new URL(url));
      let {
        manifest,
        routeModules,
        serverHandoffString
      } = context, routes$1 = routes2.createServerRoutes(manifest.routes, routeModules, context.future), router = server.createStaticRouter(routes$1, context.staticHandlerContext);
      return /* @__PURE__ */ React__namespace.createElement(components.RemixContext.Provider, {
        value: {
          manifest,
          routeModules,
          serverHandoffString,
          future: context.future,
          abortDelay
        }
      }, /* @__PURE__ */ React__namespace.createElement(errorBoundaries.RemixErrorBoundary, {
        location: router.state.location,
        component: errorBoundaries.RemixRootDefaultErrorBoundary
      }, /* @__PURE__ */ React__namespace.createElement(server.StaticRouterProvider, {
        router,
        context: context.staticHandlerContext,
        hydrate: !1
      })));
    }
    exports.RemixServer = RemixServer2;
  }
});

// ../../../node_modules/@remix-run/react/dist/index.js
var require_dist3 = __commonJS({
  "../../../node_modules/@remix-run/react/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var browser = require_browser(), reactRouterDom = require_main2(), components = require_components(), errorBoundaries = require_errorBoundaries(), scrollRestoration = require_scroll_restoration(), server = require_server3();
    exports.RemixBrowser = browser.RemixBrowser;
    Object.defineProperty(exports, "Form", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.Form;
      }
    });
    Object.defineProperty(exports, "Outlet", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.Outlet;
      }
    });
    Object.defineProperty(exports, "isRouteErrorResponse", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.isRouteErrorResponse;
      }
    });
    Object.defineProperty(exports, "unstable_useBlocker", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.unstable_useBlocker;
      }
    });
    Object.defineProperty(exports, "unstable_usePrompt", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.unstable_usePrompt;
      }
    });
    Object.defineProperty(exports, "useAsyncError", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useAsyncError;
      }
    });
    Object.defineProperty(exports, "useAsyncValue", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useAsyncValue;
      }
    });
    Object.defineProperty(exports, "useBeforeUnload", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useBeforeUnload;
      }
    });
    Object.defineProperty(exports, "useFormAction", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useFormAction;
      }
    });
    Object.defineProperty(exports, "useHref", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useHref;
      }
    });
    Object.defineProperty(exports, "useLocation", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useLocation;
      }
    });
    Object.defineProperty(exports, "useMatch", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useMatch;
      }
    });
    Object.defineProperty(exports, "useNavigate", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useNavigate;
      }
    });
    Object.defineProperty(exports, "useNavigation", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useNavigation;
      }
    });
    Object.defineProperty(exports, "useNavigationType", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useNavigationType;
      }
    });
    Object.defineProperty(exports, "useOutlet", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useOutlet;
      }
    });
    Object.defineProperty(exports, "useOutletContext", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useOutletContext;
      }
    });
    Object.defineProperty(exports, "useParams", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useParams;
      }
    });
    Object.defineProperty(exports, "useResolvedPath", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useResolvedPath;
      }
    });
    Object.defineProperty(exports, "useRevalidator", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useRevalidator;
      }
    });
    Object.defineProperty(exports, "useRouteError", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useRouteError;
      }
    });
    Object.defineProperty(exports, "useRouteLoaderData", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useRouteLoaderData;
      }
    });
    Object.defineProperty(exports, "useSearchParams", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useSearchParams;
      }
    });
    Object.defineProperty(exports, "useSubmit", {
      enumerable: !0,
      get: function() {
        return reactRouterDom.useSubmit;
      }
    });
    exports.Await = components.Await;
    exports.Link = components.Link;
    exports.Links = components.Links;
    exports.LiveReload = components.LiveReload;
    exports.Meta = components.Meta;
    exports.NavLink = components.NavLink;
    exports.PrefetchPageLinks = components.PrefetchPageLinks;
    exports.Scripts = components.Scripts;
    exports.UNSAFE_RemixContext = components.RemixContext;
    exports.useActionData = components.useActionData;
    exports.useFetcher = components.useFetcher;
    exports.useFetchers = components.useFetchers;
    exports.useLoaderData = components.useLoaderData;
    exports.useMatches = components.useMatches;
    exports.useTransition = components.useTransition;
    exports.useCatch = errorBoundaries.useCatch;
    exports.ScrollRestoration = scrollRestoration.ScrollRestoration;
    exports.RemixServer = server.RemixServer;
  }
});

// ../../../node_modules/react-dom/cjs/react-dom-server-legacy.node.production.min.js
var require_react_dom_server_legacy_node_production_min = __commonJS({
  "../../../node_modules/react-dom/cjs/react-dom-server-legacy.node.production.min.js"(exports) {
    "use strict";
    var ea = require_react(), fa = require("stream"), n = Object.prototype.hasOwnProperty, ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ia = {}, ja = {};
    function ka(a8) {
      return n.call(ja, a8) ? !0 : n.call(ia, a8) ? !1 : ha.test(a8) ? ja[a8] = !0 : (ia[a8] = !0, !1);
    }
    function q(a8, b, c, d, f, e23, g) {
      this.acceptsBooleans = b === 2 || b === 3 || b === 4, this.attributeName = d, this.attributeNamespace = f, this.mustUseProperty = c, this.propertyName = a8, this.type = b, this.sanitizeURL = e23, this.removeEmptyString = g;
    }
    var r24 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a8) {
      r24[a8] = new q(a8, 0, !1, a8, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a8) {
      var b = a8[0];
      r24[b] = new q(b, 1, !1, a8[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a8) {
      r24[a8] = new q(a8, 2, !1, a8.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a8) {
      r24[a8] = new q(a8, 2, !1, a8, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a8) {
      r24[a8] = new q(a8, 3, !1, a8.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a8) {
      r24[a8] = new q(a8, 3, !0, a8, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a8) {
      r24[a8] = new q(a8, 4, !1, a8, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a8) {
      r24[a8] = new q(a8, 6, !1, a8, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a8) {
      r24[a8] = new q(a8, 5, !1, a8.toLowerCase(), null, !1, !1);
    });
    var la = /[\-:]([a-z])/g;
    function ma(a8) {
      return a8[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a8) {
      var b = a8.replace(
        la,
        ma
      );
      r24[b] = new q(b, 1, !1, a8, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a8) {
      var b = a8.replace(la, ma);
      r24[b] = new q(b, 1, !1, a8, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a8) {
      var b = a8.replace(la, ma);
      r24[b] = new q(b, 1, !1, a8, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a8) {
      r24[a8] = new q(a8, 1, !1, a8.toLowerCase(), null, !1, !1);
    });
    r24.xlinkHref = new q("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a8) {
      r24[a8] = new q(a8, 1, !1, a8.toLowerCase(), null, !0, !0);
    });
    var t17 = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, na = ["Webkit", "ms", "Moz", "O"];
    Object.keys(t17).forEach(function(a8) {
      na.forEach(function(b) {
        b = b + a8.charAt(0).toUpperCase() + a8.substring(1), t17[b] = t17[a8];
      });
    });
    var oa = /["'&<>]/;
    function u(a8) {
      if (typeof a8 == "boolean" || typeof a8 == "number")
        return "" + a8;
      a8 = "" + a8;
      var b = oa.exec(a8);
      if (b) {
        var c = "", d, f = 0;
        for (d = b.index; d < a8.length; d++) {
          switch (a8.charCodeAt(d)) {
            case 34:
              b = "&quot;";
              break;
            case 38:
              b = "&amp;";
              break;
            case 39:
              b = "&#x27;";
              break;
            case 60:
              b = "&lt;";
              break;
            case 62:
              b = "&gt;";
              break;
            default:
              continue;
          }
          f !== d && (c += a8.substring(f, d)), f = d + 1, c += b;
        }
        a8 = f !== d ? c + a8.substring(f, d) : c;
      }
      return a8;
    }
    var pa = /([A-Z])/g, qa = /^ms-/, ra = Array.isArray;
    function v(a8, b) {
      return { insertionMode: a8, selectedValue: b };
    }
    function sa(a8, b, c) {
      switch (b) {
        case "select":
          return v(1, c.value != null ? c.value : c.defaultValue);
        case "svg":
          return v(2, null);
        case "math":
          return v(3, null);
        case "foreignObject":
          return v(1, null);
        case "table":
          return v(4, null);
        case "thead":
        case "tbody":
        case "tfoot":
          return v(5, null);
        case "colgroup":
          return v(7, null);
        case "tr":
          return v(6, null);
      }
      return 4 <= a8.insertionMode || a8.insertionMode === 0 ? v(1, null) : a8;
    }
    var ta = /* @__PURE__ */ new Map();
    function ua(a8, b, c) {
      if (typeof c != "object")
        throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      b = !0;
      for (var d in c)
        if (n.call(c, d)) {
          var f = c[d];
          if (f != null && typeof f != "boolean" && f !== "") {
            if (d.indexOf("--") === 0) {
              var e23 = u(d);
              f = u(("" + f).trim());
            } else {
              e23 = d;
              var g = ta.get(e23);
              g !== void 0 || (g = u(e23.replace(pa, "-$1").toLowerCase().replace(qa, "-ms-")), ta.set(e23, g)), e23 = g, f = typeof f == "number" ? f === 0 || n.call(
                t17,
                d
              ) ? "" + f : f + "px" : u(("" + f).trim());
            }
            b ? (b = !1, a8.push(' style="', e23, ":", f)) : a8.push(";", e23, ":", f);
          }
        }
      b || a8.push('"');
    }
    function w(a8, b, c, d) {
      switch (c) {
        case "style":
          ua(a8, b, d);
          return;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
          return;
      }
      if (!(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") {
        if (b = r24.hasOwnProperty(c) ? r24[c] : null, b !== null) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (!b.acceptsBooleans)
                return;
          }
          switch (c = b.attributeName, b.type) {
            case 3:
              d && a8.push(" ", c, '=""');
              break;
            case 4:
              d === !0 ? a8.push(" ", c, '=""') : d !== !1 && a8.push(" ", c, '="', u(d), '"');
              break;
            case 5:
              isNaN(d) || a8.push(" ", c, '="', u(d), '"');
              break;
            case 6:
              !isNaN(d) && 1 <= d && a8.push(" ", c, '="', u(d), '"');
              break;
            default:
              b.sanitizeURL && (d = "" + d), a8.push(" ", c, '="', u(d), '"');
          }
        } else if (ka(c)) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (b = c.toLowerCase().slice(0, 5), b !== "data-" && b !== "aria-")
                return;
          }
          a8.push(" ", c, '="', u(d), '"');
        }
      }
    }
    function x(a8, b, c) {
      if (b != null) {
        if (c != null)
          throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
        if (typeof b != "object" || !("__html" in b))
          throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        b = b.__html, b != null && a8.push("" + b);
      }
    }
    function va(a8) {
      var b = "";
      return ea.Children.forEach(a8, function(a9) {
        a9 != null && (b += a9);
      }), b;
    }
    function wa(a8, b, c, d) {
      a8.push(z(c));
      var f = c = null, e23;
      for (e23 in b)
        if (n.call(b, e23)) {
          var g = b[e23];
          if (g != null)
            switch (e23) {
              case "children":
                c = g;
                break;
              case "dangerouslySetInnerHTML":
                f = g;
                break;
              default:
                w(a8, d, e23, g);
            }
        }
      return a8.push(">"), x(a8, f, c), typeof c == "string" ? (a8.push(u(c)), null) : c;
    }
    var xa = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, ya = /* @__PURE__ */ new Map();
    function z(a8) {
      var b = ya.get(a8);
      if (b === void 0) {
        if (!xa.test(a8))
          throw Error("Invalid tag: " + a8);
        b = "<" + a8, ya.set(a8, b);
      }
      return b;
    }
    function za(a8, b, c, d, f) {
      switch (b) {
        case "select":
          a8.push(z("select"));
          var e23 = null, g = null;
          for (l9 in c)
            if (n.call(c, l9)) {
              var h = c[l9];
              if (h != null)
                switch (l9) {
                  case "children":
                    e23 = h;
                    break;
                  case "dangerouslySetInnerHTML":
                    g = h;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    w(a8, d, l9, h);
                }
            }
          return a8.push(">"), x(a8, g, e23), e23;
        case "option":
          g = f.selectedValue, a8.push(z("option"));
          var k = h = null, m = null, l9 = null;
          for (e23 in c)
            if (n.call(c, e23)) {
              var p = c[e23];
              if (p != null)
                switch (e23) {
                  case "children":
                    h = p;
                    break;
                  case "selected":
                    m = p;
                    break;
                  case "dangerouslySetInnerHTML":
                    l9 = p;
                    break;
                  case "value":
                    k = p;
                  default:
                    w(a8, d, e23, p);
                }
            }
          if (g != null)
            if (c = k !== null ? "" + k : va(h), ra(g)) {
              for (d = 0; d < g.length; d++)
                if ("" + g[d] === c) {
                  a8.push(' selected=""');
                  break;
                }
            } else
              "" + g === c && a8.push(' selected=""');
          else
            m && a8.push(' selected=""');
          return a8.push(">"), x(a8, l9, h), h;
        case "textarea":
          a8.push(z("textarea")), l9 = g = e23 = null;
          for (h in c)
            if (n.call(c, h) && (k = c[h], k != null))
              switch (h) {
                case "children":
                  l9 = k;
                  break;
                case "value":
                  e23 = k;
                  break;
                case "defaultValue":
                  g = k;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  w(a8, d, h, k);
              }
          if (e23 === null && g !== null && (e23 = g), a8.push(">"), l9 != null) {
            if (e23 != null)
              throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (ra(l9) && 1 < l9.length)
              throw Error("<textarea> can only have at most one child.");
            e23 = "" + l9;
          }
          return typeof e23 == "string" && e23[0] === `
` && a8.push(`
`), e23 !== null && a8.push(u("" + e23)), null;
        case "input":
          a8.push(z("input")), k = l9 = h = e23 = null;
          for (g in c)
            if (n.call(c, g) && (m = c[g], m != null))
              switch (g) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  k = m;
                  break;
                case "defaultValue":
                  h = m;
                  break;
                case "checked":
                  l9 = m;
                  break;
                case "value":
                  e23 = m;
                  break;
                default:
                  w(a8, d, g, m);
              }
          return l9 !== null ? w(a8, d, "checked", l9) : k !== null && w(a8, d, "checked", k), e23 !== null ? w(a8, d, "value", e23) : h !== null && w(a8, d, "value", h), a8.push("/>"), null;
        case "menuitem":
          a8.push(z("menuitem"));
          for (var B in c)
            if (n.call(c, B) && (e23 = c[B], e23 != null))
              switch (B) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  w(
                    a8,
                    d,
                    B,
                    e23
                  );
              }
          return a8.push(">"), null;
        case "title":
          a8.push(z("title")), e23 = null;
          for (p in c)
            if (n.call(c, p) && (g = c[p], g != null))
              switch (p) {
                case "children":
                  e23 = g;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  w(a8, d, p, g);
              }
          return a8.push(">"), e23;
        case "listing":
        case "pre":
          a8.push(z(b)), g = e23 = null;
          for (k in c)
            if (n.call(c, k) && (h = c[k], h != null))
              switch (k) {
                case "children":
                  e23 = h;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h;
                  break;
                default:
                  w(a8, d, k, h);
              }
          if (a8.push(">"), g != null) {
            if (e23 != null)
              throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof g != "object" || !("__html" in g))
              throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            c = g.__html, c != null && (typeof c == "string" && 0 < c.length && c[0] === `
` ? a8.push(`
`, c) : a8.push("" + c));
          }
          return typeof e23 == "string" && e23[0] === `
` && a8.push(`
`), e23;
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "img":
        case "keygen":
        case "link":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
          a8.push(z(b));
          for (var C in c)
            if (n.call(c, C) && (e23 = c[C], e23 != null))
              switch (C) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(b + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  w(a8, d, C, e23);
              }
          return a8.push("/>"), null;
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return wa(a8, c, b, d);
        case "html":
          return f.insertionMode === 0 && a8.push("<!DOCTYPE html>"), wa(a8, c, b, d);
        default:
          if (b.indexOf("-") === -1 && typeof c.is != "string")
            return wa(a8, c, b, d);
          a8.push(z(b)), g = e23 = null;
          for (m in c)
            if (n.call(c, m) && (h = c[m], h != null))
              switch (m) {
                case "children":
                  e23 = h;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h;
                  break;
                case "style":
                  ua(a8, d, h);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  ka(m) && typeof h != "function" && typeof h != "symbol" && a8.push(" ", m, '="', u(h), '"');
              }
          return a8.push(">"), x(a8, g, e23), e23;
      }
    }
    function Aa(a8, b, c) {
      if (a8.push('<!--$?--><template id="'), c === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return a8.push(c), a8.push('"></template>');
    }
    function Ba(a8, b, c, d) {
      switch (c.insertionMode) {
        case 0:
        case 1:
          return a8.push('<div hidden id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        case 2:
          return a8.push('<svg aria-hidden="true" style="display:none" id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        case 3:
          return a8.push('<math aria-hidden="true" style="display:none" id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        case 4:
          return a8.push('<table hidden id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        case 5:
          return a8.push('<table hidden><tbody id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        case 6:
          return a8.push('<table hidden><tr id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        case 7:
          return a8.push('<table hidden><colgroup id="'), a8.push(b.segmentPrefix), b = d.toString(16), a8.push(b), a8.push('">');
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function Ca(a8, b) {
      switch (b.insertionMode) {
        case 0:
        case 1:
          return a8.push("</div>");
        case 2:
          return a8.push("</svg>");
        case 3:
          return a8.push("</math>");
        case 4:
          return a8.push("</table>");
        case 5:
          return a8.push("</tbody></table>");
        case 6:
          return a8.push("</tr></table>");
        case 7:
          return a8.push("</colgroup></table>");
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var Da = /[<\u2028\u2029]/g;
    function Ea(a8) {
      return JSON.stringify(a8).replace(Da, function(a9) {
        switch (a9) {
          case "<":
            return "\\u003c";
          case "\u2028":
            return "\\u2028";
          case "\u2029":
            return "\\u2029";
          default:
            throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
        }
      });
    }
    function Fa(a8, b) {
      return b = b === void 0 ? "" : b, { bootstrapChunks: [], startInlineScript: "<script>", placeholderPrefix: b + "P:", segmentPrefix: b + "S:", boundaryPrefix: b + "B:", idPrefix: b, nextSuspenseID: 0, sentCompleteSegmentFunction: !1, sentCompleteBoundaryFunction: !1, sentClientRenderFunction: !1, generateStaticMarkup: a8 };
    }
    function Ga() {
      return { insertionMode: 1, selectedValue: null };
    }
    function Ha(a8, b, c, d) {
      return c.generateStaticMarkup ? (a8.push(u(b)), !1) : (b === "" ? a8 = d : (d && a8.push("<!-- -->"), a8.push(u(b)), a8 = !0), a8);
    }
    var A = Object.assign, Ia = Symbol.for("react.element"), Ja = Symbol.for("react.portal"), Ka = Symbol.for("react.fragment"), La = Symbol.for("react.strict_mode"), Ma = Symbol.for("react.profiler"), Na = Symbol.for("react.provider"), Oa = Symbol.for("react.context"), Pa = Symbol.for("react.forward_ref"), Qa = Symbol.for("react.suspense"), Ra = Symbol.for("react.suspense_list"), Sa = Symbol.for("react.memo"), Ta = Symbol.for("react.lazy"), Ua = Symbol.for("react.scope"), Va = Symbol.for("react.debug_trace_mode"), Wa = Symbol.for("react.legacy_hidden"), Xa = Symbol.for("react.default_value"), Ya = Symbol.iterator;
    function Za(a8) {
      if (a8 == null)
        return null;
      if (typeof a8 == "function")
        return a8.displayName || a8.name || null;
      if (typeof a8 == "string")
        return a8;
      switch (a8) {
        case Ka:
          return "Fragment";
        case Ja:
          return "Portal";
        case Ma:
          return "Profiler";
        case La:
          return "StrictMode";
        case Qa:
          return "Suspense";
        case Ra:
          return "SuspenseList";
      }
      if (typeof a8 == "object")
        switch (a8.$$typeof) {
          case Oa:
            return (a8.displayName || "Context") + ".Consumer";
          case Na:
            return (a8._context.displayName || "Context") + ".Provider";
          case Pa:
            var b = a8.render;
            return a8 = a8.displayName, a8 || (a8 = b.displayName || b.name || "", a8 = a8 !== "" ? "ForwardRef(" + a8 + ")" : "ForwardRef"), a8;
          case Sa:
            return b = a8.displayName || null, b !== null ? b : Za(a8.type) || "Memo";
          case Ta:
            b = a8._payload, a8 = a8._init;
            try {
              return Za(a8(b));
            } catch {
            }
        }
      return null;
    }
    var $a = {};
    function ab(a8, b) {
      if (a8 = a8.contextTypes, !a8)
        return $a;
      var c = {}, d;
      for (d in a8)
        c[d] = b[d];
      return c;
    }
    var D = null;
    function E(a8, b) {
      if (a8 !== b) {
        a8.context._currentValue2 = a8.parentValue, a8 = a8.parent;
        var c = b.parent;
        if (a8 === null) {
          if (c !== null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
        } else {
          if (c === null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
          E(a8, c);
        }
        b.context._currentValue2 = b.value;
      }
    }
    function bb(a8) {
      a8.context._currentValue2 = a8.parentValue, a8 = a8.parent, a8 !== null && bb(a8);
    }
    function cb(a8) {
      var b = a8.parent;
      b !== null && cb(b), a8.context._currentValue2 = a8.value;
    }
    function db(a8, b) {
      if (a8.context._currentValue2 = a8.parentValue, a8 = a8.parent, a8 === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a8.depth === b.depth ? E(a8, b) : db(a8, b);
    }
    function eb(a8, b) {
      var c = b.parent;
      if (c === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a8.depth === c.depth ? E(a8, c) : eb(a8, c), b.context._currentValue2 = b.value;
    }
    function F(a8) {
      var b = D;
      b !== a8 && (b === null ? cb(a8) : a8 === null ? bb(b) : b.depth === a8.depth ? E(b, a8) : b.depth > a8.depth ? db(b, a8) : eb(b, a8), D = a8);
    }
    var fb = { isMounted: function() {
      return !1;
    }, enqueueSetState: function(a8, b) {
      a8 = a8._reactInternals, a8.queue !== null && a8.queue.push(b);
    }, enqueueReplaceState: function(a8, b) {
      a8 = a8._reactInternals, a8.replace = !0, a8.queue = [b];
    }, enqueueForceUpdate: function() {
    } };
    function gb(a8, b, c, d) {
      var f = a8.state !== void 0 ? a8.state : null;
      a8.updater = fb, a8.props = c, a8.state = f;
      var e23 = { queue: [], replace: !1 };
      a8._reactInternals = e23;
      var g = b.contextType;
      if (a8.context = typeof g == "object" && g !== null ? g._currentValue2 : d, g = b.getDerivedStateFromProps, typeof g == "function" && (g = g(c, f), f = g == null ? f : A({}, f, g), a8.state = f), typeof b.getDerivedStateFromProps != "function" && typeof a8.getSnapshotBeforeUpdate != "function" && (typeof a8.UNSAFE_componentWillMount == "function" || typeof a8.componentWillMount == "function"))
        if (b = a8.state, typeof a8.componentWillMount == "function" && a8.componentWillMount(), typeof a8.UNSAFE_componentWillMount == "function" && a8.UNSAFE_componentWillMount(), b !== a8.state && fb.enqueueReplaceState(a8, a8.state, null), e23.queue !== null && 0 < e23.queue.length)
          if (b = e23.queue, g = e23.replace, e23.queue = null, e23.replace = !1, g && b.length === 1)
            a8.state = b[0];
          else {
            for (e23 = g ? b[0] : a8.state, f = !0, g = g ? 1 : 0; g < b.length; g++) {
              var h = b[g];
              h = typeof h == "function" ? h.call(a8, e23, c, d) : h, h != null && (f ? (f = !1, e23 = A({}, e23, h)) : A(e23, h));
            }
            a8.state = e23;
          }
        else
          e23.queue = null;
    }
    var hb = { id: 1, overflow: "" };
    function ib(a8, b, c) {
      var d = a8.id;
      a8 = a8.overflow;
      var f = 32 - G(d) - 1;
      d &= ~(1 << f), c += 1;
      var e23 = 32 - G(b) + f;
      if (30 < e23) {
        var g = f - f % 5;
        return e23 = (d & (1 << g) - 1).toString(32), d >>= g, f -= g, { id: 1 << 32 - G(b) + f | c << f | d, overflow: e23 + a8 };
      }
      return { id: 1 << e23 | c << f | d, overflow: a8 };
    }
    var G = Math.clz32 ? Math.clz32 : jb, kb = Math.log, lb = Math.LN2;
    function jb(a8) {
      return a8 >>>= 0, a8 === 0 ? 32 : 31 - (kb(a8) / lb | 0) | 0;
    }
    function mb(a8, b) {
      return a8 === b && (a8 !== 0 || 1 / a8 === 1 / b) || a8 !== a8 && b !== b;
    }
    var nb = typeof Object.is == "function" ? Object.is : mb, H = null, ob = null, I = null, J = null, K = !1, L = !1, M = 0, N = null, O = 0;
    function P() {
      if (H === null)
        throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
      return H;
    }
    function rb() {
      if (0 < O)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function sb() {
      return J === null ? I === null ? (K = !1, I = J = rb()) : (K = !0, J = I) : J.next === null ? (K = !1, J = J.next = rb()) : (K = !0, J = J.next), J;
    }
    function tb() {
      ob = H = null, L = !1, I = null, O = 0, J = N = null;
    }
    function ub(a8, b) {
      return typeof b == "function" ? b(a8) : b;
    }
    function vb(a8, b, c) {
      if (H = P(), J = sb(), K) {
        var d = J.queue;
        if (b = d.dispatch, N !== null && (c = N.get(d), c !== void 0)) {
          N.delete(d), d = J.memoizedState;
          do
            d = a8(d, c.action), c = c.next;
          while (c !== null);
          return J.memoizedState = d, [d, b];
        }
        return [J.memoizedState, b];
      }
      return a8 = a8 === ub ? typeof b == "function" ? b() : b : c !== void 0 ? c(b) : b, J.memoizedState = a8, a8 = J.queue = { last: null, dispatch: null }, a8 = a8.dispatch = wb.bind(null, H, a8), [J.memoizedState, a8];
    }
    function xb(a8, b) {
      if (H = P(), J = sb(), b = b === void 0 ? null : b, J !== null) {
        var c = J.memoizedState;
        if (c !== null && b !== null) {
          var d = c[1];
          a:
            if (d === null)
              d = !1;
            else {
              for (var f = 0; f < d.length && f < b.length; f++)
                if (!nb(b[f], d[f])) {
                  d = !1;
                  break a;
                }
              d = !0;
            }
          if (d)
            return c[0];
        }
      }
      return a8 = a8(), J.memoizedState = [a8, b], a8;
    }
    function wb(a8, b, c) {
      if (25 <= O)
        throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
      if (a8 === H)
        if (L = !0, a8 = { action: c, next: null }, N === null && (N = /* @__PURE__ */ new Map()), c = N.get(b), c === void 0)
          N.set(b, a8);
        else {
          for (b = c; b.next !== null; )
            b = b.next;
          b.next = a8;
        }
    }
    function yb() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function Q() {
    }
    var zb = { readContext: function(a8) {
      return a8._currentValue2;
    }, useContext: function(a8) {
      return P(), a8._currentValue2;
    }, useMemo: xb, useReducer: vb, useRef: function(a8) {
      H = P(), J = sb();
      var b = J.memoizedState;
      return b === null ? (a8 = { current: a8 }, J.memoizedState = a8) : b;
    }, useState: function(a8) {
      return vb(ub, a8);
    }, useInsertionEffect: Q, useLayoutEffect: function() {
    }, useCallback: function(a8, b) {
      return xb(function() {
        return a8;
      }, b);
    }, useImperativeHandle: Q, useEffect: Q, useDebugValue: Q, useDeferredValue: function(a8) {
      return P(), a8;
    }, useTransition: function() {
      return P(), [!1, yb];
    }, useId: function() {
      var a8 = ob.treeContext, b = a8.overflow;
      a8 = a8.id, a8 = (a8 & ~(1 << 32 - G(a8) - 1)).toString(32) + b;
      var c = R;
      if (c === null)
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
      return b = M++, a8 = ":" + c.idPrefix + "R" + a8, 0 < b && (a8 += "H" + b.toString(32)), a8 + ":";
    }, useMutableSource: function(a8, b) {
      return P(), b(a8._source);
    }, useSyncExternalStore: function(a8, b, c) {
      if (c === void 0)
        throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
      return c();
    } }, R = null, Ab = ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Bb(a8) {
      return console.error(a8), null;
    }
    function S() {
    }
    function Cb(a8, b, c, d, f, e23, g, h, k) {
      var m = [], l9 = /* @__PURE__ */ new Set();
      return b = { destination: null, responseState: b, progressiveChunkSize: d === void 0 ? 12800 : d, status: 0, fatalError: null, nextSegmentId: 0, allPendingTasks: 0, pendingRootTasks: 0, completedRootSegment: null, abortableTasks: l9, pingedTasks: m, clientRenderedBoundaries: [], completedBoundaries: [], partialBoundaries: [], onError: f === void 0 ? Bb : f, onAllReady: e23 === void 0 ? S : e23, onShellReady: g === void 0 ? S : g, onShellError: h === void 0 ? S : h, onFatalError: k === void 0 ? S : k }, c = T(b, 0, null, c, !1, !1), c.parentFlushed = !0, a8 = Db(b, a8, null, c, l9, $a, null, hb), m.push(a8), b;
    }
    function Db(a8, b, c, d, f, e23, g, h) {
      a8.allPendingTasks++, c === null ? a8.pendingRootTasks++ : c.pendingTasks++;
      var k = { node: b, ping: function() {
        var b2 = a8.pingedTasks;
        b2.push(k), b2.length === 1 && Eb(a8);
      }, blockedBoundary: c, blockedSegment: d, abortSet: f, legacyContext: e23, context: g, treeContext: h };
      return f.add(k), k;
    }
    function T(a8, b, c, d, f, e23) {
      return { status: 0, id: -1, index: b, parentFlushed: !1, chunks: [], children: [], formatContext: d, boundary: c, lastPushedText: f, textEmbedded: e23 };
    }
    function U(a8, b) {
      if (a8 = a8.onError(b), a8 != null && typeof a8 != "string")
        throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a8 + '" instead');
      return a8;
    }
    function V(a8, b) {
      var c = a8.onShellError;
      c(b), c = a8.onFatalError, c(b), a8.destination !== null ? (a8.status = 2, a8.destination.destroy(b)) : (a8.status = 1, a8.fatalError = b);
    }
    function Fb(a8, b, c, d, f) {
      for (H = {}, ob = b, M = 0, a8 = c(d, f); L; )
        L = !1, M = 0, O += 1, J = null, a8 = c(d, f);
      return tb(), a8;
    }
    function Gb(a8, b, c, d) {
      var f = c.render(), e23 = d.childContextTypes;
      if (e23 != null) {
        var g = b.legacyContext;
        if (typeof c.getChildContext != "function")
          d = g;
        else {
          c = c.getChildContext();
          for (var h in c)
            if (!(h in e23))
              throw Error((Za(d) || "Unknown") + '.getChildContext(): key "' + h + '" is not defined in childContextTypes.');
          d = A({}, g, c);
        }
        b.legacyContext = d, W(a8, b, f), b.legacyContext = g;
      } else
        W(a8, b, f);
    }
    function Hb(a8, b) {
      if (a8 && a8.defaultProps) {
        b = A({}, b), a8 = a8.defaultProps;
        for (var c in a8)
          b[c] === void 0 && (b[c] = a8[c]);
        return b;
      }
      return b;
    }
    function Ib(a8, b, c, d, f) {
      if (typeof c == "function")
        if (c.prototype && c.prototype.isReactComponent) {
          f = ab(c, b.legacyContext);
          var e23 = c.contextType;
          e23 = new c(d, typeof e23 == "object" && e23 !== null ? e23._currentValue2 : f), gb(e23, c, d, f), Gb(a8, b, e23, c);
        } else {
          e23 = ab(c, b.legacyContext), f = Fb(a8, b, c, d, e23);
          var g = M !== 0;
          if (typeof f == "object" && f !== null && typeof f.render == "function" && f.$$typeof === void 0)
            gb(f, c, d, e23), Gb(a8, b, f, c);
          else if (g) {
            d = b.treeContext, b.treeContext = ib(d, 1, 0);
            try {
              W(a8, b, f);
            } finally {
              b.treeContext = d;
            }
          } else
            W(a8, b, f);
        }
      else if (typeof c == "string") {
        switch (f = b.blockedSegment, e23 = za(f.chunks, c, d, a8.responseState, f.formatContext), f.lastPushedText = !1, g = f.formatContext, f.formatContext = sa(g, c, d), Jb(a8, b, e23), f.formatContext = g, c) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            f.chunks.push("</", c, ">");
        }
        f.lastPushedText = !1;
      } else {
        switch (c) {
          case Wa:
          case Va:
          case La:
          case Ma:
          case Ka:
            W(a8, b, d.children);
            return;
          case Ra:
            W(a8, b, d.children);
            return;
          case Ua:
            throw Error("ReactDOMServer does not yet support scope components.");
          case Qa:
            a: {
              c = b.blockedBoundary, f = b.blockedSegment, e23 = d.fallback, d = d.children, g = /* @__PURE__ */ new Set();
              var h = { id: null, rootSegmentID: -1, parentFlushed: !1, pendingTasks: 0, forceClientRender: !1, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g, errorDigest: null }, k = T(a8, f.chunks.length, h, f.formatContext, !1, !1);
              f.children.push(k), f.lastPushedText = !1;
              var m = T(a8, 0, null, f.formatContext, !1, !1);
              m.parentFlushed = !0, b.blockedBoundary = h, b.blockedSegment = m;
              try {
                if (Jb(a8, b, d), a8.responseState.generateStaticMarkup || m.lastPushedText && m.textEmbedded && m.chunks.push("<!-- -->"), m.status = 1, X(h, m), h.pendingTasks === 0)
                  break a;
              } catch (l9) {
                m.status = 4, h.forceClientRender = !0, h.errorDigest = U(a8, l9);
              } finally {
                b.blockedBoundary = c, b.blockedSegment = f;
              }
              b = Db(a8, e23, c, k, g, b.legacyContext, b.context, b.treeContext), a8.pingedTasks.push(b);
            }
            return;
        }
        if (typeof c == "object" && c !== null)
          switch (c.$$typeof) {
            case Pa:
              if (d = Fb(a8, b, c.render, d, f), M !== 0) {
                c = b.treeContext, b.treeContext = ib(c, 1, 0);
                try {
                  W(a8, b, d);
                } finally {
                  b.treeContext = c;
                }
              } else
                W(a8, b, d);
              return;
            case Sa:
              c = c.type, d = Hb(c, d), Ib(a8, b, c, d, f);
              return;
            case Na:
              if (f = d.children, c = c._context, d = d.value, e23 = c._currentValue2, c._currentValue2 = d, g = D, D = d = { parent: g, depth: g === null ? 0 : g.depth + 1, context: c, parentValue: e23, value: d }, b.context = d, W(a8, b, f), a8 = D, a8 === null)
                throw Error("Tried to pop a Context at the root of the app. This is a bug in React.");
              d = a8.parentValue, a8.context._currentValue2 = d === Xa ? a8.context._defaultValue : d, a8 = D = a8.parent, b.context = a8;
              return;
            case Oa:
              d = d.children, d = d(c._currentValue2), W(a8, b, d);
              return;
            case Ta:
              f = c._init, c = f(c._payload), d = Hb(c, d), Ib(a8, b, c, d, void 0);
              return;
          }
        throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((c == null ? c : typeof c) + "."));
      }
    }
    function W(a8, b, c) {
      if (b.node = c, typeof c == "object" && c !== null) {
        switch (c.$$typeof) {
          case Ia:
            Ib(a8, b, c.type, c.props, c.ref);
            return;
          case Ja:
            throw Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
          case Ta:
            var d = c._init;
            c = d(c._payload), W(a8, b, c);
            return;
        }
        if (ra(c)) {
          Kb(a8, b, c);
          return;
        }
        if (c === null || typeof c != "object" ? d = null : (d = Ya && c[Ya] || c["@@iterator"], d = typeof d == "function" ? d : null), d && (d = d.call(c))) {
          if (c = d.next(), !c.done) {
            var f = [];
            do
              f.push(c.value), c = d.next();
            while (!c.done);
            Kb(a8, b, f);
          }
          return;
        }
        throw a8 = Object.prototype.toString.call(c), Error("Objects are not valid as a React child (found: " + (a8 === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : a8) + "). If you meant to render a collection of children, use an array instead.");
      }
      typeof c == "string" ? (d = b.blockedSegment, d.lastPushedText = Ha(b.blockedSegment.chunks, c, a8.responseState, d.lastPushedText)) : typeof c == "number" && (d = b.blockedSegment, d.lastPushedText = Ha(
        b.blockedSegment.chunks,
        "" + c,
        a8.responseState,
        d.lastPushedText
      ));
    }
    function Kb(a8, b, c) {
      for (var d = c.length, f = 0; f < d; f++) {
        var e23 = b.treeContext;
        b.treeContext = ib(e23, d, f);
        try {
          Jb(a8, b, c[f]);
        } finally {
          b.treeContext = e23;
        }
      }
    }
    function Jb(a8, b, c) {
      var d = b.blockedSegment.formatContext, f = b.legacyContext, e23 = b.context;
      try {
        return W(a8, b, c);
      } catch (k) {
        if (tb(), typeof k == "object" && k !== null && typeof k.then == "function") {
          c = k;
          var g = b.blockedSegment, h = T(a8, g.chunks.length, null, g.formatContext, g.lastPushedText, !0);
          g.children.push(h), g.lastPushedText = !1, a8 = Db(a8, b.node, b.blockedBoundary, h, b.abortSet, b.legacyContext, b.context, b.treeContext).ping, c.then(a8, a8), b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e23, F(e23);
        } else
          throw b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e23, F(e23), k;
      }
    }
    function Lb(a8) {
      var b = a8.blockedBoundary;
      a8 = a8.blockedSegment, a8.status = 3, Mb(this, b, a8);
    }
    function Nb(a8, b, c) {
      var d = a8.blockedBoundary;
      a8.blockedSegment.status = 3, d === null ? (b.allPendingTasks--, b.status !== 2 && (b.status = 2, b.destination !== null && b.destination.push(null))) : (d.pendingTasks--, d.forceClientRender || (d.forceClientRender = !0, d.errorDigest = b.onError(c === void 0 ? Error("The render was aborted by the server without a reason.") : c), d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function(a9) {
        return Nb(a9, b, c);
      }), d.fallbackAbortableTasks.clear(), b.allPendingTasks--, b.allPendingTasks === 0 && (a8 = b.onAllReady, a8()));
    }
    function X(a8, b) {
      if (b.chunks.length === 0 && b.children.length === 1 && b.children[0].boundary === null) {
        var c = b.children[0];
        c.id = b.id, c.parentFlushed = !0, c.status === 1 && X(a8, c);
      } else
        a8.completedSegments.push(b);
    }
    function Mb(a8, b, c) {
      if (b === null) {
        if (c.parentFlushed) {
          if (a8.completedRootSegment !== null)
            throw Error("There can only be one root segment. This is a bug in React.");
          a8.completedRootSegment = c;
        }
        a8.pendingRootTasks--, a8.pendingRootTasks === 0 && (a8.onShellError = S, b = a8.onShellReady, b());
      } else
        b.pendingTasks--, b.forceClientRender || (b.pendingTasks === 0 ? (c.parentFlushed && c.status === 1 && X(b, c), b.parentFlushed && a8.completedBoundaries.push(b), b.fallbackAbortableTasks.forEach(Lb, a8), b.fallbackAbortableTasks.clear()) : c.parentFlushed && c.status === 1 && (X(b, c), b.completedSegments.length === 1 && b.parentFlushed && a8.partialBoundaries.push(b)));
      a8.allPendingTasks--, a8.allPendingTasks === 0 && (a8 = a8.onAllReady, a8());
    }
    function Eb(a8) {
      if (a8.status !== 2) {
        var b = D, c = Ab.current;
        Ab.current = zb;
        var d = R;
        R = a8.responseState;
        try {
          var f = a8.pingedTasks, e23;
          for (e23 = 0; e23 < f.length; e23++) {
            var g = f[e23], h = a8, k = g.blockedSegment;
            if (k.status === 0) {
              F(g.context);
              try {
                W(h, g, g.node), h.responseState.generateStaticMarkup || k.lastPushedText && k.textEmbedded && k.chunks.push("<!-- -->"), g.abortSet.delete(g), k.status = 1, Mb(h, g.blockedBoundary, k);
              } catch (y) {
                if (tb(), typeof y == "object" && y !== null && typeof y.then == "function") {
                  var m = g.ping;
                  y.then(m, m);
                } else {
                  g.abortSet.delete(g), k.status = 4;
                  var l9 = g.blockedBoundary, p = y, B = U(h, p);
                  if (l9 === null ? V(h, p) : (l9.pendingTasks--, l9.forceClientRender || (l9.forceClientRender = !0, l9.errorDigest = B, l9.parentFlushed && h.clientRenderedBoundaries.push(l9))), h.allPendingTasks--, h.allPendingTasks === 0) {
                    var C = h.onAllReady;
                    C();
                  }
                }
              } finally {
              }
            }
          }
          f.splice(0, e23), a8.destination !== null && Ob(a8, a8.destination);
        } catch (y) {
          U(a8, y), V(a8, y);
        } finally {
          R = d, Ab.current = c, c === zb && F(b);
        }
      }
    }
    function Y(a8, b, c) {
      switch (c.parentFlushed = !0, c.status) {
        case 0:
          var d = c.id = a8.nextSegmentId++;
          return c.lastPushedText = !1, c.textEmbedded = !1, a8 = a8.responseState, b.push('<template id="'), b.push(a8.placeholderPrefix), a8 = d.toString(16), b.push(a8), b.push('"></template>');
        case 1:
          c.status = 2;
          var f = !0;
          d = c.chunks;
          var e23 = 0;
          c = c.children;
          for (var g = 0; g < c.length; g++) {
            for (f = c[g]; e23 < f.index; e23++)
              b.push(d[e23]);
            f = Z(a8, b, f);
          }
          for (; e23 < d.length - 1; e23++)
            b.push(d[e23]);
          return e23 < d.length && (f = b.push(d[e23])), f;
        default:
          throw Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
      }
    }
    function Z(a8, b, c) {
      var d = c.boundary;
      if (d === null)
        return Y(a8, b, c);
      if (d.parentFlushed = !0, d.forceClientRender)
        return a8.responseState.generateStaticMarkup || (d = d.errorDigest, b.push("<!--$!-->"), b.push("<template"), d && (b.push(' data-dgst="'), d = u(d), b.push(d), b.push('"')), b.push("></template>")), Y(a8, b, c), a8 = a8.responseState.generateStaticMarkup ? !0 : b.push("<!--/$-->"), a8;
      if (0 < d.pendingTasks) {
        d.rootSegmentID = a8.nextSegmentId++, 0 < d.completedSegments.length && a8.partialBoundaries.push(d);
        var f = a8.responseState, e23 = f.nextSuspenseID++;
        return f = f.boundaryPrefix + e23.toString(16), d = d.id = f, Aa(b, a8.responseState, d), Y(a8, b, c), b.push("<!--/$-->");
      }
      if (d.byteSize > a8.progressiveChunkSize)
        return d.rootSegmentID = a8.nextSegmentId++, a8.completedBoundaries.push(d), Aa(b, a8.responseState, d.id), Y(a8, b, c), b.push("<!--/$-->");
      if (a8.responseState.generateStaticMarkup || b.push("<!--$-->"), c = d.completedSegments, c.length !== 1)
        throw Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
      return Z(a8, b, c[0]), a8 = a8.responseState.generateStaticMarkup ? !0 : b.push("<!--/$-->"), a8;
    }
    function Pb(a8, b, c) {
      return Ba(b, a8.responseState, c.formatContext, c.id), Z(a8, b, c), Ca(b, c.formatContext);
    }
    function Qb(a8, b, c) {
      for (var d = c.completedSegments, f = 0; f < d.length; f++)
        Rb(a8, b, c, d[f]);
      if (d.length = 0, a8 = a8.responseState, d = c.id, c = c.rootSegmentID, b.push(a8.startInlineScript), a8.sentCompleteBoundaryFunction ? b.push('$RC("') : (a8.sentCompleteBoundaryFunction = !0, b.push('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("')), d === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return c = c.toString(16), b.push(d), b.push('","'), b.push(a8.segmentPrefix), b.push(c), b.push('")</script>');
    }
    function Rb(a8, b, c, d) {
      if (d.status === 2)
        return !0;
      var f = d.id;
      if (f === -1) {
        if ((d.id = c.rootSegmentID) === -1)
          throw Error("A root segment ID must have been assigned by now. This is a bug in React.");
        return Pb(a8, b, d);
      }
      return Pb(a8, b, d), a8 = a8.responseState, b.push(a8.startInlineScript), a8.sentCompleteSegmentFunction ? b.push('$RS("') : (a8.sentCompleteSegmentFunction = !0, b.push('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("')), b.push(a8.segmentPrefix), f = f.toString(16), b.push(f), b.push('","'), b.push(a8.placeholderPrefix), b.push(f), b.push('")</script>');
    }
    function Ob(a8, b) {
      try {
        var c = a8.completedRootSegment;
        if (c !== null && a8.pendingRootTasks === 0) {
          Z(a8, b, c), a8.completedRootSegment = null;
          var d = a8.responseState.bootstrapChunks;
          for (c = 0; c < d.length - 1; c++)
            b.push(d[c]);
          c < d.length && b.push(d[c]);
        }
        var f = a8.clientRenderedBoundaries, e23;
        for (e23 = 0; e23 < f.length; e23++) {
          var g = f[e23];
          d = b;
          var h = a8.responseState, k = g.id, m = g.errorDigest, l9 = g.errorMessage, p = g.errorComponentStack;
          if (d.push(h.startInlineScript), h.sentClientRenderFunction ? d.push('$RX("') : (h.sentClientRenderFunction = !0, d.push('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("')), k === null)
            throw Error("An ID must have been assigned before we can complete the boundary.");
          if (d.push(k), d.push('"'), m || l9 || p) {
            d.push(",");
            var B = Ea(m || "");
            d.push(B);
          }
          if (l9 || p) {
            d.push(",");
            var C = Ea(l9 || "");
            d.push(C);
          }
          if (p) {
            d.push(",");
            var y = Ea(p);
            d.push(y);
          }
          if (!d.push(")</script>")) {
            a8.destination = null, e23++, f.splice(0, e23);
            return;
          }
        }
        f.splice(0, e23);
        var aa = a8.completedBoundaries;
        for (e23 = 0; e23 < aa.length; e23++)
          if (!Qb(a8, b, aa[e23])) {
            a8.destination = null, e23++, aa.splice(0, e23);
            return;
          }
        aa.splice(0, e23);
        var ba = a8.partialBoundaries;
        for (e23 = 0; e23 < ba.length; e23++) {
          var pb = ba[e23];
          a: {
            f = a8, g = b;
            var ca = pb.completedSegments;
            for (h = 0; h < ca.length; h++)
              if (!Rb(f, g, pb, ca[h])) {
                h++, ca.splice(0, h);
                var qb = !1;
                break a;
              }
            ca.splice(0, h), qb = !0;
          }
          if (!qb) {
            a8.destination = null, e23++, ba.splice(0, e23);
            return;
          }
        }
        ba.splice(0, e23);
        var da = a8.completedBoundaries;
        for (e23 = 0; e23 < da.length; e23++)
          if (!Qb(a8, b, da[e23])) {
            a8.destination = null, e23++, da.splice(0, e23);
            return;
          }
        da.splice(0, e23);
      } finally {
        a8.allPendingTasks === 0 && a8.pingedTasks.length === 0 && a8.clientRenderedBoundaries.length === 0 && a8.completedBoundaries.length === 0 && b.push(null);
      }
    }
    function Sb(a8, b) {
      if (a8.status === 1)
        a8.status = 2, b.destroy(a8.fatalError);
      else if (a8.status !== 2 && a8.destination === null) {
        a8.destination = b;
        try {
          Ob(a8, b);
        } catch (c) {
          U(a8, c), V(a8, c);
        }
      }
    }
    function Tb(a8, b) {
      try {
        var c = a8.abortableTasks;
        c.forEach(function(c2) {
          return Nb(c2, a8, b);
        }), c.clear(), a8.destination !== null && Ob(a8, a8.destination);
      } catch (d) {
        U(a8, d), V(a8, d);
      }
    }
    function Ub() {
    }
    function Vb(a8, b, c, d) {
      var f = !1, e23 = null, g = "", h = !1;
      if (a8 = Cb(a8, Fa(c, b ? b.identifierPrefix : void 0), Ga(), 1 / 0, Ub, void 0, function() {
        h = !0;
      }, void 0, void 0), Eb(a8), Tb(a8, d), Sb(a8, { push: function(a9) {
        return a9 !== null && (g += a9), !0;
      }, destroy: function(a9) {
        f = !0, e23 = a9;
      } }), f)
        throw e23;
      if (!h)
        throw Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
      return g;
    }
    function Wb(a8, b) {
      a8.prototype = Object.create(b.prototype), a8.prototype.constructor = a8, a8.__proto__ = b;
    }
    var Xb = function(a8) {
      function b() {
        var b2 = a8.call(this, {}) || this;
        return b2.request = null, b2.startedFlowing = !1, b2;
      }
      Wb(b, a8);
      var c = b.prototype;
      return c._destroy = function(a9, b2) {
        Tb(this.request), b2(a9);
      }, c._read = function() {
        this.startedFlowing && Sb(this.request, this);
      }, b;
    }(fa.Readable);
    function Yb() {
    }
    function Zb(a8, b) {
      var c = new Xb(), d = Cb(a8, Fa(!1, b ? b.identifierPrefix : void 0), Ga(), 1 / 0, Yb, function() {
        c.startedFlowing = !0, Sb(d, c);
      }, void 0, void 0);
      return c.request = d, Eb(d), c;
    }
    exports.renderToNodeStream = function(a8, b) {
      return Zb(a8, b);
    };
    exports.renderToStaticMarkup = function(a8, b) {
      return Vb(a8, b, !0, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server');
    };
    exports.renderToStaticNodeStream = function(a8, b) {
      return Zb(a8, b);
    };
    exports.renderToString = function(a8, b) {
      return Vb(a8, b, !1, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server');
    };
    exports.version = "18.2.0";
  }
});

// ../../../node_modules/react-dom/cjs/react-dom-server.node.production.min.js
var require_react_dom_server_node_production_min = __commonJS({
  "../../../node_modules/react-dom/cjs/react-dom-server.node.production.min.js"(exports) {
    "use strict";
    var aa = require("util"), ba = require_react(), k = null, l9 = 0, q = !0;
    function r24(a8, b) {
      if (typeof b == "string") {
        if (b.length !== 0)
          if (2048 < 3 * b.length)
            0 < l9 && (t17(a8, k.subarray(0, l9)), k = new Uint8Array(2048), l9 = 0), t17(a8, u.encode(b));
          else {
            var c = k;
            0 < l9 && (c = k.subarray(l9)), c = u.encodeInto(b, c);
            var d = c.read;
            l9 += c.written, d < b.length && (t17(a8, k), k = new Uint8Array(2048), l9 = u.encodeInto(b.slice(d), k).written), l9 === 2048 && (t17(a8, k), k = new Uint8Array(2048), l9 = 0);
          }
      } else
        b.byteLength !== 0 && (2048 < b.byteLength ? (0 < l9 && (t17(a8, k.subarray(0, l9)), k = new Uint8Array(2048), l9 = 0), t17(a8, b)) : (c = k.length - l9, c < b.byteLength && (c === 0 ? t17(
          a8,
          k
        ) : (k.set(b.subarray(0, c), l9), l9 += c, t17(a8, k), b = b.subarray(c)), k = new Uint8Array(2048), l9 = 0), k.set(b, l9), l9 += b.byteLength, l9 === 2048 && (t17(a8, k), k = new Uint8Array(2048), l9 = 0)));
    }
    function t17(a8, b) {
      a8 = a8.write(b), q = q && a8;
    }
    function w(a8, b) {
      return r24(a8, b), q;
    }
    function ca(a8) {
      k && 0 < l9 && a8.write(k.subarray(0, l9)), k = null, l9 = 0, q = !0;
    }
    var u = new aa.TextEncoder();
    function x(a8) {
      return u.encode(a8);
    }
    var y = Object.prototype.hasOwnProperty, da = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ea = {}, fa = {};
    function ha(a8) {
      return y.call(fa, a8) ? !0 : y.call(ea, a8) ? !1 : da.test(a8) ? fa[a8] = !0 : (ea[a8] = !0, !1);
    }
    function z(a8, b, c, d, f, e23, g) {
      this.acceptsBooleans = b === 2 || b === 3 || b === 4, this.attributeName = d, this.attributeNamespace = f, this.mustUseProperty = c, this.propertyName = a8, this.type = b, this.sanitizeURL = e23, this.removeEmptyString = g;
    }
    var A = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a8) {
      A[a8] = new z(a8, 0, !1, a8, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a8) {
      var b = a8[0];
      A[b] = new z(b, 1, !1, a8[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a8) {
      A[a8] = new z(a8, 2, !1, a8.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a8) {
      A[a8] = new z(a8, 2, !1, a8, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a8) {
      A[a8] = new z(a8, 3, !1, a8.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a8) {
      A[a8] = new z(a8, 3, !0, a8, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a8) {
      A[a8] = new z(a8, 4, !1, a8, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a8) {
      A[a8] = new z(a8, 6, !1, a8, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a8) {
      A[a8] = new z(a8, 5, !1, a8.toLowerCase(), null, !1, !1);
    });
    var ia = /[\-:]([a-z])/g;
    function ja(a8) {
      return a8[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a8) {
      var b = a8.replace(
        ia,
        ja
      );
      A[b] = new z(b, 1, !1, a8, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a8) {
      var b = a8.replace(ia, ja);
      A[b] = new z(b, 1, !1, a8, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a8) {
      var b = a8.replace(ia, ja);
      A[b] = new z(b, 1, !1, a8, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a8) {
      A[a8] = new z(a8, 1, !1, a8.toLowerCase(), null, !1, !1);
    });
    A.xlinkHref = new z("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a8) {
      A[a8] = new z(a8, 1, !1, a8.toLowerCase(), null, !0, !0);
    });
    var B = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, ka = ["Webkit", "ms", "Moz", "O"];
    Object.keys(B).forEach(function(a8) {
      ka.forEach(function(b) {
        b = b + a8.charAt(0).toUpperCase() + a8.substring(1), B[b] = B[a8];
      });
    });
    var la = /["'&<>]/;
    function F(a8) {
      if (typeof a8 == "boolean" || typeof a8 == "number")
        return "" + a8;
      a8 = "" + a8;
      var b = la.exec(a8);
      if (b) {
        var c = "", d, f = 0;
        for (d = b.index; d < a8.length; d++) {
          switch (a8.charCodeAt(d)) {
            case 34:
              b = "&quot;";
              break;
            case 38:
              b = "&amp;";
              break;
            case 39:
              b = "&#x27;";
              break;
            case 60:
              b = "&lt;";
              break;
            case 62:
              b = "&gt;";
              break;
            default:
              continue;
          }
          f !== d && (c += a8.substring(f, d)), f = d + 1, c += b;
        }
        a8 = f !== d ? c + a8.substring(f, d) : c;
      }
      return a8;
    }
    var ma = /([A-Z])/g, pa = /^ms-/, qa = Array.isArray, ra = x("<script>"), sa = x("</script>"), ta = x('<script src="'), ua = x('<script type="module" src="'), va = x('" async=""></script>'), wa = /(<\/|<)(s)(cript)/gi;
    function xa(a8, b, c, d) {
      return "" + b + (c === "s" ? "\\u0073" : "\\u0053") + d;
    }
    function G(a8, b) {
      return { insertionMode: a8, selectedValue: b };
    }
    function ya(a8, b, c) {
      switch (b) {
        case "select":
          return G(1, c.value != null ? c.value : c.defaultValue);
        case "svg":
          return G(2, null);
        case "math":
          return G(3, null);
        case "foreignObject":
          return G(1, null);
        case "table":
          return G(4, null);
        case "thead":
        case "tbody":
        case "tfoot":
          return G(5, null);
        case "colgroup":
          return G(7, null);
        case "tr":
          return G(6, null);
      }
      return 4 <= a8.insertionMode || a8.insertionMode === 0 ? G(1, null) : a8;
    }
    var za = x("<!-- -->");
    function Aa(a8, b, c, d) {
      return b === "" ? d : (d && a8.push(za), a8.push(F(b)), !0);
    }
    var Ba = /* @__PURE__ */ new Map(), Ca = x(' style="'), Da = x(":"), Ea = x(";");
    function Fa(a8, b, c) {
      if (typeof c != "object")
        throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      b = !0;
      for (var d in c)
        if (y.call(c, d)) {
          var f = c[d];
          if (f != null && typeof f != "boolean" && f !== "") {
            if (d.indexOf("--") === 0) {
              var e23 = F(d);
              f = F(("" + f).trim());
            } else {
              e23 = d;
              var g = Ba.get(e23);
              g !== void 0 || (g = x(F(e23.replace(ma, "-$1").toLowerCase().replace(pa, "-ms-"))), Ba.set(e23, g)), e23 = g, f = typeof f == "number" ? f === 0 || y.call(
                B,
                d
              ) ? "" + f : f + "px" : F(("" + f).trim());
            }
            b ? (b = !1, a8.push(Ca, e23, Da, f)) : a8.push(Ea, e23, Da, f);
          }
        }
      b || a8.push(H);
    }
    var I = x(" "), J = x('="'), H = x('"'), Ga = x('=""');
    function K(a8, b, c, d) {
      switch (c) {
        case "style":
          Fa(a8, b, d);
          return;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
          return;
      }
      if (!(2 < c.length) || c[0] !== "o" && c[0] !== "O" || c[1] !== "n" && c[1] !== "N") {
        if (b = A.hasOwnProperty(c) ? A[c] : null, b !== null) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (!b.acceptsBooleans)
                return;
          }
          switch (c = b.attributeName, b.type) {
            case 3:
              d && a8.push(I, c, Ga);
              break;
            case 4:
              d === !0 ? a8.push(I, c, Ga) : d !== !1 && a8.push(I, c, J, F(d), H);
              break;
            case 5:
              isNaN(d) || a8.push(I, c, J, F(d), H);
              break;
            case 6:
              !isNaN(d) && 1 <= d && a8.push(I, c, J, F(d), H);
              break;
            default:
              b.sanitizeURL && (d = "" + d), a8.push(I, c, J, F(d), H);
          }
        } else if (ha(c)) {
          switch (typeof d) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (b = c.toLowerCase().slice(0, 5), b !== "data-" && b !== "aria-")
                return;
          }
          a8.push(I, c, J, F(d), H);
        }
      }
    }
    var L = x(">"), Ha = x("/>");
    function M(a8, b, c) {
      if (b != null) {
        if (c != null)
          throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
        if (typeof b != "object" || !("__html" in b))
          throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        b = b.__html, b != null && a8.push("" + b);
      }
    }
    function Ia(a8) {
      var b = "";
      return ba.Children.forEach(a8, function(a9) {
        a9 != null && (b += a9);
      }), b;
    }
    var Ja = x(' selected=""');
    function Ka(a8, b, c, d) {
      a8.push(N(c));
      var f = c = null, e23;
      for (e23 in b)
        if (y.call(b, e23)) {
          var g = b[e23];
          if (g != null)
            switch (e23) {
              case "children":
                c = g;
                break;
              case "dangerouslySetInnerHTML":
                f = g;
                break;
              default:
                K(a8, d, e23, g);
            }
        }
      return a8.push(L), M(a8, f, c), typeof c == "string" ? (a8.push(F(c)), null) : c;
    }
    var La = x(`
`), Ma = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Na = /* @__PURE__ */ new Map();
    function N(a8) {
      var b = Na.get(a8);
      if (b === void 0) {
        if (!Ma.test(a8))
          throw Error("Invalid tag: " + a8);
        b = x("<" + a8), Na.set(a8, b);
      }
      return b;
    }
    var Oa = x("<!DOCTYPE html>");
    function Pa(a8, b, c, d, f) {
      switch (b) {
        case "select":
          a8.push(N("select"));
          var e23 = null, g = null;
          for (p in c)
            if (y.call(c, p)) {
              var h = c[p];
              if (h != null)
                switch (p) {
                  case "children":
                    e23 = h;
                    break;
                  case "dangerouslySetInnerHTML":
                    g = h;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    K(a8, d, p, h);
                }
            }
          return a8.push(L), M(a8, g, e23), e23;
        case "option":
          g = f.selectedValue, a8.push(N("option"));
          var m = h = null, n = null, p = null;
          for (e23 in c)
            if (y.call(c, e23)) {
              var v = c[e23];
              if (v != null)
                switch (e23) {
                  case "children":
                    h = v;
                    break;
                  case "selected":
                    n = v;
                    break;
                  case "dangerouslySetInnerHTML":
                    p = v;
                    break;
                  case "value":
                    m = v;
                  default:
                    K(a8, d, e23, v);
                }
            }
          if (g != null)
            if (c = m !== null ? "" + m : Ia(h), qa(g)) {
              for (d = 0; d < g.length; d++)
                if ("" + g[d] === c) {
                  a8.push(Ja);
                  break;
                }
            } else
              "" + g === c && a8.push(Ja);
          else
            n && a8.push(Ja);
          return a8.push(L), M(a8, p, h), h;
        case "textarea":
          a8.push(N("textarea")), p = g = e23 = null;
          for (h in c)
            if (y.call(c, h) && (m = c[h], m != null))
              switch (h) {
                case "children":
                  p = m;
                  break;
                case "value":
                  e23 = m;
                  break;
                case "defaultValue":
                  g = m;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  K(a8, d, h, m);
              }
          if (e23 === null && g !== null && (e23 = g), a8.push(L), p != null) {
            if (e23 != null)
              throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (qa(p) && 1 < p.length)
              throw Error("<textarea> can only have at most one child.");
            e23 = "" + p;
          }
          return typeof e23 == "string" && e23[0] === `
` && a8.push(La), e23 !== null && a8.push(F("" + e23)), null;
        case "input":
          a8.push(N("input")), m = p = h = e23 = null;
          for (g in c)
            if (y.call(c, g) && (n = c[g], n != null))
              switch (g) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  m = n;
                  break;
                case "defaultValue":
                  h = n;
                  break;
                case "checked":
                  p = n;
                  break;
                case "value":
                  e23 = n;
                  break;
                default:
                  K(a8, d, g, n);
              }
          return p !== null ? K(a8, d, "checked", p) : m !== null && K(a8, d, "checked", m), e23 !== null ? K(a8, d, "value", e23) : h !== null && K(a8, d, "value", h), a8.push(Ha), null;
        case "menuitem":
          a8.push(N("menuitem"));
          for (var C in c)
            if (y.call(c, C) && (e23 = c[C], e23 != null))
              switch (C) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  K(a8, d, C, e23);
              }
          return a8.push(L), null;
        case "title":
          a8.push(N("title")), e23 = null;
          for (v in c)
            if (y.call(c, v) && (g = c[v], g != null))
              switch (v) {
                case "children":
                  e23 = g;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  K(a8, d, v, g);
              }
          return a8.push(L), e23;
        case "listing":
        case "pre":
          a8.push(N(b)), g = e23 = null;
          for (m in c)
            if (y.call(c, m) && (h = c[m], h != null))
              switch (m) {
                case "children":
                  e23 = h;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h;
                  break;
                default:
                  K(a8, d, m, h);
              }
          if (a8.push(L), g != null) {
            if (e23 != null)
              throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof g != "object" || !("__html" in g))
              throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            c = g.__html, c != null && (typeof c == "string" && 0 < c.length && c[0] === `
` ? a8.push(La, c) : a8.push("" + c));
          }
          return typeof e23 == "string" && e23[0] === `
` && a8.push(La), e23;
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "img":
        case "keygen":
        case "link":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
          a8.push(N(b));
          for (var D in c)
            if (y.call(c, D) && (e23 = c[D], e23 != null))
              switch (D) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(b + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  K(a8, d, D, e23);
              }
          return a8.push(Ha), null;
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return Ka(a8, c, b, d);
        case "html":
          return f.insertionMode === 0 && a8.push(Oa), Ka(
            a8,
            c,
            b,
            d
          );
        default:
          if (b.indexOf("-") === -1 && typeof c.is != "string")
            return Ka(a8, c, b, d);
          a8.push(N(b)), g = e23 = null;
          for (n in c)
            if (y.call(c, n) && (h = c[n], h != null))
              switch (n) {
                case "children":
                  e23 = h;
                  break;
                case "dangerouslySetInnerHTML":
                  g = h;
                  break;
                case "style":
                  Fa(a8, d, h);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  ha(n) && typeof h != "function" && typeof h != "symbol" && a8.push(I, n, J, F(h), H);
              }
          return a8.push(L), M(a8, g, e23), e23;
      }
    }
    var Qa = x("</"), Ra = x(">"), Sa = x('<template id="'), Ta = x('"></template>'), Ua = x("<!--$-->"), Va = x('<!--$?--><template id="'), Wa = x('"></template>'), Xa = x("<!--$!-->"), Ya = x("<!--/$-->"), Za = x("<template"), $a = x('"'), ab = x(' data-dgst="');
    x(' data-msg="');
    x(' data-stck="');
    var bb = x("></template>");
    function cb(a8, b, c) {
      if (r24(a8, Va), c === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return r24(a8, c), w(a8, Wa);
    }
    var db = x('<div hidden id="'), eb = x('">'), fb = x("</div>"), gb = x('<svg aria-hidden="true" style="display:none" id="'), hb = x('">'), ib = x("</svg>"), jb = x('<math aria-hidden="true" style="display:none" id="'), kb = x('">'), lb = x("</math>"), mb = x('<table hidden id="'), nb = x('">'), ob = x("</table>"), pb = x('<table hidden><tbody id="'), qb = x('">'), rb = x("</tbody></table>"), sb = x('<table hidden><tr id="'), tb = x('">'), ub = x("</tr></table>"), vb = x('<table hidden><colgroup id="'), wb = x('">'), xb = x("</colgroup></table>");
    function yb(a8, b, c, d) {
      switch (c.insertionMode) {
        case 0:
        case 1:
          return r24(a8, db), r24(a8, b.segmentPrefix), r24(a8, d.toString(16)), w(a8, eb);
        case 2:
          return r24(a8, gb), r24(a8, b.segmentPrefix), r24(a8, d.toString(16)), w(a8, hb);
        case 3:
          return r24(a8, jb), r24(a8, b.segmentPrefix), r24(a8, d.toString(16)), w(a8, kb);
        case 4:
          return r24(a8, mb), r24(a8, b.segmentPrefix), r24(a8, d.toString(16)), w(a8, nb);
        case 5:
          return r24(a8, pb), r24(a8, b.segmentPrefix), r24(a8, d.toString(16)), w(a8, qb);
        case 6:
          return r24(a8, sb), r24(a8, b.segmentPrefix), r24(a8, d.toString(16)), w(a8, tb);
        case 7:
          return r24(a8, vb), r24(
            a8,
            b.segmentPrefix
          ), r24(a8, d.toString(16)), w(a8, wb);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    function zb(a8, b) {
      switch (b.insertionMode) {
        case 0:
        case 1:
          return w(a8, fb);
        case 2:
          return w(a8, ib);
        case 3:
          return w(a8, lb);
        case 4:
          return w(a8, ob);
        case 5:
          return w(a8, rb);
        case 6:
          return w(a8, ub);
        case 7:
          return w(a8, xb);
        default:
          throw Error("Unknown insertion mode. This is a bug in React.");
      }
    }
    var Ab = x('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'), Bb = x('$RS("'), Cb = x('","'), Db = x('")</script>'), Fb = x('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'), Gb = x('$RC("'), Hb = x('","'), Ib = x('")</script>'), Jb = x('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'), Kb = x('$RX("'), Lb = x('"'), Mb = x(")</script>"), Nb = x(","), Ob = /[<\u2028\u2029]/g;
    function Pb(a8) {
      return JSON.stringify(a8).replace(Ob, function(a9) {
        switch (a9) {
          case "<":
            return "\\u003c";
          case "\u2028":
            return "\\u2028";
          case "\u2029":
            return "\\u2029";
          default:
            throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
        }
      });
    }
    var O = Object.assign, Qb = Symbol.for("react.element"), Rb = Symbol.for("react.portal"), Sb = Symbol.for("react.fragment"), Tb = Symbol.for("react.strict_mode"), Ub = Symbol.for("react.profiler"), Vb = Symbol.for("react.provider"), Wb = Symbol.for("react.context"), Xb = Symbol.for("react.forward_ref"), Yb = Symbol.for("react.suspense"), Zb = Symbol.for("react.suspense_list"), $b = Symbol.for("react.memo"), ac = Symbol.for("react.lazy"), bc = Symbol.for("react.scope"), cc = Symbol.for("react.debug_trace_mode"), dc = Symbol.for("react.legacy_hidden"), ec = Symbol.for("react.default_value"), fc = Symbol.iterator;
    function gc(a8) {
      if (a8 == null)
        return null;
      if (typeof a8 == "function")
        return a8.displayName || a8.name || null;
      if (typeof a8 == "string")
        return a8;
      switch (a8) {
        case Sb:
          return "Fragment";
        case Rb:
          return "Portal";
        case Ub:
          return "Profiler";
        case Tb:
          return "StrictMode";
        case Yb:
          return "Suspense";
        case Zb:
          return "SuspenseList";
      }
      if (typeof a8 == "object")
        switch (a8.$$typeof) {
          case Wb:
            return (a8.displayName || "Context") + ".Consumer";
          case Vb:
            return (a8._context.displayName || "Context") + ".Provider";
          case Xb:
            var b = a8.render;
            return a8 = a8.displayName, a8 || (a8 = b.displayName || b.name || "", a8 = a8 !== "" ? "ForwardRef(" + a8 + ")" : "ForwardRef"), a8;
          case $b:
            return b = a8.displayName || null, b !== null ? b : gc(a8.type) || "Memo";
          case ac:
            b = a8._payload, a8 = a8._init;
            try {
              return gc(a8(b));
            } catch {
            }
        }
      return null;
    }
    var hc = {};
    function ic(a8, b) {
      if (a8 = a8.contextTypes, !a8)
        return hc;
      var c = {}, d;
      for (d in a8)
        c[d] = b[d];
      return c;
    }
    var P = null;
    function Q(a8, b) {
      if (a8 !== b) {
        a8.context._currentValue = a8.parentValue, a8 = a8.parent;
        var c = b.parent;
        if (a8 === null) {
          if (c !== null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
        } else {
          if (c === null)
            throw Error("The stacks must reach the root at the same time. This is a bug in React.");
          Q(a8, c);
        }
        b.context._currentValue = b.value;
      }
    }
    function jc(a8) {
      a8.context._currentValue = a8.parentValue, a8 = a8.parent, a8 !== null && jc(a8);
    }
    function kc(a8) {
      var b = a8.parent;
      b !== null && kc(b), a8.context._currentValue = a8.value;
    }
    function lc(a8, b) {
      if (a8.context._currentValue = a8.parentValue, a8 = a8.parent, a8 === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a8.depth === b.depth ? Q(a8, b) : lc(a8, b);
    }
    function mc(a8, b) {
      var c = b.parent;
      if (c === null)
        throw Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
      a8.depth === c.depth ? Q(a8, c) : mc(a8, c), b.context._currentValue = b.value;
    }
    function nc(a8) {
      var b = P;
      b !== a8 && (b === null ? kc(a8) : a8 === null ? jc(b) : b.depth === a8.depth ? Q(b, a8) : b.depth > a8.depth ? lc(b, a8) : mc(b, a8), P = a8);
    }
    var oc = { isMounted: function() {
      return !1;
    }, enqueueSetState: function(a8, b) {
      a8 = a8._reactInternals, a8.queue !== null && a8.queue.push(b);
    }, enqueueReplaceState: function(a8, b) {
      a8 = a8._reactInternals, a8.replace = !0, a8.queue = [b];
    }, enqueueForceUpdate: function() {
    } };
    function pc(a8, b, c, d) {
      var f = a8.state !== void 0 ? a8.state : null;
      a8.updater = oc, a8.props = c, a8.state = f;
      var e23 = { queue: [], replace: !1 };
      a8._reactInternals = e23;
      var g = b.contextType;
      if (a8.context = typeof g == "object" && g !== null ? g._currentValue : d, g = b.getDerivedStateFromProps, typeof g == "function" && (g = g(c, f), f = g == null ? f : O({}, f, g), a8.state = f), typeof b.getDerivedStateFromProps != "function" && typeof a8.getSnapshotBeforeUpdate != "function" && (typeof a8.UNSAFE_componentWillMount == "function" || typeof a8.componentWillMount == "function"))
        if (b = a8.state, typeof a8.componentWillMount == "function" && a8.componentWillMount(), typeof a8.UNSAFE_componentWillMount == "function" && a8.UNSAFE_componentWillMount(), b !== a8.state && oc.enqueueReplaceState(a8, a8.state, null), e23.queue !== null && 0 < e23.queue.length)
          if (b = e23.queue, g = e23.replace, e23.queue = null, e23.replace = !1, g && b.length === 1)
            a8.state = b[0];
          else {
            for (e23 = g ? b[0] : a8.state, f = !0, g = g ? 1 : 0; g < b.length; g++) {
              var h = b[g];
              h = typeof h == "function" ? h.call(a8, e23, c, d) : h, h != null && (f ? (f = !1, e23 = O({}, e23, h)) : O(e23, h));
            }
            a8.state = e23;
          }
        else
          e23.queue = null;
    }
    var qc = { id: 1, overflow: "" };
    function rc(a8, b, c) {
      var d = a8.id;
      a8 = a8.overflow;
      var f = 32 - sc(d) - 1;
      d &= ~(1 << f), c += 1;
      var e23 = 32 - sc(b) + f;
      if (30 < e23) {
        var g = f - f % 5;
        return e23 = (d & (1 << g) - 1).toString(32), d >>= g, f -= g, { id: 1 << 32 - sc(b) + f | c << f | d, overflow: e23 + a8 };
      }
      return { id: 1 << e23 | c << f | d, overflow: a8 };
    }
    var sc = Math.clz32 ? Math.clz32 : tc, uc = Math.log, vc = Math.LN2;
    function tc(a8) {
      return a8 >>>= 0, a8 === 0 ? 32 : 31 - (uc(a8) / vc | 0) | 0;
    }
    function wc(a8, b) {
      return a8 === b && (a8 !== 0 || 1 / a8 === 1 / b) || a8 !== a8 && b !== b;
    }
    var xc = typeof Object.is == "function" ? Object.is : wc, R = null, yc = null, zc = null, S = null, T = !1, Ac = !1, U = 0, V = null, Bc = 0;
    function W() {
      if (R === null)
        throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
      return R;
    }
    function Cc() {
      if (0 < Bc)
        throw Error("Rendered more hooks than during the previous render");
      return { memoizedState: null, queue: null, next: null };
    }
    function Dc() {
      return S === null ? zc === null ? (T = !1, zc = S = Cc()) : (T = !0, S = zc) : S.next === null ? (T = !1, S = S.next = Cc()) : (T = !0, S = S.next), S;
    }
    function Ec() {
      yc = R = null, Ac = !1, zc = null, Bc = 0, S = V = null;
    }
    function Fc(a8, b) {
      return typeof b == "function" ? b(a8) : b;
    }
    function Gc(a8, b, c) {
      if (R = W(), S = Dc(), T) {
        var d = S.queue;
        if (b = d.dispatch, V !== null && (c = V.get(d), c !== void 0)) {
          V.delete(d), d = S.memoizedState;
          do
            d = a8(d, c.action), c = c.next;
          while (c !== null);
          return S.memoizedState = d, [d, b];
        }
        return [S.memoizedState, b];
      }
      return a8 = a8 === Fc ? typeof b == "function" ? b() : b : c !== void 0 ? c(b) : b, S.memoizedState = a8, a8 = S.queue = { last: null, dispatch: null }, a8 = a8.dispatch = Hc.bind(null, R, a8), [S.memoizedState, a8];
    }
    function Ic(a8, b) {
      if (R = W(), S = Dc(), b = b === void 0 ? null : b, S !== null) {
        var c = S.memoizedState;
        if (c !== null && b !== null) {
          var d = c[1];
          a:
            if (d === null)
              d = !1;
            else {
              for (var f = 0; f < d.length && f < b.length; f++)
                if (!xc(b[f], d[f])) {
                  d = !1;
                  break a;
                }
              d = !0;
            }
          if (d)
            return c[0];
        }
      }
      return a8 = a8(), S.memoizedState = [a8, b], a8;
    }
    function Hc(a8, b, c) {
      if (25 <= Bc)
        throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
      if (a8 === R)
        if (Ac = !0, a8 = { action: c, next: null }, V === null && (V = /* @__PURE__ */ new Map()), c = V.get(b), c === void 0)
          V.set(b, a8);
        else {
          for (b = c; b.next !== null; )
            b = b.next;
          b.next = a8;
        }
    }
    function Jc() {
      throw Error("startTransition cannot be called during server rendering.");
    }
    function Kc() {
    }
    var Mc = { readContext: function(a8) {
      return a8._currentValue;
    }, useContext: function(a8) {
      return W(), a8._currentValue;
    }, useMemo: Ic, useReducer: Gc, useRef: function(a8) {
      R = W(), S = Dc();
      var b = S.memoizedState;
      return b === null ? (a8 = { current: a8 }, S.memoizedState = a8) : b;
    }, useState: function(a8) {
      return Gc(Fc, a8);
    }, useInsertionEffect: Kc, useLayoutEffect: function() {
    }, useCallback: function(a8, b) {
      return Ic(function() {
        return a8;
      }, b);
    }, useImperativeHandle: Kc, useEffect: Kc, useDebugValue: Kc, useDeferredValue: function(a8) {
      return W(), a8;
    }, useTransition: function() {
      return W(), [!1, Jc];
    }, useId: function() {
      var a8 = yc.treeContext, b = a8.overflow;
      a8 = a8.id, a8 = (a8 & ~(1 << 32 - sc(a8) - 1)).toString(32) + b;
      var c = Lc;
      if (c === null)
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
      return b = U++, a8 = ":" + c.idPrefix + "R" + a8, 0 < b && (a8 += "H" + b.toString(32)), a8 + ":";
    }, useMutableSource: function(a8, b) {
      return W(), b(a8._source);
    }, useSyncExternalStore: function(a8, b, c) {
      if (c === void 0)
        throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
      return c();
    } }, Lc = null, Nc = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Oc(a8) {
      return console.error(a8), null;
    }
    function X() {
    }
    function Pc(a8, b) {
      var c = a8.pingedTasks;
      c.push(b), c.length === 1 && setImmediate(function() {
        return Qc(a8);
      });
    }
    function Rc(a8, b, c, d, f, e23, g, h) {
      a8.allPendingTasks++, c === null ? a8.pendingRootTasks++ : c.pendingTasks++;
      var m = { node: b, ping: function() {
        return Pc(a8, m);
      }, blockedBoundary: c, blockedSegment: d, abortSet: f, legacyContext: e23, context: g, treeContext: h };
      return f.add(m), m;
    }
    function Sc(a8, b, c, d, f, e23) {
      return { status: 0, id: -1, index: b, parentFlushed: !1, chunks: [], children: [], formatContext: d, boundary: c, lastPushedText: f, textEmbedded: e23 };
    }
    function Y(a8, b) {
      if (a8 = a8.onError(b), a8 != null && typeof a8 != "string")
        throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a8 + '" instead');
      return a8;
    }
    function Tc(a8, b) {
      var c = a8.onShellError;
      c(b), c = a8.onFatalError, c(b), a8.destination !== null ? (a8.status = 2, a8.destination.destroy(b)) : (a8.status = 1, a8.fatalError = b);
    }
    function Uc(a8, b, c, d, f) {
      for (R = {}, yc = b, U = 0, a8 = c(d, f); Ac; )
        Ac = !1, U = 0, Bc += 1, S = null, a8 = c(d, f);
      return Ec(), a8;
    }
    function Vc(a8, b, c, d) {
      var f = c.render(), e23 = d.childContextTypes;
      if (e23 != null) {
        var g = b.legacyContext;
        if (typeof c.getChildContext != "function")
          d = g;
        else {
          c = c.getChildContext();
          for (var h in c)
            if (!(h in e23))
              throw Error((gc(d) || "Unknown") + '.getChildContext(): key "' + h + '" is not defined in childContextTypes.');
          d = O({}, g, c);
        }
        b.legacyContext = d, Z(a8, b, f), b.legacyContext = g;
      } else
        Z(a8, b, f);
    }
    function Wc(a8, b) {
      if (a8 && a8.defaultProps) {
        b = O({}, b), a8 = a8.defaultProps;
        for (var c in a8)
          b[c] === void 0 && (b[c] = a8[c]);
        return b;
      }
      return b;
    }
    function Xc(a8, b, c, d, f) {
      if (typeof c == "function")
        if (c.prototype && c.prototype.isReactComponent) {
          f = ic(c, b.legacyContext);
          var e23 = c.contextType;
          e23 = new c(d, typeof e23 == "object" && e23 !== null ? e23._currentValue : f), pc(e23, c, d, f), Vc(a8, b, e23, c);
        } else {
          e23 = ic(c, b.legacyContext), f = Uc(a8, b, c, d, e23);
          var g = U !== 0;
          if (typeof f == "object" && f !== null && typeof f.render == "function" && f.$$typeof === void 0)
            pc(f, c, d, e23), Vc(a8, b, f, c);
          else if (g) {
            d = b.treeContext, b.treeContext = rc(d, 1, 0);
            try {
              Z(a8, b, f);
            } finally {
              b.treeContext = d;
            }
          } else
            Z(a8, b, f);
        }
      else if (typeof c == "string") {
        switch (f = b.blockedSegment, e23 = Pa(f.chunks, c, d, a8.responseState, f.formatContext), f.lastPushedText = !1, g = f.formatContext, f.formatContext = ya(g, c, d), Yc(a8, b, e23), f.formatContext = g, c) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            f.chunks.push(Qa, c, Ra);
        }
        f.lastPushedText = !1;
      } else {
        switch (c) {
          case dc:
          case cc:
          case Tb:
          case Ub:
          case Sb:
            Z(a8, b, d.children);
            return;
          case Zb:
            Z(
              a8,
              b,
              d.children
            );
            return;
          case bc:
            throw Error("ReactDOMServer does not yet support scope components.");
          case Yb:
            a: {
              c = b.blockedBoundary, f = b.blockedSegment, e23 = d.fallback, d = d.children, g = /* @__PURE__ */ new Set();
              var h = { id: null, rootSegmentID: -1, parentFlushed: !1, pendingTasks: 0, forceClientRender: !1, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g, errorDigest: null }, m = Sc(a8, f.chunks.length, h, f.formatContext, !1, !1);
              f.children.push(m), f.lastPushedText = !1;
              var n = Sc(a8, 0, null, f.formatContext, !1, !1);
              n.parentFlushed = !0, b.blockedBoundary = h, b.blockedSegment = n;
              try {
                if (Yc(a8, b, d), n.lastPushedText && n.textEmbedded && n.chunks.push(za), n.status = 1, Zc(h, n), h.pendingTasks === 0)
                  break a;
              } catch (p) {
                n.status = 4, h.forceClientRender = !0, h.errorDigest = Y(a8, p);
              } finally {
                b.blockedBoundary = c, b.blockedSegment = f;
              }
              b = Rc(a8, e23, c, m, g, b.legacyContext, b.context, b.treeContext), a8.pingedTasks.push(b);
            }
            return;
        }
        if (typeof c == "object" && c !== null)
          switch (c.$$typeof) {
            case Xb:
              if (d = Uc(a8, b, c.render, d, f), U !== 0) {
                c = b.treeContext, b.treeContext = rc(c, 1, 0);
                try {
                  Z(a8, b, d);
                } finally {
                  b.treeContext = c;
                }
              } else
                Z(
                  a8,
                  b,
                  d
                );
              return;
            case $b:
              c = c.type, d = Wc(c, d), Xc(a8, b, c, d, f);
              return;
            case Vb:
              if (f = d.children, c = c._context, d = d.value, e23 = c._currentValue, c._currentValue = d, g = P, P = d = { parent: g, depth: g === null ? 0 : g.depth + 1, context: c, parentValue: e23, value: d }, b.context = d, Z(a8, b, f), a8 = P, a8 === null)
                throw Error("Tried to pop a Context at the root of the app. This is a bug in React.");
              d = a8.parentValue, a8.context._currentValue = d === ec ? a8.context._defaultValue : d, a8 = P = a8.parent, b.context = a8;
              return;
            case Wb:
              d = d.children, d = d(c._currentValue), Z(a8, b, d);
              return;
            case ac:
              f = c._init, c = f(c._payload), d = Wc(c, d), Xc(a8, b, c, d, void 0);
              return;
          }
        throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((c == null ? c : typeof c) + "."));
      }
    }
    function Z(a8, b, c) {
      if (b.node = c, typeof c == "object" && c !== null) {
        switch (c.$$typeof) {
          case Qb:
            Xc(a8, b, c.type, c.props, c.ref);
            return;
          case Rb:
            throw Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
          case ac:
            var d = c._init;
            c = d(c._payload), Z(a8, b, c);
            return;
        }
        if (qa(c)) {
          $c(a8, b, c);
          return;
        }
        if (c === null || typeof c != "object" ? d = null : (d = fc && c[fc] || c["@@iterator"], d = typeof d == "function" ? d : null), d && (d = d.call(c))) {
          if (c = d.next(), !c.done) {
            var f = [];
            do
              f.push(c.value), c = d.next();
            while (!c.done);
            $c(a8, b, f);
          }
          return;
        }
        throw a8 = Object.prototype.toString.call(c), Error("Objects are not valid as a React child (found: " + (a8 === "[object Object]" ? "object with keys {" + Object.keys(c).join(", ") + "}" : a8) + "). If you meant to render a collection of children, use an array instead.");
      }
      typeof c == "string" ? (d = b.blockedSegment, d.lastPushedText = Aa(b.blockedSegment.chunks, c, a8.responseState, d.lastPushedText)) : typeof c == "number" && (d = b.blockedSegment, d.lastPushedText = Aa(
        b.blockedSegment.chunks,
        "" + c,
        a8.responseState,
        d.lastPushedText
      ));
    }
    function $c(a8, b, c) {
      for (var d = c.length, f = 0; f < d; f++) {
        var e23 = b.treeContext;
        b.treeContext = rc(e23, d, f);
        try {
          Yc(a8, b, c[f]);
        } finally {
          b.treeContext = e23;
        }
      }
    }
    function Yc(a8, b, c) {
      var d = b.blockedSegment.formatContext, f = b.legacyContext, e23 = b.context;
      try {
        return Z(a8, b, c);
      } catch (m) {
        if (Ec(), typeof m == "object" && m !== null && typeof m.then == "function") {
          c = m;
          var g = b.blockedSegment, h = Sc(a8, g.chunks.length, null, g.formatContext, g.lastPushedText, !0);
          g.children.push(h), g.lastPushedText = !1, a8 = Rc(a8, b.node, b.blockedBoundary, h, b.abortSet, b.legacyContext, b.context, b.treeContext).ping, c.then(a8, a8), b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e23, nc(e23);
        } else
          throw b.blockedSegment.formatContext = d, b.legacyContext = f, b.context = e23, nc(e23), m;
      }
    }
    function ad(a8) {
      var b = a8.blockedBoundary;
      a8 = a8.blockedSegment, a8.status = 3, bd(this, b, a8);
    }
    function cd(a8, b, c) {
      var d = a8.blockedBoundary;
      a8.blockedSegment.status = 3, d === null ? (b.allPendingTasks--, b.status !== 2 && (b.status = 2, b.destination !== null && b.destination.end())) : (d.pendingTasks--, d.forceClientRender || (d.forceClientRender = !0, d.errorDigest = b.onError(c === void 0 ? Error("The render was aborted by the server without a reason.") : c), d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function(a9) {
        return cd(a9, b, c);
      }), d.fallbackAbortableTasks.clear(), b.allPendingTasks--, b.allPendingTasks === 0 && (a8 = b.onAllReady, a8()));
    }
    function Zc(a8, b) {
      if (b.chunks.length === 0 && b.children.length === 1 && b.children[0].boundary === null) {
        var c = b.children[0];
        c.id = b.id, c.parentFlushed = !0, c.status === 1 && Zc(a8, c);
      } else
        a8.completedSegments.push(b);
    }
    function bd(a8, b, c) {
      if (b === null) {
        if (c.parentFlushed) {
          if (a8.completedRootSegment !== null)
            throw Error("There can only be one root segment. This is a bug in React.");
          a8.completedRootSegment = c;
        }
        a8.pendingRootTasks--, a8.pendingRootTasks === 0 && (a8.onShellError = X, b = a8.onShellReady, b());
      } else
        b.pendingTasks--, b.forceClientRender || (b.pendingTasks === 0 ? (c.parentFlushed && c.status === 1 && Zc(b, c), b.parentFlushed && a8.completedBoundaries.push(b), b.fallbackAbortableTasks.forEach(ad, a8), b.fallbackAbortableTasks.clear()) : c.parentFlushed && c.status === 1 && (Zc(b, c), b.completedSegments.length === 1 && b.parentFlushed && a8.partialBoundaries.push(b)));
      a8.allPendingTasks--, a8.allPendingTasks === 0 && (a8 = a8.onAllReady, a8());
    }
    function Qc(a8) {
      if (a8.status !== 2) {
        var b = P, c = Nc.current;
        Nc.current = Mc;
        var d = Lc;
        Lc = a8.responseState;
        try {
          var f = a8.pingedTasks, e23;
          for (e23 = 0; e23 < f.length; e23++) {
            var g = f[e23], h = a8, m = g.blockedSegment;
            if (m.status === 0) {
              nc(g.context);
              try {
                Z(h, g, g.node), m.lastPushedText && m.textEmbedded && m.chunks.push(za), g.abortSet.delete(g), m.status = 1, bd(h, g.blockedBoundary, m);
              } catch (E) {
                if (Ec(), typeof E == "object" && E !== null && typeof E.then == "function") {
                  var n = g.ping;
                  E.then(n, n);
                } else {
                  g.abortSet.delete(g), m.status = 4;
                  var p = g.blockedBoundary, v = E, C = Y(h, v);
                  if (p === null ? Tc(h, v) : (p.pendingTasks--, p.forceClientRender || (p.forceClientRender = !0, p.errorDigest = C, p.parentFlushed && h.clientRenderedBoundaries.push(p))), h.allPendingTasks--, h.allPendingTasks === 0) {
                    var D = h.onAllReady;
                    D();
                  }
                }
              } finally {
              }
            }
          }
          f.splice(0, e23), a8.destination !== null && dd(a8, a8.destination);
        } catch (E) {
          Y(a8, E), Tc(a8, E);
        } finally {
          Lc = d, Nc.current = c, c === Mc && nc(b);
        }
      }
    }
    function ed(a8, b, c) {
      switch (c.parentFlushed = !0, c.status) {
        case 0:
          var d = c.id = a8.nextSegmentId++;
          return c.lastPushedText = !1, c.textEmbedded = !1, a8 = a8.responseState, r24(b, Sa), r24(b, a8.placeholderPrefix), a8 = d.toString(16), r24(b, a8), w(b, Ta);
        case 1:
          c.status = 2;
          var f = !0;
          d = c.chunks;
          var e23 = 0;
          c = c.children;
          for (var g = 0; g < c.length; g++) {
            for (f = c[g]; e23 < f.index; e23++)
              r24(b, d[e23]);
            f = fd(a8, b, f);
          }
          for (; e23 < d.length - 1; e23++)
            r24(b, d[e23]);
          return e23 < d.length && (f = w(b, d[e23])), f;
        default:
          throw Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
      }
    }
    function fd(a8, b, c) {
      var d = c.boundary;
      if (d === null)
        return ed(a8, b, c);
      if (d.parentFlushed = !0, d.forceClientRender)
        d = d.errorDigest, w(b, Xa), r24(b, Za), d && (r24(b, ab), r24(b, F(d)), r24(b, $a)), w(b, bb), ed(a8, b, c);
      else if (0 < d.pendingTasks) {
        d.rootSegmentID = a8.nextSegmentId++, 0 < d.completedSegments.length && a8.partialBoundaries.push(d);
        var f = a8.responseState, e23 = f.nextSuspenseID++;
        f = x(f.boundaryPrefix + e23.toString(16)), d = d.id = f, cb(b, a8.responseState, d), ed(a8, b, c);
      } else if (d.byteSize > a8.progressiveChunkSize)
        d.rootSegmentID = a8.nextSegmentId++, a8.completedBoundaries.push(d), cb(b, a8.responseState, d.id), ed(a8, b, c);
      else {
        if (w(b, Ua), c = d.completedSegments, c.length !== 1)
          throw Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
        fd(a8, b, c[0]);
      }
      return w(b, Ya);
    }
    function gd(a8, b, c) {
      return yb(b, a8.responseState, c.formatContext, c.id), fd(a8, b, c), zb(b, c.formatContext);
    }
    function hd(a8, b, c) {
      for (var d = c.completedSegments, f = 0; f < d.length; f++)
        id3(a8, b, c, d[f]);
      if (d.length = 0, a8 = a8.responseState, d = c.id, c = c.rootSegmentID, r24(b, a8.startInlineScript), a8.sentCompleteBoundaryFunction ? r24(b, Gb) : (a8.sentCompleteBoundaryFunction = !0, r24(b, Fb)), d === null)
        throw Error("An ID must have been assigned before we can complete the boundary.");
      return c = c.toString(16), r24(b, d), r24(b, Hb), r24(b, a8.segmentPrefix), r24(b, c), w(b, Ib);
    }
    function id3(a8, b, c, d) {
      if (d.status === 2)
        return !0;
      var f = d.id;
      if (f === -1) {
        if ((d.id = c.rootSegmentID) === -1)
          throw Error("A root segment ID must have been assigned by now. This is a bug in React.");
        return gd(a8, b, d);
      }
      return gd(a8, b, d), a8 = a8.responseState, r24(b, a8.startInlineScript), a8.sentCompleteSegmentFunction ? r24(b, Bb) : (a8.sentCompleteSegmentFunction = !0, r24(b, Ab)), r24(b, a8.segmentPrefix), f = f.toString(16), r24(b, f), r24(b, Cb), r24(b, a8.placeholderPrefix), r24(b, f), w(b, Db);
    }
    function dd(a8, b) {
      k = new Uint8Array(2048), l9 = 0, q = !0;
      try {
        var c = a8.completedRootSegment;
        if (c !== null && a8.pendingRootTasks === 0) {
          fd(a8, b, c), a8.completedRootSegment = null;
          var d = a8.responseState.bootstrapChunks;
          for (c = 0; c < d.length - 1; c++)
            r24(b, d[c]);
          c < d.length && w(b, d[c]);
        }
        var f = a8.clientRenderedBoundaries, e23;
        for (e23 = 0; e23 < f.length; e23++) {
          var g = f[e23];
          d = b;
          var h = a8.responseState, m = g.id, n = g.errorDigest, p = g.errorMessage, v = g.errorComponentStack;
          if (r24(d, h.startInlineScript), h.sentClientRenderFunction ? r24(d, Kb) : (h.sentClientRenderFunction = !0, r24(d, Jb)), m === null)
            throw Error("An ID must have been assigned before we can complete the boundary.");
          if (r24(d, m), r24(d, Lb), (n || p || v) && (r24(d, Nb), r24(d, Pb(n || ""))), (p || v) && (r24(d, Nb), r24(d, Pb(p || ""))), v && (r24(d, Nb), r24(d, Pb(v))), !w(d, Mb)) {
            a8.destination = null, e23++, f.splice(0, e23);
            return;
          }
        }
        f.splice(0, e23);
        var C = a8.completedBoundaries;
        for (e23 = 0; e23 < C.length; e23++)
          if (!hd(a8, b, C[e23])) {
            a8.destination = null, e23++, C.splice(0, e23);
            return;
          }
        C.splice(0, e23), ca(b), k = new Uint8Array(2048), l9 = 0, q = !0;
        var D = a8.partialBoundaries;
        for (e23 = 0; e23 < D.length; e23++) {
          var E = D[e23];
          a: {
            f = a8, g = b;
            var na = E.completedSegments;
            for (h = 0; h < na.length; h++)
              if (!id3(f, g, E, na[h])) {
                h++, na.splice(0, h);
                var Eb = !1;
                break a;
              }
            na.splice(0, h), Eb = !0;
          }
          if (!Eb) {
            a8.destination = null, e23++, D.splice(0, e23);
            return;
          }
        }
        D.splice(0, e23);
        var oa = a8.completedBoundaries;
        for (e23 = 0; e23 < oa.length; e23++)
          if (!hd(a8, b, oa[e23])) {
            a8.destination = null, e23++, oa.splice(0, e23);
            return;
          }
        oa.splice(0, e23);
      } finally {
        ca(b), typeof b.flush == "function" && b.flush(), a8.allPendingTasks === 0 && a8.pingedTasks.length === 0 && a8.clientRenderedBoundaries.length === 0 && a8.completedBoundaries.length === 0 && b.end();
      }
    }
    function jd(a8) {
      setImmediate(function() {
        return Qc(a8);
      });
    }
    function kd(a8, b) {
      if (a8.status === 1)
        a8.status = 2, b.destroy(a8.fatalError);
      else if (a8.status !== 2 && a8.destination === null) {
        a8.destination = b;
        try {
          dd(a8, b);
        } catch (c) {
          Y(a8, c), Tc(a8, c);
        }
      }
    }
    function ld(a8, b) {
      try {
        var c = a8.abortableTasks;
        c.forEach(function(c2) {
          return cd(c2, a8, b);
        }), c.clear(), a8.destination !== null && dd(a8, a8.destination);
      } catch (d) {
        Y(a8, d), Tc(a8, d);
      }
    }
    function md(a8, b) {
      return function() {
        return kd(b, a8);
      };
    }
    function nd(a8, b) {
      return function() {
        return ld(a8, b);
      };
    }
    function od(a8, b) {
      var c = b ? b.identifierPrefix : void 0, d = b ? b.nonce : void 0, f = b ? b.bootstrapScriptContent : void 0, e23 = b ? b.bootstrapScripts : void 0, g = b ? b.bootstrapModules : void 0;
      c = c === void 0 ? "" : c, d = d === void 0 ? ra : x('<script nonce="' + F(d) + '">');
      var h = [];
      if (f !== void 0 && h.push(d, ("" + f).replace(wa, xa), sa), e23 !== void 0)
        for (f = 0; f < e23.length; f++)
          h.push(ta, F(e23[f]), va);
      if (g !== void 0)
        for (e23 = 0; e23 < g.length; e23++)
          h.push(ua, F(g[e23]), va);
      g = {
        bootstrapChunks: h,
        startInlineScript: d,
        placeholderPrefix: x(c + "P:"),
        segmentPrefix: x(c + "S:"),
        boundaryPrefix: c + "B:",
        idPrefix: c,
        nextSuspenseID: 0,
        sentCompleteSegmentFunction: !1,
        sentCompleteBoundaryFunction: !1,
        sentClientRenderFunction: !1
      }, e23 = b ? b.namespaceURI : void 0, e23 = G(e23 === "http://www.w3.org/2000/svg" ? 2 : e23 === "http://www.w3.org/1998/Math/MathML" ? 3 : 0, null), f = b ? b.progressiveChunkSize : void 0, d = b ? b.onError : void 0, h = b ? b.onAllReady : void 0;
      var m = b ? b.onShellReady : void 0, n = b ? b.onShellError : void 0;
      return b = [], c = /* @__PURE__ */ new Set(), g = {
        destination: null,
        responseState: g,
        progressiveChunkSize: f === void 0 ? 12800 : f,
        status: 0,
        fatalError: null,
        nextSegmentId: 0,
        allPendingTasks: 0,
        pendingRootTasks: 0,
        completedRootSegment: null,
        abortableTasks: c,
        pingedTasks: b,
        clientRenderedBoundaries: [],
        completedBoundaries: [],
        partialBoundaries: [],
        onError: d === void 0 ? Oc : d,
        onAllReady: h === void 0 ? X : h,
        onShellReady: m === void 0 ? X : m,
        onShellError: n === void 0 ? X : n,
        onFatalError: X
      }, e23 = Sc(g, 0, null, e23, !1, !1), e23.parentFlushed = !0, a8 = Rc(g, a8, null, e23, c, hc, null, qc), b.push(a8), g;
    }
    exports.renderToPipeableStream = function(a8, b) {
      var c = od(a8, b), d = !1;
      return jd(c), { pipe: function(a9) {
        if (d)
          throw Error("React currently only supports piping to one writable stream.");
        return d = !0, kd(c, a9), a9.on("drain", md(a9, c)), a9.on("error", nd(c, Error("The destination stream errored while writing data."))), a9.on("close", nd(c, Error("The destination stream closed early."))), a9;
      }, abort: function(a9) {
        ld(c, a9);
      } };
    };
    exports.version = "18.2.0";
  }
});

// ../../../node_modules/react-dom/server.node.js
var require_server_node = __commonJS({
  "../../../node_modules/react-dom/server.node.js"(exports) {
    "use strict";
    var l9, s;
    l9 = require_react_dom_server_legacy_node_production_min(), s = require_react_dom_server_node_production_min();
    exports.version = l9.version;
    exports.renderToString = l9.renderToString;
    exports.renderToStaticMarkup = l9.renderToStaticMarkup;
    exports.renderToNodeStream = l9.renderToNodeStream;
    exports.renderToStaticNodeStream = l9.renderToStaticNodeStream;
    exports.renderToPipeableStream = s.renderToPipeableStream;
  }
});

// ../../../node_modules/react/cjs/react-jsx-runtime.production.min.js
var require_react_jsx_runtime_production_min = __commonJS({
  "../../../node_modules/react/cjs/react-jsx-runtime.production.min.js"(exports) {
    "use strict";
    var f = require_react(), k = Symbol.for("react.element"), l9 = Symbol.for("react.fragment"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = { key: !0, ref: !0, __self: !0, __source: !0 };
    function q(c, a8, g) {
      var b, d = {}, e23 = null, h = null;
      g !== void 0 && (e23 = "" + g), a8.key !== void 0 && (e23 = "" + a8.key), a8.ref !== void 0 && (h = a8.ref);
      for (b in a8)
        m.call(a8, b) && !p.hasOwnProperty(b) && (d[b] = a8[b]);
      if (c && c.defaultProps)
        for (b in a8 = c.defaultProps, a8)
          d[b] === void 0 && (d[b] = a8[b]);
      return { $$typeof: k, type: c, key: e23, ref: h, props: d, _owner: n.current };
    }
    exports.Fragment = l9;
    exports.jsx = q;
    exports.jsxs = q;
  }
});

// ../../../node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "../../../node_modules/react/jsx-runtime.js"(exports, module2) {
    "use strict";
    module2.exports = require_react_jsx_runtime_production_min();
  }
});

// ../../../node_modules/scheduler/cjs/scheduler.production.min.js
var require_scheduler_production_min = __commonJS({
  "../../../node_modules/scheduler/cjs/scheduler.production.min.js"(exports) {
    "use strict";
    function f(a8, b) {
      var c = a8.length;
      a8.push(b);
      a:
        for (; 0 < c; ) {
          var d = c - 1 >>> 1, e23 = a8[d];
          if (0 < g(e23, b))
            a8[d] = b, a8[c] = e23, c = d;
          else
            break a;
        }
    }
    function h(a8) {
      return a8.length === 0 ? null : a8[0];
    }
    function k(a8) {
      if (a8.length === 0)
        return null;
      var b = a8[0], c = a8.pop();
      if (c !== b) {
        a8[0] = c;
        a:
          for (var d = 0, e23 = a8.length, w = e23 >>> 1; d < w; ) {
            var m = 2 * (d + 1) - 1, C = a8[m], n = m + 1, x = a8[n];
            if (0 > g(C, c))
              n < e23 && 0 > g(x, C) ? (a8[d] = x, a8[n] = c, d = n) : (a8[d] = C, a8[m] = c, d = m);
            else if (n < e23 && 0 > g(x, c))
              a8[d] = x, a8[n] = c, d = n;
            else
              break a;
          }
      }
      return b;
    }
    function g(a8, b) {
      var c = a8.sortIndex - b.sortIndex;
      return c !== 0 ? c : a8.id - b.id;
    }
    typeof performance == "object" && typeof performance.now == "function" ? (l9 = performance, exports.unstable_now = function() {
      return l9.now();
    }) : (p = Date, q = p.now(), exports.unstable_now = function() {
      return p.now() - q;
    });
    var l9, p, q, r24 = [], t17 = [], u = 1, v = null, y = 3, z = !1, A = !1, B = !1, D = typeof setTimeout == "function" ? setTimeout : null, E = typeof clearTimeout == "function" ? clearTimeout : null, F = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function G(a8) {
      for (var b = h(t17); b !== null; ) {
        if (b.callback === null)
          k(t17);
        else if (b.startTime <= a8)
          k(t17), b.sortIndex = b.expirationTime, f(r24, b);
        else
          break;
        b = h(t17);
      }
    }
    function H(a8) {
      if (B = !1, G(a8), !A)
        if (h(r24) !== null)
          A = !0, I(J);
        else {
          var b = h(t17);
          b !== null && K(H, b.startTime - a8);
        }
    }
    function J(a8, b) {
      A = !1, B && (B = !1, E(L), L = -1), z = !0;
      var c = y;
      try {
        for (G(b), v = h(r24); v !== null && (!(v.expirationTime > b) || a8 && !M()); ) {
          var d = v.callback;
          if (typeof d == "function") {
            v.callback = null, y = v.priorityLevel;
            var e23 = d(v.expirationTime <= b);
            b = exports.unstable_now(), typeof e23 == "function" ? v.callback = e23 : v === h(r24) && k(r24), G(b);
          } else
            k(r24);
          v = h(r24);
        }
        if (v !== null)
          var w = !0;
        else {
          var m = h(t17);
          m !== null && K(H, m.startTime - b), w = !1;
        }
        return w;
      } finally {
        v = null, y = c, z = !1;
      }
    }
    var N = !1, O = null, L = -1, P = 5, Q = -1;
    function M() {
      return !(exports.unstable_now() - Q < P);
    }
    function R() {
      if (O !== null) {
        var a8 = exports.unstable_now();
        Q = a8;
        var b = !0;
        try {
          b = O(!0, a8);
        } finally {
          b ? S() : (N = !1, O = null);
        }
      } else
        N = !1;
    }
    var S;
    typeof F == "function" ? S = function() {
      F(R);
    } : typeof MessageChannel < "u" ? (T = new MessageChannel(), U = T.port2, T.port1.onmessage = R, S = function() {
      U.postMessage(null);
    }) : S = function() {
      D(R, 0);
    };
    var T, U;
    function I(a8) {
      O = a8, N || (N = !0, S());
    }
    function K(a8, b) {
      L = D(function() {
        a8(exports.unstable_now());
      }, b);
    }
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(a8) {
      a8.callback = null;
    };
    exports.unstable_continueExecution = function() {
      A || z || (A = !0, I(J));
    };
    exports.unstable_forceFrameRate = function(a8) {
      0 > a8 || 125 < a8 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a8 ? Math.floor(1e3 / a8) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return y;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return h(r24);
    };
    exports.unstable_next = function(a8) {
      switch (y) {
        case 1:
        case 2:
        case 3:
          var b = 3;
          break;
        default:
          b = y;
      }
      var c = y;
      y = b;
      try {
        return a8();
      } finally {
        y = c;
      }
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = function() {
    };
    exports.unstable_runWithPriority = function(a8, b) {
      switch (a8) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a8 = 3;
      }
      var c = y;
      y = a8;
      try {
        return b();
      } finally {
        y = c;
      }
    };
    exports.unstable_scheduleCallback = function(a8, b, c) {
      var d = exports.unstable_now();
      switch (typeof c == "object" && c !== null ? (c = c.delay, c = typeof c == "number" && 0 < c ? d + c : d) : c = d, a8) {
        case 1:
          var e23 = -1;
          break;
        case 2:
          e23 = 250;
          break;
        case 5:
          e23 = 1073741823;
          break;
        case 4:
          e23 = 1e4;
          break;
        default:
          e23 = 5e3;
      }
      return e23 = c + e23, a8 = { id: u++, callback: b, priorityLevel: a8, startTime: c, expirationTime: e23, sortIndex: -1 }, c > d ? (a8.sortIndex = c, f(t17, a8), h(r24) === null && a8 === h(t17) && (B ? (E(L), L = -1) : B = !0, K(H, c - d))) : (a8.sortIndex = e23, f(r24, a8), A || z || (A = !0, I(J))), a8;
    };
    exports.unstable_shouldYield = M;
    exports.unstable_wrapCallback = function(a8) {
      var b = y;
      return function() {
        var c = y;
        y = b;
        try {
          return a8.apply(this, arguments);
        } finally {
          y = c;
        }
      };
    };
  }
});

// ../../../node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "../../../node_modules/scheduler/index.js"(exports, module2) {
    "use strict";
    module2.exports = require_scheduler_production_min();
  }
});

// ../../../node_modules/react-dom/cjs/react-dom.production.min.js
var require_react_dom_production_min = __commonJS({
  "../../../node_modules/react-dom/cjs/react-dom.production.min.js"(exports) {
    "use strict";
    var aa = require_react(), ca = require_scheduler();
    function p(a8) {
      for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a8, c = 1; c < arguments.length; c++)
        b += "&args[]=" + encodeURIComponent(arguments[c]);
      return "Minified React error #" + a8 + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var da = /* @__PURE__ */ new Set(), ea = {};
    function fa(a8, b) {
      ha(a8, b), ha(a8 + "Capture", b);
    }
    function ha(a8, b) {
      for (ea[a8] = b, a8 = 0; a8 < b.length; a8++)
        da.add(b[a8]);
    }
    var ia = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
    function oa(a8) {
      return ja.call(ma, a8) ? !0 : ja.call(la, a8) ? !1 : ka.test(a8) ? ma[a8] = !0 : (la[a8] = !0, !1);
    }
    function pa(a8, b, c, d) {
      if (c !== null && c.type === 0)
        return !1;
      switch (typeof b) {
        case "function":
        case "symbol":
          return !0;
        case "boolean":
          return d ? !1 : c !== null ? !c.acceptsBooleans : (a8 = a8.toLowerCase().slice(0, 5), a8 !== "data-" && a8 !== "aria-");
        default:
          return !1;
      }
    }
    function qa(a8, b, c, d) {
      if (b === null || typeof b > "u" || pa(a8, b, c, d))
        return !0;
      if (d)
        return !1;
      if (c !== null)
        switch (c.type) {
          case 3:
            return !b;
          case 4:
            return b === !1;
          case 5:
            return isNaN(b);
          case 6:
            return isNaN(b) || 1 > b;
        }
      return !1;
    }
    function v(a8, b, c, d, e23, f, g) {
      this.acceptsBooleans = b === 2 || b === 3 || b === 4, this.attributeName = d, this.attributeNamespace = e23, this.mustUseProperty = c, this.propertyName = a8, this.type = b, this.sanitizeURL = f, this.removeEmptyString = g;
    }
    var z = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a8) {
      z[a8] = new v(a8, 0, !1, a8, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a8) {
      var b = a8[0];
      z[b] = new v(b, 1, !1, a8[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a8) {
      z[a8] = new v(a8, 2, !1, a8.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a8) {
      z[a8] = new v(a8, 2, !1, a8, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a8) {
      z[a8] = new v(a8, 3, !1, a8.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a8) {
      z[a8] = new v(a8, 3, !0, a8, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a8) {
      z[a8] = new v(a8, 4, !1, a8, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a8) {
      z[a8] = new v(a8, 6, !1, a8, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a8) {
      z[a8] = new v(a8, 5, !1, a8.toLowerCase(), null, !1, !1);
    });
    var ra = /[\-:]([a-z])/g;
    function sa(a8) {
      return a8[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a8) {
      var b = a8.replace(
        ra,
        sa
      );
      z[b] = new v(b, 1, !1, a8, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a8) {
      var b = a8.replace(ra, sa);
      z[b] = new v(b, 1, !1, a8, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a8) {
      var b = a8.replace(ra, sa);
      z[b] = new v(b, 1, !1, a8, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a8) {
      z[a8] = new v(a8, 1, !1, a8.toLowerCase(), null, !1, !1);
    });
    z.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a8) {
      z[a8] = new v(a8, 1, !1, a8.toLowerCase(), null, !0, !0);
    });
    function ta(a8, b, c, d) {
      var e23 = z.hasOwnProperty(b) ? z[b] : null;
      (e23 !== null ? e23.type !== 0 : d || !(2 < b.length) || b[0] !== "o" && b[0] !== "O" || b[1] !== "n" && b[1] !== "N") && (qa(b, c, e23, d) && (c = null), d || e23 === null ? oa(b) && (c === null ? a8.removeAttribute(b) : a8.setAttribute(b, "" + c)) : e23.mustUseProperty ? a8[e23.propertyName] = c === null ? e23.type === 3 ? !1 : "" : c : (b = e23.attributeName, d = e23.attributeNamespace, c === null ? a8.removeAttribute(b) : (e23 = e23.type, c = e23 === 3 || e23 === 4 && c === !0 ? "" : "" + c, d ? a8.setAttributeNS(d, b, c) : a8.setAttribute(b, c))));
    }
    var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    Symbol.for("react.debug_trace_mode");
    var Ia = Symbol.for("react.offscreen");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.cache");
    Symbol.for("react.tracing_marker");
    var Ja = Symbol.iterator;
    function Ka(a8) {
      return a8 === null || typeof a8 != "object" ? null : (a8 = Ja && a8[Ja] || a8["@@iterator"], typeof a8 == "function" ? a8 : null);
    }
    var A = Object.assign, La;
    function Ma(a8) {
      if (La === void 0)
        try {
          throw Error();
        } catch (c) {
          var b = c.stack.trim().match(/\n( *(at )?)/);
          La = b && b[1] || "";
        }
      return `
` + La + a8;
    }
    var Na = !1;
    function Oa(a8, b) {
      if (!a8 || Na)
        return "";
      Na = !0;
      var c = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        if (b)
          if (b = function() {
            throw Error();
          }, Object.defineProperty(b.prototype, "props", { set: function() {
            throw Error();
          } }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(b, []);
            } catch (l9) {
              var d = l9;
            }
            Reflect.construct(a8, [], b);
          } else {
            try {
              b.call();
            } catch (l9) {
              d = l9;
            }
            a8.call(b.prototype);
          }
        else {
          try {
            throw Error();
          } catch (l9) {
            d = l9;
          }
          a8();
        }
      } catch (l9) {
        if (l9 && d && typeof l9.stack == "string") {
          for (var e23 = l9.stack.split(`
`), f = d.stack.split(`
`), g = e23.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e23[g] !== f[h]; )
            h--;
          for (; 1 <= g && 0 <= h; g--, h--)
            if (e23[g] !== f[h]) {
              if (g !== 1 || h !== 1)
                do
                  if (g--, h--, 0 > h || e23[g] !== f[h]) {
                    var k = `
` + e23[g].replace(" at new ", " at ");
                    return a8.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a8.displayName)), k;
                  }
                while (1 <= g && 0 <= h);
              break;
            }
        }
      } finally {
        Na = !1, Error.prepareStackTrace = c;
      }
      return (a8 = a8 ? a8.displayName || a8.name : "") ? Ma(a8) : "";
    }
    function Pa(a8) {
      switch (a8.tag) {
        case 5:
          return Ma(a8.type);
        case 16:
          return Ma("Lazy");
        case 13:
          return Ma("Suspense");
        case 19:
          return Ma("SuspenseList");
        case 0:
        case 2:
        case 15:
          return a8 = Oa(a8.type, !1), a8;
        case 11:
          return a8 = Oa(a8.type.render, !1), a8;
        case 1:
          return a8 = Oa(a8.type, !0), a8;
        default:
          return "";
      }
    }
    function Qa(a8) {
      if (a8 == null)
        return null;
      if (typeof a8 == "function")
        return a8.displayName || a8.name || null;
      if (typeof a8 == "string")
        return a8;
      switch (a8) {
        case ya:
          return "Fragment";
        case wa:
          return "Portal";
        case Aa:
          return "Profiler";
        case za:
          return "StrictMode";
        case Ea:
          return "Suspense";
        case Fa:
          return "SuspenseList";
      }
      if (typeof a8 == "object")
        switch (a8.$$typeof) {
          case Ca:
            return (a8.displayName || "Context") + ".Consumer";
          case Ba:
            return (a8._context.displayName || "Context") + ".Provider";
          case Da:
            var b = a8.render;
            return a8 = a8.displayName, a8 || (a8 = b.displayName || b.name || "", a8 = a8 !== "" ? "ForwardRef(" + a8 + ")" : "ForwardRef"), a8;
          case Ga:
            return b = a8.displayName || null, b !== null ? b : Qa(a8.type) || "Memo";
          case Ha:
            b = a8._payload, a8 = a8._init;
            try {
              return Qa(a8(b));
            } catch {
            }
        }
      return null;
    }
    function Ra(a8) {
      var b = a8.type;
      switch (a8.tag) {
        case 24:
          return "Cache";
        case 9:
          return (b.displayName || "Context") + ".Consumer";
        case 10:
          return (b._context.displayName || "Context") + ".Provider";
        case 18:
          return "DehydratedFragment";
        case 11:
          return a8 = b.render, a8 = a8.displayName || a8.name || "", b.displayName || (a8 !== "" ? "ForwardRef(" + a8 + ")" : "ForwardRef");
        case 7:
          return "Fragment";
        case 5:
          return b;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return Qa(b);
        case 8:
          return b === za ? "StrictMode" : "Mode";
        case 22:
          return "Offscreen";
        case 12:
          return "Profiler";
        case 21:
          return "Scope";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
          if (typeof b == "function")
            return b.displayName || b.name || null;
          if (typeof b == "string")
            return b;
      }
      return null;
    }
    function Sa(a8) {
      switch (typeof a8) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return a8;
        case "object":
          return a8;
        default:
          return "";
      }
    }
    function Ta(a8) {
      var b = a8.type;
      return (a8 = a8.nodeName) && a8.toLowerCase() === "input" && (b === "checkbox" || b === "radio");
    }
    function Ua(a8) {
      var b = Ta(a8) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a8.constructor.prototype, b), d = "" + a8[b];
      if (!a8.hasOwnProperty(b) && typeof c < "u" && typeof c.get == "function" && typeof c.set == "function") {
        var e23 = c.get, f = c.set;
        return Object.defineProperty(a8, b, { configurable: !0, get: function() {
          return e23.call(this);
        }, set: function(a9) {
          d = "" + a9, f.call(this, a9);
        } }), Object.defineProperty(a8, b, { enumerable: c.enumerable }), { getValue: function() {
          return d;
        }, setValue: function(a9) {
          d = "" + a9;
        }, stopTracking: function() {
          a8._valueTracker = null, delete a8[b];
        } };
      }
    }
    function Va(a8) {
      a8._valueTracker || (a8._valueTracker = Ua(a8));
    }
    function Wa(a8) {
      if (!a8)
        return !1;
      var b = a8._valueTracker;
      if (!b)
        return !0;
      var c = b.getValue(), d = "";
      return a8 && (d = Ta(a8) ? a8.checked ? "true" : "false" : a8.value), a8 = d, a8 !== c ? (b.setValue(a8), !0) : !1;
    }
    function Xa(a8) {
      if (a8 = a8 || (typeof document < "u" ? document : void 0), typeof a8 > "u")
        return null;
      try {
        return a8.activeElement || a8.body;
      } catch {
        return a8.body;
      }
    }
    function Ya(a8, b) {
      var c = b.checked;
      return A({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c ?? a8._wrapperState.initialChecked });
    }
    function Za(a8, b) {
      var c = b.defaultValue == null ? "" : b.defaultValue, d = b.checked != null ? b.checked : b.defaultChecked;
      c = Sa(b.value != null ? b.value : c), a8._wrapperState = { initialChecked: d, initialValue: c, controlled: b.type === "checkbox" || b.type === "radio" ? b.checked != null : b.value != null };
    }
    function ab(a8, b) {
      b = b.checked, b != null && ta(a8, "checked", b, !1);
    }
    function bb(a8, b) {
      ab(a8, b);
      var c = Sa(b.value), d = b.type;
      if (c != null)
        d === "number" ? (c === 0 && a8.value === "" || a8.value != c) && (a8.value = "" + c) : a8.value !== "" + c && (a8.value = "" + c);
      else if (d === "submit" || d === "reset") {
        a8.removeAttribute("value");
        return;
      }
      b.hasOwnProperty("value") ? cb(a8, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a8, b.type, Sa(b.defaultValue)), b.checked == null && b.defaultChecked != null && (a8.defaultChecked = !!b.defaultChecked);
    }
    function db(a8, b, c) {
      if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
        var d = b.type;
        if (!(d !== "submit" && d !== "reset" || b.value !== void 0 && b.value !== null))
          return;
        b = "" + a8._wrapperState.initialValue, c || b === a8.value || (a8.value = b), a8.defaultValue = b;
      }
      c = a8.name, c !== "" && (a8.name = ""), a8.defaultChecked = !!a8._wrapperState.initialChecked, c !== "" && (a8.name = c);
    }
    function cb(a8, b, c) {
      (b !== "number" || Xa(a8.ownerDocument) !== a8) && (c == null ? a8.defaultValue = "" + a8._wrapperState.initialValue : a8.defaultValue !== "" + c && (a8.defaultValue = "" + c));
    }
    var eb = Array.isArray;
    function fb(a8, b, c, d) {
      if (a8 = a8.options, b) {
        b = {};
        for (var e23 = 0; e23 < c.length; e23++)
          b["$" + c[e23]] = !0;
        for (c = 0; c < a8.length; c++)
          e23 = b.hasOwnProperty("$" + a8[c].value), a8[c].selected !== e23 && (a8[c].selected = e23), e23 && d && (a8[c].defaultSelected = !0);
      } else {
        for (c = "" + Sa(c), b = null, e23 = 0; e23 < a8.length; e23++) {
          if (a8[e23].value === c) {
            a8[e23].selected = !0, d && (a8[e23].defaultSelected = !0);
            return;
          }
          b !== null || a8[e23].disabled || (b = a8[e23]);
        }
        b !== null && (b.selected = !0);
      }
    }
    function gb(a8, b) {
      if (b.dangerouslySetInnerHTML != null)
        throw Error(p(91));
      return A({}, b, { value: void 0, defaultValue: void 0, children: "" + a8._wrapperState.initialValue });
    }
    function hb(a8, b) {
      var c = b.value;
      if (c == null) {
        if (c = b.children, b = b.defaultValue, c != null) {
          if (b != null)
            throw Error(p(92));
          if (eb(c)) {
            if (1 < c.length)
              throw Error(p(93));
            c = c[0];
          }
          b = c;
        }
        b == null && (b = ""), c = b;
      }
      a8._wrapperState = { initialValue: Sa(c) };
    }
    function ib(a8, b) {
      var c = Sa(b.value), d = Sa(b.defaultValue);
      c != null && (c = "" + c, c !== a8.value && (a8.value = c), b.defaultValue == null && a8.defaultValue !== c && (a8.defaultValue = c)), d != null && (a8.defaultValue = "" + d);
    }
    function jb(a8) {
      var b = a8.textContent;
      b === a8._wrapperState.initialValue && b !== "" && b !== null && (a8.value = b);
    }
    function kb(a8) {
      switch (a8) {
        case "svg":
          return "http://www.w3.org/2000/svg";
        case "math":
          return "http://www.w3.org/1998/Math/MathML";
        default:
          return "http://www.w3.org/1999/xhtml";
      }
    }
    function lb(a8, b) {
      return a8 == null || a8 === "http://www.w3.org/1999/xhtml" ? kb(b) : a8 === "http://www.w3.org/2000/svg" && b === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a8;
    }
    var mb, nb = function(a8) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(b, c, d, e23) {
        MSApp.execUnsafeLocalFunction(function() {
          return a8(b, c, d, e23);
        });
      } : a8;
    }(function(a8, b) {
      if (a8.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a8)
        a8.innerHTML = b;
      else {
        for (mb = mb || document.createElement("div"), mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>", b = mb.firstChild; a8.firstChild; )
          a8.removeChild(a8.firstChild);
        for (; b.firstChild; )
          a8.appendChild(b.firstChild);
      }
    });
    function ob(a8, b) {
      if (b) {
        var c = a8.firstChild;
        if (c && c === a8.lastChild && c.nodeType === 3) {
          c.nodeValue = b;
          return;
        }
      }
      a8.textContent = b;
    }
    var pb = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, qb = ["Webkit", "ms", "Moz", "O"];
    Object.keys(pb).forEach(function(a8) {
      qb.forEach(function(b) {
        b = b + a8.charAt(0).toUpperCase() + a8.substring(1), pb[b] = pb[a8];
      });
    });
    function rb(a8, b, c) {
      return b == null || typeof b == "boolean" || b === "" ? "" : c || typeof b != "number" || b === 0 || pb.hasOwnProperty(a8) && pb[a8] ? ("" + b).trim() : b + "px";
    }
    function sb(a8, b) {
      a8 = a8.style;
      for (var c in b)
        if (b.hasOwnProperty(c)) {
          var d = c.indexOf("--") === 0, e23 = rb(c, b[c], d);
          c === "float" && (c = "cssFloat"), d ? a8.setProperty(c, e23) : a8[c] = e23;
        }
    }
    var tb = A({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
    function ub(a8, b) {
      if (b) {
        if (tb[a8] && (b.children != null || b.dangerouslySetInnerHTML != null))
          throw Error(p(137, a8));
        if (b.dangerouslySetInnerHTML != null) {
          if (b.children != null)
            throw Error(p(60));
          if (typeof b.dangerouslySetInnerHTML != "object" || !("__html" in b.dangerouslySetInnerHTML))
            throw Error(p(61));
        }
        if (b.style != null && typeof b.style != "object")
          throw Error(p(62));
      }
    }
    function vb(a8, b) {
      if (a8.indexOf("-") === -1)
        return typeof b.is == "string";
      switch (a8) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var wb = null;
    function xb(a8) {
      return a8 = a8.target || a8.srcElement || window, a8.correspondingUseElement && (a8 = a8.correspondingUseElement), a8.nodeType === 3 ? a8.parentNode : a8;
    }
    var yb = null, zb = null, Ab = null;
    function Bb(a8) {
      if (a8 = Cb(a8)) {
        if (typeof yb != "function")
          throw Error(p(280));
        var b = a8.stateNode;
        b && (b = Db(b), yb(a8.stateNode, a8.type, b));
      }
    }
    function Eb(a8) {
      zb ? Ab ? Ab.push(a8) : Ab = [a8] : zb = a8;
    }
    function Fb() {
      if (zb) {
        var a8 = zb, b = Ab;
        if (Ab = zb = null, Bb(a8), b)
          for (a8 = 0; a8 < b.length; a8++)
            Bb(b[a8]);
      }
    }
    function Gb(a8, b) {
      return a8(b);
    }
    function Hb() {
    }
    var Ib = !1;
    function Jb(a8, b, c) {
      if (Ib)
        return a8(b, c);
      Ib = !0;
      try {
        return Gb(a8, b, c);
      } finally {
        Ib = !1, (zb !== null || Ab !== null) && (Hb(), Fb());
      }
    }
    function Kb(a8, b) {
      var c = a8.stateNode;
      if (c === null)
        return null;
      var d = Db(c);
      if (d === null)
        return null;
      c = d[b];
      a:
        switch (b) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
          case "onMouseEnter":
            (d = !d.disabled) || (a8 = a8.type, d = !(a8 === "button" || a8 === "input" || a8 === "select" || a8 === "textarea")), a8 = !d;
            break a;
          default:
            a8 = !1;
        }
      if (a8)
        return null;
      if (c && typeof c != "function")
        throw Error(p(231, b, typeof c));
      return c;
    }
    var Lb = !1;
    if (ia)
      try {
        Mb = {}, Object.defineProperty(Mb, "passive", { get: function() {
          Lb = !0;
        } }), window.addEventListener("test", Mb, Mb), window.removeEventListener("test", Mb, Mb);
      } catch {
        Lb = !1;
      }
    var Mb;
    function Nb(a8, b, c, d, e23, f, g, h, k) {
      var l9 = Array.prototype.slice.call(arguments, 3);
      try {
        b.apply(c, l9);
      } catch (m) {
        this.onError(m);
      }
    }
    var Ob = !1, Pb = null, Qb = !1, Rb = null, Sb = { onError: function(a8) {
      Ob = !0, Pb = a8;
    } };
    function Tb(a8, b, c, d, e23, f, g, h, k) {
      Ob = !1, Pb = null, Nb.apply(Sb, arguments);
    }
    function Ub(a8, b, c, d, e23, f, g, h, k) {
      if (Tb.apply(this, arguments), Ob) {
        if (Ob) {
          var l9 = Pb;
          Ob = !1, Pb = null;
        } else
          throw Error(p(198));
        Qb || (Qb = !0, Rb = l9);
      }
    }
    function Vb(a8) {
      var b = a8, c = a8;
      if (a8.alternate)
        for (; b.return; )
          b = b.return;
      else {
        a8 = b;
        do
          b = a8, b.flags & 4098 && (c = b.return), a8 = b.return;
        while (a8);
      }
      return b.tag === 3 ? c : null;
    }
    function Wb(a8) {
      if (a8.tag === 13) {
        var b = a8.memoizedState;
        if (b === null && (a8 = a8.alternate, a8 !== null && (b = a8.memoizedState)), b !== null)
          return b.dehydrated;
      }
      return null;
    }
    function Xb(a8) {
      if (Vb(a8) !== a8)
        throw Error(p(188));
    }
    function Yb(a8) {
      var b = a8.alternate;
      if (!b) {
        if (b = Vb(a8), b === null)
          throw Error(p(188));
        return b !== a8 ? null : a8;
      }
      for (var c = a8, d = b; ; ) {
        var e23 = c.return;
        if (e23 === null)
          break;
        var f = e23.alternate;
        if (f === null) {
          if (d = e23.return, d !== null) {
            c = d;
            continue;
          }
          break;
        }
        if (e23.child === f.child) {
          for (f = e23.child; f; ) {
            if (f === c)
              return Xb(e23), a8;
            if (f === d)
              return Xb(e23), b;
            f = f.sibling;
          }
          throw Error(p(188));
        }
        if (c.return !== d.return)
          c = e23, d = f;
        else {
          for (var g = !1, h = e23.child; h; ) {
            if (h === c) {
              g = !0, c = e23, d = f;
              break;
            }
            if (h === d) {
              g = !0, d = e23, c = f;
              break;
            }
            h = h.sibling;
          }
          if (!g) {
            for (h = f.child; h; ) {
              if (h === c) {
                g = !0, c = f, d = e23;
                break;
              }
              if (h === d) {
                g = !0, d = f, c = e23;
                break;
              }
              h = h.sibling;
            }
            if (!g)
              throw Error(p(189));
          }
        }
        if (c.alternate !== d)
          throw Error(p(190));
      }
      if (c.tag !== 3)
        throw Error(p(188));
      return c.stateNode.current === c ? a8 : b;
    }
    function Zb(a8) {
      return a8 = Yb(a8), a8 !== null ? $b(a8) : null;
    }
    function $b(a8) {
      if (a8.tag === 5 || a8.tag === 6)
        return a8;
      for (a8 = a8.child; a8 !== null; ) {
        var b = $b(a8);
        if (b !== null)
          return b;
        a8 = a8.sibling;
      }
      return null;
    }
    var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
    function mc(a8) {
      if (lc && typeof lc.onCommitFiberRoot == "function")
        try {
          lc.onCommitFiberRoot(kc, a8, void 0, (a8.current.flags & 128) === 128);
        } catch {
        }
    }
    var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
    function nc(a8) {
      return a8 >>>= 0, a8 === 0 ? 32 : 31 - (pc(a8) / qc | 0) | 0;
    }
    var rc = 64, sc = 4194304;
    function tc(a8) {
      switch (a8 & -a8) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case 16:
          return 16;
        case 32:
          return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return a8 & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return a8 & 130023424;
        case 134217728:
          return 134217728;
        case 268435456:
          return 268435456;
        case 536870912:
          return 536870912;
        case 1073741824:
          return 1073741824;
        default:
          return a8;
      }
    }
    function uc(a8, b) {
      var c = a8.pendingLanes;
      if (c === 0)
        return 0;
      var d = 0, e23 = a8.suspendedLanes, f = a8.pingedLanes, g = c & 268435455;
      if (g !== 0) {
        var h = g & ~e23;
        h !== 0 ? d = tc(h) : (f &= g, f !== 0 && (d = tc(f)));
      } else
        g = c & ~e23, g !== 0 ? d = tc(g) : f !== 0 && (d = tc(f));
      if (d === 0)
        return 0;
      if (b !== 0 && b !== d && !(b & e23) && (e23 = d & -d, f = b & -b, e23 >= f || e23 === 16 && (f & 4194240) !== 0))
        return b;
      if (d & 4 && (d |= c & 16), b = a8.entangledLanes, b !== 0)
        for (a8 = a8.entanglements, b &= d; 0 < b; )
          c = 31 - oc(b), e23 = 1 << c, d |= a8[c], b &= ~e23;
      return d;
    }
    function vc(a8, b) {
      switch (a8) {
        case 1:
        case 2:
        case 4:
          return b + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return b + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
          return -1;
        default:
          return -1;
      }
    }
    function wc(a8, b) {
      for (var c = a8.suspendedLanes, d = a8.pingedLanes, e23 = a8.expirationTimes, f = a8.pendingLanes; 0 < f; ) {
        var g = 31 - oc(f), h = 1 << g, k = e23[g];
        k === -1 ? (!(h & c) || h & d) && (e23[g] = vc(h, b)) : k <= b && (a8.expiredLanes |= h), f &= ~h;
      }
    }
    function xc(a8) {
      return a8 = a8.pendingLanes & -1073741825, a8 !== 0 ? a8 : a8 & 1073741824 ? 1073741824 : 0;
    }
    function yc() {
      var a8 = rc;
      return rc <<= 1, !(rc & 4194240) && (rc = 64), a8;
    }
    function zc(a8) {
      for (var b = [], c = 0; 31 > c; c++)
        b.push(a8);
      return b;
    }
    function Ac(a8, b, c) {
      a8.pendingLanes |= b, b !== 536870912 && (a8.suspendedLanes = 0, a8.pingedLanes = 0), a8 = a8.eventTimes, b = 31 - oc(b), a8[b] = c;
    }
    function Bc(a8, b) {
      var c = a8.pendingLanes & ~b;
      a8.pendingLanes = b, a8.suspendedLanes = 0, a8.pingedLanes = 0, a8.expiredLanes &= b, a8.mutableReadLanes &= b, a8.entangledLanes &= b, b = a8.entanglements;
      var d = a8.eventTimes;
      for (a8 = a8.expirationTimes; 0 < c; ) {
        var e23 = 31 - oc(c), f = 1 << e23;
        b[e23] = 0, d[e23] = -1, a8[e23] = -1, c &= ~f;
      }
    }
    function Cc(a8, b) {
      var c = a8.entangledLanes |= b;
      for (a8 = a8.entanglements; c; ) {
        var d = 31 - oc(c), e23 = 1 << d;
        e23 & b | a8[d] & b && (a8[d] |= b), c &= ~e23;
      }
    }
    var C = 0;
    function Dc(a8) {
      return a8 &= -a8, 1 < a8 ? 4 < a8 ? a8 & 268435455 ? 16 : 536870912 : 4 : 1;
    }
    var Ec, Fc, Gc, Hc, Ic, Jc = !1, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
    function Sc(a8, b) {
      switch (a8) {
        case "focusin":
        case "focusout":
          Lc = null;
          break;
        case "dragenter":
        case "dragleave":
          Mc = null;
          break;
        case "mouseover":
        case "mouseout":
          Nc = null;
          break;
        case "pointerover":
        case "pointerout":
          Oc.delete(b.pointerId);
          break;
        case "gotpointercapture":
        case "lostpointercapture":
          Pc.delete(b.pointerId);
      }
    }
    function Tc(a8, b, c, d, e23, f) {
      return a8 === null || a8.nativeEvent !== f ? (a8 = { blockedOn: b, domEventName: c, eventSystemFlags: d, nativeEvent: f, targetContainers: [e23] }, b !== null && (b = Cb(b), b !== null && Fc(b)), a8) : (a8.eventSystemFlags |= d, b = a8.targetContainers, e23 !== null && b.indexOf(e23) === -1 && b.push(e23), a8);
    }
    function Uc(a8, b, c, d, e23) {
      switch (b) {
        case "focusin":
          return Lc = Tc(Lc, a8, b, c, d, e23), !0;
        case "dragenter":
          return Mc = Tc(Mc, a8, b, c, d, e23), !0;
        case "mouseover":
          return Nc = Tc(Nc, a8, b, c, d, e23), !0;
        case "pointerover":
          var f = e23.pointerId;
          return Oc.set(f, Tc(Oc.get(f) || null, a8, b, c, d, e23)), !0;
        case "gotpointercapture":
          return f = e23.pointerId, Pc.set(f, Tc(Pc.get(f) || null, a8, b, c, d, e23)), !0;
      }
      return !1;
    }
    function Vc(a8) {
      var b = Wc(a8.target);
      if (b !== null) {
        var c = Vb(b);
        if (c !== null) {
          if (b = c.tag, b === 13) {
            if (b = Wb(c), b !== null) {
              a8.blockedOn = b, Ic(a8.priority, function() {
                Gc(c);
              });
              return;
            }
          } else if (b === 3 && c.stateNode.current.memoizedState.isDehydrated) {
            a8.blockedOn = c.tag === 3 ? c.stateNode.containerInfo : null;
            return;
          }
        }
      }
      a8.blockedOn = null;
    }
    function Xc(a8) {
      if (a8.blockedOn !== null)
        return !1;
      for (var b = a8.targetContainers; 0 < b.length; ) {
        var c = Yc(a8.domEventName, a8.eventSystemFlags, b[0], a8.nativeEvent);
        if (c === null) {
          c = a8.nativeEvent;
          var d = new c.constructor(c.type, c);
          wb = d, c.target.dispatchEvent(d), wb = null;
        } else
          return b = Cb(c), b !== null && Fc(b), a8.blockedOn = c, !1;
        b.shift();
      }
      return !0;
    }
    function Zc(a8, b, c) {
      Xc(a8) && c.delete(b);
    }
    function $c() {
      Jc = !1, Lc !== null && Xc(Lc) && (Lc = null), Mc !== null && Xc(Mc) && (Mc = null), Nc !== null && Xc(Nc) && (Nc = null), Oc.forEach(Zc), Pc.forEach(Zc);
    }
    function ad(a8, b) {
      a8.blockedOn === b && (a8.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
    }
    function bd(a8) {
      function b(b2) {
        return ad(b2, a8);
      }
      if (0 < Kc.length) {
        ad(Kc[0], a8);
        for (var c = 1; c < Kc.length; c++) {
          var d = Kc[c];
          d.blockedOn === a8 && (d.blockedOn = null);
        }
      }
      for (Lc !== null && ad(Lc, a8), Mc !== null && ad(Mc, a8), Nc !== null && ad(Nc, a8), Oc.forEach(b), Pc.forEach(b), c = 0; c < Qc.length; c++)
        d = Qc[c], d.blockedOn === a8 && (d.blockedOn = null);
      for (; 0 < Qc.length && (c = Qc[0], c.blockedOn === null); )
        Vc(c), c.blockedOn === null && Qc.shift();
    }
    var cd = ua.ReactCurrentBatchConfig, dd = !0;
    function ed(a8, b, c, d) {
      var e23 = C, f = cd.transition;
      cd.transition = null;
      try {
        C = 1, fd(a8, b, c, d);
      } finally {
        C = e23, cd.transition = f;
      }
    }
    function gd(a8, b, c, d) {
      var e23 = C, f = cd.transition;
      cd.transition = null;
      try {
        C = 4, fd(a8, b, c, d);
      } finally {
        C = e23, cd.transition = f;
      }
    }
    function fd(a8, b, c, d) {
      if (dd) {
        var e23 = Yc(a8, b, c, d);
        if (e23 === null)
          hd(a8, b, d, id3, c), Sc(a8, d);
        else if (Uc(e23, a8, b, c, d))
          d.stopPropagation();
        else if (Sc(a8, d), b & 4 && -1 < Rc.indexOf(a8)) {
          for (; e23 !== null; ) {
            var f = Cb(e23);
            if (f !== null && Ec(f), f = Yc(a8, b, c, d), f === null && hd(a8, b, d, id3, c), f === e23)
              break;
            e23 = f;
          }
          e23 !== null && d.stopPropagation();
        } else
          hd(a8, b, d, null, c);
      }
    }
    var id3 = null;
    function Yc(a8, b, c, d) {
      if (id3 = null, a8 = xb(d), a8 = Wc(a8), a8 !== null)
        if (b = Vb(a8), b === null)
          a8 = null;
        else if (c = b.tag, c === 13) {
          if (a8 = Wb(b), a8 !== null)
            return a8;
          a8 = null;
        } else if (c === 3) {
          if (b.stateNode.current.memoizedState.isDehydrated)
            return b.tag === 3 ? b.stateNode.containerInfo : null;
          a8 = null;
        } else
          b !== a8 && (a8 = null);
      return id3 = a8, null;
    }
    function jd(a8) {
      switch (a8) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return 4;
        case "message":
          switch (ec()) {
            case fc:
              return 1;
            case gc:
              return 4;
            case hc:
            case ic:
              return 16;
            case jc:
              return 536870912;
            default:
              return 16;
          }
        default:
          return 16;
      }
    }
    var kd = null, ld = null, md = null;
    function nd() {
      if (md)
        return md;
      var a8, b = ld, c = b.length, d, e23 = "value" in kd ? kd.value : kd.textContent, f = e23.length;
      for (a8 = 0; a8 < c && b[a8] === e23[a8]; a8++)
        ;
      var g = c - a8;
      for (d = 1; d <= g && b[c - d] === e23[f - d]; d++)
        ;
      return md = e23.slice(a8, 1 < d ? 1 - d : void 0);
    }
    function od(a8) {
      var b = a8.keyCode;
      return "charCode" in a8 ? (a8 = a8.charCode, a8 === 0 && b === 13 && (a8 = 13)) : a8 = b, a8 === 10 && (a8 = 13), 32 <= a8 || a8 === 13 ? a8 : 0;
    }
    function pd() {
      return !0;
    }
    function qd() {
      return !1;
    }
    function rd(a8) {
      function b(b2, d, e23, f, g) {
        this._reactName = b2, this._targetInst = e23, this.type = d, this.nativeEvent = f, this.target = g, this.currentTarget = null;
        for (var c in a8)
          a8.hasOwnProperty(c) && (b2 = a8[c], this[c] = b2 ? b2(f) : f[c]);
        return this.isDefaultPrevented = (f.defaultPrevented != null ? f.defaultPrevented : f.returnValue === !1) ? pd : qd, this.isPropagationStopped = qd, this;
      }
      return A(b.prototype, { preventDefault: function() {
        this.defaultPrevented = !0;
        var a9 = this.nativeEvent;
        a9 && (a9.preventDefault ? a9.preventDefault() : typeof a9.returnValue != "unknown" && (a9.returnValue = !1), this.isDefaultPrevented = pd);
      }, stopPropagation: function() {
        var a9 = this.nativeEvent;
        a9 && (a9.stopPropagation ? a9.stopPropagation() : typeof a9.cancelBubble != "unknown" && (a9.cancelBubble = !0), this.isPropagationStopped = pd);
      }, persist: function() {
      }, isPersistent: pd }), b;
    }
    var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a8) {
      return a8.timeStamp || Date.now();
    }, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a8) {
      return a8.relatedTarget === void 0 ? a8.fromElement === a8.srcElement ? a8.toElement : a8.fromElement : a8.relatedTarget;
    }, movementX: function(a8) {
      return "movementX" in a8 ? a8.movementX : (a8 !== yd && (yd && a8.type === "mousemove" ? (wd = a8.screenX - yd.screenX, xd = a8.screenY - yd.screenY) : xd = wd = 0, yd = a8), wd);
    }, movementY: function(a8) {
      return "movementY" in a8 ? a8.movementY : xd;
    } }), Bd = rd(Ad), Cd = A({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A({}, sd, { clipboardData: function(a8) {
      return "clipboardData" in a8 ? a8.clipboardData : window.clipboardData;
    } }), Jd = rd(Id), Kd = A({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Nd = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    }, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
    function Pd(a8) {
      var b = this.nativeEvent;
      return b.getModifierState ? b.getModifierState(a8) : (a8 = Od[a8]) ? !!b[a8] : !1;
    }
    function zd() {
      return Pd;
    }
    var Qd = A({}, ud, { key: function(a8) {
      if (a8.key) {
        var b = Md[a8.key] || a8.key;
        if (b !== "Unidentified")
          return b;
      }
      return a8.type === "keypress" ? (a8 = od(a8), a8 === 13 ? "Enter" : String.fromCharCode(a8)) : a8.type === "keydown" || a8.type === "keyup" ? Nd[a8.keyCode] || "Unidentified" : "";
    }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a8) {
      return a8.type === "keypress" ? od(a8) : 0;
    }, keyCode: function(a8) {
      return a8.type === "keydown" || a8.type === "keyup" ? a8.keyCode : 0;
    }, which: function(a8) {
      return a8.type === "keypress" ? od(a8) : a8.type === "keydown" || a8.type === "keyup" ? a8.keyCode : 0;
    } }), Rd = rd(Qd), Sd = A({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A({}, Ad, {
      deltaX: function(a8) {
        return "deltaX" in a8 ? a8.deltaX : "wheelDeltaX" in a8 ? -a8.wheelDeltaX : 0;
      },
      deltaY: function(a8) {
        return "deltaY" in a8 ? a8.deltaY : "wheelDeltaY" in a8 ? -a8.wheelDeltaY : "wheelDelta" in a8 ? -a8.wheelDelta : 0;
      },
      deltaZ: 0,
      deltaMode: 0
    }), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
    ia && "documentMode" in document && (be = document.documentMode);
    var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = !1;
    function ge(a8, b) {
      switch (a8) {
        case "keyup":
          return $d.indexOf(b.keyCode) !== -1;
        case "keydown":
          return b.keyCode !== 229;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function he(a8) {
      return a8 = a8.detail, typeof a8 == "object" && "data" in a8 ? a8.data : null;
    }
    var ie = !1;
    function je(a8, b) {
      switch (a8) {
        case "compositionend":
          return he(b);
        case "keypress":
          return b.which !== 32 ? null : (fe = !0, ee);
        case "textInput":
          return a8 = b.data, a8 === ee && fe ? null : a8;
        default:
          return null;
      }
    }
    function ke(a8, b) {
      if (ie)
        return a8 === "compositionend" || !ae && ge(a8, b) ? (a8 = nd(), md = ld = kd = null, ie = !1, a8) : null;
      switch (a8) {
        case "paste":
          return null;
        case "keypress":
          if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
            if (b.char && 1 < b.char.length)
              return b.char;
            if (b.which)
              return String.fromCharCode(b.which);
          }
          return null;
        case "compositionend":
          return de && b.locale !== "ko" ? null : b.data;
        default:
          return null;
      }
    }
    var le = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
    function me(a8) {
      var b = a8 && a8.nodeName && a8.nodeName.toLowerCase();
      return b === "input" ? !!le[a8.type] : b === "textarea";
    }
    function ne(a8, b, c, d) {
      Eb(d), b = oe(b, "onChange"), 0 < b.length && (c = new td("onChange", "change", null, c, d), a8.push({ event: c, listeners: b }));
    }
    var pe = null, qe = null;
    function re(a8) {
      se(a8, 0);
    }
    function te(a8) {
      var b = ue(a8);
      if (Wa(b))
        return a8;
    }
    function ve(a8, b) {
      if (a8 === "change")
        return b;
    }
    var we = !1;
    ia && (ia ? (ye = "oninput" in document, ye || (ze = document.createElement("div"), ze.setAttribute("oninput", "return;"), ye = typeof ze.oninput == "function"), xe = ye) : xe = !1, we = xe && (!document.documentMode || 9 < document.documentMode));
    var xe, ye, ze;
    function Ae() {
      pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
    }
    function Be(a8) {
      if (a8.propertyName === "value" && te(qe)) {
        var b = [];
        ne(b, qe, a8, xb(a8)), Jb(re, b);
      }
    }
    function Ce(a8, b, c) {
      a8 === "focusin" ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : a8 === "focusout" && Ae();
    }
    function De(a8) {
      if (a8 === "selectionchange" || a8 === "keyup" || a8 === "keydown")
        return te(qe);
    }
    function Ee(a8, b) {
      if (a8 === "click")
        return te(b);
    }
    function Fe(a8, b) {
      if (a8 === "input" || a8 === "change")
        return te(b);
    }
    function Ge(a8, b) {
      return a8 === b && (a8 !== 0 || 1 / a8 === 1 / b) || a8 !== a8 && b !== b;
    }
    var He = typeof Object.is == "function" ? Object.is : Ge;
    function Ie(a8, b) {
      if (He(a8, b))
        return !0;
      if (typeof a8 != "object" || a8 === null || typeof b != "object" || b === null)
        return !1;
      var c = Object.keys(a8), d = Object.keys(b);
      if (c.length !== d.length)
        return !1;
      for (d = 0; d < c.length; d++) {
        var e23 = c[d];
        if (!ja.call(b, e23) || !He(a8[e23], b[e23]))
          return !1;
      }
      return !0;
    }
    function Je(a8) {
      for (; a8 && a8.firstChild; )
        a8 = a8.firstChild;
      return a8;
    }
    function Ke(a8, b) {
      var c = Je(a8);
      a8 = 0;
      for (var d; c; ) {
        if (c.nodeType === 3) {
          if (d = a8 + c.textContent.length, a8 <= b && d >= b)
            return { node: c, offset: b - a8 };
          a8 = d;
        }
        a: {
          for (; c; ) {
            if (c.nextSibling) {
              c = c.nextSibling;
              break a;
            }
            c = c.parentNode;
          }
          c = void 0;
        }
        c = Je(c);
      }
    }
    function Le(a8, b) {
      return a8 && b ? a8 === b ? !0 : a8 && a8.nodeType === 3 ? !1 : b && b.nodeType === 3 ? Le(a8, b.parentNode) : "contains" in a8 ? a8.contains(b) : a8.compareDocumentPosition ? !!(a8.compareDocumentPosition(b) & 16) : !1 : !1;
    }
    function Me() {
      for (var a8 = window, b = Xa(); b instanceof a8.HTMLIFrameElement; ) {
        try {
          var c = typeof b.contentWindow.location.href == "string";
        } catch {
          c = !1;
        }
        if (c)
          a8 = b.contentWindow;
        else
          break;
        b = Xa(a8.document);
      }
      return b;
    }
    function Ne(a8) {
      var b = a8 && a8.nodeName && a8.nodeName.toLowerCase();
      return b && (b === "input" && (a8.type === "text" || a8.type === "search" || a8.type === "tel" || a8.type === "url" || a8.type === "password") || b === "textarea" || a8.contentEditable === "true");
    }
    function Oe(a8) {
      var b = Me(), c = a8.focusedElem, d = a8.selectionRange;
      if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
        if (d !== null && Ne(c)) {
          if (b = d.start, a8 = d.end, a8 === void 0 && (a8 = b), "selectionStart" in c)
            c.selectionStart = b, c.selectionEnd = Math.min(a8, c.value.length);
          else if (a8 = (b = c.ownerDocument || document) && b.defaultView || window, a8.getSelection) {
            a8 = a8.getSelection();
            var e23 = c.textContent.length, f = Math.min(d.start, e23);
            d = d.end === void 0 ? f : Math.min(d.end, e23), !a8.extend && f > d && (e23 = d, d = f, f = e23), e23 = Ke(c, f);
            var g = Ke(
              c,
              d
            );
            e23 && g && (a8.rangeCount !== 1 || a8.anchorNode !== e23.node || a8.anchorOffset !== e23.offset || a8.focusNode !== g.node || a8.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e23.node, e23.offset), a8.removeAllRanges(), f > d ? (a8.addRange(b), a8.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a8.addRange(b)));
          }
        }
        for (b = [], a8 = c; a8 = a8.parentNode; )
          a8.nodeType === 1 && b.push({ element: a8, left: a8.scrollLeft, top: a8.scrollTop });
        for (typeof c.focus == "function" && c.focus(), c = 0; c < b.length; c++)
          a8 = b[c], a8.element.scrollLeft = a8.left, a8.element.scrollTop = a8.top;
      }
    }
    var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = !1;
    function Ue(a8, b, c) {
      var d = c.window === c ? c.document : c.nodeType === 9 ? c : c.ownerDocument;
      Te || Qe == null || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a8.push({ event: b, listeners: d }), b.target = Qe)));
    }
    function Ve(a8, b) {
      var c = {};
      return c[a8.toLowerCase()] = b.toLowerCase(), c["Webkit" + a8] = "webkit" + b, c["Moz" + a8] = "moz" + b, c;
    }
    var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
    ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
    function Ze(a8) {
      if (Xe[a8])
        return Xe[a8];
      if (!We[a8])
        return a8;
      var b = We[a8], c;
      for (c in b)
        if (b.hasOwnProperty(c) && c in Ye)
          return Xe[a8] = b[c];
      return a8;
    }
    var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    function ff(a8, b) {
      df.set(a8, b), fa(b, [a8]);
    }
    for (gf = 0; gf < ef.length; gf++)
      hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1), ff(jf, "on" + kf);
    var hf, jf, kf, gf;
    ff($e, "onAnimationEnd");
    ff(af, "onAnimationIteration");
    ff(bf, "onAnimationStart");
    ff("dblclick", "onDoubleClick");
    ff("focusin", "onFocus");
    ff("focusout", "onBlur");
    ff(cf, "onTransitionEnd");
    ha("onMouseEnter", ["mouseout", "mouseover"]);
    ha("onMouseLeave", ["mouseout", "mouseover"]);
    ha("onPointerEnter", ["pointerout", "pointerover"]);
    ha("onPointerLeave", ["pointerout", "pointerover"]);
    fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
    fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
    function nf(a8, b, c) {
      var d = a8.type || "unknown-event";
      a8.currentTarget = c, Ub(d, b, void 0, a8), a8.currentTarget = null;
    }
    function se(a8, b) {
      b = (b & 4) !== 0;
      for (var c = 0; c < a8.length; c++) {
        var d = a8[c], e23 = d.event;
        d = d.listeners;
        a: {
          var f = void 0;
          if (b)
            for (var g = d.length - 1; 0 <= g; g--) {
              var h = d[g], k = h.instance, l9 = h.currentTarget;
              if (h = h.listener, k !== f && e23.isPropagationStopped())
                break a;
              nf(e23, h, l9), f = k;
            }
          else
            for (g = 0; g < d.length; g++) {
              if (h = d[g], k = h.instance, l9 = h.currentTarget, h = h.listener, k !== f && e23.isPropagationStopped())
                break a;
              nf(e23, h, l9), f = k;
            }
        }
      }
      if (Qb)
        throw a8 = Rb, Qb = !1, Rb = null, a8;
    }
    function D(a8, b) {
      var c = b[of];
      c === void 0 && (c = b[of] = /* @__PURE__ */ new Set());
      var d = a8 + "__bubble";
      c.has(d) || (pf(b, a8, 2, !1), c.add(d));
    }
    function qf(a8, b, c) {
      var d = 0;
      b && (d |= 4), pf(c, a8, d, b);
    }
    var rf = "_reactListening" + Math.random().toString(36).slice(2);
    function sf(a8) {
      if (!a8[rf]) {
        a8[rf] = !0, da.forEach(function(b2) {
          b2 !== "selectionchange" && (mf.has(b2) || qf(b2, !1, a8), qf(b2, !0, a8));
        });
        var b = a8.nodeType === 9 ? a8 : a8.ownerDocument;
        b === null || b[rf] || (b[rf] = !0, qf("selectionchange", !1, b));
      }
    }
    function pf(a8, b, c, d) {
      switch (jd(b)) {
        case 1:
          var e23 = ed;
          break;
        case 4:
          e23 = gd;
          break;
        default:
          e23 = fd;
      }
      c = e23.bind(null, b, c, a8), e23 = void 0, !Lb || b !== "touchstart" && b !== "touchmove" && b !== "wheel" || (e23 = !0), d ? e23 !== void 0 ? a8.addEventListener(b, c, { capture: !0, passive: e23 }) : a8.addEventListener(b, c, !0) : e23 !== void 0 ? a8.addEventListener(b, c, { passive: e23 }) : a8.addEventListener(b, c, !1);
    }
    function hd(a8, b, c, d, e23) {
      var f = d;
      if (!(b & 1) && !(b & 2) && d !== null)
        a:
          for (; ; ) {
            if (d === null)
              return;
            var g = d.tag;
            if (g === 3 || g === 4) {
              var h = d.stateNode.containerInfo;
              if (h === e23 || h.nodeType === 8 && h.parentNode === e23)
                break;
              if (g === 4)
                for (g = d.return; g !== null; ) {
                  var k = g.tag;
                  if ((k === 3 || k === 4) && (k = g.stateNode.containerInfo, k === e23 || k.nodeType === 8 && k.parentNode === e23))
                    return;
                  g = g.return;
                }
              for (; h !== null; ) {
                if (g = Wc(h), g === null)
                  return;
                if (k = g.tag, k === 5 || k === 6) {
                  d = f = g;
                  continue a;
                }
                h = h.parentNode;
              }
            }
            d = d.return;
          }
      Jb(function() {
        var d2 = f, e24 = xb(c), g2 = [];
        a: {
          var h2 = df.get(a8);
          if (h2 !== void 0) {
            var k2 = td, n = a8;
            switch (a8) {
              case "keypress":
                if (od(c) === 0)
                  break a;
              case "keydown":
              case "keyup":
                k2 = Rd;
                break;
              case "focusin":
                n = "focus", k2 = Fd;
                break;
              case "focusout":
                n = "blur", k2 = Fd;
                break;
              case "beforeblur":
              case "afterblur":
                k2 = Fd;
                break;
              case "click":
                if (c.button === 2)
                  break a;
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                k2 = Bd;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                k2 = Dd;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                k2 = Vd;
                break;
              case $e:
              case af:
              case bf:
                k2 = Hd;
                break;
              case cf:
                k2 = Xd;
                break;
              case "scroll":
                k2 = vd;
                break;
              case "wheel":
                k2 = Zd;
                break;
              case "copy":
              case "cut":
              case "paste":
                k2 = Jd;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                k2 = Td;
            }
            var t17 = (b & 4) !== 0, J = !t17 && a8 === "scroll", x = t17 ? h2 !== null ? h2 + "Capture" : null : h2;
            t17 = [];
            for (var w = d2, u; w !== null; ) {
              u = w;
              var F = u.stateNode;
              if (u.tag === 5 && F !== null && (u = F, x !== null && (F = Kb(w, x), F != null && t17.push(tf(w, F, u)))), J)
                break;
              w = w.return;
            }
            0 < t17.length && (h2 = new k2(h2, n, null, c, e24), g2.push({ event: h2, listeners: t17 }));
          }
        }
        if (!(b & 7)) {
          a: {
            if (h2 = a8 === "mouseover" || a8 === "pointerover", k2 = a8 === "mouseout" || a8 === "pointerout", h2 && c !== wb && (n = c.relatedTarget || c.fromElement) && (Wc(n) || n[uf]))
              break a;
            if ((k2 || h2) && (h2 = e24.window === e24 ? e24 : (h2 = e24.ownerDocument) ? h2.defaultView || h2.parentWindow : window, k2 ? (n = c.relatedTarget || c.toElement, k2 = d2, n = n ? Wc(n) : null, n !== null && (J = Vb(n), n !== J || n.tag !== 5 && n.tag !== 6) && (n = null)) : (k2 = null, n = d2), k2 !== n)) {
              if (t17 = Bd, F = "onMouseLeave", x = "onMouseEnter", w = "mouse", (a8 === "pointerout" || a8 === "pointerover") && (t17 = Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer"), J = k2 == null ? h2 : ue(k2), u = n == null ? h2 : ue(n), h2 = new t17(F, w + "leave", k2, c, e24), h2.target = J, h2.relatedTarget = u, F = null, Wc(e24) === d2 && (t17 = new t17(x, w + "enter", n, c, e24), t17.target = u, t17.relatedTarget = J, F = t17), J = F, k2 && n)
                b: {
                  for (t17 = k2, x = n, w = 0, u = t17; u; u = vf(u))
                    w++;
                  for (u = 0, F = x; F; F = vf(F))
                    u++;
                  for (; 0 < w - u; )
                    t17 = vf(t17), w--;
                  for (; 0 < u - w; )
                    x = vf(x), u--;
                  for (; w--; ) {
                    if (t17 === x || x !== null && t17 === x.alternate)
                      break b;
                    t17 = vf(t17), x = vf(x);
                  }
                  t17 = null;
                }
              else
                t17 = null;
              k2 !== null && wf(g2, h2, k2, t17, !1), n !== null && J !== null && wf(g2, J, n, t17, !0);
            }
          }
          a: {
            if (h2 = d2 ? ue(d2) : window, k2 = h2.nodeName && h2.nodeName.toLowerCase(), k2 === "select" || k2 === "input" && h2.type === "file")
              var na = ve;
            else if (me(h2))
              if (we)
                na = Fe;
              else {
                na = De;
                var xa = Ce;
              }
            else
              (k2 = h2.nodeName) && k2.toLowerCase() === "input" && (h2.type === "checkbox" || h2.type === "radio") && (na = Ee);
            if (na && (na = na(a8, d2))) {
              ne(g2, na, c, e24);
              break a;
            }
            xa && xa(a8, h2, d2), a8 === "focusout" && (xa = h2._wrapperState) && xa.controlled && h2.type === "number" && cb(h2, "number", h2.value);
          }
          switch (xa = d2 ? ue(d2) : window, a8) {
            case "focusin":
              (me(xa) || xa.contentEditable === "true") && (Qe = xa, Re = d2, Se = null);
              break;
            case "focusout":
              Se = Re = Qe = null;
              break;
            case "mousedown":
              Te = !0;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              Te = !1, Ue(g2, c, e24);
              break;
            case "selectionchange":
              if (Pe)
                break;
            case "keydown":
            case "keyup":
              Ue(g2, c, e24);
          }
          var $a;
          if (ae)
            b: {
              switch (a8) {
                case "compositionstart":
                  var ba = "onCompositionStart";
                  break b;
                case "compositionend":
                  ba = "onCompositionEnd";
                  break b;
                case "compositionupdate":
                  ba = "onCompositionUpdate";
                  break b;
              }
              ba = void 0;
            }
          else
            ie ? ge(a8, c) && (ba = "onCompositionEnd") : a8 === "keydown" && c.keyCode === 229 && (ba = "onCompositionStart");
          ba && (de && c.locale !== "ko" && (ie || ba !== "onCompositionStart" ? ba === "onCompositionEnd" && ie && ($a = nd()) : (kd = e24, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), xa = oe(d2, ba), 0 < xa.length && (ba = new Ld(ba, a8, null, c, e24), g2.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c), $a !== null && (ba.data = $a)))), ($a = ce ? je(a8, c) : ke(a8, c)) && (d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e24 = new Ld("onBeforeInput", "beforeinput", null, c, e24), g2.push({ event: e24, listeners: d2 }), e24.data = $a));
        }
        se(g2, b);
      });
    }
    function tf(a8, b, c) {
      return { instance: a8, listener: b, currentTarget: c };
    }
    function oe(a8, b) {
      for (var c = b + "Capture", d = []; a8 !== null; ) {
        var e23 = a8, f = e23.stateNode;
        e23.tag === 5 && f !== null && (e23 = f, f = Kb(a8, c), f != null && d.unshift(tf(a8, f, e23)), f = Kb(a8, b), f != null && d.push(tf(a8, f, e23))), a8 = a8.return;
      }
      return d;
    }
    function vf(a8) {
      if (a8 === null)
        return null;
      do
        a8 = a8.return;
      while (a8 && a8.tag !== 5);
      return a8 || null;
    }
    function wf(a8, b, c, d, e23) {
      for (var f = b._reactName, g = []; c !== null && c !== d; ) {
        var h = c, k = h.alternate, l9 = h.stateNode;
        if (k !== null && k === d)
          break;
        h.tag === 5 && l9 !== null && (h = l9, e23 ? (k = Kb(c, f), k != null && g.unshift(tf(c, k, h))) : e23 || (k = Kb(c, f), k != null && g.push(tf(c, k, h)))), c = c.return;
      }
      g.length !== 0 && a8.push({ event: b, listeners: g });
    }
    var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
    function zf(a8) {
      return (typeof a8 == "string" ? a8 : "" + a8).replace(xf, `
`).replace(yf, "");
    }
    function Af(a8, b, c) {
      if (b = zf(b), zf(a8) !== b && c)
        throw Error(p(425));
    }
    function Bf() {
    }
    var Cf = null, Df = null;
    function Ef(a8, b) {
      return a8 === "textarea" || a8 === "noscript" || typeof b.children == "string" || typeof b.children == "number" || typeof b.dangerouslySetInnerHTML == "object" && b.dangerouslySetInnerHTML !== null && b.dangerouslySetInnerHTML.__html != null;
    }
    var Ff = typeof setTimeout == "function" ? setTimeout : void 0, Gf = typeof clearTimeout == "function" ? clearTimeout : void 0, Hf = typeof Promise == "function" ? Promise : void 0, Jf = typeof queueMicrotask == "function" ? queueMicrotask : typeof Hf < "u" ? function(a8) {
      return Hf.resolve(null).then(a8).catch(If);
    } : Ff;
    function If(a8) {
      setTimeout(function() {
        throw a8;
      });
    }
    function Kf(a8, b) {
      var c = b, d = 0;
      do {
        var e23 = c.nextSibling;
        if (a8.removeChild(c), e23 && e23.nodeType === 8)
          if (c = e23.data, c === "/$") {
            if (d === 0) {
              a8.removeChild(e23), bd(b);
              return;
            }
            d--;
          } else
            c !== "$" && c !== "$?" && c !== "$!" || d++;
        c = e23;
      } while (c);
      bd(b);
    }
    function Lf(a8) {
      for (; a8 != null; a8 = a8.nextSibling) {
        var b = a8.nodeType;
        if (b === 1 || b === 3)
          break;
        if (b === 8) {
          if (b = a8.data, b === "$" || b === "$!" || b === "$?")
            break;
          if (b === "/$")
            return null;
        }
      }
      return a8;
    }
    function Mf(a8) {
      a8 = a8.previousSibling;
      for (var b = 0; a8; ) {
        if (a8.nodeType === 8) {
          var c = a8.data;
          if (c === "$" || c === "$!" || c === "$?") {
            if (b === 0)
              return a8;
            b--;
          } else
            c === "/$" && b++;
        }
        a8 = a8.previousSibling;
      }
      return null;
    }
    var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
    function Wc(a8) {
      var b = a8[Of];
      if (b)
        return b;
      for (var c = a8.parentNode; c; ) {
        if (b = c[uf] || c[Of]) {
          if (c = b.alternate, b.child !== null || c !== null && c.child !== null)
            for (a8 = Mf(a8); a8 !== null; ) {
              if (c = a8[Of])
                return c;
              a8 = Mf(a8);
            }
          return b;
        }
        a8 = c, c = a8.parentNode;
      }
      return null;
    }
    function Cb(a8) {
      return a8 = a8[Of] || a8[uf], !a8 || a8.tag !== 5 && a8.tag !== 6 && a8.tag !== 13 && a8.tag !== 3 ? null : a8;
    }
    function ue(a8) {
      if (a8.tag === 5 || a8.tag === 6)
        return a8.stateNode;
      throw Error(p(33));
    }
    function Db(a8) {
      return a8[Pf] || null;
    }
    var Sf = [], Tf = -1;
    function Uf(a8) {
      return { current: a8 };
    }
    function E(a8) {
      0 > Tf || (a8.current = Sf[Tf], Sf[Tf] = null, Tf--);
    }
    function G(a8, b) {
      Tf++, Sf[Tf] = a8.current, a8.current = b;
    }
    var Vf = {}, H = Uf(Vf), Wf = Uf(!1), Xf = Vf;
    function Yf(a8, b) {
      var c = a8.type.contextTypes;
      if (!c)
        return Vf;
      var d = a8.stateNode;
      if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
        return d.__reactInternalMemoizedMaskedChildContext;
      var e23 = {}, f;
      for (f in c)
        e23[f] = b[f];
      return d && (a8 = a8.stateNode, a8.__reactInternalMemoizedUnmaskedChildContext = b, a8.__reactInternalMemoizedMaskedChildContext = e23), e23;
    }
    function Zf(a8) {
      return a8 = a8.childContextTypes, a8 != null;
    }
    function $f() {
      E(Wf), E(H);
    }
    function ag(a8, b, c) {
      if (H.current !== Vf)
        throw Error(p(168));
      G(H, b), G(Wf, c);
    }
    function bg(a8, b, c) {
      var d = a8.stateNode;
      if (b = b.childContextTypes, typeof d.getChildContext != "function")
        return c;
      d = d.getChildContext();
      for (var e23 in d)
        if (!(e23 in b))
          throw Error(p(108, Ra(a8) || "Unknown", e23));
      return A({}, c, d);
    }
    function cg(a8) {
      return a8 = (a8 = a8.stateNode) && a8.__reactInternalMemoizedMergedChildContext || Vf, Xf = H.current, G(H, a8), G(Wf, Wf.current), !0;
    }
    function dg(a8, b, c) {
      var d = a8.stateNode;
      if (!d)
        throw Error(p(169));
      c ? (a8 = bg(a8, b, Xf), d.__reactInternalMemoizedMergedChildContext = a8, E(Wf), E(H), G(H, a8)) : E(Wf), G(Wf, c);
    }
    var eg = null, fg = !1, gg = !1;
    function hg(a8) {
      eg === null ? eg = [a8] : eg.push(a8);
    }
    function ig(a8) {
      fg = !0, hg(a8);
    }
    function jg() {
      if (!gg && eg !== null) {
        gg = !0;
        var a8 = 0, b = C;
        try {
          var c = eg;
          for (C = 1; a8 < c.length; a8++) {
            var d = c[a8];
            do
              d = d(!0);
            while (d !== null);
          }
          eg = null, fg = !1;
        } catch (e23) {
          throw eg !== null && (eg = eg.slice(a8 + 1)), ac(fc, jg), e23;
        } finally {
          C = b, gg = !1;
        }
      }
      return null;
    }
    var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
    function tg(a8, b) {
      kg[lg++] = ng, kg[lg++] = mg, mg = a8, ng = b;
    }
    function ug(a8, b, c) {
      og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, qg = a8;
      var d = rg;
      a8 = sg;
      var e23 = 32 - oc(d) - 1;
      d &= ~(1 << e23), c += 1;
      var f = 32 - oc(b) + e23;
      if (30 < f) {
        var g = e23 - e23 % 5;
        f = (d & (1 << g) - 1).toString(32), d >>= g, e23 -= g, rg = 1 << 32 - oc(b) + e23 | c << e23 | d, sg = f + a8;
      } else
        rg = 1 << f | c << e23 | d, sg = a8;
    }
    function vg(a8) {
      a8.return !== null && (tg(a8, 1), ug(a8, 1, 0));
    }
    function wg(a8) {
      for (; a8 === mg; )
        mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
      for (; a8 === qg; )
        qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
    }
    var xg = null, yg = null, I = !1, zg = null;
    function Ag(a8, b) {
      var c = Bg(5, null, null, 0);
      c.elementType = "DELETED", c.stateNode = b, c.return = a8, b = a8.deletions, b === null ? (a8.deletions = [c], a8.flags |= 16) : b.push(c);
    }
    function Cg(a8, b) {
      switch (a8.tag) {
        case 5:
          var c = a8.type;
          return b = b.nodeType !== 1 || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b, b !== null ? (a8.stateNode = b, xg = a8, yg = Lf(b.firstChild), !0) : !1;
        case 6:
          return b = a8.pendingProps === "" || b.nodeType !== 3 ? null : b, b !== null ? (a8.stateNode = b, xg = a8, yg = null, !0) : !1;
        case 13:
          return b = b.nodeType !== 8 ? null : b, b !== null ? (c = qg !== null ? { id: rg, overflow: sg } : null, a8.memoizedState = { dehydrated: b, treeContext: c, retryLane: 1073741824 }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a8, a8.child = c, xg = a8, yg = null, !0) : !1;
        default:
          return !1;
      }
    }
    function Dg(a8) {
      return (a8.mode & 1) !== 0 && (a8.flags & 128) === 0;
    }
    function Eg(a8) {
      if (I) {
        var b = yg;
        if (b) {
          var c = b;
          if (!Cg(a8, b)) {
            if (Dg(a8))
              throw Error(p(418));
            b = Lf(c.nextSibling);
            var d = xg;
            b && Cg(a8, b) ? Ag(d, c) : (a8.flags = a8.flags & -4097 | 2, I = !1, xg = a8);
          }
        } else {
          if (Dg(a8))
            throw Error(p(418));
          a8.flags = a8.flags & -4097 | 2, I = !1, xg = a8;
        }
      }
    }
    function Fg(a8) {
      for (a8 = a8.return; a8 !== null && a8.tag !== 5 && a8.tag !== 3 && a8.tag !== 13; )
        a8 = a8.return;
      xg = a8;
    }
    function Gg(a8) {
      if (a8 !== xg)
        return !1;
      if (!I)
        return Fg(a8), I = !0, !1;
      var b;
      if ((b = a8.tag !== 3) && !(b = a8.tag !== 5) && (b = a8.type, b = b !== "head" && b !== "body" && !Ef(a8.type, a8.memoizedProps)), b && (b = yg)) {
        if (Dg(a8))
          throw Hg(), Error(p(418));
        for (; b; )
          Ag(a8, b), b = Lf(b.nextSibling);
      }
      if (Fg(a8), a8.tag === 13) {
        if (a8 = a8.memoizedState, a8 = a8 !== null ? a8.dehydrated : null, !a8)
          throw Error(p(317));
        a: {
          for (a8 = a8.nextSibling, b = 0; a8; ) {
            if (a8.nodeType === 8) {
              var c = a8.data;
              if (c === "/$") {
                if (b === 0) {
                  yg = Lf(a8.nextSibling);
                  break a;
                }
                b--;
              } else
                c !== "$" && c !== "$!" && c !== "$?" || b++;
            }
            a8 = a8.nextSibling;
          }
          yg = null;
        }
      } else
        yg = xg ? Lf(a8.stateNode.nextSibling) : null;
      return !0;
    }
    function Hg() {
      for (var a8 = yg; a8; )
        a8 = Lf(a8.nextSibling);
    }
    function Ig() {
      yg = xg = null, I = !1;
    }
    function Jg(a8) {
      zg === null ? zg = [a8] : zg.push(a8);
    }
    var Kg = ua.ReactCurrentBatchConfig;
    function Lg(a8, b) {
      if (a8 && a8.defaultProps) {
        b = A({}, b), a8 = a8.defaultProps;
        for (var c in a8)
          b[c] === void 0 && (b[c] = a8[c]);
        return b;
      }
      return b;
    }
    var Mg = Uf(null), Ng = null, Og = null, Pg = null;
    function Qg() {
      Pg = Og = Ng = null;
    }
    function Rg(a8) {
      var b = Mg.current;
      E(Mg), a8._currentValue = b;
    }
    function Sg(a8, b, c) {
      for (; a8 !== null; ) {
        var d = a8.alternate;
        if ((a8.childLanes & b) !== b ? (a8.childLanes |= b, d !== null && (d.childLanes |= b)) : d !== null && (d.childLanes & b) !== b && (d.childLanes |= b), a8 === c)
          break;
        a8 = a8.return;
      }
    }
    function Tg(a8, b) {
      Ng = a8, Pg = Og = null, a8 = a8.dependencies, a8 !== null && a8.firstContext !== null && (a8.lanes & b && (Ug = !0), a8.firstContext = null);
    }
    function Vg(a8) {
      var b = a8._currentValue;
      if (Pg !== a8)
        if (a8 = { context: a8, memoizedValue: b, next: null }, Og === null) {
          if (Ng === null)
            throw Error(p(308));
          Og = a8, Ng.dependencies = { lanes: 0, firstContext: a8 };
        } else
          Og = Og.next = a8;
      return b;
    }
    var Wg = null;
    function Xg(a8) {
      Wg === null ? Wg = [a8] : Wg.push(a8);
    }
    function Yg(a8, b, c, d) {
      var e23 = b.interleaved;
      return e23 === null ? (c.next = c, Xg(b)) : (c.next = e23.next, e23.next = c), b.interleaved = c, Zg(a8, d);
    }
    function Zg(a8, b) {
      a8.lanes |= b;
      var c = a8.alternate;
      for (c !== null && (c.lanes |= b), c = a8, a8 = a8.return; a8 !== null; )
        a8.childLanes |= b, c = a8.alternate, c !== null && (c.childLanes |= b), c = a8, a8 = a8.return;
      return c.tag === 3 ? c.stateNode : null;
    }
    var $g = !1;
    function ah(a8) {
      a8.updateQueue = { baseState: a8.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
    }
    function bh(a8, b) {
      a8 = a8.updateQueue, b.updateQueue === a8 && (b.updateQueue = { baseState: a8.baseState, firstBaseUpdate: a8.firstBaseUpdate, lastBaseUpdate: a8.lastBaseUpdate, shared: a8.shared, effects: a8.effects });
    }
    function ch(a8, b) {
      return { eventTime: a8, lane: b, tag: 0, payload: null, callback: null, next: null };
    }
    function dh(a8, b, c) {
      var d = a8.updateQueue;
      if (d === null)
        return null;
      if (d = d.shared, K & 2) {
        var e23 = d.pending;
        return e23 === null ? b.next = b : (b.next = e23.next, e23.next = b), d.pending = b, Zg(a8, c);
      }
      return e23 = d.interleaved, e23 === null ? (b.next = b, Xg(d)) : (b.next = e23.next, e23.next = b), d.interleaved = b, Zg(a8, c);
    }
    function eh(a8, b, c) {
      if (b = b.updateQueue, b !== null && (b = b.shared, (c & 4194240) !== 0)) {
        var d = b.lanes;
        d &= a8.pendingLanes, c |= d, b.lanes = c, Cc(a8, c);
      }
    }
    function fh(a8, b) {
      var c = a8.updateQueue, d = a8.alternate;
      if (d !== null && (d = d.updateQueue, c === d)) {
        var e23 = null, f = null;
        if (c = c.firstBaseUpdate, c !== null) {
          do {
            var g = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };
            f === null ? e23 = f = g : f = f.next = g, c = c.next;
          } while (c !== null);
          f === null ? e23 = f = b : f = f.next = b;
        } else
          e23 = f = b;
        c = { baseState: d.baseState, firstBaseUpdate: e23, lastBaseUpdate: f, shared: d.shared, effects: d.effects }, a8.updateQueue = c;
        return;
      }
      a8 = c.lastBaseUpdate, a8 === null ? c.firstBaseUpdate = b : a8.next = b, c.lastBaseUpdate = b;
    }
    function gh(a8, b, c, d) {
      var e23 = a8.updateQueue;
      $g = !1;
      var f = e23.firstBaseUpdate, g = e23.lastBaseUpdate, h = e23.shared.pending;
      if (h !== null) {
        e23.shared.pending = null;
        var k = h, l9 = k.next;
        k.next = null, g === null ? f = l9 : g.next = l9, g = k;
        var m = a8.alternate;
        m !== null && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (h === null ? m.firstBaseUpdate = l9 : h.next = l9, m.lastBaseUpdate = k));
      }
      if (f !== null) {
        var q = e23.baseState;
        g = 0, m = l9 = k = null, h = f;
        do {
          var r24 = h.lane, y = h.eventTime;
          if ((d & r24) === r24) {
            m !== null && (m = m.next = {
              eventTime: y,
              lane: 0,
              tag: h.tag,
              payload: h.payload,
              callback: h.callback,
              next: null
            });
            a: {
              var n = a8, t17 = h;
              switch (r24 = b, y = c, t17.tag) {
                case 1:
                  if (n = t17.payload, typeof n == "function") {
                    q = n.call(y, q, r24);
                    break a;
                  }
                  q = n;
                  break a;
                case 3:
                  n.flags = n.flags & -65537 | 128;
                case 0:
                  if (n = t17.payload, r24 = typeof n == "function" ? n.call(y, q, r24) : n, r24 == null)
                    break a;
                  q = A({}, q, r24);
                  break a;
                case 2:
                  $g = !0;
              }
            }
            h.callback !== null && h.lane !== 0 && (a8.flags |= 64, r24 = e23.effects, r24 === null ? e23.effects = [h] : r24.push(h));
          } else
            y = { eventTime: y, lane: r24, tag: h.tag, payload: h.payload, callback: h.callback, next: null }, m === null ? (l9 = m = y, k = q) : m = m.next = y, g |= r24;
          if (h = h.next, h === null) {
            if (h = e23.shared.pending, h === null)
              break;
            r24 = h, h = r24.next, r24.next = null, e23.lastBaseUpdate = r24, e23.shared.pending = null;
          }
        } while (1);
        if (m === null && (k = q), e23.baseState = k, e23.firstBaseUpdate = l9, e23.lastBaseUpdate = m, b = e23.shared.interleaved, b !== null) {
          e23 = b;
          do
            g |= e23.lane, e23 = e23.next;
          while (e23 !== b);
        } else
          f === null && (e23.shared.lanes = 0);
        hh |= g, a8.lanes = g, a8.memoizedState = q;
      }
    }
    function ih(a8, b, c) {
      if (a8 = b.effects, b.effects = null, a8 !== null)
        for (b = 0; b < a8.length; b++) {
          var d = a8[b], e23 = d.callback;
          if (e23 !== null) {
            if (d.callback = null, d = c, typeof e23 != "function")
              throw Error(p(191, e23));
            e23.call(d);
          }
        }
    }
    var jh = new aa.Component().refs;
    function kh(a8, b, c, d) {
      b = a8.memoizedState, c = c(d, b), c = c == null ? b : A({}, b, c), a8.memoizedState = c, a8.lanes === 0 && (a8.updateQueue.baseState = c);
    }
    var nh = { isMounted: function(a8) {
      return (a8 = a8._reactInternals) ? Vb(a8) === a8 : !1;
    }, enqueueSetState: function(a8, b, c) {
      a8 = a8._reactInternals;
      var d = L(), e23 = lh(a8), f = ch(d, e23);
      f.payload = b, c != null && (f.callback = c), b = dh(a8, f, e23), b !== null && (mh(b, a8, e23, d), eh(b, a8, e23));
    }, enqueueReplaceState: function(a8, b, c) {
      a8 = a8._reactInternals;
      var d = L(), e23 = lh(a8), f = ch(d, e23);
      f.tag = 1, f.payload = b, c != null && (f.callback = c), b = dh(a8, f, e23), b !== null && (mh(b, a8, e23, d), eh(b, a8, e23));
    }, enqueueForceUpdate: function(a8, b) {
      a8 = a8._reactInternals;
      var c = L(), d = lh(a8), e23 = ch(c, d);
      e23.tag = 2, b != null && (e23.callback = b), b = dh(a8, e23, d), b !== null && (mh(b, a8, d, c), eh(b, a8, d));
    } };
    function oh(a8, b, c, d, e23, f, g) {
      return a8 = a8.stateNode, typeof a8.shouldComponentUpdate == "function" ? a8.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e23, f) : !0;
    }
    function ph(a8, b, c) {
      var d = !1, e23 = Vf, f = b.contextType;
      return typeof f == "object" && f !== null ? f = Vg(f) : (e23 = Zf(b) ? Xf : H.current, d = b.contextTypes, f = (d = d != null) ? Yf(a8, e23) : Vf), b = new b(c, f), a8.memoizedState = b.state !== null && b.state !== void 0 ? b.state : null, b.updater = nh, a8.stateNode = b, b._reactInternals = a8, d && (a8 = a8.stateNode, a8.__reactInternalMemoizedUnmaskedChildContext = e23, a8.__reactInternalMemoizedMaskedChildContext = f), b;
    }
    function qh(a8, b, c, d) {
      a8 = b.state, typeof b.componentWillReceiveProps == "function" && b.componentWillReceiveProps(c, d), typeof b.UNSAFE_componentWillReceiveProps == "function" && b.UNSAFE_componentWillReceiveProps(c, d), b.state !== a8 && nh.enqueueReplaceState(b, b.state, null);
    }
    function rh(a8, b, c, d) {
      var e23 = a8.stateNode;
      e23.props = c, e23.state = a8.memoizedState, e23.refs = jh, ah(a8);
      var f = b.contextType;
      typeof f == "object" && f !== null ? e23.context = Vg(f) : (f = Zf(b) ? Xf : H.current, e23.context = Yf(a8, f)), e23.state = a8.memoizedState, f = b.getDerivedStateFromProps, typeof f == "function" && (kh(a8, b, f, c), e23.state = a8.memoizedState), typeof b.getDerivedStateFromProps == "function" || typeof e23.getSnapshotBeforeUpdate == "function" || typeof e23.UNSAFE_componentWillMount != "function" && typeof e23.componentWillMount != "function" || (b = e23.state, typeof e23.componentWillMount == "function" && e23.componentWillMount(), typeof e23.UNSAFE_componentWillMount == "function" && e23.UNSAFE_componentWillMount(), b !== e23.state && nh.enqueueReplaceState(e23, e23.state, null), gh(a8, c, e23, d), e23.state = a8.memoizedState), typeof e23.componentDidMount == "function" && (a8.flags |= 4194308);
    }
    function sh(a8, b, c) {
      if (a8 = c.ref, a8 !== null && typeof a8 != "function" && typeof a8 != "object") {
        if (c._owner) {
          if (c = c._owner, c) {
            if (c.tag !== 1)
              throw Error(p(309));
            var d = c.stateNode;
          }
          if (!d)
            throw Error(p(147, a8));
          var e23 = d, f = "" + a8;
          return b !== null && b.ref !== null && typeof b.ref == "function" && b.ref._stringRef === f ? b.ref : (b = function(a9) {
            var b2 = e23.refs;
            b2 === jh && (b2 = e23.refs = {}), a9 === null ? delete b2[f] : b2[f] = a9;
          }, b._stringRef = f, b);
        }
        if (typeof a8 != "string")
          throw Error(p(284));
        if (!c._owner)
          throw Error(p(290, a8));
      }
      return a8;
    }
    function th(a8, b) {
      throw a8 = Object.prototype.toString.call(b), Error(p(31, a8 === "[object Object]" ? "object with keys {" + Object.keys(b).join(", ") + "}" : a8));
    }
    function uh(a8) {
      var b = a8._init;
      return b(a8._payload);
    }
    function vh2(a8) {
      function b(b2, c2) {
        if (a8) {
          var d2 = b2.deletions;
          d2 === null ? (b2.deletions = [c2], b2.flags |= 16) : d2.push(c2);
        }
      }
      function c(c2, d2) {
        if (!a8)
          return null;
        for (; d2 !== null; )
          b(c2, d2), d2 = d2.sibling;
        return null;
      }
      function d(a9, b2) {
        for (a9 = /* @__PURE__ */ new Map(); b2 !== null; )
          b2.key !== null ? a9.set(b2.key, b2) : a9.set(b2.index, b2), b2 = b2.sibling;
        return a9;
      }
      function e23(a9, b2) {
        return a9 = wh(a9, b2), a9.index = 0, a9.sibling = null, a9;
      }
      function f(b2, c2, d2) {
        return b2.index = d2, a8 ? (d2 = b2.alternate, d2 !== null ? (d2 = d2.index, d2 < c2 ? (b2.flags |= 2, c2) : d2) : (b2.flags |= 2, c2)) : (b2.flags |= 1048576, c2);
      }
      function g(b2) {
        return a8 && b2.alternate === null && (b2.flags |= 2), b2;
      }
      function h(a9, b2, c2, d2) {
        return b2 === null || b2.tag !== 6 ? (b2 = xh(c2, a9.mode, d2), b2.return = a9, b2) : (b2 = e23(b2, c2), b2.return = a9, b2);
      }
      function k(a9, b2, c2, d2) {
        var f2 = c2.type;
        return f2 === ya ? m(a9, b2, c2.props.children, d2, c2.key) : b2 !== null && (b2.elementType === f2 || typeof f2 == "object" && f2 !== null && f2.$$typeof === Ha && uh(f2) === b2.type) ? (d2 = e23(b2, c2.props), d2.ref = sh(a9, b2, c2), d2.return = a9, d2) : (d2 = yh(c2.type, c2.key, c2.props, null, a9.mode, d2), d2.ref = sh(a9, b2, c2), d2.return = a9, d2);
      }
      function l9(a9, b2, c2, d2) {
        return b2 === null || b2.tag !== 4 || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation ? (b2 = zh(c2, a9.mode, d2), b2.return = a9, b2) : (b2 = e23(b2, c2.children || []), b2.return = a9, b2);
      }
      function m(a9, b2, c2, d2, f2) {
        return b2 === null || b2.tag !== 7 ? (b2 = Ah(c2, a9.mode, d2, f2), b2.return = a9, b2) : (b2 = e23(b2, c2), b2.return = a9, b2);
      }
      function q(a9, b2, c2) {
        if (typeof b2 == "string" && b2 !== "" || typeof b2 == "number")
          return b2 = xh("" + b2, a9.mode, c2), b2.return = a9, b2;
        if (typeof b2 == "object" && b2 !== null) {
          switch (b2.$$typeof) {
            case va:
              return c2 = yh(b2.type, b2.key, b2.props, null, a9.mode, c2), c2.ref = sh(a9, null, b2), c2.return = a9, c2;
            case wa:
              return b2 = zh(b2, a9.mode, c2), b2.return = a9, b2;
            case Ha:
              var d2 = b2._init;
              return q(a9, d2(b2._payload), c2);
          }
          if (eb(b2) || Ka(b2))
            return b2 = Ah(b2, a9.mode, c2, null), b2.return = a9, b2;
          th(a9, b2);
        }
        return null;
      }
      function r24(a9, b2, c2, d2) {
        var e24 = b2 !== null ? b2.key : null;
        if (typeof c2 == "string" && c2 !== "" || typeof c2 == "number")
          return e24 !== null ? null : h(a9, b2, "" + c2, d2);
        if (typeof c2 == "object" && c2 !== null) {
          switch (c2.$$typeof) {
            case va:
              return c2.key === e24 ? k(a9, b2, c2, d2) : null;
            case wa:
              return c2.key === e24 ? l9(a9, b2, c2, d2) : null;
            case Ha:
              return e24 = c2._init, r24(
                a9,
                b2,
                e24(c2._payload),
                d2
              );
          }
          if (eb(c2) || Ka(c2))
            return e24 !== null ? null : m(a9, b2, c2, d2, null);
          th(a9, c2);
        }
        return null;
      }
      function y(a9, b2, c2, d2, e24) {
        if (typeof d2 == "string" && d2 !== "" || typeof d2 == "number")
          return a9 = a9.get(c2) || null, h(b2, a9, "" + d2, e24);
        if (typeof d2 == "object" && d2 !== null) {
          switch (d2.$$typeof) {
            case va:
              return a9 = a9.get(d2.key === null ? c2 : d2.key) || null, k(b2, a9, d2, e24);
            case wa:
              return a9 = a9.get(d2.key === null ? c2 : d2.key) || null, l9(b2, a9, d2, e24);
            case Ha:
              var f2 = d2._init;
              return y(a9, b2, c2, f2(d2._payload), e24);
          }
          if (eb(d2) || Ka(d2))
            return a9 = a9.get(c2) || null, m(b2, a9, d2, e24, null);
          th(b2, d2);
        }
        return null;
      }
      function n(e24, g2, h2, k2) {
        for (var l10 = null, m2 = null, u = g2, w = g2 = 0, x = null; u !== null && w < h2.length; w++) {
          u.index > w ? (x = u, u = null) : x = u.sibling;
          var n2 = r24(e24, u, h2[w], k2);
          if (n2 === null) {
            u === null && (u = x);
            break;
          }
          a8 && u && n2.alternate === null && b(e24, u), g2 = f(n2, g2, w), m2 === null ? l10 = n2 : m2.sibling = n2, m2 = n2, u = x;
        }
        if (w === h2.length)
          return c(e24, u), I && tg(e24, w), l10;
        if (u === null) {
          for (; w < h2.length; w++)
            u = q(e24, h2[w], k2), u !== null && (g2 = f(u, g2, w), m2 === null ? l10 = u : m2.sibling = u, m2 = u);
          return I && tg(e24, w), l10;
        }
        for (u = d(e24, u); w < h2.length; w++)
          x = y(u, e24, w, h2[w], k2), x !== null && (a8 && x.alternate !== null && u.delete(x.key === null ? w : x.key), g2 = f(x, g2, w), m2 === null ? l10 = x : m2.sibling = x, m2 = x);
        return a8 && u.forEach(function(a9) {
          return b(e24, a9);
        }), I && tg(e24, w), l10;
      }
      function t17(e24, g2, h2, k2) {
        var l10 = Ka(h2);
        if (typeof l10 != "function")
          throw Error(p(150));
        if (h2 = l10.call(h2), h2 == null)
          throw Error(p(151));
        for (var u = l10 = null, m2 = g2, w = g2 = 0, x = null, n2 = h2.next(); m2 !== null && !n2.done; w++, n2 = h2.next()) {
          m2.index > w ? (x = m2, m2 = null) : x = m2.sibling;
          var t18 = r24(e24, m2, n2.value, k2);
          if (t18 === null) {
            m2 === null && (m2 = x);
            break;
          }
          a8 && m2 && t18.alternate === null && b(e24, m2), g2 = f(t18, g2, w), u === null ? l10 = t18 : u.sibling = t18, u = t18, m2 = x;
        }
        if (n2.done)
          return c(
            e24,
            m2
          ), I && tg(e24, w), l10;
        if (m2 === null) {
          for (; !n2.done; w++, n2 = h2.next())
            n2 = q(e24, n2.value, k2), n2 !== null && (g2 = f(n2, g2, w), u === null ? l10 = n2 : u.sibling = n2, u = n2);
          return I && tg(e24, w), l10;
        }
        for (m2 = d(e24, m2); !n2.done; w++, n2 = h2.next())
          n2 = y(m2, e24, w, n2.value, k2), n2 !== null && (a8 && n2.alternate !== null && m2.delete(n2.key === null ? w : n2.key), g2 = f(n2, g2, w), u === null ? l10 = n2 : u.sibling = n2, u = n2);
        return a8 && m2.forEach(function(a9) {
          return b(e24, a9);
        }), I && tg(e24, w), l10;
      }
      function J(a9, d2, f2, h2) {
        if (typeof f2 == "object" && f2 !== null && f2.type === ya && f2.key === null && (f2 = f2.props.children), typeof f2 == "object" && f2 !== null) {
          switch (f2.$$typeof) {
            case va:
              a: {
                for (var k2 = f2.key, l10 = d2; l10 !== null; ) {
                  if (l10.key === k2) {
                    if (k2 = f2.type, k2 === ya) {
                      if (l10.tag === 7) {
                        c(a9, l10.sibling), d2 = e23(l10, f2.props.children), d2.return = a9, a9 = d2;
                        break a;
                      }
                    } else if (l10.elementType === k2 || typeof k2 == "object" && k2 !== null && k2.$$typeof === Ha && uh(k2) === l10.type) {
                      c(a9, l10.sibling), d2 = e23(l10, f2.props), d2.ref = sh(a9, l10, f2), d2.return = a9, a9 = d2;
                      break a;
                    }
                    c(a9, l10);
                    break;
                  } else
                    b(a9, l10);
                  l10 = l10.sibling;
                }
                f2.type === ya ? (d2 = Ah(f2.props.children, a9.mode, h2, f2.key), d2.return = a9, a9 = d2) : (h2 = yh(f2.type, f2.key, f2.props, null, a9.mode, h2), h2.ref = sh(a9, d2, f2), h2.return = a9, a9 = h2);
              }
              return g(a9);
            case wa:
              a: {
                for (l10 = f2.key; d2 !== null; ) {
                  if (d2.key === l10)
                    if (d2.tag === 4 && d2.stateNode.containerInfo === f2.containerInfo && d2.stateNode.implementation === f2.implementation) {
                      c(a9, d2.sibling), d2 = e23(d2, f2.children || []), d2.return = a9, a9 = d2;
                      break a;
                    } else {
                      c(a9, d2);
                      break;
                    }
                  else
                    b(a9, d2);
                  d2 = d2.sibling;
                }
                d2 = zh(f2, a9.mode, h2), d2.return = a9, a9 = d2;
              }
              return g(a9);
            case Ha:
              return l10 = f2._init, J(a9, d2, l10(f2._payload), h2);
          }
          if (eb(f2))
            return n(a9, d2, f2, h2);
          if (Ka(f2))
            return t17(a9, d2, f2, h2);
          th(a9, f2);
        }
        return typeof f2 == "string" && f2 !== "" || typeof f2 == "number" ? (f2 = "" + f2, d2 !== null && d2.tag === 6 ? (c(a9, d2.sibling), d2 = e23(d2, f2), d2.return = a9, a9 = d2) : (c(a9, d2), d2 = xh(f2, a9.mode, h2), d2.return = a9, a9 = d2), g(a9)) : c(a9, d2);
      }
      return J;
    }
    var Bh = vh2(!0), Ch = vh2(!1), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
    function Hh(a8) {
      if (a8 === Dh)
        throw Error(p(174));
      return a8;
    }
    function Ih(a8, b) {
      switch (G(Gh, b), G(Fh, a8), G(Eh, Dh), a8 = b.nodeType, a8) {
        case 9:
        case 11:
          b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
          break;
        default:
          a8 = a8 === 8 ? b.parentNode : b, b = a8.namespaceURI || null, a8 = a8.tagName, b = lb(b, a8);
      }
      E(Eh), G(Eh, b);
    }
    function Jh() {
      E(Eh), E(Fh), E(Gh);
    }
    function Kh(a8) {
      Hh(Gh.current);
      var b = Hh(Eh.current), c = lb(b, a8.type);
      b !== c && (G(Fh, a8), G(Eh, c));
    }
    function Lh(a8) {
      Fh.current === a8 && (E(Eh), E(Fh));
    }
    var M = Uf(0);
    function Mh(a8) {
      for (var b = a8; b !== null; ) {
        if (b.tag === 13) {
          var c = b.memoizedState;
          if (c !== null && (c = c.dehydrated, c === null || c.data === "$?" || c.data === "$!"))
            return b;
        } else if (b.tag === 19 && b.memoizedProps.revealOrder !== void 0) {
          if (b.flags & 128)
            return b;
        } else if (b.child !== null) {
          b.child.return = b, b = b.child;
          continue;
        }
        if (b === a8)
          break;
        for (; b.sibling === null; ) {
          if (b.return === null || b.return === a8)
            return null;
          b = b.return;
        }
        b.sibling.return = b.return, b = b.sibling;
      }
      return null;
    }
    var Nh = [];
    function Oh() {
      for (var a8 = 0; a8 < Nh.length; a8++)
        Nh[a8]._workInProgressVersionPrimary = null;
      Nh.length = 0;
    }
    var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N = null, O = null, P = null, Sh = !1, Th = !1, Uh = 0, Vh = 0;
    function Q() {
      throw Error(p(321));
    }
    function Wh(a8, b) {
      if (b === null)
        return !1;
      for (var c = 0; c < b.length && c < a8.length; c++)
        if (!He(a8[c], b[c]))
          return !1;
      return !0;
    }
    function Xh(a8, b, c, d, e23, f) {
      if (Rh = f, N = b, b.memoizedState = null, b.updateQueue = null, b.lanes = 0, Ph.current = a8 === null || a8.memoizedState === null ? Yh : Zh, a8 = c(d, e23), Th) {
        f = 0;
        do {
          if (Th = !1, Uh = 0, 25 <= f)
            throw Error(p(301));
          f += 1, P = O = null, b.updateQueue = null, Ph.current = $h, a8 = c(d, e23);
        } while (Th);
      }
      if (Ph.current = ai, b = O !== null && O.next !== null, Rh = 0, P = O = N = null, Sh = !1, b)
        throw Error(p(300));
      return a8;
    }
    function bi() {
      var a8 = Uh !== 0;
      return Uh = 0, a8;
    }
    function ci() {
      var a8 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
      return P === null ? N.memoizedState = P = a8 : P = P.next = a8, P;
    }
    function di() {
      if (O === null) {
        var a8 = N.alternate;
        a8 = a8 !== null ? a8.memoizedState : null;
      } else
        a8 = O.next;
      var b = P === null ? N.memoizedState : P.next;
      if (b !== null)
        P = b, O = a8;
      else {
        if (a8 === null)
          throw Error(p(310));
        O = a8, a8 = { memoizedState: O.memoizedState, baseState: O.baseState, baseQueue: O.baseQueue, queue: O.queue, next: null }, P === null ? N.memoizedState = P = a8 : P = P.next = a8;
      }
      return P;
    }
    function ei(a8, b) {
      return typeof b == "function" ? b(a8) : b;
    }
    function fi(a8) {
      var b = di(), c = b.queue;
      if (c === null)
        throw Error(p(311));
      c.lastRenderedReducer = a8;
      var d = O, e23 = d.baseQueue, f = c.pending;
      if (f !== null) {
        if (e23 !== null) {
          var g = e23.next;
          e23.next = f.next, f.next = g;
        }
        d.baseQueue = e23 = f, c.pending = null;
      }
      if (e23 !== null) {
        f = e23.next, d = d.baseState;
        var h = g = null, k = null, l9 = f;
        do {
          var m = l9.lane;
          if ((Rh & m) === m)
            k !== null && (k = k.next = { lane: 0, action: l9.action, hasEagerState: l9.hasEagerState, eagerState: l9.eagerState, next: null }), d = l9.hasEagerState ? l9.eagerState : a8(d, l9.action);
          else {
            var q = {
              lane: m,
              action: l9.action,
              hasEagerState: l9.hasEagerState,
              eagerState: l9.eagerState,
              next: null
            };
            k === null ? (h = k = q, g = d) : k = k.next = q, N.lanes |= m, hh |= m;
          }
          l9 = l9.next;
        } while (l9 !== null && l9 !== f);
        k === null ? g = d : k.next = h, He(d, b.memoizedState) || (Ug = !0), b.memoizedState = d, b.baseState = g, b.baseQueue = k, c.lastRenderedState = d;
      }
      if (a8 = c.interleaved, a8 !== null) {
        e23 = a8;
        do
          f = e23.lane, N.lanes |= f, hh |= f, e23 = e23.next;
        while (e23 !== a8);
      } else
        e23 === null && (c.lanes = 0);
      return [b.memoizedState, c.dispatch];
    }
    function gi(a8) {
      var b = di(), c = b.queue;
      if (c === null)
        throw Error(p(311));
      c.lastRenderedReducer = a8;
      var d = c.dispatch, e23 = c.pending, f = b.memoizedState;
      if (e23 !== null) {
        c.pending = null;
        var g = e23 = e23.next;
        do
          f = a8(f, g.action), g = g.next;
        while (g !== e23);
        He(f, b.memoizedState) || (Ug = !0), b.memoizedState = f, b.baseQueue === null && (b.baseState = f), c.lastRenderedState = f;
      }
      return [f, d];
    }
    function hi() {
    }
    function ii(a8, b) {
      var c = N, d = di(), e23 = b(), f = !He(d.memoizedState, e23);
      if (f && (d.memoizedState = e23, Ug = !0), d = d.queue, ji(ki.bind(null, c, d, a8), [a8]), d.getSnapshot !== b || f || P !== null && P.memoizedState.tag & 1) {
        if (c.flags |= 2048, li(9, mi.bind(null, c, d, e23, b), void 0, null), R === null)
          throw Error(p(349));
        Rh & 30 || ni(c, b, e23);
      }
      return e23;
    }
    function ni(a8, b, c) {
      a8.flags |= 16384, a8 = { getSnapshot: b, value: c }, b = N.updateQueue, b === null ? (b = { lastEffect: null, stores: null }, N.updateQueue = b, b.stores = [a8]) : (c = b.stores, c === null ? b.stores = [a8] : c.push(a8));
    }
    function mi(a8, b, c, d) {
      b.value = c, b.getSnapshot = d, oi(b) && pi(a8);
    }
    function ki(a8, b, c) {
      return c(function() {
        oi(b) && pi(a8);
      });
    }
    function oi(a8) {
      var b = a8.getSnapshot;
      a8 = a8.value;
      try {
        var c = b();
        return !He(a8, c);
      } catch {
        return !0;
      }
    }
    function pi(a8) {
      var b = Zg(a8, 1);
      b !== null && mh(b, a8, 1, -1);
    }
    function qi(a8) {
      var b = ci();
      return typeof a8 == "function" && (a8 = a8()), b.memoizedState = b.baseState = a8, a8 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a8 }, b.queue = a8, a8 = a8.dispatch = ri.bind(null, N, a8), [b.memoizedState, a8];
    }
    function li(a8, b, c, d) {
      return a8 = { tag: a8, create: b, destroy: c, deps: d, next: null }, b = N.updateQueue, b === null ? (b = { lastEffect: null, stores: null }, N.updateQueue = b, b.lastEffect = a8.next = a8) : (c = b.lastEffect, c === null ? b.lastEffect = a8.next = a8 : (d = c.next, c.next = a8, a8.next = d, b.lastEffect = a8)), a8;
    }
    function si() {
      return di().memoizedState;
    }
    function ti(a8, b, c, d) {
      var e23 = ci();
      N.flags |= a8, e23.memoizedState = li(1 | b, c, void 0, d === void 0 ? null : d);
    }
    function ui(a8, b, c, d) {
      var e23 = di();
      d = d === void 0 ? null : d;
      var f = void 0;
      if (O !== null) {
        var g = O.memoizedState;
        if (f = g.destroy, d !== null && Wh(d, g.deps)) {
          e23.memoizedState = li(b, c, f, d);
          return;
        }
      }
      N.flags |= a8, e23.memoizedState = li(1 | b, c, f, d);
    }
    function vi(a8, b) {
      return ti(8390656, 8, a8, b);
    }
    function ji(a8, b) {
      return ui(2048, 8, a8, b);
    }
    function wi(a8, b) {
      return ui(4, 2, a8, b);
    }
    function xi(a8, b) {
      return ui(4, 4, a8, b);
    }
    function yi(a8, b) {
      if (typeof b == "function")
        return a8 = a8(), b(a8), function() {
          b(null);
        };
      if (b != null)
        return a8 = a8(), b.current = a8, function() {
          b.current = null;
        };
    }
    function zi(a8, b, c) {
      return c = c != null ? c.concat([a8]) : null, ui(4, 4, yi.bind(null, b, a8), c);
    }
    function Ai() {
    }
    function Bi(a8, b) {
      var c = di();
      b = b === void 0 ? null : b;
      var d = c.memoizedState;
      return d !== null && b !== null && Wh(b, d[1]) ? d[0] : (c.memoizedState = [a8, b], a8);
    }
    function Ci(a8, b) {
      var c = di();
      b = b === void 0 ? null : b;
      var d = c.memoizedState;
      return d !== null && b !== null && Wh(b, d[1]) ? d[0] : (a8 = a8(), c.memoizedState = [a8, b], a8);
    }
    function Di(a8, b, c) {
      return Rh & 21 ? (He(c, b) || (c = yc(), N.lanes |= c, hh |= c, a8.baseState = !0), b) : (a8.baseState && (a8.baseState = !1, Ug = !0), a8.memoizedState = c);
    }
    function Ei(a8, b) {
      var c = C;
      C = c !== 0 && 4 > c ? c : 4, a8(!0);
      var d = Qh.transition;
      Qh.transition = {};
      try {
        a8(!1), b();
      } finally {
        C = c, Qh.transition = d;
      }
    }
    function Fi() {
      return di().memoizedState;
    }
    function Gi(a8, b, c) {
      var d = lh(a8);
      if (c = { lane: d, action: c, hasEagerState: !1, eagerState: null, next: null }, Hi(a8))
        Ii(b, c);
      else if (c = Yg(a8, b, c, d), c !== null) {
        var e23 = L();
        mh(c, a8, d, e23), Ji(c, b, d);
      }
    }
    function ri(a8, b, c) {
      var d = lh(a8), e23 = { lane: d, action: c, hasEagerState: !1, eagerState: null, next: null };
      if (Hi(a8))
        Ii(b, e23);
      else {
        var f = a8.alternate;
        if (a8.lanes === 0 && (f === null || f.lanes === 0) && (f = b.lastRenderedReducer, f !== null))
          try {
            var g = b.lastRenderedState, h = f(g, c);
            if (e23.hasEagerState = !0, e23.eagerState = h, He(h, g)) {
              var k = b.interleaved;
              k === null ? (e23.next = e23, Xg(b)) : (e23.next = k.next, k.next = e23), b.interleaved = e23;
              return;
            }
          } catch {
          } finally {
          }
        c = Yg(a8, b, e23, d), c !== null && (e23 = L(), mh(c, a8, d, e23), Ji(c, b, d));
      }
    }
    function Hi(a8) {
      var b = a8.alternate;
      return a8 === N || b !== null && b === N;
    }
    function Ii(a8, b) {
      Th = Sh = !0;
      var c = a8.pending;
      c === null ? b.next = b : (b.next = c.next, c.next = b), a8.pending = b;
    }
    function Ji(a8, b, c) {
      if (c & 4194240) {
        var d = b.lanes;
        d &= a8.pendingLanes, c |= d, b.lanes = c, Cc(a8, c);
      }
    }
    var ai = { readContext: Vg, useCallback: Q, useContext: Q, useEffect: Q, useImperativeHandle: Q, useInsertionEffect: Q, useLayoutEffect: Q, useMemo: Q, useReducer: Q, useRef: Q, useState: Q, useDebugValue: Q, useDeferredValue: Q, useTransition: Q, useMutableSource: Q, useSyncExternalStore: Q, useId: Q, unstable_isNewReconciler: !1 }, Yh = { readContext: Vg, useCallback: function(a8, b) {
      return ci().memoizedState = [a8, b === void 0 ? null : b], a8;
    }, useContext: Vg, useEffect: vi, useImperativeHandle: function(a8, b, c) {
      return c = c != null ? c.concat([a8]) : null, ti(
        4194308,
        4,
        yi.bind(null, b, a8),
        c
      );
    }, useLayoutEffect: function(a8, b) {
      return ti(4194308, 4, a8, b);
    }, useInsertionEffect: function(a8, b) {
      return ti(4, 2, a8, b);
    }, useMemo: function(a8, b) {
      var c = ci();
      return b = b === void 0 ? null : b, a8 = a8(), c.memoizedState = [a8, b], a8;
    }, useReducer: function(a8, b, c) {
      var d = ci();
      return b = c !== void 0 ? c(b) : b, d.memoizedState = d.baseState = b, a8 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a8, lastRenderedState: b }, d.queue = a8, a8 = a8.dispatch = Gi.bind(null, N, a8), [d.memoizedState, a8];
    }, useRef: function(a8) {
      var b = ci();
      return a8 = { current: a8 }, b.memoizedState = a8;
    }, useState: qi, useDebugValue: Ai, useDeferredValue: function(a8) {
      return ci().memoizedState = a8;
    }, useTransition: function() {
      var a8 = qi(!1), b = a8[0];
      return a8 = Ei.bind(null, a8[1]), ci().memoizedState = a8, [b, a8];
    }, useMutableSource: function() {
    }, useSyncExternalStore: function(a8, b, c) {
      var d = N, e23 = ci();
      if (I) {
        if (c === void 0)
          throw Error(p(407));
        c = c();
      } else {
        if (c = b(), R === null)
          throw Error(p(349));
        Rh & 30 || ni(d, b, c);
      }
      e23.memoizedState = c;
      var f = { value: c, getSnapshot: b };
      return e23.queue = f, vi(ki.bind(
        null,
        d,
        f,
        a8
      ), [a8]), d.flags |= 2048, li(9, mi.bind(null, d, f, c, b), void 0, null), c;
    }, useId: function() {
      var a8 = ci(), b = R.identifierPrefix;
      if (I) {
        var c = sg, d = rg;
        c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c, b = ":" + b + "R" + c, c = Uh++, 0 < c && (b += "H" + c.toString(32)), b += ":";
      } else
        c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";
      return a8.memoizedState = b;
    }, unstable_isNewReconciler: !1 }, Zh = {
      readContext: Vg,
      useCallback: Bi,
      useContext: Vg,
      useEffect: ji,
      useImperativeHandle: zi,
      useInsertionEffect: wi,
      useLayoutEffect: xi,
      useMemo: Ci,
      useReducer: fi,
      useRef: si,
      useState: function() {
        return fi(ei);
      },
      useDebugValue: Ai,
      useDeferredValue: function(a8) {
        var b = di();
        return Di(b, O.memoizedState, a8);
      },
      useTransition: function() {
        var a8 = fi(ei)[0], b = di().memoizedState;
        return [a8, b];
      },
      useMutableSource: hi,
      useSyncExternalStore: ii,
      useId: Fi,
      unstable_isNewReconciler: !1
    }, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
      return gi(ei);
    }, useDebugValue: Ai, useDeferredValue: function(a8) {
      var b = di();
      return O === null ? b.memoizedState = a8 : Di(b, O.memoizedState, a8);
    }, useTransition: function() {
      var a8 = gi(ei)[0], b = di().memoizedState;
      return [a8, b];
    }, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: !1 };
    function Ki(a8, b) {
      try {
        var c = "", d = b;
        do
          c += Pa(d), d = d.return;
        while (d);
        var e23 = c;
      } catch (f) {
        e23 = `
Error generating stack: ` + f.message + `
` + f.stack;
      }
      return { value: a8, source: b, stack: e23, digest: null };
    }
    function Li(a8, b, c) {
      return { value: a8, source: null, stack: c ?? null, digest: b ?? null };
    }
    function Mi(a8, b) {
      try {
        console.error(b.value);
      } catch (c) {
        setTimeout(function() {
          throw c;
        });
      }
    }
    var Ni = typeof WeakMap == "function" ? WeakMap : Map;
    function Oi(a8, b, c) {
      c = ch(-1, c), c.tag = 3, c.payload = { element: null };
      var d = b.value;
      return c.callback = function() {
        Pi || (Pi = !0, Qi = d), Mi(a8, b);
      }, c;
    }
    function Ri(a8, b, c) {
      c = ch(-1, c), c.tag = 3;
      var d = a8.type.getDerivedStateFromError;
      if (typeof d == "function") {
        var e23 = b.value;
        c.payload = function() {
          return d(e23);
        }, c.callback = function() {
          Mi(a8, b);
        };
      }
      var f = a8.stateNode;
      return f !== null && typeof f.componentDidCatch == "function" && (c.callback = function() {
        Mi(a8, b), typeof d != "function" && (Si === null ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
        var c2 = b.stack;
        this.componentDidCatch(b.value, { componentStack: c2 !== null ? c2 : "" });
      }), c;
    }
    function Ti(a8, b, c) {
      var d = a8.pingCache;
      if (d === null) {
        d = a8.pingCache = new Ni();
        var e23 = /* @__PURE__ */ new Set();
        d.set(b, e23);
      } else
        e23 = d.get(b), e23 === void 0 && (e23 = /* @__PURE__ */ new Set(), d.set(b, e23));
      e23.has(c) || (e23.add(c), a8 = Ui.bind(null, a8, b, c), b.then(a8, a8));
    }
    function Vi(a8) {
      do {
        var b;
        if ((b = a8.tag === 13) && (b = a8.memoizedState, b = b !== null ? b.dehydrated !== null : !0), b)
          return a8;
        a8 = a8.return;
      } while (a8 !== null);
      return null;
    }
    function Wi(a8, b, c, d, e23) {
      return a8.mode & 1 ? (a8.flags |= 65536, a8.lanes = e23, a8) : (a8 === b ? a8.flags |= 65536 : (a8.flags |= 128, c.flags |= 131072, c.flags &= -52805, c.tag === 1 && (c.alternate === null ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a8);
    }
    var Xi = ua.ReactCurrentOwner, Ug = !1;
    function Yi(a8, b, c, d) {
      b.child = a8 === null ? Ch(b, null, c, d) : Bh(b, a8.child, c, d);
    }
    function Zi(a8, b, c, d, e23) {
      c = c.render;
      var f = b.ref;
      return Tg(b, e23), d = Xh(a8, b, c, d, f, e23), c = bi(), a8 !== null && !Ug ? (b.updateQueue = a8.updateQueue, b.flags &= -2053, a8.lanes &= ~e23, $i(a8, b, e23)) : (I && c && vg(b), b.flags |= 1, Yi(a8, b, d, e23), b.child);
    }
    function aj(a8, b, c, d, e23) {
      if (a8 === null) {
        var f = c.type;
        return typeof f == "function" && !bj(f) && f.defaultProps === void 0 && c.compare === null && c.defaultProps === void 0 ? (b.tag = 15, b.type = f, cj(a8, b, f, d, e23)) : (a8 = yh(c.type, null, d, b, b.mode, e23), a8.ref = b.ref, a8.return = b, b.child = a8);
      }
      if (f = a8.child, !(a8.lanes & e23)) {
        var g = f.memoizedProps;
        if (c = c.compare, c = c !== null ? c : Ie, c(g, d) && a8.ref === b.ref)
          return $i(a8, b, e23);
      }
      return b.flags |= 1, a8 = wh(f, d), a8.ref = b.ref, a8.return = b, b.child = a8;
    }
    function cj(a8, b, c, d, e23) {
      if (a8 !== null) {
        var f = a8.memoizedProps;
        if (Ie(f, d) && a8.ref === b.ref)
          if (Ug = !1, b.pendingProps = d = f, (a8.lanes & e23) !== 0)
            a8.flags & 131072 && (Ug = !0);
          else
            return b.lanes = a8.lanes, $i(a8, b, e23);
      }
      return dj(a8, b, c, d, e23);
    }
    function ej(a8, b, c) {
      var d = b.pendingProps, e23 = d.children, f = a8 !== null ? a8.memoizedState : null;
      if (d.mode === "hidden")
        if (!(b.mode & 1))
          b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(fj, gj), gj |= c;
        else {
          if (!(c & 1073741824))
            return a8 = f !== null ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a8, cachePool: null, transitions: null }, b.updateQueue = null, G(fj, gj), gj |= a8, null;
          b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, d = f !== null ? f.baseLanes : c, G(fj, gj), gj |= d;
        }
      else
        f !== null ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), gj |= d;
      return Yi(a8, b, e23, c), b.child;
    }
    function hj(a8, b) {
      var c = b.ref;
      (a8 === null && c !== null || a8 !== null && a8.ref !== c) && (b.flags |= 512, b.flags |= 2097152);
    }
    function dj(a8, b, c, d, e23) {
      var f = Zf(c) ? Xf : H.current;
      return f = Yf(b, f), Tg(b, e23), c = Xh(a8, b, c, d, f, e23), d = bi(), a8 !== null && !Ug ? (b.updateQueue = a8.updateQueue, b.flags &= -2053, a8.lanes &= ~e23, $i(a8, b, e23)) : (I && d && vg(b), b.flags |= 1, Yi(a8, b, c, e23), b.child);
    }
    function ij(a8, b, c, d, e23) {
      if (Zf(c)) {
        var f = !0;
        cg(b);
      } else
        f = !1;
      if (Tg(b, e23), b.stateNode === null)
        jj(a8, b), ph(b, c, d), rh(b, c, d, e23), d = !0;
      else if (a8 === null) {
        var g = b.stateNode, h = b.memoizedProps;
        g.props = h;
        var k = g.context, l9 = c.contextType;
        typeof l9 == "object" && l9 !== null ? l9 = Vg(l9) : (l9 = Zf(c) ? Xf : H.current, l9 = Yf(b, l9));
        var m = c.getDerivedStateFromProps, q = typeof m == "function" || typeof g.getSnapshotBeforeUpdate == "function";
        q || typeof g.UNSAFE_componentWillReceiveProps != "function" && typeof g.componentWillReceiveProps != "function" || (h !== d || k !== l9) && qh(b, g, d, l9), $g = !1;
        var r24 = b.memoizedState;
        g.state = r24, gh(b, d, g, e23), k = b.memoizedState, h !== d || r24 !== k || Wf.current || $g ? (typeof m == "function" && (kh(b, c, m, d), k = b.memoizedState), (h = $g || oh(b, c, h, d, r24, k, l9)) ? (q || typeof g.UNSAFE_componentWillMount != "function" && typeof g.componentWillMount != "function" || (typeof g.componentWillMount == "function" && g.componentWillMount(), typeof g.UNSAFE_componentWillMount == "function" && g.UNSAFE_componentWillMount()), typeof g.componentDidMount == "function" && (b.flags |= 4194308)) : (typeof g.componentDidMount == "function" && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l9, d = h) : (typeof g.componentDidMount == "function" && (b.flags |= 4194308), d = !1);
      } else {
        g = b.stateNode, bh(a8, b), h = b.memoizedProps, l9 = b.type === b.elementType ? h : Lg(b.type, h), g.props = l9, q = b.pendingProps, r24 = g.context, k = c.contextType, typeof k == "object" && k !== null ? k = Vg(k) : (k = Zf(c) ? Xf : H.current, k = Yf(b, k));
        var y = c.getDerivedStateFromProps;
        (m = typeof y == "function" || typeof g.getSnapshotBeforeUpdate == "function") || typeof g.UNSAFE_componentWillReceiveProps != "function" && typeof g.componentWillReceiveProps != "function" || (h !== q || r24 !== k) && qh(b, g, d, k), $g = !1, r24 = b.memoizedState, g.state = r24, gh(b, d, g, e23);
        var n = b.memoizedState;
        h !== q || r24 !== n || Wf.current || $g ? (typeof y == "function" && (kh(b, c, y, d), n = b.memoizedState), (l9 = $g || oh(b, c, l9, d, r24, n, k) || !1) ? (m || typeof g.UNSAFE_componentWillUpdate != "function" && typeof g.componentWillUpdate != "function" || (typeof g.componentWillUpdate == "function" && g.componentWillUpdate(d, n, k), typeof g.UNSAFE_componentWillUpdate == "function" && g.UNSAFE_componentWillUpdate(d, n, k)), typeof g.componentDidUpdate == "function" && (b.flags |= 4), typeof g.getSnapshotBeforeUpdate == "function" && (b.flags |= 1024)) : (typeof g.componentDidUpdate != "function" || h === a8.memoizedProps && r24 === a8.memoizedState || (b.flags |= 4), typeof g.getSnapshotBeforeUpdate != "function" || h === a8.memoizedProps && r24 === a8.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l9) : (typeof g.componentDidUpdate != "function" || h === a8.memoizedProps && r24 === a8.memoizedState || (b.flags |= 4), typeof g.getSnapshotBeforeUpdate != "function" || h === a8.memoizedProps && r24 === a8.memoizedState || (b.flags |= 1024), d = !1);
      }
      return kj(a8, b, c, d, f, e23);
    }
    function kj(a8, b, c, d, e23, f) {
      hj(a8, b);
      var g = (b.flags & 128) !== 0;
      if (!d && !g)
        return e23 && dg(b, c, !1), $i(a8, b, f);
      d = b.stateNode, Xi.current = b;
      var h = g && typeof c.getDerivedStateFromError != "function" ? null : d.render();
      return b.flags |= 1, a8 !== null && g ? (b.child = Bh(b, a8.child, null, f), b.child = Bh(b, null, h, f)) : Yi(a8, b, h, f), b.memoizedState = d.state, e23 && dg(b, c, !0), b.child;
    }
    function lj(a8) {
      var b = a8.stateNode;
      b.pendingContext ? ag(a8, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a8, b.context, !1), Ih(a8, b.containerInfo);
    }
    function mj(a8, b, c, d, e23) {
      return Ig(), Jg(e23), b.flags |= 256, Yi(a8, b, c, d), b.child;
    }
    var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
    function oj(a8) {
      return { baseLanes: a8, cachePool: null, transitions: null };
    }
    function pj(a8, b, c) {
      var d = b.pendingProps, e23 = M.current, f = !1, g = (b.flags & 128) !== 0, h;
      if ((h = g) || (h = a8 !== null && a8.memoizedState === null ? !1 : (e23 & 2) !== 0), h ? (f = !0, b.flags &= -129) : (a8 === null || a8.memoizedState !== null) && (e23 |= 1), G(M, e23 & 1), a8 === null)
        return Eg(b), a8 = b.memoizedState, a8 !== null && (a8 = a8.dehydrated, a8 !== null) ? (b.mode & 1 ? a8.data === "$!" ? b.lanes = 8 : b.lanes = 1073741824 : b.lanes = 1, null) : (g = d.children, a8 = d.fallback, f ? (d = b.mode, f = b.child, g = { mode: "hidden", children: g }, !(d & 1) && f !== null ? (f.childLanes = 0, f.pendingProps = g) : f = qj(g, d, 0, null), a8 = Ah(a8, d, c, null), f.return = b, a8.return = b, f.sibling = a8, b.child = f, b.child.memoizedState = oj(c), b.memoizedState = nj, a8) : rj(b, g));
      if (e23 = a8.memoizedState, e23 !== null && (h = e23.dehydrated, h !== null))
        return sj(a8, b, g, d, h, e23, c);
      if (f) {
        f = d.fallback, g = b.mode, e23 = a8.child, h = e23.sibling;
        var k = { mode: "hidden", children: d.children };
        return !(g & 1) && b.child !== e23 ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = wh(e23, k), d.subtreeFlags = e23.subtreeFlags & 14680064), h !== null ? f = wh(h, f) : (f = Ah(f, g, c, null), f.flags |= 2), f.return = b, d.return = b, d.sibling = f, b.child = d, d = f, f = b.child, g = a8.child.memoizedState, g = g === null ? oj(c) : { baseLanes: g.baseLanes | c, cachePool: null, transitions: g.transitions }, f.memoizedState = g, f.childLanes = a8.childLanes & ~c, b.memoizedState = nj, d;
      }
      return f = a8.child, a8 = f.sibling, d = wh(f, { mode: "visible", children: d.children }), !(b.mode & 1) && (d.lanes = c), d.return = b, d.sibling = null, a8 !== null && (c = b.deletions, c === null ? (b.deletions = [a8], b.flags |= 16) : c.push(a8)), b.child = d, b.memoizedState = null, d;
    }
    function rj(a8, b) {
      return b = qj({ mode: "visible", children: b }, a8.mode, 0, null), b.return = a8, a8.child = b;
    }
    function tj(a8, b, c, d) {
      return d !== null && Jg(d), Bh(b, a8.child, null, c), a8 = rj(b, b.pendingProps.children), a8.flags |= 2, b.memoizedState = null, a8;
    }
    function sj(a8, b, c, d, e23, f, g) {
      if (c)
        return b.flags & 256 ? (b.flags &= -257, d = Li(Error(p(422))), tj(a8, b, g, d)) : b.memoizedState !== null ? (b.child = a8.child, b.flags |= 128, null) : (f = d.fallback, e23 = b.mode, d = qj({ mode: "visible", children: d.children }, e23, 0, null), f = Ah(f, e23, g, null), f.flags |= 2, d.return = b, f.return = b, d.sibling = f, b.child = d, b.mode & 1 && Bh(b, a8.child, null, g), b.child.memoizedState = oj(g), b.memoizedState = nj, f);
      if (!(b.mode & 1))
        return tj(a8, b, g, null);
      if (e23.data === "$!") {
        if (d = e23.nextSibling && e23.nextSibling.dataset, d)
          var h = d.dgst;
        return d = h, f = Error(p(419)), d = Li(f, d, void 0), tj(a8, b, g, d);
      }
      if (h = (g & a8.childLanes) !== 0, Ug || h) {
        if (d = R, d !== null) {
          switch (g & -g) {
            case 4:
              e23 = 2;
              break;
            case 16:
              e23 = 8;
              break;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              e23 = 32;
              break;
            case 536870912:
              e23 = 268435456;
              break;
            default:
              e23 = 0;
          }
          e23 = e23 & (d.suspendedLanes | g) ? 0 : e23, e23 !== 0 && e23 !== f.retryLane && (f.retryLane = e23, Zg(a8, e23), mh(d, a8, e23, -1));
        }
        return uj(), d = Li(Error(p(421))), tj(a8, b, g, d);
      }
      return e23.data === "$?" ? (b.flags |= 128, b.child = a8.child, b = vj.bind(null, a8), e23._reactRetry = b, null) : (a8 = f.treeContext, yg = Lf(e23.nextSibling), xg = b, I = !0, zg = null, a8 !== null && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a8.id, sg = a8.overflow, qg = b), b = rj(b, d.children), b.flags |= 4096, b);
    }
    function wj(a8, b, c) {
      a8.lanes |= b;
      var d = a8.alternate;
      d !== null && (d.lanes |= b), Sg(a8.return, b, c);
    }
    function xj(a8, b, c, d, e23) {
      var f = a8.memoizedState;
      f === null ? a8.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e23 } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e23);
    }
    function yj(a8, b, c) {
      var d = b.pendingProps, e23 = d.revealOrder, f = d.tail;
      if (Yi(a8, b, d.children, c), d = M.current, d & 2)
        d = d & 1 | 2, b.flags |= 128;
      else {
        if (a8 !== null && a8.flags & 128)
          a:
            for (a8 = b.child; a8 !== null; ) {
              if (a8.tag === 13)
                a8.memoizedState !== null && wj(a8, c, b);
              else if (a8.tag === 19)
                wj(a8, c, b);
              else if (a8.child !== null) {
                a8.child.return = a8, a8 = a8.child;
                continue;
              }
              if (a8 === b)
                break a;
              for (; a8.sibling === null; ) {
                if (a8.return === null || a8.return === b)
                  break a;
                a8 = a8.return;
              }
              a8.sibling.return = a8.return, a8 = a8.sibling;
            }
        d &= 1;
      }
      if (G(M, d), !(b.mode & 1))
        b.memoizedState = null;
      else
        switch (e23) {
          case "forwards":
            for (c = b.child, e23 = null; c !== null; )
              a8 = c.alternate, a8 !== null && Mh(a8) === null && (e23 = c), c = c.sibling;
            c = e23, c === null ? (e23 = b.child, b.child = null) : (e23 = c.sibling, c.sibling = null), xj(b, !1, e23, c, f);
            break;
          case "backwards":
            for (c = null, e23 = b.child, b.child = null; e23 !== null; ) {
              if (a8 = e23.alternate, a8 !== null && Mh(a8) === null) {
                b.child = e23;
                break;
              }
              a8 = e23.sibling, e23.sibling = c, c = e23, e23 = a8;
            }
            xj(b, !0, c, null, f);
            break;
          case "together":
            xj(b, !1, null, null, void 0);
            break;
          default:
            b.memoizedState = null;
        }
      return b.child;
    }
    function jj(a8, b) {
      !(b.mode & 1) && a8 !== null && (a8.alternate = null, b.alternate = null, b.flags |= 2);
    }
    function $i(a8, b, c) {
      if (a8 !== null && (b.dependencies = a8.dependencies), hh |= b.lanes, !(c & b.childLanes))
        return null;
      if (a8 !== null && b.child !== a8.child)
        throw Error(p(153));
      if (b.child !== null) {
        for (a8 = b.child, c = wh(a8, a8.pendingProps), b.child = c, c.return = b; a8.sibling !== null; )
          a8 = a8.sibling, c = c.sibling = wh(a8, a8.pendingProps), c.return = b;
        c.sibling = null;
      }
      return b.child;
    }
    function zj(a8, b, c) {
      switch (b.tag) {
        case 3:
          lj(b), Ig();
          break;
        case 5:
          Kh(b);
          break;
        case 1:
          Zf(b.type) && cg(b);
          break;
        case 4:
          Ih(b, b.stateNode.containerInfo);
          break;
        case 10:
          var d = b.type._context, e23 = b.memoizedProps.value;
          G(Mg, d._currentValue), d._currentValue = e23;
          break;
        case 13:
          if (d = b.memoizedState, d !== null)
            return d.dehydrated !== null ? (G(M, M.current & 1), b.flags |= 128, null) : c & b.child.childLanes ? pj(a8, b, c) : (G(M, M.current & 1), a8 = $i(a8, b, c), a8 !== null ? a8.sibling : null);
          G(M, M.current & 1);
          break;
        case 19:
          if (d = (c & b.childLanes) !== 0, a8.flags & 128) {
            if (d)
              return yj(a8, b, c);
            b.flags |= 128;
          }
          if (e23 = b.memoizedState, e23 !== null && (e23.rendering = null, e23.tail = null, e23.lastEffect = null), G(M, M.current), d)
            break;
          return null;
        case 22:
        case 23:
          return b.lanes = 0, ej(a8, b, c);
      }
      return $i(a8, b, c);
    }
    var Aj, Bj, Cj, Dj;
    Aj = function(a8, b) {
      for (var c = b.child; c !== null; ) {
        if (c.tag === 5 || c.tag === 6)
          a8.appendChild(c.stateNode);
        else if (c.tag !== 4 && c.child !== null) {
          c.child.return = c, c = c.child;
          continue;
        }
        if (c === b)
          break;
        for (; c.sibling === null; ) {
          if (c.return === null || c.return === b)
            return;
          c = c.return;
        }
        c.sibling.return = c.return, c = c.sibling;
      }
    };
    Bj = function() {
    };
    Cj = function(a8, b, c, d) {
      var e23 = a8.memoizedProps;
      if (e23 !== d) {
        a8 = b.stateNode, Hh(Eh.current);
        var f = null;
        switch (c) {
          case "input":
            e23 = Ya(a8, e23), d = Ya(a8, d), f = [];
            break;
          case "select":
            e23 = A({}, e23, { value: void 0 }), d = A({}, d, { value: void 0 }), f = [];
            break;
          case "textarea":
            e23 = gb(a8, e23), d = gb(a8, d), f = [];
            break;
          default:
            typeof e23.onClick != "function" && typeof d.onClick == "function" && (a8.onclick = Bf);
        }
        ub(c, d);
        var g;
        c = null;
        for (l9 in e23)
          if (!d.hasOwnProperty(l9) && e23.hasOwnProperty(l9) && e23[l9] != null)
            if (l9 === "style") {
              var h = e23[l9];
              for (g in h)
                h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
            } else
              l9 !== "dangerouslySetInnerHTML" && l9 !== "children" && l9 !== "suppressContentEditableWarning" && l9 !== "suppressHydrationWarning" && l9 !== "autoFocus" && (ea.hasOwnProperty(l9) ? f || (f = []) : (f = f || []).push(l9, null));
        for (l9 in d) {
          var k = d[l9];
          if (h = e23 != null ? e23[l9] : void 0, d.hasOwnProperty(l9) && k !== h && (k != null || h != null))
            if (l9 === "style")
              if (h) {
                for (g in h)
                  !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
                for (g in k)
                  k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
              } else
                c || (f || (f = []), f.push(
                  l9,
                  c
                )), c = k;
            else
              l9 === "dangerouslySetInnerHTML" ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, k != null && h !== k && (f = f || []).push(l9, k)) : l9 === "children" ? typeof k != "string" && typeof k != "number" || (f = f || []).push(l9, "" + k) : l9 !== "suppressContentEditableWarning" && l9 !== "suppressHydrationWarning" && (ea.hasOwnProperty(l9) ? (k != null && l9 === "onScroll" && D("scroll", a8), f || h === k || (f = [])) : (f = f || []).push(l9, k));
        }
        c && (f = f || []).push("style", c);
        var l9 = f;
        (b.updateQueue = l9) && (b.flags |= 4);
      }
    };
    Dj = function(a8, b, c, d) {
      c !== d && (b.flags |= 4);
    };
    function Ej(a8, b) {
      if (!I)
        switch (a8.tailMode) {
          case "hidden":
            b = a8.tail;
            for (var c = null; b !== null; )
              b.alternate !== null && (c = b), b = b.sibling;
            c === null ? a8.tail = null : c.sibling = null;
            break;
          case "collapsed":
            c = a8.tail;
            for (var d = null; c !== null; )
              c.alternate !== null && (d = c), c = c.sibling;
            d === null ? b || a8.tail === null ? a8.tail = null : a8.tail.sibling = null : d.sibling = null;
        }
    }
    function S(a8) {
      var b = a8.alternate !== null && a8.alternate.child === a8.child, c = 0, d = 0;
      if (b)
        for (var e23 = a8.child; e23 !== null; )
          c |= e23.lanes | e23.childLanes, d |= e23.subtreeFlags & 14680064, d |= e23.flags & 14680064, e23.return = a8, e23 = e23.sibling;
      else
        for (e23 = a8.child; e23 !== null; )
          c |= e23.lanes | e23.childLanes, d |= e23.subtreeFlags, d |= e23.flags, e23.return = a8, e23 = e23.sibling;
      return a8.subtreeFlags |= d, a8.childLanes = c, b;
    }
    function Fj(a8, b, c) {
      var d = b.pendingProps;
      switch (wg(b), b.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return S(b), null;
        case 1:
          return Zf(b.type) && $f(), S(b), null;
        case 3:
          return d = b.stateNode, Jh(), E(Wf), E(H), Oh(), d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null), (a8 === null || a8.child === null) && (Gg(b) ? b.flags |= 4 : a8 === null || a8.memoizedState.isDehydrated && !(b.flags & 256) || (b.flags |= 1024, zg !== null && (Gj(zg), zg = null))), Bj(a8, b), S(b), null;
        case 5:
          Lh(b);
          var e23 = Hh(Gh.current);
          if (c = b.type, a8 !== null && b.stateNode != null)
            Cj(a8, b, c, d, e23), a8.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
          else {
            if (!d) {
              if (b.stateNode === null)
                throw Error(p(166));
              return S(b), null;
            }
            if (a8 = Hh(Eh.current), Gg(b)) {
              d = b.stateNode, c = b.type;
              var f = b.memoizedProps;
              switch (d[Of] = b, d[Pf] = f, a8 = (b.mode & 1) !== 0, c) {
                case "dialog":
                  D("cancel", d), D("close", d);
                  break;
                case "iframe":
                case "object":
                case "embed":
                  D("load", d);
                  break;
                case "video":
                case "audio":
                  for (e23 = 0; e23 < lf.length; e23++)
                    D(lf[e23], d);
                  break;
                case "source":
                  D("error", d);
                  break;
                case "img":
                case "image":
                case "link":
                  D(
                    "error",
                    d
                  ), D("load", d);
                  break;
                case "details":
                  D("toggle", d);
                  break;
                case "input":
                  Za(d, f), D("invalid", d);
                  break;
                case "select":
                  d._wrapperState = { wasMultiple: !!f.multiple }, D("invalid", d);
                  break;
                case "textarea":
                  hb(d, f), D("invalid", d);
              }
              ub(c, f), e23 = null;
              for (var g in f)
                if (f.hasOwnProperty(g)) {
                  var h = f[g];
                  g === "children" ? typeof h == "string" ? d.textContent !== h && (f.suppressHydrationWarning !== !0 && Af(d.textContent, h, a8), e23 = ["children", h]) : typeof h == "number" && d.textContent !== "" + h && (f.suppressHydrationWarning !== !0 && Af(
                    d.textContent,
                    h,
                    a8
                  ), e23 = ["children", "" + h]) : ea.hasOwnProperty(g) && h != null && g === "onScroll" && D("scroll", d);
                }
              switch (c) {
                case "input":
                  Va(d), db(d, f, !0);
                  break;
                case "textarea":
                  Va(d), jb(d);
                  break;
                case "select":
                case "option":
                  break;
                default:
                  typeof f.onClick == "function" && (d.onclick = Bf);
              }
              d = e23, b.updateQueue = d, d !== null && (b.flags |= 4);
            } else {
              g = e23.nodeType === 9 ? e23 : e23.ownerDocument, a8 === "http://www.w3.org/1999/xhtml" && (a8 = kb(c)), a8 === "http://www.w3.org/1999/xhtml" ? c === "script" ? (a8 = g.createElement("div"), a8.innerHTML = "<script></script>", a8 = a8.removeChild(a8.firstChild)) : typeof d.is == "string" ? a8 = g.createElement(c, { is: d.is }) : (a8 = g.createElement(c), c === "select" && (g = a8, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a8 = g.createElementNS(a8, c), a8[Of] = b, a8[Pf] = d, Aj(a8, b, !1, !1), b.stateNode = a8;
              a: {
                switch (g = vb(c, d), c) {
                  case "dialog":
                    D("cancel", a8), D("close", a8), e23 = d;
                    break;
                  case "iframe":
                  case "object":
                  case "embed":
                    D("load", a8), e23 = d;
                    break;
                  case "video":
                  case "audio":
                    for (e23 = 0; e23 < lf.length; e23++)
                      D(lf[e23], a8);
                    e23 = d;
                    break;
                  case "source":
                    D("error", a8), e23 = d;
                    break;
                  case "img":
                  case "image":
                  case "link":
                    D(
                      "error",
                      a8
                    ), D("load", a8), e23 = d;
                    break;
                  case "details":
                    D("toggle", a8), e23 = d;
                    break;
                  case "input":
                    Za(a8, d), e23 = Ya(a8, d), D("invalid", a8);
                    break;
                  case "option":
                    e23 = d;
                    break;
                  case "select":
                    a8._wrapperState = { wasMultiple: !!d.multiple }, e23 = A({}, d, { value: void 0 }), D("invalid", a8);
                    break;
                  case "textarea":
                    hb(a8, d), e23 = gb(a8, d), D("invalid", a8);
                    break;
                  default:
                    e23 = d;
                }
                ub(c, e23), h = e23;
                for (f in h)
                  if (h.hasOwnProperty(f)) {
                    var k = h[f];
                    f === "style" ? sb(a8, k) : f === "dangerouslySetInnerHTML" ? (k = k ? k.__html : void 0, k != null && nb(a8, k)) : f === "children" ? typeof k == "string" ? (c !== "textarea" || k !== "") && ob(a8, k) : typeof k == "number" && ob(a8, "" + k) : f !== "suppressContentEditableWarning" && f !== "suppressHydrationWarning" && f !== "autoFocus" && (ea.hasOwnProperty(f) ? k != null && f === "onScroll" && D("scroll", a8) : k != null && ta(a8, f, k, g));
                  }
                switch (c) {
                  case "input":
                    Va(a8), db(a8, d, !1);
                    break;
                  case "textarea":
                    Va(a8), jb(a8);
                    break;
                  case "option":
                    d.value != null && a8.setAttribute("value", "" + Sa(d.value));
                    break;
                  case "select":
                    a8.multiple = !!d.multiple, f = d.value, f != null ? fb(a8, !!d.multiple, f, !1) : d.defaultValue != null && fb(
                      a8,
                      !!d.multiple,
                      d.defaultValue,
                      !0
                    );
                    break;
                  default:
                    typeof e23.onClick == "function" && (a8.onclick = Bf);
                }
                switch (c) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    d = !!d.autoFocus;
                    break a;
                  case "img":
                    d = !0;
                    break a;
                  default:
                    d = !1;
                }
              }
              d && (b.flags |= 4);
            }
            b.ref !== null && (b.flags |= 512, b.flags |= 2097152);
          }
          return S(b), null;
        case 6:
          if (a8 && b.stateNode != null)
            Dj(a8, b, a8.memoizedProps, d);
          else {
            if (typeof d != "string" && b.stateNode === null)
              throw Error(p(166));
            if (c = Hh(Gh.current), Hh(Eh.current), Gg(b)) {
              if (d = b.stateNode, c = b.memoizedProps, d[Of] = b, (f = d.nodeValue !== c) && (a8 = xg, a8 !== null))
                switch (a8.tag) {
                  case 3:
                    Af(d.nodeValue, c, (a8.mode & 1) !== 0);
                    break;
                  case 5:
                    a8.memoizedProps.suppressHydrationWarning !== !0 && Af(d.nodeValue, c, (a8.mode & 1) !== 0);
                }
              f && (b.flags |= 4);
            } else
              d = (c.nodeType === 9 ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
          }
          return S(b), null;
        case 13:
          if (E(M), d = b.memoizedState, a8 === null || a8.memoizedState !== null && a8.memoizedState.dehydrated !== null) {
            if (I && yg !== null && b.mode & 1 && !(b.flags & 128))
              Hg(), Ig(), b.flags |= 98560, f = !1;
            else if (f = Gg(b), d !== null && d.dehydrated !== null) {
              if (a8 === null) {
                if (!f)
                  throw Error(p(318));
                if (f = b.memoizedState, f = f !== null ? f.dehydrated : null, !f)
                  throw Error(p(317));
                f[Of] = b;
              } else
                Ig(), !(b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
              S(b), f = !1;
            } else
              zg !== null && (Gj(zg), zg = null), f = !0;
            if (!f)
              return b.flags & 65536 ? b : null;
          }
          return b.flags & 128 ? (b.lanes = c, b) : (d = d !== null, d !== (a8 !== null && a8.memoizedState !== null) && d && (b.child.flags |= 8192, b.mode & 1 && (a8 === null || M.current & 1 ? T === 0 && (T = 3) : uj())), b.updateQueue !== null && (b.flags |= 4), S(b), null);
        case 4:
          return Jh(), Bj(a8, b), a8 === null && sf(b.stateNode.containerInfo), S(b), null;
        case 10:
          return Rg(b.type._context), S(b), null;
        case 17:
          return Zf(b.type) && $f(), S(b), null;
        case 19:
          if (E(M), f = b.memoizedState, f === null)
            return S(b), null;
          if (d = (b.flags & 128) !== 0, g = f.rendering, g === null)
            if (d)
              Ej(f, !1);
            else {
              if (T !== 0 || a8 !== null && a8.flags & 128)
                for (a8 = b.child; a8 !== null; ) {
                  if (g = Mh(a8), g !== null) {
                    for (b.flags |= 128, Ej(f, !1), d = g.updateQueue, d !== null && (b.updateQueue = d, b.flags |= 4), b.subtreeFlags = 0, d = c, c = b.child; c !== null; )
                      f = c, a8 = d, f.flags &= 14680066, g = f.alternate, g === null ? (f.childLanes = 0, f.lanes = a8, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a8 = g.dependencies, f.dependencies = a8 === null ? null : { lanes: a8.lanes, firstContext: a8.firstContext }), c = c.sibling;
                    return G(M, M.current & 1 | 2), b.child;
                  }
                  a8 = a8.sibling;
                }
              f.tail !== null && B() > Hj && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
            }
          else {
            if (!d)
              if (a8 = Mh(g), a8 !== null) {
                if (b.flags |= 128, d = !0, c = a8.updateQueue, c !== null && (b.updateQueue = c, b.flags |= 4), Ej(f, !0), f.tail === null && f.tailMode === "hidden" && !g.alternate && !I)
                  return S(b), null;
              } else
                2 * B() - f.renderingStartTime > Hj && c !== 1073741824 && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
            f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, c !== null ? c.sibling = g : b.child = g, f.last = g);
          }
          return f.tail !== null ? (b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = B(), b.sibling = null, c = M.current, G(M, d ? c & 1 | 2 : c & 1), b) : (S(b), null);
        case 22:
        case 23:
          return Ij(), d = b.memoizedState !== null, a8 !== null && a8.memoizedState !== null !== d && (b.flags |= 8192), d && b.mode & 1 ? gj & 1073741824 && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
        case 24:
          return null;
        case 25:
          return null;
      }
      throw Error(p(156, b.tag));
    }
    function Jj(a8, b) {
      switch (wg(b), b.tag) {
        case 1:
          return Zf(b.type) && $f(), a8 = b.flags, a8 & 65536 ? (b.flags = a8 & -65537 | 128, b) : null;
        case 3:
          return Jh(), E(Wf), E(H), Oh(), a8 = b.flags, a8 & 65536 && !(a8 & 128) ? (b.flags = a8 & -65537 | 128, b) : null;
        case 5:
          return Lh(b), null;
        case 13:
          if (E(M), a8 = b.memoizedState, a8 !== null && a8.dehydrated !== null) {
            if (b.alternate === null)
              throw Error(p(340));
            Ig();
          }
          return a8 = b.flags, a8 & 65536 ? (b.flags = a8 & -65537 | 128, b) : null;
        case 19:
          return E(M), null;
        case 4:
          return Jh(), null;
        case 10:
          return Rg(b.type._context), null;
        case 22:
        case 23:
          return Ij(), null;
        case 24:
          return null;
        default:
          return null;
      }
    }
    var Kj = !1, U = !1, Lj = typeof WeakSet == "function" ? WeakSet : Set, V = null;
    function Mj(a8, b) {
      var c = a8.ref;
      if (c !== null)
        if (typeof c == "function")
          try {
            c(null);
          } catch (d) {
            W(a8, b, d);
          }
        else
          c.current = null;
    }
    function Nj(a8, b, c) {
      try {
        c();
      } catch (d) {
        W(a8, b, d);
      }
    }
    var Oj = !1;
    function Pj(a8, b) {
      if (Cf = dd, a8 = Me(), Ne(a8)) {
        if ("selectionStart" in a8)
          var c = { start: a8.selectionStart, end: a8.selectionEnd };
        else
          a: {
            c = (c = a8.ownerDocument) && c.defaultView || window;
            var d = c.getSelection && c.getSelection();
            if (d && d.rangeCount !== 0) {
              c = d.anchorNode;
              var e23 = d.anchorOffset, f = d.focusNode;
              d = d.focusOffset;
              try {
                c.nodeType, f.nodeType;
              } catch {
                c = null;
                break a;
              }
              var g = 0, h = -1, k = -1, l9 = 0, m = 0, q = a8, r24 = null;
              b:
                for (; ; ) {
                  for (var y; q !== c || e23 !== 0 && q.nodeType !== 3 || (h = g + e23), q !== f || d !== 0 && q.nodeType !== 3 || (k = g + d), q.nodeType === 3 && (g += q.nodeValue.length), (y = q.firstChild) !== null; )
                    r24 = q, q = y;
                  for (; ; ) {
                    if (q === a8)
                      break b;
                    if (r24 === c && ++l9 === e23 && (h = g), r24 === f && ++m === d && (k = g), (y = q.nextSibling) !== null)
                      break;
                    q = r24, r24 = q.parentNode;
                  }
                  q = y;
                }
              c = h === -1 || k === -1 ? null : { start: h, end: k };
            } else
              c = null;
          }
        c = c || { start: 0, end: 0 };
      } else
        c = null;
      for (Df = { focusedElem: a8, selectionRange: c }, dd = !1, V = b; V !== null; )
        if (b = V, a8 = b.child, (b.subtreeFlags & 1028) !== 0 && a8 !== null)
          a8.return = b, V = a8;
        else
          for (; V !== null; ) {
            b = V;
            try {
              var n = b.alternate;
              if (b.flags & 1024)
                switch (b.tag) {
                  case 0:
                  case 11:
                  case 15:
                    break;
                  case 1:
                    if (n !== null) {
                      var t17 = n.memoizedProps, J = n.memoizedState, x = b.stateNode, w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t17 : Lg(b.type, t17), J);
                      x.__reactInternalSnapshotBeforeUpdate = w;
                    }
                    break;
                  case 3:
                    var u = b.stateNode.containerInfo;
                    u.nodeType === 1 ? u.textContent = "" : u.nodeType === 9 && u.documentElement && u.removeChild(u.documentElement);
                    break;
                  case 5:
                  case 6:
                  case 4:
                  case 17:
                    break;
                  default:
                    throw Error(p(163));
                }
            } catch (F) {
              W(b, b.return, F);
            }
            if (a8 = b.sibling, a8 !== null) {
              a8.return = b.return, V = a8;
              break;
            }
            V = b.return;
          }
      return n = Oj, Oj = !1, n;
    }
    function Qj(a8, b, c) {
      var d = b.updateQueue;
      if (d = d !== null ? d.lastEffect : null, d !== null) {
        var e23 = d = d.next;
        do {
          if ((e23.tag & a8) === a8) {
            var f = e23.destroy;
            e23.destroy = void 0, f !== void 0 && Nj(b, c, f);
          }
          e23 = e23.next;
        } while (e23 !== d);
      }
    }
    function Rj(a8, b) {
      if (b = b.updateQueue, b = b !== null ? b.lastEffect : null, b !== null) {
        var c = b = b.next;
        do {
          if ((c.tag & a8) === a8) {
            var d = c.create;
            c.destroy = d();
          }
          c = c.next;
        } while (c !== b);
      }
    }
    function Sj(a8) {
      var b = a8.ref;
      if (b !== null) {
        var c = a8.stateNode;
        switch (a8.tag) {
          case 5:
            a8 = c;
            break;
          default:
            a8 = c;
        }
        typeof b == "function" ? b(a8) : b.current = a8;
      }
    }
    function Tj(a8) {
      var b = a8.alternate;
      b !== null && (a8.alternate = null, Tj(b)), a8.child = null, a8.deletions = null, a8.sibling = null, a8.tag === 5 && (b = a8.stateNode, b !== null && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf])), a8.stateNode = null, a8.return = null, a8.dependencies = null, a8.memoizedProps = null, a8.memoizedState = null, a8.pendingProps = null, a8.stateNode = null, a8.updateQueue = null;
    }
    function Uj(a8) {
      return a8.tag === 5 || a8.tag === 3 || a8.tag === 4;
    }
    function Vj(a8) {
      a:
        for (; ; ) {
          for (; a8.sibling === null; ) {
            if (a8.return === null || Uj(a8.return))
              return null;
            a8 = a8.return;
          }
          for (a8.sibling.return = a8.return, a8 = a8.sibling; a8.tag !== 5 && a8.tag !== 6 && a8.tag !== 18; ) {
            if (a8.flags & 2 || a8.child === null || a8.tag === 4)
              continue a;
            a8.child.return = a8, a8 = a8.child;
          }
          if (!(a8.flags & 2))
            return a8.stateNode;
        }
    }
    function Wj(a8, b, c) {
      var d = a8.tag;
      if (d === 5 || d === 6)
        a8 = a8.stateNode, b ? c.nodeType === 8 ? c.parentNode.insertBefore(a8, b) : c.insertBefore(a8, b) : (c.nodeType === 8 ? (b = c.parentNode, b.insertBefore(a8, c)) : (b = c, b.appendChild(a8)), c = c._reactRootContainer, c != null || b.onclick !== null || (b.onclick = Bf));
      else if (d !== 4 && (a8 = a8.child, a8 !== null))
        for (Wj(a8, b, c), a8 = a8.sibling; a8 !== null; )
          Wj(a8, b, c), a8 = a8.sibling;
    }
    function Xj(a8, b, c) {
      var d = a8.tag;
      if (d === 5 || d === 6)
        a8 = a8.stateNode, b ? c.insertBefore(a8, b) : c.appendChild(a8);
      else if (d !== 4 && (a8 = a8.child, a8 !== null))
        for (Xj(a8, b, c), a8 = a8.sibling; a8 !== null; )
          Xj(a8, b, c), a8 = a8.sibling;
    }
    var X = null, Yj = !1;
    function Zj(a8, b, c) {
      for (c = c.child; c !== null; )
        ak(a8, b, c), c = c.sibling;
    }
    function ak(a8, b, c) {
      if (lc && typeof lc.onCommitFiberUnmount == "function")
        try {
          lc.onCommitFiberUnmount(kc, c);
        } catch {
        }
      switch (c.tag) {
        case 5:
          U || Mj(c, b);
        case 6:
          var d = X, e23 = Yj;
          X = null, Zj(a8, b, c), X = d, Yj = e23, X !== null && (Yj ? (a8 = X, c = c.stateNode, a8.nodeType === 8 ? a8.parentNode.removeChild(c) : a8.removeChild(c)) : X.removeChild(c.stateNode));
          break;
        case 18:
          X !== null && (Yj ? (a8 = X, c = c.stateNode, a8.nodeType === 8 ? Kf(a8.parentNode, c) : a8.nodeType === 1 && Kf(a8, c), bd(a8)) : Kf(X, c.stateNode));
          break;
        case 4:
          d = X, e23 = Yj, X = c.stateNode.containerInfo, Yj = !0, Zj(a8, b, c), X = d, Yj = e23;
          break;
        case 0:
        case 11:
        case 14:
        case 15:
          if (!U && (d = c.updateQueue, d !== null && (d = d.lastEffect, d !== null))) {
            e23 = d = d.next;
            do {
              var f = e23, g = f.destroy;
              f = f.tag, g !== void 0 && (f & 2 || f & 4) && Nj(c, b, g), e23 = e23.next;
            } while (e23 !== d);
          }
          Zj(a8, b, c);
          break;
        case 1:
          if (!U && (Mj(c, b), d = c.stateNode, typeof d.componentWillUnmount == "function"))
            try {
              d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
            } catch (h) {
              W(c, b, h);
            }
          Zj(a8, b, c);
          break;
        case 21:
          Zj(a8, b, c);
          break;
        case 22:
          c.mode & 1 ? (U = (d = U) || c.memoizedState !== null, Zj(a8, b, c), U = d) : Zj(a8, b, c);
          break;
        default:
          Zj(a8, b, c);
      }
    }
    function bk(a8) {
      var b = a8.updateQueue;
      if (b !== null) {
        a8.updateQueue = null;
        var c = a8.stateNode;
        c === null && (c = a8.stateNode = new Lj()), b.forEach(function(b2) {
          var d = ck.bind(null, a8, b2);
          c.has(b2) || (c.add(b2), b2.then(d, d));
        });
      }
    }
    function dk(a8, b) {
      var c = b.deletions;
      if (c !== null)
        for (var d = 0; d < c.length; d++) {
          var e23 = c[d];
          try {
            var f = a8, g = b, h = g;
            a:
              for (; h !== null; ) {
                switch (h.tag) {
                  case 5:
                    X = h.stateNode, Yj = !1;
                    break a;
                  case 3:
                    X = h.stateNode.containerInfo, Yj = !0;
                    break a;
                  case 4:
                    X = h.stateNode.containerInfo, Yj = !0;
                    break a;
                }
                h = h.return;
              }
            if (X === null)
              throw Error(p(160));
            ak(f, g, e23), X = null, Yj = !1;
            var k = e23.alternate;
            k !== null && (k.return = null), e23.return = null;
          } catch (l9) {
            W(e23, b, l9);
          }
        }
      if (b.subtreeFlags & 12854)
        for (b = b.child; b !== null; )
          ek(b, a8), b = b.sibling;
    }
    function ek(a8, b) {
      var c = a8.alternate, d = a8.flags;
      switch (a8.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          if (dk(b, a8), fk(a8), d & 4) {
            try {
              Qj(3, a8, a8.return), Rj(3, a8);
            } catch (t17) {
              W(a8, a8.return, t17);
            }
            try {
              Qj(5, a8, a8.return);
            } catch (t17) {
              W(a8, a8.return, t17);
            }
          }
          break;
        case 1:
          dk(b, a8), fk(a8), d & 512 && c !== null && Mj(c, c.return);
          break;
        case 5:
          if (dk(b, a8), fk(a8), d & 512 && c !== null && Mj(c, c.return), a8.flags & 32) {
            var e23 = a8.stateNode;
            try {
              ob(e23, "");
            } catch (t17) {
              W(a8, a8.return, t17);
            }
          }
          if (d & 4 && (e23 = a8.stateNode, e23 != null)) {
            var f = a8.memoizedProps, g = c !== null ? c.memoizedProps : f, h = a8.type, k = a8.updateQueue;
            if (a8.updateQueue = null, k !== null)
              try {
                h === "input" && f.type === "radio" && f.name != null && ab(e23, f), vb(h, g);
                var l9 = vb(h, f);
                for (g = 0; g < k.length; g += 2) {
                  var m = k[g], q = k[g + 1];
                  m === "style" ? sb(e23, q) : m === "dangerouslySetInnerHTML" ? nb(e23, q) : m === "children" ? ob(e23, q) : ta(e23, m, q, l9);
                }
                switch (h) {
                  case "input":
                    bb(e23, f);
                    break;
                  case "textarea":
                    ib(e23, f);
                    break;
                  case "select":
                    var r24 = e23._wrapperState.wasMultiple;
                    e23._wrapperState.wasMultiple = !!f.multiple;
                    var y = f.value;
                    y != null ? fb(e23, !!f.multiple, y, !1) : r24 !== !!f.multiple && (f.defaultValue != null ? fb(
                      e23,
                      !!f.multiple,
                      f.defaultValue,
                      !0
                    ) : fb(e23, !!f.multiple, f.multiple ? [] : "", !1));
                }
                e23[Pf] = f;
              } catch (t17) {
                W(a8, a8.return, t17);
              }
          }
          break;
        case 6:
          if (dk(b, a8), fk(a8), d & 4) {
            if (a8.stateNode === null)
              throw Error(p(162));
            e23 = a8.stateNode, f = a8.memoizedProps;
            try {
              e23.nodeValue = f;
            } catch (t17) {
              W(a8, a8.return, t17);
            }
          }
          break;
        case 3:
          if (dk(b, a8), fk(a8), d & 4 && c !== null && c.memoizedState.isDehydrated)
            try {
              bd(b.containerInfo);
            } catch (t17) {
              W(a8, a8.return, t17);
            }
          break;
        case 4:
          dk(b, a8), fk(a8);
          break;
        case 13:
          dk(b, a8), fk(a8), e23 = a8.child, e23.flags & 8192 && (f = e23.memoizedState !== null, e23.stateNode.isHidden = f, !f || e23.alternate !== null && e23.alternate.memoizedState !== null || (gk = B())), d & 4 && bk(a8);
          break;
        case 22:
          if (m = c !== null && c.memoizedState !== null, a8.mode & 1 ? (U = (l9 = U) || m, dk(b, a8), U = l9) : dk(b, a8), fk(a8), d & 8192) {
            if (l9 = a8.memoizedState !== null, (a8.stateNode.isHidden = l9) && !m && a8.mode & 1)
              for (V = a8, m = a8.child; m !== null; ) {
                for (q = V = m; V !== null; ) {
                  switch (r24 = V, y = r24.child, r24.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                      Qj(4, r24, r24.return);
                      break;
                    case 1:
                      Mj(r24, r24.return);
                      var n = r24.stateNode;
                      if (typeof n.componentWillUnmount == "function") {
                        d = r24, c = r24.return;
                        try {
                          b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                        } catch (t17) {
                          W(d, c, t17);
                        }
                      }
                      break;
                    case 5:
                      Mj(r24, r24.return);
                      break;
                    case 22:
                      if (r24.memoizedState !== null) {
                        hk(q);
                        continue;
                      }
                  }
                  y !== null ? (y.return = r24, V = y) : hk(q);
                }
                m = m.sibling;
              }
            a:
              for (m = null, q = a8; ; ) {
                if (q.tag === 5) {
                  if (m === null) {
                    m = q;
                    try {
                      e23 = q.stateNode, l9 ? (f = e23.style, typeof f.setProperty == "function" ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = k != null && k.hasOwnProperty("display") ? k.display : null, h.style.display = rb("display", g));
                    } catch (t17) {
                      W(a8, a8.return, t17);
                    }
                  }
                } else if (q.tag === 6) {
                  if (m === null)
                    try {
                      q.stateNode.nodeValue = l9 ? "" : q.memoizedProps;
                    } catch (t17) {
                      W(a8, a8.return, t17);
                    }
                } else if ((q.tag !== 22 && q.tag !== 23 || q.memoizedState === null || q === a8) && q.child !== null) {
                  q.child.return = q, q = q.child;
                  continue;
                }
                if (q === a8)
                  break a;
                for (; q.sibling === null; ) {
                  if (q.return === null || q.return === a8)
                    break a;
                  m === q && (m = null), q = q.return;
                }
                m === q && (m = null), q.sibling.return = q.return, q = q.sibling;
              }
          }
          break;
        case 19:
          dk(b, a8), fk(a8), d & 4 && bk(a8);
          break;
        case 21:
          break;
        default:
          dk(
            b,
            a8
          ), fk(a8);
      }
    }
    function fk(a8) {
      var b = a8.flags;
      if (b & 2) {
        try {
          a: {
            for (var c = a8.return; c !== null; ) {
              if (Uj(c)) {
                var d = c;
                break a;
              }
              c = c.return;
            }
            throw Error(p(160));
          }
          switch (d.tag) {
            case 5:
              var e23 = d.stateNode;
              d.flags & 32 && (ob(e23, ""), d.flags &= -33);
              var f = Vj(a8);
              Xj(a8, f, e23);
              break;
            case 3:
            case 4:
              var g = d.stateNode.containerInfo, h = Vj(a8);
              Wj(a8, h, g);
              break;
            default:
              throw Error(p(161));
          }
        } catch (k) {
          W(a8, a8.return, k);
        }
        a8.flags &= -3;
      }
      b & 4096 && (a8.flags &= -4097);
    }
    function ik(a8, b, c) {
      V = a8, jk(a8, b, c);
    }
    function jk(a8, b, c) {
      for (var d = (a8.mode & 1) !== 0; V !== null; ) {
        var e23 = V, f = e23.child;
        if (e23.tag === 22 && d) {
          var g = e23.memoizedState !== null || Kj;
          if (!g) {
            var h = e23.alternate, k = h !== null && h.memoizedState !== null || U;
            h = Kj;
            var l9 = U;
            if (Kj = g, (U = k) && !l9)
              for (V = e23; V !== null; )
                g = V, k = g.child, g.tag === 22 && g.memoizedState !== null ? kk(e23) : k !== null ? (k.return = g, V = k) : kk(e23);
            for (; f !== null; )
              V = f, jk(f, b, c), f = f.sibling;
            V = e23, Kj = h, U = l9;
          }
          lk(a8, b, c);
        } else
          e23.subtreeFlags & 8772 && f !== null ? (f.return = e23, V = f) : lk(a8, b, c);
      }
    }
    function lk(a8) {
      for (; V !== null; ) {
        var b = V;
        if (b.flags & 8772) {
          var c = b.alternate;
          try {
            if (b.flags & 8772)
              switch (b.tag) {
                case 0:
                case 11:
                case 15:
                  U || Rj(5, b);
                  break;
                case 1:
                  var d = b.stateNode;
                  if (b.flags & 4 && !U)
                    if (c === null)
                      d.componentDidMount();
                    else {
                      var e23 = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
                      d.componentDidUpdate(e23, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                    }
                  var f = b.updateQueue;
                  f !== null && ih(b, f, d);
                  break;
                case 3:
                  var g = b.updateQueue;
                  if (g !== null) {
                    if (c = null, b.child !== null)
                      switch (b.child.tag) {
                        case 5:
                          c = b.child.stateNode;
                          break;
                        case 1:
                          c = b.child.stateNode;
                      }
                    ih(b, g, c);
                  }
                  break;
                case 5:
                  var h = b.stateNode;
                  if (c === null && b.flags & 4) {
                    c = h;
                    var k = b.memoizedProps;
                    switch (b.type) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        k.autoFocus && c.focus();
                        break;
                      case "img":
                        k.src && (c.src = k.src);
                    }
                  }
                  break;
                case 6:
                  break;
                case 4:
                  break;
                case 12:
                  break;
                case 13:
                  if (b.memoizedState === null) {
                    var l9 = b.alternate;
                    if (l9 !== null) {
                      var m = l9.memoizedState;
                      if (m !== null) {
                        var q = m.dehydrated;
                        q !== null && bd(q);
                      }
                    }
                  }
                  break;
                case 19:
                case 17:
                case 21:
                case 22:
                case 23:
                case 25:
                  break;
                default:
                  throw Error(p(163));
              }
            U || b.flags & 512 && Sj(b);
          } catch (r24) {
            W(b, b.return, r24);
          }
        }
        if (b === a8) {
          V = null;
          break;
        }
        if (c = b.sibling, c !== null) {
          c.return = b.return, V = c;
          break;
        }
        V = b.return;
      }
    }
    function hk(a8) {
      for (; V !== null; ) {
        var b = V;
        if (b === a8) {
          V = null;
          break;
        }
        var c = b.sibling;
        if (c !== null) {
          c.return = b.return, V = c;
          break;
        }
        V = b.return;
      }
    }
    function kk(a8) {
      for (; V !== null; ) {
        var b = V;
        try {
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
              var c = b.return;
              try {
                Rj(4, b);
              } catch (k) {
                W(b, c, k);
              }
              break;
            case 1:
              var d = b.stateNode;
              if (typeof d.componentDidMount == "function") {
                var e23 = b.return;
                try {
                  d.componentDidMount();
                } catch (k) {
                  W(b, e23, k);
                }
              }
              var f = b.return;
              try {
                Sj(b);
              } catch (k) {
                W(b, f, k);
              }
              break;
            case 5:
              var g = b.return;
              try {
                Sj(b);
              } catch (k) {
                W(b, g, k);
              }
          }
        } catch (k) {
          W(b, b.return, k);
        }
        if (b === a8) {
          V = null;
          break;
        }
        var h = b.sibling;
        if (h !== null) {
          h.return = b.return, V = h;
          break;
        }
        V = b.return;
      }
    }
    var mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K = 0, R = null, Y = null, Z = 0, gj = 0, fj = Uf(0), T = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = 1 / 0, vk = null, Pi = !1, Qi = null, Si = null, wk = !1, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
    function L() {
      return K & 6 ? B() : Bk !== -1 ? Bk : Bk = B();
    }
    function lh(a8) {
      return a8.mode & 1 ? K & 2 && Z !== 0 ? Z & -Z : Kg.transition !== null ? (Ck === 0 && (Ck = yc()), Ck) : (a8 = C, a8 !== 0 || (a8 = window.event, a8 = a8 === void 0 ? 16 : jd(a8.type)), a8) : 1;
    }
    function mh(a8, b, c, d) {
      if (50 < zk)
        throw zk = 0, Ak = null, Error(p(185));
      Ac(a8, c, d), (!(K & 2) || a8 !== R) && (a8 === R && (!(K & 2) && (rk |= c), T === 4 && Dk(a8, Z)), Ek(a8, d), c === 1 && K === 0 && !(b.mode & 1) && (Hj = B() + 500, fg && jg()));
    }
    function Ek(a8, b) {
      var c = a8.callbackNode;
      wc(a8, b);
      var d = uc(a8, a8 === R ? Z : 0);
      if (d === 0)
        c !== null && bc(c), a8.callbackNode = null, a8.callbackPriority = 0;
      else if (b = d & -d, a8.callbackPriority !== b) {
        if (c != null && bc(c), b === 1)
          a8.tag === 0 ? ig(Fk.bind(null, a8)) : hg(Fk.bind(null, a8)), Jf(function() {
            !(K & 6) && jg();
          }), c = null;
        else {
          switch (Dc(d)) {
            case 1:
              c = fc;
              break;
            case 4:
              c = gc;
              break;
            case 16:
              c = hc;
              break;
            case 536870912:
              c = jc;
              break;
            default:
              c = hc;
          }
          c = Gk(c, Hk.bind(null, a8));
        }
        a8.callbackPriority = b, a8.callbackNode = c;
      }
    }
    function Hk(a8, b) {
      if (Bk = -1, Ck = 0, K & 6)
        throw Error(p(327));
      var c = a8.callbackNode;
      if (Ik() && a8.callbackNode !== c)
        return null;
      var d = uc(a8, a8 === R ? Z : 0);
      if (d === 0)
        return null;
      if (d & 30 || d & a8.expiredLanes || b)
        b = Jk(a8, d);
      else {
        b = d;
        var e23 = K;
        K |= 2;
        var f = Kk();
        (R !== a8 || Z !== b) && (vk = null, Hj = B() + 500, Lk(a8, b));
        do
          try {
            Mk();
            break;
          } catch (h) {
            Nk(a8, h);
          }
        while (1);
        Qg(), nk.current = f, K = e23, Y !== null ? b = 0 : (R = null, Z = 0, b = T);
      }
      if (b !== 0) {
        if (b === 2 && (e23 = xc(a8), e23 !== 0 && (d = e23, b = Ok(a8, e23))), b === 1)
          throw c = qk, Lk(a8, 0), Dk(a8, d), Ek(a8, B()), c;
        if (b === 6)
          Dk(a8, d);
        else {
          if (e23 = a8.current.alternate, !(d & 30) && !Pk(e23) && (b = Jk(a8, d), b === 2 && (f = xc(a8), f !== 0 && (d = f, b = Ok(a8, f))), b === 1))
            throw c = qk, Lk(a8, 0), Dk(a8, d), Ek(a8, B()), c;
          switch (a8.finishedWork = e23, a8.finishedLanes = d, b) {
            case 0:
            case 1:
              throw Error(p(345));
            case 2:
              Qk(a8, uk, vk);
              break;
            case 3:
              if (Dk(a8, d), (d & 130023424) === d && (b = gk + 500 - B(), 10 < b)) {
                if (uc(a8, 0) !== 0)
                  break;
                if (e23 = a8.suspendedLanes, (e23 & d) !== d) {
                  L(), a8.pingedLanes |= a8.suspendedLanes & e23;
                  break;
                }
                a8.timeoutHandle = Ff(Qk.bind(null, a8, uk, vk), b);
                break;
              }
              Qk(a8, uk, vk);
              break;
            case 4:
              if (Dk(a8, d), (d & 4194240) === d)
                break;
              for (b = a8.eventTimes, e23 = -1; 0 < d; ) {
                var g = 31 - oc(d);
                f = 1 << g, g = b[g], g > e23 && (e23 = g), d &= ~f;
              }
              if (d = e23, d = B() - d, d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d, 10 < d) {
                a8.timeoutHandle = Ff(Qk.bind(null, a8, uk, vk), d);
                break;
              }
              Qk(a8, uk, vk);
              break;
            case 5:
              Qk(a8, uk, vk);
              break;
            default:
              throw Error(p(329));
          }
        }
      }
      return Ek(a8, B()), a8.callbackNode === c ? Hk.bind(null, a8) : null;
    }
    function Ok(a8, b) {
      var c = tk;
      return a8.current.memoizedState.isDehydrated && (Lk(a8, b).flags |= 256), a8 = Jk(a8, b), a8 !== 2 && (b = uk, uk = c, b !== null && Gj(b)), a8;
    }
    function Gj(a8) {
      uk === null ? uk = a8 : uk.push.apply(uk, a8);
    }
    function Pk(a8) {
      for (var b = a8; ; ) {
        if (b.flags & 16384) {
          var c = b.updateQueue;
          if (c !== null && (c = c.stores, c !== null))
            for (var d = 0; d < c.length; d++) {
              var e23 = c[d], f = e23.getSnapshot;
              e23 = e23.value;
              try {
                if (!He(f(), e23))
                  return !1;
              } catch {
                return !1;
              }
            }
        }
        if (c = b.child, b.subtreeFlags & 16384 && c !== null)
          c.return = b, b = c;
        else {
          if (b === a8)
            break;
          for (; b.sibling === null; ) {
            if (b.return === null || b.return === a8)
              return !0;
            b = b.return;
          }
          b.sibling.return = b.return, b = b.sibling;
        }
      }
      return !0;
    }
    function Dk(a8, b) {
      for (b &= ~sk, b &= ~rk, a8.suspendedLanes |= b, a8.pingedLanes &= ~b, a8 = a8.expirationTimes; 0 < b; ) {
        var c = 31 - oc(b), d = 1 << c;
        a8[c] = -1, b &= ~d;
      }
    }
    function Fk(a8) {
      if (K & 6)
        throw Error(p(327));
      Ik();
      var b = uc(a8, 0);
      if (!(b & 1))
        return Ek(a8, B()), null;
      var c = Jk(a8, b);
      if (a8.tag !== 0 && c === 2) {
        var d = xc(a8);
        d !== 0 && (b = d, c = Ok(a8, d));
      }
      if (c === 1)
        throw c = qk, Lk(a8, 0), Dk(a8, b), Ek(a8, B()), c;
      if (c === 6)
        throw Error(p(345));
      return a8.finishedWork = a8.current.alternate, a8.finishedLanes = b, Qk(a8, uk, vk), Ek(a8, B()), null;
    }
    function Rk(a8, b) {
      var c = K;
      K |= 1;
      try {
        return a8(b);
      } finally {
        K = c, K === 0 && (Hj = B() + 500, fg && jg());
      }
    }
    function Sk(a8) {
      xk !== null && xk.tag === 0 && !(K & 6) && Ik();
      var b = K;
      K |= 1;
      var c = pk.transition, d = C;
      try {
        if (pk.transition = null, C = 1, a8)
          return a8();
      } finally {
        C = d, pk.transition = c, K = b, !(K & 6) && jg();
      }
    }
    function Ij() {
      gj = fj.current, E(fj);
    }
    function Lk(a8, b) {
      a8.finishedWork = null, a8.finishedLanes = 0;
      var c = a8.timeoutHandle;
      if (c !== -1 && (a8.timeoutHandle = -1, Gf(c)), Y !== null)
        for (c = Y.return; c !== null; ) {
          var d = c;
          switch (wg(d), d.tag) {
            case 1:
              d = d.type.childContextTypes, d != null && $f();
              break;
            case 3:
              Jh(), E(Wf), E(H), Oh();
              break;
            case 5:
              Lh(d);
              break;
            case 4:
              Jh();
              break;
            case 13:
              E(M);
              break;
            case 19:
              E(M);
              break;
            case 10:
              Rg(d.type._context);
              break;
            case 22:
            case 23:
              Ij();
          }
          c = c.return;
        }
      if (R = a8, Y = a8 = wh(a8.current, null), Z = gj = b, T = 0, qk = null, sk = rk = hh = 0, uk = tk = null, Wg !== null) {
        for (b = 0; b < Wg.length; b++)
          if (c = Wg[b], d = c.interleaved, d !== null) {
            c.interleaved = null;
            var e23 = d.next, f = c.pending;
            if (f !== null) {
              var g = f.next;
              f.next = e23, d.next = g;
            }
            c.pending = d;
          }
        Wg = null;
      }
      return a8;
    }
    function Nk(a8, b) {
      do {
        var c = Y;
        try {
          if (Qg(), Ph.current = ai, Sh) {
            for (var d = N.memoizedState; d !== null; ) {
              var e23 = d.queue;
              e23 !== null && (e23.pending = null), d = d.next;
            }
            Sh = !1;
          }
          if (Rh = 0, P = O = N = null, Th = !1, Uh = 0, ok.current = null, c === null || c.return === null) {
            T = 1, qk = b, Y = null;
            break;
          }
          a: {
            var f = a8, g = c.return, h = c, k = b;
            if (b = Z, h.flags |= 32768, k !== null && typeof k == "object" && typeof k.then == "function") {
              var l9 = k, m = h, q = m.tag;
              if (!(m.mode & 1) && (q === 0 || q === 11 || q === 15)) {
                var r24 = m.alternate;
                r24 ? (m.updateQueue = r24.updateQueue, m.memoizedState = r24.memoizedState, m.lanes = r24.lanes) : (m.updateQueue = null, m.memoizedState = null);
              }
              var y = Vi(g);
              if (y !== null) {
                y.flags &= -257, Wi(y, g, h, f, b), y.mode & 1 && Ti(f, l9, b), b = y, k = l9;
                var n = b.updateQueue;
                if (n === null) {
                  var t17 = /* @__PURE__ */ new Set();
                  t17.add(k), b.updateQueue = t17;
                } else
                  n.add(k);
                break a;
              } else {
                if (!(b & 1)) {
                  Ti(f, l9, b), uj();
                  break a;
                }
                k = Error(p(426));
              }
            } else if (I && h.mode & 1) {
              var J = Vi(g);
              if (J !== null) {
                !(J.flags & 65536) && (J.flags |= 256), Wi(J, g, h, f, b), Jg(Ki(k, h));
                break a;
              }
            }
            f = k = Ki(k, h), T !== 4 && (T = 2), tk === null ? tk = [f] : tk.push(f), f = g;
            do {
              switch (f.tag) {
                case 3:
                  f.flags |= 65536, b &= -b, f.lanes |= b;
                  var x = Oi(f, k, b);
                  fh(f, x);
                  break a;
                case 1:
                  h = k;
                  var w = f.type, u = f.stateNode;
                  if (!(f.flags & 128) && (typeof w.getDerivedStateFromError == "function" || u !== null && typeof u.componentDidCatch == "function" && (Si === null || !Si.has(u)))) {
                    f.flags |= 65536, b &= -b, f.lanes |= b;
                    var F = Ri(f, h, b);
                    fh(f, F);
                    break a;
                  }
              }
              f = f.return;
            } while (f !== null);
          }
          Tk(c);
        } catch (na) {
          b = na, Y === c && c !== null && (Y = c = c.return);
          continue;
        }
        break;
      } while (1);
    }
    function Kk() {
      var a8 = nk.current;
      return nk.current = ai, a8 === null ? ai : a8;
    }
    function uj() {
      (T === 0 || T === 3 || T === 2) && (T = 4), R === null || !(hh & 268435455) && !(rk & 268435455) || Dk(R, Z);
    }
    function Jk(a8, b) {
      var c = K;
      K |= 2;
      var d = Kk();
      (R !== a8 || Z !== b) && (vk = null, Lk(a8, b));
      do
        try {
          Uk();
          break;
        } catch (e23) {
          Nk(a8, e23);
        }
      while (1);
      if (Qg(), K = c, nk.current = d, Y !== null)
        throw Error(p(261));
      return R = null, Z = 0, T;
    }
    function Uk() {
      for (; Y !== null; )
        Vk(Y);
    }
    function Mk() {
      for (; Y !== null && !cc(); )
        Vk(Y);
    }
    function Vk(a8) {
      var b = Wk(a8.alternate, a8, gj);
      a8.memoizedProps = a8.pendingProps, b === null ? Tk(a8) : Y = b, ok.current = null;
    }
    function Tk(a8) {
      var b = a8;
      do {
        var c = b.alternate;
        if (a8 = b.return, b.flags & 32768) {
          if (c = Jj(c, b), c !== null) {
            c.flags &= 32767, Y = c;
            return;
          }
          if (a8 !== null)
            a8.flags |= 32768, a8.subtreeFlags = 0, a8.deletions = null;
          else {
            T = 6, Y = null;
            return;
          }
        } else if (c = Fj(c, b, gj), c !== null) {
          Y = c;
          return;
        }
        if (b = b.sibling, b !== null) {
          Y = b;
          return;
        }
        Y = b = a8;
      } while (b !== null);
      T === 0 && (T = 5);
    }
    function Qk(a8, b, c) {
      var d = C, e23 = pk.transition;
      try {
        pk.transition = null, C = 1, Xk(a8, b, c, d);
      } finally {
        pk.transition = e23, C = d;
      }
      return null;
    }
    function Xk(a8, b, c, d) {
      do
        Ik();
      while (xk !== null);
      if (K & 6)
        throw Error(p(327));
      c = a8.finishedWork;
      var e23 = a8.finishedLanes;
      if (c === null)
        return null;
      if (a8.finishedWork = null, a8.finishedLanes = 0, c === a8.current)
        throw Error(p(177));
      a8.callbackNode = null, a8.callbackPriority = 0;
      var f = c.lanes | c.childLanes;
      if (Bc(a8, f), a8 === R && (Y = R = null, Z = 0), !(c.subtreeFlags & 2064) && !(c.flags & 2064) || wk || (wk = !0, Gk(hc, function() {
        return Ik(), null;
      })), f = (c.flags & 15990) !== 0, c.subtreeFlags & 15990 || f) {
        f = pk.transition, pk.transition = null;
        var g = C;
        C = 1;
        var h = K;
        K |= 4, ok.current = null, Pj(a8, c), ek(c, a8), Oe(Df), dd = !!Cf, Df = Cf = null, a8.current = c, ik(c, a8, e23), dc(), K = h, C = g, pk.transition = f;
      } else
        a8.current = c;
      if (wk && (wk = !1, xk = a8, yk = e23), f = a8.pendingLanes, f === 0 && (Si = null), mc(c.stateNode, d), Ek(a8, B()), b !== null)
        for (d = a8.onRecoverableError, c = 0; c < b.length; c++)
          e23 = b[c], d(e23.value, { componentStack: e23.stack, digest: e23.digest });
      if (Pi)
        throw Pi = !1, a8 = Qi, Qi = null, a8;
      return yk & 1 && a8.tag !== 0 && Ik(), f = a8.pendingLanes, f & 1 ? a8 === Ak ? zk++ : (zk = 0, Ak = a8) : zk = 0, jg(), null;
    }
    function Ik() {
      if (xk !== null) {
        var a8 = Dc(yk), b = pk.transition, c = C;
        try {
          if (pk.transition = null, C = 16 > a8 ? 16 : a8, xk === null)
            var d = !1;
          else {
            if (a8 = xk, xk = null, yk = 0, K & 6)
              throw Error(p(331));
            var e23 = K;
            for (K |= 4, V = a8.current; V !== null; ) {
              var f = V, g = f.child;
              if (V.flags & 16) {
                var h = f.deletions;
                if (h !== null) {
                  for (var k = 0; k < h.length; k++) {
                    var l9 = h[k];
                    for (V = l9; V !== null; ) {
                      var m = V;
                      switch (m.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Qj(8, m, f);
                      }
                      var q = m.child;
                      if (q !== null)
                        q.return = m, V = q;
                      else
                        for (; V !== null; ) {
                          m = V;
                          var r24 = m.sibling, y = m.return;
                          if (Tj(m), m === l9) {
                            V = null;
                            break;
                          }
                          if (r24 !== null) {
                            r24.return = y, V = r24;
                            break;
                          }
                          V = y;
                        }
                    }
                  }
                  var n = f.alternate;
                  if (n !== null) {
                    var t17 = n.child;
                    if (t17 !== null) {
                      n.child = null;
                      do {
                        var J = t17.sibling;
                        t17.sibling = null, t17 = J;
                      } while (t17 !== null);
                    }
                  }
                  V = f;
                }
              }
              if (f.subtreeFlags & 2064 && g !== null)
                g.return = f, V = g;
              else
                b:
                  for (; V !== null; ) {
                    if (f = V, f.flags & 2048)
                      switch (f.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Qj(9, f, f.return);
                      }
                    var x = f.sibling;
                    if (x !== null) {
                      x.return = f.return, V = x;
                      break b;
                    }
                    V = f.return;
                  }
            }
            var w = a8.current;
            for (V = w; V !== null; ) {
              g = V;
              var u = g.child;
              if (g.subtreeFlags & 2064 && u !== null)
                u.return = g, V = u;
              else
                b:
                  for (g = w; V !== null; ) {
                    if (h = V, h.flags & 2048)
                      try {
                        switch (h.tag) {
                          case 0:
                          case 11:
                          case 15:
                            Rj(9, h);
                        }
                      } catch (na) {
                        W(h, h.return, na);
                      }
                    if (h === g) {
                      V = null;
                      break b;
                    }
                    var F = h.sibling;
                    if (F !== null) {
                      F.return = h.return, V = F;
                      break b;
                    }
                    V = h.return;
                  }
            }
            if (K = e23, jg(), lc && typeof lc.onPostCommitFiberRoot == "function")
              try {
                lc.onPostCommitFiberRoot(kc, a8);
              } catch {
              }
            d = !0;
          }
          return d;
        } finally {
          C = c, pk.transition = b;
        }
      }
      return !1;
    }
    function Yk(a8, b, c) {
      b = Ki(c, b), b = Oi(a8, b, 1), a8 = dh(a8, b, 1), b = L(), a8 !== null && (Ac(a8, 1, b), Ek(a8, b));
    }
    function W(a8, b, c) {
      if (a8.tag === 3)
        Yk(a8, a8, c);
      else
        for (; b !== null; ) {
          if (b.tag === 3) {
            Yk(b, a8, c);
            break;
          } else if (b.tag === 1) {
            var d = b.stateNode;
            if (typeof b.type.getDerivedStateFromError == "function" || typeof d.componentDidCatch == "function" && (Si === null || !Si.has(d))) {
              a8 = Ki(c, a8), a8 = Ri(b, a8, 1), b = dh(b, a8, 1), a8 = L(), b !== null && (Ac(b, 1, a8), Ek(b, a8));
              break;
            }
          }
          b = b.return;
        }
    }
    function Ui(a8, b, c) {
      var d = a8.pingCache;
      d !== null && d.delete(b), b = L(), a8.pingedLanes |= a8.suspendedLanes & c, R === a8 && (Z & c) === c && (T === 4 || T === 3 && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a8, 0) : sk |= c), Ek(a8, b);
    }
    function Zk(a8, b) {
      b === 0 && (a8.mode & 1 ? (b = sc, sc <<= 1, !(sc & 130023424) && (sc = 4194304)) : b = 1);
      var c = L();
      a8 = Zg(a8, b), a8 !== null && (Ac(a8, b, c), Ek(a8, c));
    }
    function vj(a8) {
      var b = a8.memoizedState, c = 0;
      b !== null && (c = b.retryLane), Zk(a8, c);
    }
    function ck(a8, b) {
      var c = 0;
      switch (a8.tag) {
        case 13:
          var d = a8.stateNode, e23 = a8.memoizedState;
          e23 !== null && (c = e23.retryLane);
          break;
        case 19:
          d = a8.stateNode;
          break;
        default:
          throw Error(p(314));
      }
      d !== null && d.delete(b), Zk(a8, c);
    }
    var Wk;
    Wk = function(a8, b, c) {
      if (a8 !== null)
        if (a8.memoizedProps !== b.pendingProps || Wf.current)
          Ug = !0;
        else {
          if (!(a8.lanes & c) && !(b.flags & 128))
            return Ug = !1, zj(a8, b, c);
          Ug = !!(a8.flags & 131072);
        }
      else
        Ug = !1, I && b.flags & 1048576 && ug(b, ng, b.index);
      switch (b.lanes = 0, b.tag) {
        case 2:
          var d = b.type;
          jj(a8, b), a8 = b.pendingProps;
          var e23 = Yf(b, H.current);
          Tg(b, c), e23 = Xh(null, b, d, a8, e23, c);
          var f = bi();
          return b.flags |= 1, typeof e23 == "object" && e23 !== null && typeof e23.render == "function" && e23.$$typeof === void 0 ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f = !0, cg(b)) : f = !1, b.memoizedState = e23.state !== null && e23.state !== void 0 ? e23.state : null, ah(b), e23.updater = nh, b.stateNode = e23, e23._reactInternals = b, rh(b, d, a8, c), b = kj(null, b, d, !0, f, c)) : (b.tag = 0, I && f && vg(b), Yi(null, b, e23, c), b = b.child), b;
        case 16:
          d = b.elementType;
          a: {
            switch (jj(a8, b), a8 = b.pendingProps, e23 = d._init, d = e23(d._payload), b.type = d, e23 = b.tag = $k(d), a8 = Lg(d, a8), e23) {
              case 0:
                b = dj(null, b, d, a8, c);
                break a;
              case 1:
                b = ij(null, b, d, a8, c);
                break a;
              case 11:
                b = Zi(null, b, d, a8, c);
                break a;
              case 14:
                b = aj(null, b, d, Lg(d.type, a8), c);
                break a;
            }
            throw Error(p(
              306,
              d,
              ""
            ));
          }
          return b;
        case 0:
          return d = b.type, e23 = b.pendingProps, e23 = b.elementType === d ? e23 : Lg(d, e23), dj(a8, b, d, e23, c);
        case 1:
          return d = b.type, e23 = b.pendingProps, e23 = b.elementType === d ? e23 : Lg(d, e23), ij(a8, b, d, e23, c);
        case 3:
          a: {
            if (lj(b), a8 === null)
              throw Error(p(387));
            d = b.pendingProps, f = b.memoizedState, e23 = f.element, bh(a8, b), gh(b, d, null, c);
            var g = b.memoizedState;
            if (d = g.element, f.isDehydrated)
              if (f = { element: d, isDehydrated: !1, cache: g.cache, pendingSuspenseBoundaries: g.pendingSuspenseBoundaries, transitions: g.transitions }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
                e23 = Ki(Error(p(423)), b), b = mj(a8, b, d, c, e23);
                break a;
              } else if (d !== e23) {
                e23 = Ki(Error(p(424)), b), b = mj(a8, b, d, c, e23);
                break a;
              } else
                for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), b.child = c; c; )
                  c.flags = c.flags & -3 | 4096, c = c.sibling;
            else {
              if (Ig(), d === e23) {
                b = $i(a8, b, c);
                break a;
              }
              Yi(a8, b, d, c);
            }
            b = b.child;
          }
          return b;
        case 5:
          return Kh(b), a8 === null && Eg(b), d = b.type, e23 = b.pendingProps, f = a8 !== null ? a8.memoizedProps : null, g = e23.children, Ef(d, e23) ? g = null : f !== null && Ef(d, f) && (b.flags |= 32), hj(a8, b), Yi(a8, b, g, c), b.child;
        case 6:
          return a8 === null && Eg(b), null;
        case 13:
          return pj(a8, b, c);
        case 4:
          return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, a8 === null ? b.child = Bh(b, null, d, c) : Yi(a8, b, d, c), b.child;
        case 11:
          return d = b.type, e23 = b.pendingProps, e23 = b.elementType === d ? e23 : Lg(d, e23), Zi(a8, b, d, e23, c);
        case 7:
          return Yi(a8, b, b.pendingProps, c), b.child;
        case 8:
          return Yi(a8, b, b.pendingProps.children, c), b.child;
        case 12:
          return Yi(a8, b, b.pendingProps.children, c), b.child;
        case 10:
          a: {
            if (d = b.type._context, e23 = b.pendingProps, f = b.memoizedProps, g = e23.value, G(Mg, d._currentValue), d._currentValue = g, f !== null)
              if (He(f.value, g)) {
                if (f.children === e23.children && !Wf.current) {
                  b = $i(a8, b, c);
                  break a;
                }
              } else
                for (f = b.child, f !== null && (f.return = b); f !== null; ) {
                  var h = f.dependencies;
                  if (h !== null) {
                    g = f.child;
                    for (var k = h.firstContext; k !== null; ) {
                      if (k.context === d) {
                        if (f.tag === 1) {
                          k = ch(-1, c & -c), k.tag = 2;
                          var l9 = f.updateQueue;
                          if (l9 !== null) {
                            l9 = l9.shared;
                            var m = l9.pending;
                            m === null ? k.next = k : (k.next = m.next, m.next = k), l9.pending = k;
                          }
                        }
                        f.lanes |= c, k = f.alternate, k !== null && (k.lanes |= c), Sg(
                          f.return,
                          c,
                          b
                        ), h.lanes |= c;
                        break;
                      }
                      k = k.next;
                    }
                  } else if (f.tag === 10)
                    g = f.type === b.type ? null : f.child;
                  else if (f.tag === 18) {
                    if (g = f.return, g === null)
                      throw Error(p(341));
                    g.lanes |= c, h = g.alternate, h !== null && (h.lanes |= c), Sg(g, c, b), g = f.sibling;
                  } else
                    g = f.child;
                  if (g !== null)
                    g.return = f;
                  else
                    for (g = f; g !== null; ) {
                      if (g === b) {
                        g = null;
                        break;
                      }
                      if (f = g.sibling, f !== null) {
                        f.return = g.return, g = f;
                        break;
                      }
                      g = g.return;
                    }
                  f = g;
                }
            Yi(a8, b, e23.children, c), b = b.child;
          }
          return b;
        case 9:
          return e23 = b.type, d = b.pendingProps.children, Tg(b, c), e23 = Vg(e23), d = d(e23), b.flags |= 1, Yi(a8, b, d, c), b.child;
        case 14:
          return d = b.type, e23 = Lg(d, b.pendingProps), e23 = Lg(d.type, e23), aj(a8, b, d, e23, c);
        case 15:
          return cj(a8, b, b.type, b.pendingProps, c);
        case 17:
          return d = b.type, e23 = b.pendingProps, e23 = b.elementType === d ? e23 : Lg(d, e23), jj(a8, b), b.tag = 1, Zf(d) ? (a8 = !0, cg(b)) : a8 = !1, Tg(b, c), ph(b, d, e23), rh(b, d, e23, c), kj(null, b, d, !0, a8, c);
        case 19:
          return yj(a8, b, c);
        case 22:
          return ej(a8, b, c);
      }
      throw Error(p(156, b.tag));
    };
    function Gk(a8, b) {
      return ac(a8, b);
    }
    function al(a8, b, c, d) {
      this.tag = a8, this.key = c, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = b, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = d, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
    }
    function Bg(a8, b, c, d) {
      return new al(a8, b, c, d);
    }
    function bj(a8) {
      return a8 = a8.prototype, !(!a8 || !a8.isReactComponent);
    }
    function $k(a8) {
      if (typeof a8 == "function")
        return bj(a8) ? 1 : 0;
      if (a8 != null) {
        if (a8 = a8.$$typeof, a8 === Da)
          return 11;
        if (a8 === Ga)
          return 14;
      }
      return 2;
    }
    function wh(a8, b) {
      var c = a8.alternate;
      return c === null ? (c = Bg(a8.tag, b, a8.key, a8.mode), c.elementType = a8.elementType, c.type = a8.type, c.stateNode = a8.stateNode, c.alternate = a8, a8.alternate = c) : (c.pendingProps = b, c.type = a8.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null), c.flags = a8.flags & 14680064, c.childLanes = a8.childLanes, c.lanes = a8.lanes, c.child = a8.child, c.memoizedProps = a8.memoizedProps, c.memoizedState = a8.memoizedState, c.updateQueue = a8.updateQueue, b = a8.dependencies, c.dependencies = b === null ? null : { lanes: b.lanes, firstContext: b.firstContext }, c.sibling = a8.sibling, c.index = a8.index, c.ref = a8.ref, c;
    }
    function yh(a8, b, c, d, e23, f) {
      var g = 2;
      if (d = a8, typeof a8 == "function")
        bj(a8) && (g = 1);
      else if (typeof a8 == "string")
        g = 5;
      else
        a:
          switch (a8) {
            case ya:
              return Ah(c.children, e23, f, b);
            case za:
              g = 8, e23 |= 8;
              break;
            case Aa:
              return a8 = Bg(12, c, b, e23 | 2), a8.elementType = Aa, a8.lanes = f, a8;
            case Ea:
              return a8 = Bg(13, c, b, e23), a8.elementType = Ea, a8.lanes = f, a8;
            case Fa:
              return a8 = Bg(19, c, b, e23), a8.elementType = Fa, a8.lanes = f, a8;
            case Ia:
              return qj(c, e23, f, b);
            default:
              if (typeof a8 == "object" && a8 !== null)
                switch (a8.$$typeof) {
                  case Ba:
                    g = 10;
                    break a;
                  case Ca:
                    g = 9;
                    break a;
                  case Da:
                    g = 11;
                    break a;
                  case Ga:
                    g = 14;
                    break a;
                  case Ha:
                    g = 16, d = null;
                    break a;
                }
              throw Error(p(130, a8 == null ? a8 : typeof a8, ""));
          }
      return b = Bg(g, c, b, e23), b.elementType = a8, b.type = d, b.lanes = f, b;
    }
    function Ah(a8, b, c, d) {
      return a8 = Bg(7, a8, d, b), a8.lanes = c, a8;
    }
    function qj(a8, b, c, d) {
      return a8 = Bg(22, a8, d, b), a8.elementType = Ia, a8.lanes = c, a8.stateNode = { isHidden: !1 }, a8;
    }
    function xh(a8, b, c) {
      return a8 = Bg(6, a8, null, b), a8.lanes = c, a8;
    }
    function zh(a8, b, c) {
      return b = Bg(4, a8.children !== null ? a8.children : [], a8.key, b), b.lanes = c, b.stateNode = { containerInfo: a8.containerInfo, pendingChildren: null, implementation: a8.implementation }, b;
    }
    function bl(a8, b, c, d, e23) {
      this.tag = b, this.containerInfo = a8, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = zc(0), this.expirationTimes = zc(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = zc(0), this.identifierPrefix = d, this.onRecoverableError = e23, this.mutableSourceEagerHydrationData = null;
    }
    function cl(a8, b, c, d, e23, f, g, h, k) {
      return a8 = new bl(a8, b, c, h, k), b === 1 ? (b = 1, f === !0 && (b |= 8)) : b = 0, f = Bg(3, null, null, b), a8.current = f, f.stateNode = a8, f.memoizedState = { element: d, isDehydrated: c, cache: null, transitions: null, pendingSuspenseBoundaries: null }, ah(f), a8;
    }
    function dl(a8, b, c) {
      var d = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
      return { $$typeof: wa, key: d == null ? null : "" + d, children: a8, containerInfo: b, implementation: c };
    }
    function el(a8) {
      if (!a8)
        return Vf;
      a8 = a8._reactInternals;
      a: {
        if (Vb(a8) !== a8 || a8.tag !== 1)
          throw Error(p(170));
        var b = a8;
        do {
          switch (b.tag) {
            case 3:
              b = b.stateNode.context;
              break a;
            case 1:
              if (Zf(b.type)) {
                b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                break a;
              }
          }
          b = b.return;
        } while (b !== null);
        throw Error(p(171));
      }
      if (a8.tag === 1) {
        var c = a8.type;
        if (Zf(c))
          return bg(a8, c, b);
      }
      return b;
    }
    function fl(a8, b, c, d, e23, f, g, h, k) {
      return a8 = cl(c, d, !0, a8, e23, f, g, h, k), a8.context = el(null), c = a8.current, d = L(), e23 = lh(c), f = ch(d, e23), f.callback = b ?? null, dh(c, f, e23), a8.current.lanes = e23, Ac(a8, e23, d), Ek(a8, d), a8;
    }
    function gl(a8, b, c, d) {
      var e23 = b.current, f = L(), g = lh(e23);
      return c = el(c), b.context === null ? b.context = c : b.pendingContext = c, b = ch(f, g), b.payload = { element: a8 }, d = d === void 0 ? null : d, d !== null && (b.callback = d), a8 = dh(e23, b, g), a8 !== null && (mh(a8, e23, g, f), eh(a8, e23, g)), g;
    }
    function hl(a8) {
      if (a8 = a8.current, !a8.child)
        return null;
      switch (a8.child.tag) {
        case 5:
          return a8.child.stateNode;
        default:
          return a8.child.stateNode;
      }
    }
    function il(a8, b) {
      if (a8 = a8.memoizedState, a8 !== null && a8.dehydrated !== null) {
        var c = a8.retryLane;
        a8.retryLane = c !== 0 && c < b ? c : b;
      }
    }
    function jl(a8, b) {
      il(a8, b), (a8 = a8.alternate) && il(a8, b);
    }
    function kl() {
      return null;
    }
    var ll = typeof reportError == "function" ? reportError : function(a8) {
      console.error(a8);
    };
    function ml(a8) {
      this._internalRoot = a8;
    }
    nl.prototype.render = ml.prototype.render = function(a8) {
      var b = this._internalRoot;
      if (b === null)
        throw Error(p(409));
      gl(a8, b, null, null);
    };
    nl.prototype.unmount = ml.prototype.unmount = function() {
      var a8 = this._internalRoot;
      if (a8 !== null) {
        this._internalRoot = null;
        var b = a8.containerInfo;
        Sk(function() {
          gl(null, a8, null, null);
        }), b[uf] = null;
      }
    };
    function nl(a8) {
      this._internalRoot = a8;
    }
    nl.prototype.unstable_scheduleHydration = function(a8) {
      if (a8) {
        var b = Hc();
        a8 = { blockedOn: null, target: a8, priority: b };
        for (var c = 0; c < Qc.length && b !== 0 && b < Qc[c].priority; c++)
          ;
        Qc.splice(c, 0, a8), c === 0 && Vc(a8);
      }
    };
    function ol(a8) {
      return !(!a8 || a8.nodeType !== 1 && a8.nodeType !== 9 && a8.nodeType !== 11);
    }
    function pl(a8) {
      return !(!a8 || a8.nodeType !== 1 && a8.nodeType !== 9 && a8.nodeType !== 11 && (a8.nodeType !== 8 || a8.nodeValue !== " react-mount-point-unstable "));
    }
    function ql() {
    }
    function rl(a8, b, c, d, e23) {
      if (e23) {
        if (typeof d == "function") {
          var f = d;
          d = function() {
            var a9 = hl(g);
            f.call(a9);
          };
        }
        var g = fl(b, d, a8, 0, null, !1, !1, "", ql);
        return a8._reactRootContainer = g, a8[uf] = g.current, sf(a8.nodeType === 8 ? a8.parentNode : a8), Sk(), g;
      }
      for (; e23 = a8.lastChild; )
        a8.removeChild(e23);
      if (typeof d == "function") {
        var h = d;
        d = function() {
          var a9 = hl(k);
          h.call(a9);
        };
      }
      var k = cl(a8, 0, !1, null, null, !1, !1, "", ql);
      return a8._reactRootContainer = k, a8[uf] = k.current, sf(a8.nodeType === 8 ? a8.parentNode : a8), Sk(function() {
        gl(b, k, c, d);
      }), k;
    }
    function sl(a8, b, c, d, e23) {
      var f = c._reactRootContainer;
      if (f) {
        var g = f;
        if (typeof e23 == "function") {
          var h = e23;
          e23 = function() {
            var a9 = hl(g);
            h.call(a9);
          };
        }
        gl(b, g, a8, e23);
      } else
        g = rl(c, b, a8, e23, d);
      return hl(g);
    }
    Ec = function(a8) {
      switch (a8.tag) {
        case 3:
          var b = a8.stateNode;
          if (b.current.memoizedState.isDehydrated) {
            var c = tc(b.pendingLanes);
            c !== 0 && (Cc(b, c | 1), Ek(b, B()), !(K & 6) && (Hj = B() + 500, jg()));
          }
          break;
        case 13:
          Sk(function() {
            var b2 = Zg(a8, 1);
            if (b2 !== null) {
              var c2 = L();
              mh(b2, a8, 1, c2);
            }
          }), jl(a8, 1);
      }
    };
    Fc = function(a8) {
      if (a8.tag === 13) {
        var b = Zg(a8, 134217728);
        if (b !== null) {
          var c = L();
          mh(b, a8, 134217728, c);
        }
        jl(a8, 134217728);
      }
    };
    Gc = function(a8) {
      if (a8.tag === 13) {
        var b = lh(a8), c = Zg(a8, b);
        if (c !== null) {
          var d = L();
          mh(c, a8, b, d);
        }
        jl(a8, b);
      }
    };
    Hc = function() {
      return C;
    };
    Ic = function(a8, b) {
      var c = C;
      try {
        return C = a8, b();
      } finally {
        C = c;
      }
    };
    yb = function(a8, b, c) {
      switch (b) {
        case "input":
          if (bb(a8, c), b = c.name, c.type === "radio" && b != null) {
            for (c = a8; c.parentNode; )
              c = c.parentNode;
            for (c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]'), b = 0; b < c.length; b++) {
              var d = c[b];
              if (d !== a8 && d.form === a8.form) {
                var e23 = Db(d);
                if (!e23)
                  throw Error(p(90));
                Wa(d), bb(d, e23);
              }
            }
          }
          break;
        case "textarea":
          ib(a8, c);
          break;
        case "select":
          b = c.value, b != null && fb(a8, !!c.multiple, b, !1);
      }
    };
    Gb = Rk;
    Hb = Sk;
    var tl = { usingClientEntryPoint: !1, Events: [Cb, ue, Db, Eb, Fb, Rk] }, ul = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" }, vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a8) {
      return a8 = Zb(a8), a8 === null ? null : a8.stateNode;
    }, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && (wl = __REACT_DEVTOOLS_GLOBAL_HOOK__, !wl.isDisabled && wl.supportsFiber))
      try {
        kc = wl.inject(vl), lc = wl;
      } catch {
      }
    var wl;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
    exports.createPortal = function(a8, b) {
      var c = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
      if (!ol(b))
        throw Error(p(200));
      return dl(a8, b, null, c);
    };
    exports.createRoot = function(a8, b) {
      if (!ol(a8))
        throw Error(p(299));
      var c = !1, d = "", e23 = ll;
      return b != null && (b.unstable_strictMode === !0 && (c = !0), b.identifierPrefix !== void 0 && (d = b.identifierPrefix), b.onRecoverableError !== void 0 && (e23 = b.onRecoverableError)), b = cl(a8, 1, !1, null, null, c, !1, d, e23), a8[uf] = b.current, sf(a8.nodeType === 8 ? a8.parentNode : a8), new ml(b);
    };
    exports.findDOMNode = function(a8) {
      if (a8 == null)
        return null;
      if (a8.nodeType === 1)
        return a8;
      var b = a8._reactInternals;
      if (b === void 0)
        throw typeof a8.render == "function" ? Error(p(188)) : (a8 = Object.keys(a8).join(","), Error(p(268, a8)));
      return a8 = Zb(b), a8 = a8 === null ? null : a8.stateNode, a8;
    };
    exports.flushSync = function(a8) {
      return Sk(a8);
    };
    exports.hydrate = function(a8, b, c) {
      if (!pl(b))
        throw Error(p(200));
      return sl(null, a8, b, !0, c);
    };
    exports.hydrateRoot = function(a8, b, c) {
      if (!ol(a8))
        throw Error(p(405));
      var d = c != null && c.hydratedSources || null, e23 = !1, f = "", g = ll;
      if (c != null && (c.unstable_strictMode === !0 && (e23 = !0), c.identifierPrefix !== void 0 && (f = c.identifierPrefix), c.onRecoverableError !== void 0 && (g = c.onRecoverableError)), b = fl(b, null, a8, 1, c ?? null, e23, !1, f, g), a8[uf] = b.current, sf(a8), d)
        for (a8 = 0; a8 < d.length; a8++)
          c = d[a8], e23 = c._getVersion, e23 = e23(c._source), b.mutableSourceEagerHydrationData == null ? b.mutableSourceEagerHydrationData = [c, e23] : b.mutableSourceEagerHydrationData.push(
            c,
            e23
          );
      return new nl(b);
    };
    exports.render = function(a8, b, c) {
      if (!pl(b))
        throw Error(p(200));
      return sl(null, a8, b, !1, c);
    };
    exports.unmountComponentAtNode = function(a8) {
      if (!pl(a8))
        throw Error(p(40));
      return a8._reactRootContainer ? (Sk(function() {
        sl(null, null, a8, !1, function() {
          a8._reactRootContainer = null, a8[uf] = null;
        });
      }), !0) : !1;
    };
    exports.unstable_batchedUpdates = Rk;
    exports.unstable_renderSubtreeIntoContainer = function(a8, b, c, d) {
      if (!pl(c))
        throw Error(p(200));
      if (a8 == null || a8._reactInternals === void 0)
        throw Error(p(38));
      return sl(a8, b, c, !1, d);
    };
    exports.version = "18.2.0-next-9e3b772b8-20220608";
  }
});

// ../../../node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "../../../node_modules/react-dom/index.js"(exports, module2) {
    "use strict";
    function checkDCE() {
      if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
        try {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
        } catch (err) {
          console.error(err);
        }
    }
    checkDCE(), module2.exports = require_react_dom_production_min();
  }
});

// ../../../node_modules/react-google-recaptcha-v3/dist/react-google-recaptcha-v3.cjs.js
var require_react_google_recaptcha_v3_cjs = __commonJS({
  "../../../node_modules/react-google-recaptcha-v3/dist/react-google-recaptcha-v3.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var e23, t17 = require_react(), r24 = (e23 = t17) && typeof e23 == "object" && "default" in e23 ? e23.default : e23, o3 = function() {
      return o3 = Object.assign || function(e24) {
        for (var t18, r25 = 1, o4 = arguments.length; r25 < o4; r25++)
          for (var n2 in t18 = arguments[r25])
            Object.prototype.hasOwnProperty.call(t18, n2) && (e24[n2] = t18[n2]);
        return e24;
      }, o3.apply(this, arguments);
    };
    function n(e24, t18, r25, o4) {
      return new (r25 || (r25 = Promise))(function(n2, a9) {
        function c2(e25) {
          try {
            s2(o4.next(e25));
          } catch (e26) {
            a9(e26);
          }
        }
        function i14(e25) {
          try {
            s2(o4.throw(e25));
          } catch (e26) {
            a9(e26);
          }
        }
        function s2(e25) {
          var t19;
          e25.done ? n2(e25.value) : (t19 = e25.value, t19 instanceof r25 ? t19 : new r25(function(e26) {
            e26(t19);
          })).then(c2, i14);
        }
        s2((o4 = o4.apply(e24, t18 || [])).next());
      });
    }
    function a8(e24, t18) {
      var r25, o4, n2, a9, c2 = { label: 0, sent: function() {
        if (1 & n2[0])
          throw n2[1];
        return n2[1];
      }, trys: [], ops: [] };
      return a9 = { next: i14(0), throw: i14(1), return: i14(2) }, typeof Symbol == "function" && (a9[Symbol.iterator] = function() {
        return this;
      }), a9;
      function i14(a10) {
        return function(i15) {
          return function(a11) {
            if (r25)
              throw new TypeError("Generator is already executing.");
            for (; c2; )
              try {
                if (r25 = 1, o4 && (n2 = 2 & a11[0] ? o4.return : a11[0] ? o4.throw || ((n2 = o4.return) && n2.call(o4), 0) : o4.next) && !(n2 = n2.call(o4, a11[1])).done)
                  return n2;
                switch (o4 = 0, n2 && (a11 = [2 & a11[0], n2.value]), a11[0]) {
                  case 0:
                  case 1:
                    n2 = a11;
                    break;
                  case 4:
                    return c2.label++, { value: a11[1], done: !1 };
                  case 5:
                    c2.label++, o4 = a11[1], a11 = [0];
                    continue;
                  case 7:
                    a11 = c2.ops.pop(), c2.trys.pop();
                    continue;
                  default:
                    if (n2 = c2.trys, !((n2 = n2.length > 0 && n2[n2.length - 1]) || a11[0] !== 6 && a11[0] !== 2)) {
                      c2 = 0;
                      continue;
                    }
                    if (a11[0] === 3 && (!n2 || a11[1] > n2[0] && a11[1] < n2[3])) {
                      c2.label = a11[1];
                      break;
                    }
                    if (a11[0] === 6 && c2.label < n2[1]) {
                      c2.label = n2[1], n2 = a11;
                      break;
                    }
                    if (n2 && c2.label < n2[2]) {
                      c2.label = n2[2], c2.ops.push(a11);
                      break;
                    }
                    n2[2] && c2.ops.pop(), c2.trys.pop();
                    continue;
                }
                a11 = t18.call(e24, c2);
              } catch (e25) {
                a11 = [6, e25], o4 = 0;
              } finally {
                r25 = n2 = 0;
              }
            if (5 & a11[0])
              throw a11[1];
            return { value: a11[0] ? a11[1] : void 0, done: !0 };
          }([a10, i15]);
        };
      }
    }
    var c, i13 = function(e24) {
      var t18;
      e24 ? function(e25) {
        if (e25)
          for (; e25.lastChild; )
            e25.lastChild.remove();
      }(typeof e24 == "string" ? document.getElementById(e24) : e24) : (t18 = document.querySelector(".grecaptcha-badge")) && t18.parentNode && document.body.removeChild(t18.parentNode);
    }, s = function(e24, t18) {
      i13(t18), window.___grecaptcha_cfg = void 0;
      var r25 = document.querySelector("#" + e24);
      r25 && r25.remove(), function() {
        var e25 = document.querySelector('script[src^="https://www.gstatic.com/recaptcha/releases"]');
        e25 && e25.remove();
      }();
    }, u = function(e24) {
      var t18 = e24.render, r25 = e24.onLoadCallbackName, o4 = e24.language, n2 = e24.onLoad, a9 = e24.useRecaptchaNet, c2 = e24.useEnterprise, i14 = e24.scriptProps, s2 = i14 === void 0 ? {} : i14, u2 = s2.nonce, l10 = u2 === void 0 ? "" : u2, f2 = s2.defer, p2 = f2 !== void 0 && f2, d2 = s2.async, y2 = d2 !== void 0 && d2, m2 = s2.id, v2 = m2 === void 0 ? "" : m2, h2 = s2.appendTo, b2 = v2 || "google-recaptcha-v3";
      if (function(e25) {
        return !!document.querySelector("#" + e25);
      }(b2))
        n2();
      else {
        var g2 = function(e25) {
          return "https://www." + (e25.useRecaptchaNet ? "recaptcha.net" : "google.com") + "/recaptcha/" + (e25.useEnterprise ? "enterprise.js" : "api.js");
        }({ useEnterprise: c2, useRecaptchaNet: a9 }), S2 = document.createElement("script");
        S2.id = b2, S2.src = g2 + "?render=" + t18 + (t18 === "explicit" ? "&onload=" + r25 : "") + (o4 ? "&hl=" + o4 : ""), l10 && (S2.nonce = l10), S2.defer = !!p2, S2.async = !!y2, S2.onload = n2, (h2 === "body" ? document.body : document.getElementsByTagName("head")[0]).appendChild(S2);
      }
    }, l9 = function(e24) {
      typeof process < "u" && process.env && !1 || console.warn(e24);
    };
    (function(e24) {
      e24.SCRIPT_NOT_AVAILABLE = "Recaptcha script is not available";
    })(c || (c = {}));
    var f = t17.createContext({ executeRecaptcha: function() {
      throw Error("GoogleReCaptcha Context has not yet been implemented, if you are using useGoogleReCaptcha hook, make sure the hook is called inside component wrapped by GoogleRecaptchaProvider");
    } }), p = f.Consumer, d = function() {
      return t17.useContext(f);
    };
    function y(e24, t18) {
      return e24(t18 = { exports: {} }, t18.exports), t18.exports;
    }
    var m = typeof Symbol == "function" && Symbol.for, v = m ? Symbol.for("react.element") : 60103, h = m ? Symbol.for("react.portal") : 60106, b = m ? Symbol.for("react.fragment") : 60107, g = m ? Symbol.for("react.strict_mode") : 60108, S = m ? Symbol.for("react.profiler") : 60114, w = m ? Symbol.for("react.provider") : 60109, C = m ? Symbol.for("react.context") : 60110, $ = m ? Symbol.for("react.async_mode") : 60111, x = m ? Symbol.for("react.concurrent_mode") : 60111, P = m ? Symbol.for("react.forward_ref") : 60112, R = m ? Symbol.for("react.suspense") : 60113, E = m ? Symbol.for("react.suspense_list") : 60120, M = m ? Symbol.for("react.memo") : 60115, N = m ? Symbol.for("react.lazy") : 60116, O = m ? Symbol.for("react.block") : 60121, _ = m ? Symbol.for("react.fundamental") : 60117, j = m ? Symbol.for("react.responder") : 60118, T = m ? Symbol.for("react.scope") : 60119;
    function k(e24) {
      if (typeof e24 == "object" && e24 !== null) {
        var t18 = e24.$$typeof;
        switch (t18) {
          case v:
            switch (e24 = e24.type) {
              case $:
              case x:
              case b:
              case S:
              case g:
              case R:
                return e24;
              default:
                switch (e24 = e24 && e24.$$typeof) {
                  case C:
                  case P:
                  case N:
                  case M:
                  case w:
                    return e24;
                  default:
                    return t18;
                }
            }
          case h:
            return t18;
        }
      }
    }
    function L(e24) {
      return k(e24) === x;
    }
    var F = { AsyncMode: $, ConcurrentMode: x, ContextConsumer: C, ContextProvider: w, Element: v, ForwardRef: P, Fragment: b, Lazy: N, Memo: M, Portal: h, Profiler: S, StrictMode: g, Suspense: R, isAsyncMode: function(e24) {
      return L(e24) || k(e24) === $;
    }, isConcurrentMode: L, isContextConsumer: function(e24) {
      return k(e24) === C;
    }, isContextProvider: function(e24) {
      return k(e24) === w;
    }, isElement: function(e24) {
      return typeof e24 == "object" && e24 !== null && e24.$$typeof === v;
    }, isForwardRef: function(e24) {
      return k(e24) === P;
    }, isFragment: function(e24) {
      return k(e24) === b;
    }, isLazy: function(e24) {
      return k(e24) === N;
    }, isMemo: function(e24) {
      return k(e24) === M;
    }, isPortal: function(e24) {
      return k(e24) === h;
    }, isProfiler: function(e24) {
      return k(e24) === S;
    }, isStrictMode: function(e24) {
      return k(e24) === g;
    }, isSuspense: function(e24) {
      return k(e24) === R;
    }, isValidElementType: function(e24) {
      return typeof e24 == "string" || typeof e24 == "function" || e24 === b || e24 === x || e24 === S || e24 === g || e24 === R || e24 === E || typeof e24 == "object" && e24 !== null && (e24.$$typeof === N || e24.$$typeof === M || e24.$$typeof === w || e24.$$typeof === C || e24.$$typeof === P || e24.$$typeof === _ || e24.$$typeof === j || e24.$$typeof === T || e24.$$typeof === O);
    }, typeOf: k }, G = y(function(e24, t18) {
    }), A = (G.AsyncMode, G.ConcurrentMode, G.ContextConsumer, G.ContextProvider, G.Element, G.ForwardRef, G.Fragment, G.Lazy, G.Memo, G.Portal, G.Profiler, G.StrictMode, G.Suspense, G.isAsyncMode, G.isConcurrentMode, G.isContextConsumer, G.isContextProvider, G.isElement, G.isForwardRef, G.isFragment, G.isLazy, G.isMemo, G.isPortal, G.isProfiler, G.isStrictMode, G.isSuspense, G.isValidElementType, G.typeOf, y(function(e24) {
      e24.exports = F;
    })), V = { childContextTypes: !0, contextType: !0, contextTypes: !0, defaultProps: !0, displayName: !0, getDefaultProps: !0, getDerivedStateFromError: !0, getDerivedStateFromProps: !0, mixins: !0, propTypes: !0, type: !0 }, z = { name: !0, length: !0, prototype: !0, caller: !0, callee: !0, arguments: !0, arity: !0 }, I = { $$typeof: !0, compare: !0, defaultProps: !0, displayName: !0, propTypes: !0, type: !0 }, D = {};
    function q(e24) {
      return A.isMemo(e24) ? I : D[e24.$$typeof] || V;
    }
    D[A.ForwardRef] = { $$typeof: !0, render: !0, defaultProps: !0, displayName: !0, propTypes: !0 }, D[A.Memo] = I;
    var B = Object.defineProperty, J = Object.getOwnPropertyNames, K = Object.getOwnPropertySymbols, U = Object.getOwnPropertyDescriptor, H = Object.getPrototypeOf, Q = Object.prototype, W = function e24(t18, r25, o4) {
      if (typeof r25 != "string") {
        if (Q) {
          var n2 = H(r25);
          n2 && n2 !== Q && e24(t18, n2, o4);
        }
        var a9 = J(r25);
        K && (a9 = a9.concat(K(r25)));
        for (var c2 = q(t18), i14 = q(r25), s2 = 0; s2 < a9.length; ++s2) {
          var u2 = a9[s2];
          if (!(z[u2] || o4 && o4[u2] || i14 && i14[u2] || c2 && c2[u2])) {
            var l10 = U(r25, u2);
            try {
              B(t18, u2, l10);
            } catch {
            }
          }
        }
      }
      return t18;
    };
    exports.GoogleReCaptcha = function(e24) {
      var o4 = this, c2 = e24.action, i14 = e24.onVerify, s2 = e24.refreshReCaptcha, u2 = d();
      t17.useEffect(function() {
        var e25 = u2.executeRecaptcha;
        e25 && n(o4, void 0, void 0, function() {
          var t18;
          return a8(this, function(r25) {
            switch (r25.label) {
              case 0:
                return [4, e25(c2)];
              case 1:
                return t18 = r25.sent(), i14 ? (i14(t18), [2]) : (l9("Please define an onVerify function"), [2]);
            }
          });
        });
      }, [c2, i14, s2, u2]);
      var f2 = u2.container;
      return typeof f2 == "string" ? r24.createElement("div", { id: f2 }) : null;
    }, exports.GoogleReCaptchaConsumer = p, exports.GoogleReCaptchaContext = f, exports.GoogleReCaptchaProvider = function(e24) {
      var n2 = e24.reCaptchaKey, a9 = e24.useEnterprise, i14 = a9 !== void 0 && a9, p2 = e24.useRecaptchaNet, d2 = p2 !== void 0 && p2, y2 = e24.scriptProps, m2 = e24.language, v2 = e24.container, h2 = e24.children, b2 = t17.useState(null), g2 = b2[0], S2 = b2[1], w2 = t17.useRef(n2), C2 = JSON.stringify(y2), $2 = JSON.stringify(v2 == null ? void 0 : v2.parameters);
      t17.useEffect(function() {
        if (n2) {
          var e25 = (y2 == null ? void 0 : y2.id) || "google-recaptcha-v3", t18 = (y2 == null ? void 0 : y2.onLoadCallbackName) || "onRecaptchaLoadCallback";
          return window[t18] = function() {
            var e26 = i14 ? window.grecaptcha.enterprise : window.grecaptcha, t19 = o3({ badge: "inline", size: "invisible", sitekey: n2 }, (v2 == null ? void 0 : v2.parameters) || {});
            w2.current = e26.render(v2 == null ? void 0 : v2.element, t19);
          }, u({ render: v2 != null && v2.element ? "explicit" : n2, onLoadCallbackName: t18, useEnterprise: i14, useRecaptchaNet: d2, scriptProps: y2, language: m2, onLoad: function() {
            if (window && window.grecaptcha) {
              var e26 = i14 ? window.grecaptcha.enterprise : window.grecaptcha;
              e26.ready(function() {
                S2(e26);
              });
            } else
              l9("<GoogleRecaptchaProvider /> " + c.SCRIPT_NOT_AVAILABLE);
          }, onError: function() {
            l9("Error loading google recaptcha script");
          } }), function() {
            s(e25, v2 == null ? void 0 : v2.element);
          };
        }
        l9("<GoogleReCaptchaProvider /> recaptcha key not provided");
      }, [i14, d2, C2, $2, m2, n2, v2 == null ? void 0 : v2.element]);
      var x2 = t17.useCallback(function(e25) {
        if (!g2 || !g2.execute)
          throw new Error("<GoogleReCaptchaProvider /> Google Recaptcha has not been loaded");
        return g2.execute(w2.current, { action: e25 });
      }, [g2, w2]), P2 = t17.useMemo(function() {
        return { executeRecaptcha: g2 ? x2 : void 0, container: v2 == null ? void 0 : v2.element };
      }, [x2, g2, v2 == null ? void 0 : v2.element]);
      return r24.createElement(f.Provider, { value: P2 }, h2);
    }, exports.useGoogleReCaptcha = d, exports.withGoogleReCaptcha = function(e24) {
      var t18 = function(t19) {
        return r24.createElement(p, null, function(n2) {
          return r24.createElement(e24, o3({}, t19, { googleReCaptchaProps: n2 }));
        });
      };
      return t18.displayName = "withGoogleReCaptcha(" + (e24.displayName || e24.name || "Component") + ")", W(t18, e24), t18;
    };
  }
});

// ../../../node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "../../../node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module2) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module2.exports = ReactPropTypesSecret;
  }
});

// ../../../node_modules/prop-types/factoryWithThrowingShims.js
var require_factoryWithThrowingShims = __commonJS({
  "../../../node_modules/prop-types/factoryWithThrowingShims.js"(exports, module2) {
    "use strict";
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    function emptyFunction() {
    }
    function emptyFunctionWithReset() {
    }
    emptyFunctionWithReset.resetWarningCache = emptyFunction;
    module2.exports = function() {
      function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret !== ReactPropTypesSecret) {
          var err = new Error(
            "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
          );
          throw err.name = "Invariant Violation", err;
        }
      }
      shim.isRequired = shim;
      function getShim() {
        return shim;
      }
      var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: emptyFunctionWithReset,
        resetWarningCache: emptyFunction
      };
      return ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes;
    };
  }
});

// ../../../node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "../../../node_modules/prop-types/index.js"(exports, module2) {
    module2.exports = require_factoryWithThrowingShims()();
    var ReactIs, throwOnDirectAccess;
  }
});

// ../../../node_modules/classnames/index.js
var require_classnames = __commonJS({
  "../../../node_modules/classnames/index.js"(exports, module2) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty, nativeCodeString = "[native code]";
      function classNames17() {
        for (var classes = [], i13 = 0; i13 < arguments.length; i13++) {
          var arg = arguments[i13];
          if (arg) {
            var argType = typeof arg;
            if (argType === "string" || argType === "number")
              classes.push(arg);
            else if (Array.isArray(arg)) {
              if (arg.length) {
                var inner = classNames17.apply(null, arg);
                inner && classes.push(inner);
              }
            } else if (argType === "object") {
              if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
                classes.push(arg.toString());
                continue;
              }
              for (var key in arg)
                hasOwn.call(arg, key) && arg[key] && classes.push(key);
            }
          }
        }
        return classes.join(" ");
      }
      typeof module2 < "u" && module2.exports ? (classNames17.default = classNames17, module2.exports = classNames17) : typeof define == "function" && typeof define.amd == "object" && define.amd ? define("classnames", [], function() {
        return classNames17;
      }) : window.classNames = classNames17;
    })();
  }
});

// ../../../node_modules/@emotion/memoize/dist/memoize.cjs.prod.js
var require_memoize_cjs_prod = __commonJS({
  "../../../node_modules/@emotion/memoize/dist/memoize.cjs.prod.js"(exports) {
    "use strict";
    function memoize(fn) {
      var cache = {};
      return function(arg) {
        return cache[arg] === void 0 && (cache[arg] = fn(arg)), cache[arg];
      };
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.default = memoize;
  }
});

// ../../../node_modules/@emotion/memoize/dist/memoize.cjs.js
var require_memoize_cjs = __commonJS({
  "../../../node_modules/@emotion/memoize/dist/memoize.cjs.js"(exports, module2) {
    "use strict";
    module2.exports = require_memoize_cjs_prod();
  }
});

// ../../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.cjs.prod.js
var require_is_prop_valid_cjs_prod = __commonJS({
  "../../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.cjs.prod.js"(exports) {
    "use strict";
    function _interopDefault(ex) {
      return ex && typeof ex == "object" && "default" in ex ? ex.default : ex;
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var memoize = _interopDefault(require_memoize_cjs()), reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index2 = memoize(function(prop) {
      return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
    });
    exports.default = index2;
  }
});

// ../../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.cjs.js
var require_is_prop_valid_cjs = __commonJS({
  "../../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.cjs.js"(exports, module2) {
    "use strict";
    module2.exports = require_is_prop_valid_cjs_prod();
  }
});

// ../../../node_modules/aria-hidden/dist/es5/index.js
var require_es5 = __commonJS({
  "../../../node_modules/aria-hidden/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.suppressOthers = exports.supportsInert = exports.inertOthers = exports.hideOthers = void 0;
    var getDefaultParent = function(originalTarget) {
      if (typeof document > "u")
        return null;
      var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
      return sampleTarget.ownerDocument.body;
    }, counterMap = /* @__PURE__ */ new WeakMap(), uncontrolledNodes = /* @__PURE__ */ new WeakMap(), markerMap = {}, lockCount = 0, unwrapHost = function(node) {
      return node && (node.host || unwrapHost(node.parentNode));
    }, correctTargets = function(parent, targets) {
      return targets.map(function(target) {
        if (parent.contains(target))
          return target;
        var correctedTarget = unwrapHost(target);
        return correctedTarget && parent.contains(correctedTarget) ? correctedTarget : (console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing"), null);
      }).filter(function(x) {
        return Boolean(x);
      });
    }, applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
      var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
      markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());
      var markerCounter = markerMap[markerName], hiddenNodes = [], elementsToKeep = /* @__PURE__ */ new Set(), elementsToStop = new Set(targets), keep = function(el) {
        !el || elementsToKeep.has(el) || (elementsToKeep.add(el), keep(el.parentNode));
      };
      targets.forEach(keep);
      var deep = function(parent) {
        !parent || elementsToStop.has(parent) || Array.prototype.forEach.call(parent.children, function(node) {
          if (elementsToKeep.has(node))
            deep(node);
          else {
            var attr = node.getAttribute(controlAttribute), alreadyHidden = attr !== null && attr !== "false", counterValue = (counterMap.get(node) || 0) + 1, markerValue = (markerCounter.get(node) || 0) + 1;
            counterMap.set(node, counterValue), markerCounter.set(node, markerValue), hiddenNodes.push(node), counterValue === 1 && alreadyHidden && uncontrolledNodes.set(node, !0), markerValue === 1 && node.setAttribute(markerName, "true"), alreadyHidden || node.setAttribute(controlAttribute, "true");
          }
        });
      };
      return deep(parentNode), elementsToKeep.clear(), lockCount++, function() {
        hiddenNodes.forEach(function(node) {
          var counterValue = counterMap.get(node) - 1, markerValue = markerCounter.get(node) - 1;
          counterMap.set(node, counterValue), markerCounter.set(node, markerValue), counterValue || (uncontrolledNodes.has(node) || node.removeAttribute(controlAttribute), uncontrolledNodes.delete(node)), markerValue || node.removeAttribute(markerName);
        }), lockCount--, lockCount || (counterMap = /* @__PURE__ */ new WeakMap(), counterMap = /* @__PURE__ */ new WeakMap(), uncontrolledNodes = /* @__PURE__ */ new WeakMap(), markerMap = {});
      };
    }, hideOthers = function(originalTarget, parentNode, markerName) {
      markerName === void 0 && (markerName = "data-aria-hidden");
      var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]), activeParentNode = parentNode || getDefaultParent(originalTarget);
      return activeParentNode ? (targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]"))), applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden")) : function() {
        return null;
      };
    };
    exports.hideOthers = hideOthers;
    var inertOthers = function(originalTarget, parentNode, markerName) {
      markerName === void 0 && (markerName = "data-inert-ed");
      var activeParentNode = parentNode || getDefaultParent(originalTarget);
      return activeParentNode ? applyAttributeToOthers(originalTarget, activeParentNode, markerName, "inert") : function() {
        return null;
      };
    };
    exports.inertOthers = inertOthers;
    var supportsInert = function() {
      return typeof HTMLElement < "u" && HTMLElement.prototype.hasOwnProperty("inert");
    };
    exports.supportsInert = supportsInert;
    var suppressOthers = function(originalTarget, parentNode, markerName) {
      return markerName === void 0 && (markerName = "data-suppressed"), ((0, exports.supportsInert)() ? exports.inertOthers : exports.hideOthers)(originalTarget, parentNode, markerName);
    };
    exports.suppressOthers = suppressOthers;
  }
});

// ../../../node_modules/tslib/tslib.es6.mjs
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldIn: () => __classPrivateFieldIn,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __esDecorate: () => __esDecorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __propKey: () => __propKey,
  __read: () => __read,
  __rest: () => __rest,
  __runInitializers: () => __runInitializers,
  __setFunctionName: () => __setFunctionName,
  __spread: () => __spread,
  __spreadArray: () => __spreadArray,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values,
  default: () => tslib_es6_default
});
function __extends(d, b) {
  if (typeof b != "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
function __rest(s, e23) {
  var t17 = {};
  for (var p in s)
    Object.prototype.hasOwnProperty.call(s, p) && e23.indexOf(p) < 0 && (t17[p] = s[p]);
  if (s != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i13 = 0, p = Object.getOwnPropertySymbols(s); i13 < p.length; i13++)
      e23.indexOf(p[i13]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i13]) && (t17[p[i13]] = s[p[i13]]);
  return t17;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r24 = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r24 = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i13 = decorators.length - 1; i13 >= 0; i13--)
      (d = decorators[i13]) && (r24 = (c < 3 ? d(r24) : c > 3 ? d(target, key, r24) : d(target, key)) || r24);
  return c > 3 && r24 && Object.defineProperty(target, key, r24), r24;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) {
    if (f !== void 0 && typeof f != "function")
      throw new TypeError("Function expected");
    return f;
  }
  for (var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value", target = !descriptorIn && ctor ? contextIn.static ? ctor : ctor.prototype : null, descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {}), _, done = !1, i13 = decorators.length - 1; i13 >= 0; i13--) {
    var context = {};
    for (var p in contextIn)
      context[p] = p === "access" ? {} : contextIn[p];
    for (var p in contextIn.access)
      context.access[p] = contextIn.access[p];
    context.addInitializer = function(f) {
      if (done)
        throw new TypeError("Cannot add initializers after decoration has completed");
      extraInitializers.push(accept(f || null));
    };
    var result = (0, decorators[i13])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
    if (kind === "accessor") {
      if (result === void 0)
        continue;
      if (result === null || typeof result != "object")
        throw new TypeError("Object expected");
      (_ = accept(result.get)) && (descriptor.get = _), (_ = accept(result.set)) && (descriptor.set = _), (_ = accept(result.init)) && initializers.unshift(_);
    } else
      (_ = accept(result)) && (kind === "field" ? initializers.unshift(_) : descriptor[key] = _);
  }
  target && Object.defineProperty(target, contextIn.name, descriptor), done = !0;
}
function __runInitializers(thisArg, initializers, value) {
  for (var useValue = arguments.length > 2, i13 = 0; i13 < initializers.length; i13++)
    value = useValue ? initializers[i13].call(thisArg, value) : initializers[i13].call(thisArg);
  return useValue ? value : void 0;
}
function __propKey(x) {
  return typeof x == "symbol" ? x : "".concat(x);
}
function __setFunctionName(f, name, prefix2) {
  return typeof name == "symbol" && (name = name.description ? "[".concat(name.description, "]") : ""), Object.defineProperty(f, "name", { configurable: !0, value: prefix2 ? "".concat(prefix2, " ", name) : name });
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step2(generator.next(value));
      } catch (e23) {
        reject(e23);
      }
    }
    function rejected(value) {
      try {
        step2(generator.throw(value));
      } catch (e23) {
        reject(e23);
      }
    }
    function step2(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step2((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t17[0] & 1)
      throw t17[1];
    return t17[1];
  }, trys: [], ops: [] }, f, y, t17, g;
  return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step2([n, v]);
    };
  }
  function step2(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    for (; g && (g = 0, op[0] && (_ = 0)), _; )
      try {
        if (f = 1, y && (t17 = op[0] & 2 ? y.return : op[0] ? y.throw || ((t17 = y.return) && t17.call(y), 0) : y.next) && !(t17 = t17.call(y, op[1])).done)
          return t17;
        switch (y = 0, t17 && (op = [op[0] & 2, t17.value]), op[0]) {
          case 0:
          case 1:
            t17 = op;
            break;
          case 4:
            return _.label++, { value: op[1], done: !1 };
          case 5:
            _.label++, y = op[1], op = [0];
            continue;
          case 7:
            op = _.ops.pop(), _.trys.pop();
            continue;
          default:
            if (t17 = _.trys, !(t17 = t17.length > 0 && t17[t17.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t17 || op[1] > t17[0] && op[1] < t17[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t17[1]) {
              _.label = t17[1], t17 = op;
              break;
            }
            if (t17 && _.label < t17[2]) {
              _.label = t17[2], _.ops.push(op);
              break;
            }
            t17[2] && _.ops.pop(), _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e23) {
        op = [6, e23], y = 0;
      } finally {
        f = t17 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: !0 };
  }
}
function __exportStar(m, o3) {
  for (var p in m)
    p !== "default" && !Object.prototype.hasOwnProperty.call(o3, p) && __createBinding(o3, m, p);
}
function __values(o3) {
  var s = typeof Symbol == "function" && Symbol.iterator, m = s && o3[s], i13 = 0;
  if (m)
    return m.call(o3);
  if (o3 && typeof o3.length == "number")
    return {
      next: function() {
        return o3 && i13 >= o3.length && (o3 = void 0), { value: o3 && o3[i13++], done: !o3 };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o3, n) {
  var m = typeof Symbol == "function" && o3[Symbol.iterator];
  if (!m)
    return o3;
  var i13 = m.call(o3), r24, ar = [], e23;
  try {
    for (; (n === void 0 || n-- > 0) && !(r24 = i13.next()).done; )
      ar.push(r24.value);
  } catch (error2) {
    e23 = { error: error2 };
  } finally {
    try {
      r24 && !r24.done && (m = i13.return) && m.call(i13);
    } finally {
      if (e23)
        throw e23.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i13 = 0; i13 < arguments.length; i13++)
    ar = ar.concat(__read(arguments[i13]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i13 = 0, il = arguments.length; i13 < il; i13++)
    s += arguments[i13].length;
  for (var r24 = Array(s), k = 0, i13 = 0; i13 < il; i13++)
    for (var a8 = arguments[i13], j = 0, jl = a8.length; j < jl; j++, k++)
      r24[k] = a8[j];
  return r24;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i13 = 0, l9 = from.length, ar; i13 < l9; i13++)
      (ar || !(i13 in from)) && (ar || (ar = Array.prototype.slice.call(from, 0, i13)), ar[i13] = from[i13]);
  return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i13, q = [];
  return i13 = {}, verb("next"), verb("throw"), verb("return"), i13[Symbol.asyncIterator] = function() {
    return this;
  }, i13;
  function verb(n) {
    g[n] && (i13[n] = function(v) {
      return new Promise(function(a8, b) {
        q.push([n, v, a8, b]) > 1 || resume(n, v);
      });
    });
  }
  function resume(n, v) {
    try {
      step2(g[n](v));
    } catch (e23) {
      settle(q[0][3], e23);
    }
  }
  function step2(r24) {
    r24.value instanceof __await ? Promise.resolve(r24.value.v).then(fulfill, reject) : settle(q[0][2], r24);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    f(v), q.shift(), q.length && resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o3) {
  var i13, p;
  return i13 = {}, verb("next"), verb("throw", function(e23) {
    throw e23;
  }), verb("return"), i13[Symbol.iterator] = function() {
    return this;
  }, i13;
  function verb(n, f) {
    i13[n] = o3[n] ? function(v) {
      return (p = !p) ? { value: __await(o3[n](v)), done: !1 } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o3) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o3[Symbol.asyncIterator], i13;
  return m ? m.call(o3) : (o3 = typeof __values == "function" ? __values(o3) : o3[Symbol.iterator](), i13 = {}, verb("next"), verb("throw"), verb("return"), i13[Symbol.asyncIterator] = function() {
    return this;
  }, i13);
  function verb(n) {
    i13[n] = o3[n] && function(v) {
      return new Promise(function(resolve, reject) {
        v = o3[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  return Object.defineProperty ? Object.defineProperty(cooked, "raw", { value: raw }) : cooked.raw = raw, cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule)
    return mod;
  var result = {};
  if (mod != null)
    for (var k in mod)
      k !== "default" && Object.prototype.hasOwnProperty.call(mod, k) && __createBinding(result, mod, k);
  return __setModuleDefault(result, mod), result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f)
    throw new TypeError("Private accessor was defined without a getter");
  if (typeof state == "function" ? receiver !== state || !f : !state.has(receiver))
    throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m")
    throw new TypeError("Private method is not writable");
  if (kind === "a" && !f)
    throw new TypeError("Private accessor was defined without a setter");
  if (typeof state == "function" ? receiver !== state || !f : !state.has(receiver))
    throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || typeof receiver != "object" && typeof receiver != "function")
    throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state == "function" ? receiver === state : state.has(receiver);
}
var extendStatics, __assign, __createBinding, __setModuleDefault, tslib_es6_default, init_tslib_es6 = __esm({
  "../../../node_modules/tslib/tslib.es6.mjs"() {
    extendStatics = function(d, b) {
      return extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
      } || function(d2, b2) {
        for (var p in b2)
          Object.prototype.hasOwnProperty.call(b2, p) && (d2[p] = b2[p]);
      }, extendStatics(d, b);
    };
    __assign = function() {
      return __assign = Object.assign || function(t17) {
        for (var s, i13 = 1, n = arguments.length; i13 < n; i13++) {
          s = arguments[i13];
          for (var p in s)
            Object.prototype.hasOwnProperty.call(s, p) && (t17[p] = s[p]);
        }
        return t17;
      }, __assign.apply(this, arguments);
    };
    __createBinding = Object.create ? function(o3, m, k, k2) {
      k2 === void 0 && (k2 = k);
      var desc = Object.getOwnPropertyDescriptor(m, k);
      (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) && (desc = { enumerable: !0, get: function() {
        return m[k];
      } }), Object.defineProperty(o3, k2, desc);
    } : function(o3, m, k, k2) {
      k2 === void 0 && (k2 = k), o3[k2] = m[k];
    };
    __setModuleDefault = Object.create ? function(o3, v) {
      Object.defineProperty(o3, "default", { enumerable: !0, value: v });
    } : function(o3, v) {
      o3.default = v;
    };
    tslib_es6_default = {
      __extends,
      __assign,
      __rest,
      __decorate,
      __param,
      __metadata,
      __awaiter,
      __generator,
      __createBinding,
      __exportStar,
      __values,
      __read,
      __spread,
      __spreadArrays,
      __spreadArray,
      __await,
      __asyncGenerator,
      __asyncDelegator,
      __asyncValues,
      __makeTemplateObject,
      __importStar,
      __importDefault,
      __classPrivateFieldGet,
      __classPrivateFieldSet,
      __classPrivateFieldIn
    };
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es5/constants.js
var require_constants = __commonJS({
  "../../../node_modules/react-remove-scroll-bar/dist/es5/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.removedBarSizeVariable = exports.noScrollbarsClassName = exports.fullWidthClassName = exports.zeroRightClassName = void 0;
    exports.zeroRightClassName = "right-scroll-bar-position";
    exports.fullWidthClassName = "width-before-scroll-bar";
    exports.noScrollbarsClassName = "with-scroll-bars-hidden";
    exports.removedBarSizeVariable = "--removed-body-scroll-bar-size";
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/assignRef.js
var require_assignRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/assignRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.assignRef = void 0;
    function assignRef(ref, value) {
      return typeof ref == "function" ? ref(value) : ref && (ref.current = value), ref;
    }
    exports.assignRef = assignRef;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/useRef.js
var require_useRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/useRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useCallbackRef = void 0;
    var react_1 = require_react();
    function useCallbackRef(initialValue, callback) {
      var ref = (0, react_1.useState)(function() {
        return {
          // value
          value: initialValue,
          // last callback
          callback,
          // "memoized" public interface
          facade: {
            get current() {
              return ref.value;
            },
            set current(value) {
              var last = ref.value;
              last !== value && (ref.value = value, ref.callback(value, last));
            }
          }
        };
      })[0];
      return ref.callback = callback, ref.facade;
    }
    exports.useCallbackRef = useCallbackRef;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/createRef.js
var require_createRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/createRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.createCallbackRef = void 0;
    function createCallbackRef(callback) {
      var current = null;
      return {
        get current() {
          return current;
        },
        set current(value) {
          var last = current;
          last !== value && (current = value, callback(value, last));
        }
      };
    }
    exports.createCallbackRef = createCallbackRef;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/mergeRef.js
var require_mergeRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/mergeRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.mergeRefs = void 0;
    var assignRef_1 = require_assignRef(), createRef_1 = require_createRef();
    function mergeRefs(refs) {
      return (0, createRef_1.createCallbackRef)(function(newValue) {
        return refs.forEach(function(ref) {
          return (0, assignRef_1.assignRef)(ref, newValue);
        });
      });
    }
    exports.mergeRefs = mergeRefs;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/useMergeRef.js
var require_useMergeRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/useMergeRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useMergeRefs = void 0;
    var assignRef_1 = require_assignRef(), useRef_1 = require_useRef();
    function useMergeRefs(refs, defaultValue) {
      return (0, useRef_1.useCallbackRef)(defaultValue || null, function(newValue) {
        return refs.forEach(function(ref) {
          return (0, assignRef_1.assignRef)(ref, newValue);
        });
      });
    }
    exports.useMergeRefs = useMergeRefs;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/useTransformRef.js
var require_useTransformRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/useTransformRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useTransformRef = void 0;
    var assignRef_1 = require_assignRef(), useRef_1 = require_useRef();
    function useTransformRef(ref, transformer) {
      return (0, useRef_1.useCallbackRef)(null, function(value) {
        return (0, assignRef_1.assignRef)(ref, transformer(value));
      });
    }
    exports.useTransformRef = useTransformRef;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/transformRef.js
var require_transformRef = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/transformRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.transformRef = void 0;
    var assignRef_1 = require_assignRef(), createRef_1 = require_createRef();
    function transformRef(ref, transformer) {
      return (0, createRef_1.createCallbackRef)(function(value) {
        return (0, assignRef_1.assignRef)(ref, transformer(value));
      });
    }
    exports.transformRef = transformRef;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/refToCallback.js
var require_refToCallback = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/refToCallback.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useRefToCallback = exports.refToCallback = void 0;
    function refToCallback(ref) {
      return function(newValue) {
        typeof ref == "function" ? ref(newValue) : ref && (ref.current = newValue);
      };
    }
    exports.refToCallback = refToCallback;
    var nullCallback = function() {
      return null;
    }, weakMem = /* @__PURE__ */ new WeakMap(), weakMemoize = function(ref) {
      var usedRef = ref || nullCallback, storedRef = weakMem.get(usedRef);
      if (storedRef)
        return storedRef;
      var cb = refToCallback(usedRef);
      return weakMem.set(usedRef, cb), cb;
    };
    function useRefToCallback(ref) {
      return weakMemoize(ref);
    }
    exports.useRefToCallback = useRefToCallback;
  }
});

// ../../../node_modules/use-callback-ref/dist/es5/index.js
var require_es52 = __commonJS({
  "../../../node_modules/use-callback-ref/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useRefToCallback = exports.refToCallback = exports.transformRef = exports.useTransformRef = exports.useMergeRefs = exports.mergeRefs = exports.createCallbackRef = exports.useCallbackRef = exports.assignRef = void 0;
    var assignRef_1 = require_assignRef();
    Object.defineProperty(exports, "assignRef", { enumerable: !0, get: function() {
      return assignRef_1.assignRef;
    } });
    var useRef_1 = require_useRef();
    Object.defineProperty(exports, "useCallbackRef", { enumerable: !0, get: function() {
      return useRef_1.useCallbackRef;
    } });
    var createRef_1 = require_createRef();
    Object.defineProperty(exports, "createCallbackRef", { enumerable: !0, get: function() {
      return createRef_1.createCallbackRef;
    } });
    var mergeRef_1 = require_mergeRef();
    Object.defineProperty(exports, "mergeRefs", { enumerable: !0, get: function() {
      return mergeRef_1.mergeRefs;
    } });
    var useMergeRef_1 = require_useMergeRef();
    Object.defineProperty(exports, "useMergeRefs", { enumerable: !0, get: function() {
      return useMergeRef_1.useMergeRefs;
    } });
    var useTransformRef_1 = require_useTransformRef();
    Object.defineProperty(exports, "useTransformRef", { enumerable: !0, get: function() {
      return useTransformRef_1.useTransformRef;
    } });
    var transformRef_1 = require_transformRef();
    Object.defineProperty(exports, "transformRef", { enumerable: !0, get: function() {
      return transformRef_1.transformRef;
    } });
    var refToCallback_1 = require_refToCallback();
    Object.defineProperty(exports, "refToCallback", { enumerable: !0, get: function() {
      return refToCallback_1.refToCallback;
    } });
    Object.defineProperty(exports, "useRefToCallback", { enumerable: !0, get: function() {
      return refToCallback_1.useRefToCallback;
    } });
  }
});

// ../../../node_modules/detect-node-es/es5/node.js
var require_node = __commonJS({
  "../../../node_modules/detect-node-es/es5/node.js"(exports, module2) {
    module2.exports.isNode = Object.prototype.toString.call(typeof process < "u" ? process : 0) === "[object process]";
  }
});

// ../../../node_modules/use-sidecar/dist/es5/env.js
var require_env = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.env = void 0;
    var detect_node_es_1 = require_node();
    exports.env = {
      isNode: detect_node_es_1.isNode,
      forceCache: !1
    };
  }
});

// ../../../node_modules/use-sidecar/dist/es5/hook.js
var require_hook = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/hook.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useSidecar = void 0;
    var react_1 = require_react(), env_1 = require_env(), cache = /* @__PURE__ */ new WeakMap(), NO_OPTIONS = {};
    function useSidecar(importer, effect) {
      var options = effect && effect.options || NO_OPTIONS;
      return env_1.env.isNode && !options.ssr ? [null, null] : useRealSidecar(importer, effect);
    }
    exports.useSidecar = useSidecar;
    function useRealSidecar(importer, effect) {
      var options = effect && effect.options || NO_OPTIONS, couldUseCache = env_1.env.forceCache || env_1.env.isNode && !!options.ssr || !options.async, _a = (0, react_1.useState)(couldUseCache ? function() {
        return cache.get(importer);
      } : void 0), Car = _a[0], setCar = _a[1], _b = (0, react_1.useState)(null), error2 = _b[0], setError = _b[1];
      return (0, react_1.useEffect)(function() {
        Car || importer().then(function(car) {
          var resolved = effect ? effect.read() : car.default || car;
          if (!resolved) {
            console.error("Sidecar error: with importer", importer);
            var error_1;
            throw effect ? (console.error("Sidecar error: with medium", effect), error_1 = new Error("Sidecar medium was not found")) : error_1 = new Error("Sidecar was not found in exports"), setError(function() {
              return error_1;
            }), error_1;
          }
          cache.set(importer, resolved), setCar(function() {
            return resolved;
          });
        }, function(e23) {
          return setError(function() {
            return e23;
          });
        });
      }, []), [Car, error2];
    }
  }
});

// ../../../node_modules/use-sidecar/dist/es5/hoc.js
var require_hoc = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/hoc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.sidecar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), hook_1 = require_hook();
    function sidecar(importer, errorComponent) {
      var ErrorCase = function() {
        return errorComponent;
      };
      return function(props) {
        var _a = (0, hook_1.useSidecar)(importer, props.sideCar), Car = _a[0], error2 = _a[1];
        return error2 && errorComponent ? ErrorCase : Car ? React10.createElement(Car, tslib_1.__assign({}, props)) : null;
      };
    }
    exports.sidecar = sidecar;
  }
});

// ../../../node_modules/use-sidecar/dist/es5/config.js
var require_config = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/config.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.setConfig = exports.config = void 0;
    exports.config = {
      onError: function(e23) {
        return console.error(e23);
      }
    };
    var setConfig = function(conf) {
      Object.assign(exports.config, conf);
    };
    exports.setConfig = setConfig;
  }
});

// ../../../node_modules/use-sidecar/dist/es5/medium.js
var require_medium = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/medium.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.createSidecarMedium = exports.createMedium = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    function ItoI(a8) {
      return a8;
    }
    function innerCreateMedium(defaults, middleware) {
      middleware === void 0 && (middleware = ItoI);
      var buffer = [], assigned = !1, medium = {
        read: function() {
          if (assigned)
            throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
          return buffer.length ? buffer[buffer.length - 1] : defaults;
        },
        useMedium: function(data) {
          var item = middleware(data, assigned);
          return buffer.push(item), function() {
            buffer = buffer.filter(function(x) {
              return x !== item;
            });
          };
        },
        assignSyncMedium: function(cb) {
          for (assigned = !0; buffer.length; ) {
            var cbs = buffer;
            buffer = [], cbs.forEach(cb);
          }
          buffer = {
            push: function(x) {
              return cb(x);
            },
            filter: function() {
              return buffer;
            }
          };
        },
        assignMedium: function(cb) {
          assigned = !0;
          var pendingQueue = [];
          if (buffer.length) {
            var cbs = buffer;
            buffer = [], cbs.forEach(cb), pendingQueue = buffer;
          }
          var executeQueue = function() {
            var cbs2 = pendingQueue;
            pendingQueue = [], cbs2.forEach(cb);
          }, cycle = function() {
            return Promise.resolve().then(executeQueue);
          };
          cycle(), buffer = {
            push: function(x) {
              pendingQueue.push(x), cycle();
            },
            filter: function(filter2) {
              return pendingQueue = pendingQueue.filter(filter2), buffer;
            }
          };
        }
      };
      return medium;
    }
    function createMedium(defaults, middleware) {
      return middleware === void 0 && (middleware = ItoI), innerCreateMedium(defaults, middleware);
    }
    exports.createMedium = createMedium;
    function createSidecarMedium(options) {
      options === void 0 && (options = {});
      var medium = innerCreateMedium(null);
      return medium.options = tslib_1.__assign({ async: !0, ssr: !1 }, options), medium;
    }
    exports.createSidecarMedium = createSidecarMedium;
  }
});

// ../../../node_modules/use-sidecar/dist/es5/renderProp.js
var require_renderProp = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/renderProp.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.renderCar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), react_1 = require_react();
    function renderCar(WrappedComponent, defaults) {
      function State(_a) {
        var stateRef = _a.stateRef, props = _a.props, renderTarget = (0, react_1.useCallback)(function() {
          for (var args = [], _i = 0; _i < arguments.length; _i++)
            args[_i] = arguments[_i];
          return (0, react_1.useLayoutEffect)(function() {
            stateRef.current(args);
          }), null;
        }, []);
        return React10.createElement(WrappedComponent, tslib_1.__assign({}, props, { children: renderTarget }));
      }
      var Children = React10.memo(function(_a) {
        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children, _b = (0, react_1.useState)(defaultState.current), state = _b[0], setState = _b[1];
        return (0, react_1.useEffect)(function() {
          stateRef.current = setState;
        }, []), children.apply(void 0, state);
      }, function() {
        return !0;
      });
      return function(props) {
        var defaultState = React10.useRef(defaults(props)), ref = React10.useRef(function(state) {
          return defaultState.current = state;
        });
        return React10.createElement(
          React10.Fragment,
          null,
          React10.createElement(State, { stateRef: ref, props }),
          React10.createElement(Children, { stateRef: ref, defaultState, children: props.children })
        );
      };
    }
    exports.renderCar = renderCar;
  }
});

// ../../../node_modules/use-sidecar/dist/es5/exports.js
var require_exports = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/exports.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.exportSidecar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), SideCar = function(_a) {
      var sideCar = _a.sideCar, rest = tslib_1.__rest(_a, ["sideCar"]);
      if (!sideCar)
        throw new Error("Sidecar: please provide `sideCar` property to import the right car");
      var Target = sideCar.read();
      if (!Target)
        throw new Error("Sidecar medium not found");
      return React10.createElement(Target, tslib_1.__assign({}, rest));
    };
    SideCar.isSideCarExport = !0;
    function exportSidecar(medium, exported) {
      return medium.useMedium(exported), SideCar;
    }
    exports.exportSidecar = exportSidecar;
  }
});

// ../../../node_modules/use-sidecar/dist/es5/index.js
var require_es53 = __commonJS({
  "../../../node_modules/use-sidecar/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.exportSidecar = exports.renderCar = exports.createSidecarMedium = exports.createMedium = exports.setConfig = exports.useSidecar = exports.sidecar = void 0;
    var hoc_1 = require_hoc();
    Object.defineProperty(exports, "sidecar", { enumerable: !0, get: function() {
      return hoc_1.sidecar;
    } });
    var hook_1 = require_hook();
    Object.defineProperty(exports, "useSidecar", { enumerable: !0, get: function() {
      return hook_1.useSidecar;
    } });
    var config_1 = require_config();
    Object.defineProperty(exports, "setConfig", { enumerable: !0, get: function() {
      return config_1.setConfig;
    } });
    var medium_1 = require_medium();
    Object.defineProperty(exports, "createMedium", { enumerable: !0, get: function() {
      return medium_1.createMedium;
    } });
    Object.defineProperty(exports, "createSidecarMedium", { enumerable: !0, get: function() {
      return medium_1.createSidecarMedium;
    } });
    var renderProp_1 = require_renderProp();
    Object.defineProperty(exports, "renderCar", { enumerable: !0, get: function() {
      return renderProp_1.renderCar;
    } });
    var exports_1 = require_exports();
    Object.defineProperty(exports, "exportSidecar", { enumerable: !0, get: function() {
      return exports_1.exportSidecar;
    } });
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/medium.js
var require_medium2 = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/medium.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.effectCar = void 0;
    var use_sidecar_1 = require_es53();
    exports.effectCar = (0, use_sidecar_1.createSidecarMedium)();
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/UI.js
var require_UI = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/UI.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.RemoveScroll = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), constants_1 = require_constants(), use_callback_ref_1 = require_es52(), medium_1 = require_medium2(), nothing = function() {
    }, RemoveScroll = React10.forwardRef(function(props, parentRef) {
      var ref = React10.useRef(null), _a = React10.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing
      }), callbacks = _a[0], setCallbacks = _a[1], forwardProps = props.forwardProps, children = props.children, className2 = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container3 = _b === void 0 ? "div" : _b, rest = tslib_1.__rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]), SideCar = sideCar, containerRef = (0, use_callback_ref_1.useMergeRefs)([ref, parentRef]), containerProps = tslib_1.__assign(tslib_1.__assign({}, rest), callbacks);
      return React10.createElement(
        React10.Fragment,
        null,
        enabled && React10.createElement(SideCar, { sideCar: medium_1.effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
        forwardProps ? React10.cloneElement(React10.Children.only(children), tslib_1.__assign(tslib_1.__assign({}, containerProps), { ref: containerRef })) : React10.createElement(Container3, tslib_1.__assign({}, containerProps, { className: className2, ref: containerRef }), children)
      );
    });
    exports.RemoveScroll = RemoveScroll;
    RemoveScroll.defaultProps = {
      enabled: !0,
      removeScrollBar: !0,
      inert: !1
    };
    RemoveScroll.classNames = {
      fullWidth: constants_1.fullWidthClassName,
      zeroRight: constants_1.zeroRightClassName
    };
  }
});

// ../../../node_modules/get-nonce/dist/es5/index.js
var require_es54 = __commonJS({
  "../../../node_modules/get-nonce/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var currentNonce;
    exports.setNonce = function(nonce) {
      currentNonce = nonce;
    };
    exports.getNonce = function() {
      if (currentNonce)
        return currentNonce;
      if (typeof __webpack_nonce__ < "u")
        return __webpack_nonce__;
    };
  }
});

// ../../../node_modules/react-style-singleton/dist/es5/singleton.js
var require_singleton = __commonJS({
  "../../../node_modules/react-style-singleton/dist/es5/singleton.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.stylesheetSingleton = void 0;
    var get_nonce_1 = require_es54();
    function makeStyleTag() {
      if (!document)
        return null;
      var tag = document.createElement("style");
      tag.type = "text/css";
      var nonce = (0, get_nonce_1.getNonce)();
      return nonce && tag.setAttribute("nonce", nonce), tag;
    }
    function injectStyles(tag, css) {
      tag.styleSheet ? tag.styleSheet.cssText = css : tag.appendChild(document.createTextNode(css));
    }
    function insertStyleTag(tag) {
      var head = document.head || document.getElementsByTagName("head")[0];
      head.appendChild(tag);
    }
    var stylesheetSingleton = function() {
      var counter = 0, stylesheet = null;
      return {
        add: function(style) {
          counter == 0 && (stylesheet = makeStyleTag()) && (injectStyles(stylesheet, style), insertStyleTag(stylesheet)), counter++;
        },
        remove: function() {
          counter--, !counter && stylesheet && (stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet), stylesheet = null);
        }
      };
    };
    exports.stylesheetSingleton = stylesheetSingleton;
  }
});

// ../../../node_modules/react-style-singleton/dist/es5/hook.js
var require_hook2 = __commonJS({
  "../../../node_modules/react-style-singleton/dist/es5/hook.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.styleHookSingleton = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), singleton_1 = require_singleton(), styleHookSingleton = function() {
      var sheet = (0, singleton_1.stylesheetSingleton)();
      return function(styles, isDynamic) {
        React10.useEffect(function() {
          return sheet.add(styles), function() {
            sheet.remove();
          };
        }, [styles && isDynamic]);
      };
    };
    exports.styleHookSingleton = styleHookSingleton;
  }
});

// ../../../node_modules/react-style-singleton/dist/es5/component.js
var require_component = __commonJS({
  "../../../node_modules/react-style-singleton/dist/es5/component.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.styleSingleton = void 0;
    var hook_1 = require_hook2(), styleSingleton = function() {
      var useStyle2 = (0, hook_1.styleHookSingleton)(), Sheet = function(_a) {
        var styles = _a.styles, dynamic = _a.dynamic;
        return useStyle2(styles, dynamic), null;
      };
      return Sheet;
    };
    exports.styleSingleton = styleSingleton;
  }
});

// ../../../node_modules/react-style-singleton/dist/es5/index.js
var require_es55 = __commonJS({
  "../../../node_modules/react-style-singleton/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.styleHookSingleton = exports.stylesheetSingleton = exports.styleSingleton = void 0;
    var component_1 = require_component();
    Object.defineProperty(exports, "styleSingleton", { enumerable: !0, get: function() {
      return component_1.styleSingleton;
    } });
    var singleton_1 = require_singleton();
    Object.defineProperty(exports, "stylesheetSingleton", { enumerable: !0, get: function() {
      return singleton_1.stylesheetSingleton;
    } });
    var hook_1 = require_hook2();
    Object.defineProperty(exports, "styleHookSingleton", { enumerable: !0, get: function() {
      return hook_1.styleHookSingleton;
    } });
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es5/utils.js
var require_utils2 = __commonJS({
  "../../../node_modules/react-remove-scroll-bar/dist/es5/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.getGapWidth = exports.zeroGap = void 0;
    exports.zeroGap = {
      left: 0,
      top: 0,
      right: 0,
      gap: 0
    };
    var parse = function(x) {
      return parseInt(x || "", 10) || 0;
    }, getOffset = function(gapMode) {
      var cs = window.getComputedStyle(document.body), left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"], top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"], right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
      return [parse(left), parse(top), parse(right)];
    }, getGapWidth = function(gapMode) {
      if (gapMode === void 0 && (gapMode = "margin"), typeof window > "u")
        return exports.zeroGap;
      var offsets = getOffset(gapMode), documentWidth = document.documentElement.clientWidth, windowWidth = window.innerWidth;
      return {
        left: offsets[0],
        top: offsets[1],
        right: offsets[2],
        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
      };
    };
    exports.getGapWidth = getGapWidth;
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es5/component.js
var require_component2 = __commonJS({
  "../../../node_modules/react-remove-scroll-bar/dist/es5/component.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.RemoveScrollBar = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), react_style_singleton_1 = require_es55(), constants_1 = require_constants(), utils_1 = require_utils2(), Style = (0, react_style_singleton_1.styleSingleton)(), getStyles = function(_a, allowRelative, gapMode, important) {
      var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
      return gapMode === void 0 && (gapMode = "margin"), `
  .`.concat(constants_1.noScrollbarsClassName, ` {
   overflow: hidden `).concat(important, `;
   padding-right: `).concat(gap, "px ").concat(important, `;
  }
  body {
    overflow: hidden `).concat(important, `;
    overscroll-behavior: contain;
    `).concat([
        allowRelative && "position: relative ".concat(important, ";"),
        gapMode === "margin" && `
    padding-left: `.concat(left, `px;
    padding-top: `).concat(top, `px;
    padding-right: `).concat(right, `px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(gap, "px ").concat(important, `;
    `),
        gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
      ].filter(Boolean).join(""), `
  }
  
  .`).concat(constants_1.zeroRightClassName, ` {
    right: `).concat(gap, "px ").concat(important, `;
  }
  
  .`).concat(constants_1.fullWidthClassName, ` {
    margin-right: `).concat(gap, "px ").concat(important, `;
  }
  
  .`).concat(constants_1.zeroRightClassName, " .").concat(constants_1.zeroRightClassName, ` {
    right: 0 `).concat(important, `;
  }
  
  .`).concat(constants_1.fullWidthClassName, " .").concat(constants_1.fullWidthClassName, ` {
    margin-right: 0 `).concat(important, `;
  }
  
  body {
    `).concat(constants_1.removedBarSizeVariable, ": ").concat(gap, `px;
  }
`);
    }, RemoveScrollBar = function(props) {
      var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? "margin" : _a, gap = React10.useMemo(function() {
        return (0, utils_1.getGapWidth)(gapMode);
      }, [gapMode]);
      return React10.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, noImportant ? "" : "!important") });
    };
    exports.RemoveScrollBar = RemoveScrollBar;
  }
});

// ../../../node_modules/react-remove-scroll-bar/dist/es5/index.js
var require_es56 = __commonJS({
  "../../../node_modules/react-remove-scroll-bar/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.getGapWidth = exports.removedBarSizeVariable = exports.noScrollbarsClassName = exports.fullWidthClassName = exports.zeroRightClassName = exports.RemoveScrollBar = void 0;
    var component_1 = require_component2();
    Object.defineProperty(exports, "RemoveScrollBar", { enumerable: !0, get: function() {
      return component_1.RemoveScrollBar;
    } });
    var constants_1 = require_constants();
    Object.defineProperty(exports, "zeroRightClassName", { enumerable: !0, get: function() {
      return constants_1.zeroRightClassName;
    } });
    Object.defineProperty(exports, "fullWidthClassName", { enumerable: !0, get: function() {
      return constants_1.fullWidthClassName;
    } });
    Object.defineProperty(exports, "noScrollbarsClassName", { enumerable: !0, get: function() {
      return constants_1.noScrollbarsClassName;
    } });
    Object.defineProperty(exports, "removedBarSizeVariable", { enumerable: !0, get: function() {
      return constants_1.removedBarSizeVariable;
    } });
    var utils_1 = require_utils2();
    Object.defineProperty(exports, "getGapWidth", { enumerable: !0, get: function() {
      return utils_1.getGapWidth;
    } });
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/aggresiveCapture.js
var require_aggresiveCapture = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/aggresiveCapture.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.nonPassive = void 0;
    var passiveSupported = !1;
    if (typeof window < "u")
      try {
        options = Object.defineProperty({}, "passive", {
          get: function() {
            return passiveSupported = !0, !0;
          }
        }), window.addEventListener("test", options, options), window.removeEventListener("test", options, options);
      } catch {
        passiveSupported = !1;
      }
    var options;
    exports.nonPassive = passiveSupported ? { passive: !1 } : !1;
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/handleScroll.js
var require_handleScroll = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/handleScroll.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.handleScroll = exports.locationCouldBeScrolled = void 0;
    var alwaysContainsScroll = function(node) {
      return node.tagName === "TEXTAREA";
    }, elementCanBeScrolled = function(node, overflow) {
      var styles = window.getComputedStyle(node);
      return (
        // not-not-scrollable
        styles[overflow] !== "hidden" && // contains scroll inside self
        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
      );
    }, elementCouldBeVScrolled = function(node) {
      return elementCanBeScrolled(node, "overflowY");
    }, elementCouldBeHScrolled = function(node) {
      return elementCanBeScrolled(node, "overflowX");
    }, locationCouldBeScrolled = function(axis, node) {
      var current = node;
      do {
        typeof ShadowRoot < "u" && current instanceof ShadowRoot && (current = current.host);
        var isScrollable = elementCouldBeScrolled(axis, current);
        if (isScrollable) {
          var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
          if (s > d)
            return !0;
        }
        current = current.parentNode;
      } while (current && current !== document.body);
      return !1;
    };
    exports.locationCouldBeScrolled = locationCouldBeScrolled;
    var getVScrollVariables = function(_a) {
      var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
      return [
        scrollTop,
        scrollHeight,
        clientHeight
      ];
    }, getHScrollVariables = function(_a) {
      var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
      return [
        scrollLeft,
        scrollWidth,
        clientWidth
      ];
    }, elementCouldBeScrolled = function(axis, node) {
      return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
    }, getScrollVariables = function(axis, node) {
      return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
    }, getDirectionFactor = function(axis, direction) {
      return axis === "h" && direction === "rtl" ? -1 : 1;
    }, handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
      var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction), delta = directionFactor * sourceDelta, target = event.target, targetInLock = endTarget.contains(target), shouldCancelScroll = !1, isDeltaPositive = delta > 0, availableScroll = 0, availableScrollTop = 0;
      do {
        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2], elementScroll = scroll_1 - capacity - directionFactor * position;
        (position || elementScroll) && elementCouldBeScrolled(axis, target) && (availableScroll += elementScroll, availableScrollTop += position), target = target.parentNode;
      } while (
        // portaled content
        !targetInLock && target !== document.body || // self content
        targetInLock && (endTarget.contains(target) || endTarget === target)
      );
      return (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll) || !isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) && (shouldCancelScroll = !0), shouldCancelScroll;
    };
    exports.handleScroll = handleScroll;
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/SideEffect.js
var require_SideEffect = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/SideEffect.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.RemoveScrollSideCar = exports.getDeltaXY = exports.getTouchXY = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), react_remove_scroll_bar_1 = require_es56(), react_style_singleton_1 = require_es55(), aggresiveCapture_1 = require_aggresiveCapture(), handleScroll_1 = require_handleScroll(), getTouchXY = function(event) {
      return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
    };
    exports.getTouchXY = getTouchXY;
    var getDeltaXY = function(event) {
      return [event.deltaX, event.deltaY];
    };
    exports.getDeltaXY = getDeltaXY;
    var extractRef = function(ref) {
      return ref && "current" in ref ? ref.current : ref;
    }, deltaCompare = function(x, y) {
      return x[0] === y[0] && x[1] === y[1];
    }, generateStyle = function(id3) {
      return `
  .block-interactivity-`.concat(id3, ` {pointer-events: none;}
  .allow-interactivity-`).concat(id3, ` {pointer-events: all;}
`);
    }, idCounter = 0, lockStack = [];
    function RemoveScrollSideCar(props) {
      var shouldPreventQueue = React10.useRef([]), touchStartRef = React10.useRef([0, 0]), activeAxis = React10.useRef(), id3 = React10.useState(idCounter++)[0], Style = React10.useState(function() {
        return (0, react_style_singleton_1.styleSingleton)();
      })[0], lastProps = React10.useRef(props);
      React10.useEffect(function() {
        lastProps.current = props;
      }, [props]), React10.useEffect(function() {
        if (props.inert) {
          document.body.classList.add("block-interactivity-".concat(id3));
          var allow_1 = tslib_1.__spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), !0).filter(Boolean);
          return allow_1.forEach(function(el) {
            return el.classList.add("allow-interactivity-".concat(id3));
          }), function() {
            document.body.classList.remove("block-interactivity-".concat(id3)), allow_1.forEach(function(el) {
              return el.classList.remove("allow-interactivity-".concat(id3));
            });
          };
        }
      }, [props.inert, props.lockRef.current, props.shards]);
      var shouldCancelEvent = React10.useCallback(function(event, parent) {
        if ("touches" in event && event.touches.length === 2)
          return !lastProps.current.allowPinchZoom;
        var touch = (0, exports.getTouchXY)(event), touchStart = touchStartRef.current, deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0], deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1], currentAxis, target = event.target, moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
        if ("touches" in event && moveDirection === "h" && target.type === "range")
          return !1;
        var canBeScrolledInMainDirection = (0, handleScroll_1.locationCouldBeScrolled)(moveDirection, target);
        if (!canBeScrolledInMainDirection)
          return !0;
        if (canBeScrolledInMainDirection ? currentAxis = moveDirection : (currentAxis = moveDirection === "v" ? "h" : "v", canBeScrolledInMainDirection = (0, handleScroll_1.locationCouldBeScrolled)(moveDirection, target)), !canBeScrolledInMainDirection)
          return !1;
        if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY) && (activeAxis.current = currentAxis), !currentAxis)
          return !0;
        var cancelingAxis = activeAxis.current || currentAxis;
        return (0, handleScroll_1.handleScroll)(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, !0);
      }, []), shouldPrevent = React10.useCallback(function(_event) {
        var event = _event;
        if (!(!lockStack.length || lockStack[lockStack.length - 1] !== Style)) {
          var delta = "deltaY" in event ? (0, exports.getDeltaXY)(event) : (0, exports.getTouchXY)(event), sourceEvent = shouldPreventQueue.current.filter(function(e23) {
            return e23.name === event.type && e23.target === event.target && deltaCompare(e23.delta, delta);
          })[0];
          if (sourceEvent && sourceEvent.should) {
            event.cancelable && event.preventDefault();
            return;
          }
          if (!sourceEvent) {
            var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
              return node.contains(event.target);
            }), shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
            shouldStop && event.cancelable && event.preventDefault();
          }
        }
      }, []), shouldCancel = React10.useCallback(function(name, delta, target, should) {
        var event = { name, delta, target, should };
        shouldPreventQueue.current.push(event), setTimeout(function() {
          shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e23) {
            return e23 !== event;
          });
        }, 1);
      }, []), scrollTouchStart = React10.useCallback(function(event) {
        touchStartRef.current = (0, exports.getTouchXY)(event), activeAxis.current = void 0;
      }, []), scrollWheel = React10.useCallback(function(event) {
        shouldCancel(event.type, (0, exports.getDeltaXY)(event), event.target, shouldCancelEvent(event, props.lockRef.current));
      }, []), scrollTouchMove = React10.useCallback(function(event) {
        shouldCancel(event.type, (0, exports.getTouchXY)(event), event.target, shouldCancelEvent(event, props.lockRef.current));
      }, []);
      React10.useEffect(function() {
        return lockStack.push(Style), props.setCallbacks({
          onScrollCapture: scrollWheel,
          onWheelCapture: scrollWheel,
          onTouchMoveCapture: scrollTouchMove
        }), document.addEventListener("wheel", shouldPrevent, aggresiveCapture_1.nonPassive), document.addEventListener("touchmove", shouldPrevent, aggresiveCapture_1.nonPassive), document.addEventListener("touchstart", scrollTouchStart, aggresiveCapture_1.nonPassive), function() {
          lockStack = lockStack.filter(function(inst) {
            return inst !== Style;
          }), document.removeEventListener("wheel", shouldPrevent, aggresiveCapture_1.nonPassive), document.removeEventListener("touchmove", shouldPrevent, aggresiveCapture_1.nonPassive), document.removeEventListener("touchstart", scrollTouchStart, aggresiveCapture_1.nonPassive);
        };
      }, []);
      var removeScrollBar = props.removeScrollBar, inert = props.inert;
      return React10.createElement(
        React10.Fragment,
        null,
        inert ? React10.createElement(Style, { styles: generateStyle(id3) }) : null,
        removeScrollBar ? React10.createElement(react_remove_scroll_bar_1.RemoveScrollBar, { gapMode: "margin" }) : null
      );
    }
    exports.RemoveScrollSideCar = RemoveScrollSideCar;
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/sidecar.js
var require_sidecar = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/sidecar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var use_sidecar_1 = require_es53(), SideEffect_1 = require_SideEffect(), medium_1 = require_medium2();
    exports.default = (0, use_sidecar_1.exportSidecar)(medium_1.effectCar, SideEffect_1.RemoveScrollSideCar);
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/Combination.js
var require_Combination = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/Combination.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), React10 = tslib_1.__importStar(require_react()), UI_1 = require_UI(), sidecar_1 = tslib_1.__importDefault(require_sidecar()), ReactRemoveScroll = React10.forwardRef(function(props, ref) {
      return React10.createElement(UI_1.RemoveScroll, tslib_1.__assign({}, props, { ref, sideCar: sidecar_1.default }));
    });
    ReactRemoveScroll.classNames = UI_1.RemoveScroll.classNames;
    exports.default = ReactRemoveScroll;
  }
});

// ../../../node_modules/react-remove-scroll/dist/es5/index.js
var require_es57 = __commonJS({
  "../../../node_modules/react-remove-scroll/dist/es5/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.RemoveScroll = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports)), Combination_1 = tslib_1.__importDefault(require_Combination());
    exports.RemoveScroll = Combination_1.default;
  }
});

// <stdin>
var stdin_exports = {};
__export(stdin_exports, {
  assets: () => assets_manifest_default,
  assetsBuildDirectory: () => assetsBuildDirectory,
  entry: () => entry,
  future: () => future,
  publicPath: () => publicPath,
  routes: () => routes
});
module.exports = __toCommonJS(stdin_exports);

// app/entry.server.jsx
var entry_server_exports = {};
__export(entry_server_exports, {
  default: () => handleRequest
});
var import_stream = require("stream"), import_node = __toESM(require_dist2()), import_react = __toESM(require_dist3());

// ../../../node_modules/isbot/index.mjs
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classPrivateFieldSet(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
  return _classApplyDescriptorSet(receiver, descriptor, value), value;
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver))
    throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  return descriptor.get ? descriptor.get.call(receiver) : descriptor.value;
}
function _classApplyDescriptorSet(receiver, descriptor, value) {
  if (descriptor.set)
    descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable)
      throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
  }
}
function _classPrivateMethodGet(receiver, privateSet, fn) {
  if (!privateSet.has(receiver))
    throw new TypeError("attempted to get private field on non-instance");
  return fn;
}
function _checkPrivateRedeclaration(obj, privateCollection) {
  if (privateCollection.has(obj))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classPrivateFieldInitSpec(obj, privateMap, value) {
  _checkPrivateRedeclaration(obj, privateMap), privateMap.set(obj, value);
}
function _classPrivateMethodInitSpec(obj, privateSet) {
  _checkPrivateRedeclaration(obj, privateSet), privateSet.add(obj);
}
var list = [
  " daum[ /]",
  " deusu/",
  " yadirectfetcher",
  "(?:^| )site",
  "(?:^|[^g])news",
  "@[a-z]",
  "\\(at\\)[a-z]",
  "\\(github\\.com/",
  "\\[at\\][a-z]",
  "^12345",
  "^<",
  "^[\\w \\.\\-\\(\\)]+(/v?\\d+(\\.\\d+)?(\\.\\d{1,10})?)?$",
  "^[^ ]{50,}$",
  "^active",
  "^ad muncher",
  "^amaya",
  "^anglesharp/",
  "^anonymous",
  "^avsdevicesdk/",
  "^axios/",
  "^bidtellect/",
  "^biglotron",
  "^btwebclient/",
  "^castro",
  "^clamav[ /]",
  "^client/",
  "^cobweb/",
  "^coccoc",
  "^custom",
  "^ddg[_-]android",
  "^discourse",
  "^dispatch/\\d",
  "^downcast/",
  "^duckduckgo",
  "^facebook",
  "^fdm[ /]\\d",
  "^getright/",
  "^gozilla/",
  "^hatena",
  "^hobbit",
  "^hotzonu",
  "^hwcdn/",
  "^jeode/",
  "^jetty/",
  "^jigsaw",
  "^linkdex",
  "^lwp[-: ]",
  "^metauri",
  "^microsoft bits",
  "^movabletype",
  "^mozilla/\\d\\.\\d \\(compatible;?\\)$",
  "^mozilla/\\d\\.\\d \\w*$",
  "^navermailapp",
  "^netsurf",
  "^offline explorer",
  "^php",
  "^postman",
  "^postrank",
  "^python",
  "^read",
  "^reed",
  "^restsharp/",
  "^snapchat",
  "^space bison",
  "^svn",
  "^swcd ",
  "^taringa",
  "^test certificate info",
  "^thumbor/",
  "^tumblr/",
  "^user-agent:mozilla",
  "^valid",
  "^venus/fedoraplanet",
  "^w3c",
  "^webbandit/",
  "^webcopier",
  "^wget",
  "^whatsapp",
  "^xenu link sleuth",
  "^yahoo",
  "^yandex",
  "^zdm/\\d",
  "^zoom marketplace/",
  "^{{.*}}$",
  "adbeat\\.com",
  "appinsights",
  "archive",
  "ask jeeves/teoma",
  "bit\\.ly/",
  "bluecoat drtr",
  "bot",
  "browsex",
  "burpcollaborator",
  "capture",
  "catch",
  "check",
  "chrome-lighthouse",
  "chromeframe",
  "cloud",
  "crawl",
  "cryptoapi",
  "dareboost",
  "datanyze",
  "dataprovider",
  "dejaclick",
  "dmbrowser",
  "download",
  "evc-batch/",
  "feed",
  "firephp",
  "freesafeip",
  "ghost",
  "gomezagent",
  "google",
  "headlesschrome/",
  "http",
  "httrack",
  "hubspot marketing grader",
  "hydra",
  "ibisbrowser",
  "images",
  "iplabel",
  "ips-agent",
  "java",
  "library",
  "mail\\.ru/",
  "manager",
  "monitor",
  "morningscore/",
  "neustar wpm",
  "nutch",
  "offbyone",
  "optimize",
  "pageburst",
  "pagespeed",
  "perl",
  "phantom",
  "pingdom",
  "powermarks",
  "preview",
  "proxy",
  "ptst[ /]\\d",
  "reader",
  "rexx;",
  "rigor",
  "rss",
  "scan",
  "scrape",
  "search",
  "serp ?reputation ?management",
  "server",
  "sogou",
  "sparkler/",
  "speedcurve",
  "spider",
  "statuscake",
  "stumbleupon\\.com",
  "supercleaner",
  "synapse",
  "synthetic",
  "taginspector/",
  "torrent",
  "tracemyfile",
  "transcoder",
  "trendsmapresolver",
  "twingly recon",
  "url",
  "virtuoso",
  "wappalyzer",
  "webglance",
  "webkit2png",
  "websitemetadataretriever",
  "whatcms/",
  "wordpress",
  "zgrab"
];
function amend(list2) {
  try {
    new RegExp("(?<! cu)bot").test("dangerbot");
  } catch {
    return list2;
  }
  return [
    // Addresses: Cubot device
    ["bot", "(?<! cu)bot"],
    // Addresses: Android webview
    ["google", "(?<! (?:channel/|google/))google(?!(app|/google| pixel))"],
    // Addresses: libhttp browser
    ["http", "(?<!(?:lib))http"],
    // Addresses: java based browsers
    ["java", "java(?!;)"],
    // Addresses: Yandex Search App
    ["search", "(?<! ya(?:yandex)?)search"]
  ].forEach((_ref) => {
    let [search, replace] = _ref, index2 = list2.lastIndexOf(search);
    ~index2 && list2.splice(index2, 1, replace);
  }), list2;
}
amend(list);
var flags = "i", _list = /* @__PURE__ */ new WeakMap(), _pattern = /* @__PURE__ */ new WeakMap(), _update = /* @__PURE__ */ new WeakSet(), _index = /* @__PURE__ */ new WeakSet(), Isbot = class {
  constructor(patterns) {
    return _classPrivateMethodInitSpec(this, _index), _classPrivateMethodInitSpec(this, _update), _classPrivateFieldInitSpec(this, _list, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldInitSpec(this, _pattern, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldSet(this, _list, patterns || list.slice()), _classPrivateMethodGet(this, _update, _update2).call(this), Object.defineProperties((ua) => this.test(ua), Object.entries(Object.getOwnPropertyDescriptors(Isbot.prototype)).reduce((accumulator, _ref) => {
      let [prop, descriptor] = _ref;
      return typeof descriptor.value == "function" && Object.assign(accumulator, {
        [prop]: {
          value: this[prop].bind(this)
        }
      }), typeof descriptor.get == "function" && Object.assign(accumulator, {
        [prop]: {
          get: () => this[prop]
        }
      }), accumulator;
    }, {}));
  }
  /**
   * Get a clone of the pattern
   * @type RegExp
   */
  get pattern() {
    return new RegExp(_classPrivateFieldGet(this, _pattern));
  }
  /**
   * Match given string against out pattern
   * @param  {string} ua User Agent string
   * @returns {boolean}
   */
  test(ua) {
    return Boolean(ua) && _classPrivateFieldGet(this, _pattern).test(ua);
  }
  /**
   * Get the match for strings' known crawler pattern
   * @param  {string} ua User Agent string
   * @returns {string|null}
   */
  find() {
    let match = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "").match(_classPrivateFieldGet(this, _pattern));
    return match && match[0];
  }
  /**
   * Get the patterns that match user agent string if any
   * @param  {string} ua User Agent string
   * @returns {string[]}
   */
  matches() {
    let ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    return _classPrivateFieldGet(this, _list).filter((entry2) => new RegExp(entry2, flags).test(ua));
  }
  /**
   * Clear all patterns that match user agent
   * @param  {string} ua User Agent string
   * @returns {void}
   */
  clear() {
    let ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    this.exclude(this.matches(ua));
  }
  /**
   * Extent patterns for known crawlers
   * @param  {string[]} filters
   * @returns {void}
   */
  extend() {
    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    [].push.apply(_classPrivateFieldGet(this, _list), filters.filter((rule) => _classPrivateMethodGet(this, _index, _index2).call(this, rule) === -1).map((filter2) => filter2.toLowerCase())), _classPrivateMethodGet(this, _update, _update2).call(this);
  }
  /**
   * Exclude patterns from bot pattern rule
   * @param  {string[]} filters
   * @returns {void}
   */
  exclude() {
    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], {
      length
    } = filters;
    for (; length--; ) {
      let index2 = _classPrivateMethodGet(this, _index, _index2).call(this, filters[length]);
      index2 > -1 && _classPrivateFieldGet(this, _list).splice(index2, 1);
    }
    _classPrivateMethodGet(this, _update, _update2).call(this);
  }
  /**
   * Create a new Isbot instance using given list or self's list
   * @param  {string[]} [list]
   * @returns {Isbot}
   */
  spawn(list2) {
    return new Isbot(list2 || _classPrivateFieldGet(this, _list));
  }
};
function _update2() {
  _classPrivateFieldSet(this, _pattern, new RegExp(_classPrivateFieldGet(this, _list).join("|"), flags));
}
function _index2(rule) {
  return _classPrivateFieldGet(this, _list).indexOf(rule.toLowerCase());
}
var isbot = new Isbot();

// app/entry.server.jsx
var import_server = __toESM(require_server_node()), import_jsx_runtime = __toESM(require_jsx_runtime()), ABORT_DELAY = 5e3;
function handleRequest(request, responseStatusCode, responseHeaders, remixContext, loadContext) {
  return isbot(request.headers.get("user-agent")) ? handleBotRequest(
    request,
    responseStatusCode,
    responseHeaders,
    remixContext
  ) : handleBrowserRequest(
    request,
    responseStatusCode,
    responseHeaders,
    remixContext
  );
}
function handleBotRequest(request, responseStatusCode, responseHeaders, remixContext) {
  return new Promise((resolve, reject) => {
    let shellRendered = !1, { pipe: pipe2, abort } = (0, import_server.renderToPipeableStream)(
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        import_react.RemixServer,
        {
          context: remixContext,
          url: request.url,
          abortDelay: ABORT_DELAY
        }
      ),
      {
        onAllReady() {
          shellRendered = !0;
          let body = new import_stream.PassThrough();
          responseHeaders.set("Content-Type", "text/html"), resolve(
            new import_node.Response(body, {
              headers: responseHeaders,
              status: responseStatusCode
            })
          ), pipe2(body);
        },
        onShellError(error2) {
          reject(error2);
        },
        onError(error2) {
          responseStatusCode = 500, shellRendered && console.error(error2);
        }
      }
    );
    setTimeout(abort, ABORT_DELAY);
  });
}
function handleBrowserRequest(request, responseStatusCode, responseHeaders, remixContext) {
  return console.log("hello worls"), new Promise((resolve, reject) => {
    let shellRendered = !1, { pipe: pipe2, abort } = (0, import_server.renderToPipeableStream)(
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        import_react.RemixServer,
        {
          context: remixContext,
          url: request.url,
          abortDelay: ABORT_DELAY
        }
      ),
      {
        onShellReady() {
          shellRendered = !0;
          let body = new import_stream.PassThrough();
          responseHeaders.set("Content-Type", "text/html"), resolve(
            new import_node.Response(body, {
              headers: responseHeaders,
              status: responseStatusCode
            })
          ), pipe2(body);
        },
        onShellError(error2) {
          reject(error2);
        },
        onError(error2) {
          responseStatusCode = 500, shellRendered && console.error(error2);
        }
      }
    );
    setTimeout(abort, ABORT_DELAY);
  });
}

// app/root.jsx
var root_exports = {};
__export(root_exports, {
  default: () => App,
  links: () => links
});
var import_react3 = __toESM(require_dist3());

// ../../../node_modules/@react-aria/ssr/dist/import.mjs
var import_react2 = __toESM(require_react(), 1), $704cf1d3b684cc5c$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: !1
}, $704cf1d3b684cc5c$var$SSRContext = /* @__PURE__ */ import_react2.default.createContext($704cf1d3b684cc5c$var$defaultContext);
function $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {
  let cur = (0, import_react2.useContext)($704cf1d3b684cc5c$var$SSRContext), counter = $704cf1d3b684cc5c$var$useCounter(cur === $704cf1d3b684cc5c$var$defaultContext), [isSSR, setIsSSR] = (0, import_react2.useState)(!0), value = (0, import_react2.useMemo)(() => ({
    // If this is the first SSRProvider, start with an empty string prefix, otherwise
    // append and increment the counter.
    prefix: cur === $704cf1d3b684cc5c$var$defaultContext ? "" : `${cur.prefix}-${counter}`,
    current: 0,
    isSSR
  }), [
    cur,
    counter,
    isSSR
  ]);
  return typeof window < "u" && (0, import_react2.useLayoutEffect)(() => {
    setIsSSR(!1);
  }, []), /* @__PURE__ */ import_react2.default.createElement($704cf1d3b684cc5c$var$SSRContext.Provider, {
    value
  }, props.children);
}
var $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window < "u" && window.document && window.document.createElement), $704cf1d3b684cc5c$var$componentIds = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter(isDisabled = !1) {
  let ctx = (0, import_react2.useContext)($704cf1d3b684cc5c$var$SSRContext), ref = (0, import_react2.useRef)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = import_react2.default.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 || (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);
      prevComponentValue == null ? $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {
        id: ctx.current,
        state: currentOwner.memoizedState
      }) : currentOwner.memoizedState !== prevComponentValue.state && (ctx.current = prevComponentValue.id, $704cf1d3b684cc5c$var$componentIds.delete(currentOwner));
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}

// ../../index.css
var src_default = "/build/_assets/index-UCTGYHCW.css";

// app/styles/index.css
var styles_default = "/build/_assets/index-LZMOUJHX.css";

// app/root.jsx
var import_react_google_recaptcha_v3 = __toESM(require_react_google_recaptcha_v3_cjs()), import_jsx_runtime2 = __toESM(require_jsx_runtime()), links = () => [
  { rel: "stylesheet", href: src_default },
  { rel: "stylesheet", href: styles_default }
];
function App() {
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("html", { lang: "en", children: [
    /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("head", { children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("meta", { charSet: "utf-8" }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "meta",
        {
          name: "viewport",
          content: "width=device-width,initial-scale=1"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("title", { children: "Remix: So great, it's funny!" }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react3.Links, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("body", { children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        import_react_google_recaptcha_v3.GoogleReCaptchaProvider,
        {
          reCaptchaKey: "6LdE1domAAAAAFnI8BHwyNqkI6yKPXB1by3PLcai",
          scriptProps: {
            async: !1,
            // optional, default to false,
            defer: !1,
            // optional, default to false
            appendTo: "head",
            // optional, default to "head", can be "head" or "body",
            nonce: void 0
            // optional, default undefined
          },
          container: {
            // optional to render inside custom element
            element: "captcha",
            parameters: {
              badge: "[inline|bottomright|bottomleft]",
              // optional, default undefined
              theme: "dark"
              // optional, default undefined
            }
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)($704cf1d3b684cc5c$export$9f8ac96af4b1b2ae, { children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react3.Outlet, {}) })
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react3.Scripts, {})
    ] })
  ] });
}

// app/routes/console.settings.billing.jsx
var console_settings_billing_exports = {};
__export(console_settings_billing_exports, {
  default: () => ConsoleSettingsBilling
});

// ../../components/atoms/button.jsx
var import_react26 = __toESM(require_react(), 1), import_prop_types = __toESM(require_prop_types(), 1), import_classnames = __toESM(require_classnames(), 1), import_react27 = __toESM(require_dist3(), 1);

// ../../../node_modules/framer-motion/dist/es/motion/index.mjs
var React = __toESM(require_react(), 1), import_react14 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react4 = __toESM(require_react(), 1), MotionConfigContext = (0, import_react4.createContext)({
  transformPagePoint: (p) => p,
  isStatic: !1,
  reducedMotion: "never"
});

// ../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react5 = __toESM(require_react(), 1), MotionContext = (0, import_react5.createContext)({});

// ../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react9 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react6 = __toESM(require_react(), 1), PresenceContext = (0, import_react6.createContext)(null);

// ../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react7 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser = typeof document < "u";

// ../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect = isBrowser ? import_react7.useLayoutEffect : import_react7.useEffect;

// ../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react8 = __toESM(require_react(), 1), LazyContext = (0, import_react8.createContext)({ strict: !1 });

// ../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component, visualState, props, createVisualElement) {
  let { visualElement: parent } = (0, import_react9.useContext)(MotionContext), lazyContext = (0, import_react9.useContext)(LazyContext), presenceContext = (0, import_react9.useContext)(PresenceContext), reducedMotionConfig = (0, import_react9.useContext)(MotionConfigContext).reducedMotion, visualElementRef = (0, import_react9.useRef)();
  createVisualElement = createVisualElement || lazyContext.renderer, !visualElementRef.current && createVisualElement && (visualElementRef.current = createVisualElement(Component, {
    visualState,
    parent,
    props,
    presenceContext,
    blockInitialAnimation: presenceContext ? presenceContext.initial === !1 : !1,
    reducedMotionConfig
  }));
  let visualElement = visualElementRef.current;
  return (0, import_react9.useInsertionEffect)(() => {
    visualElement && visualElement.update(props, presenceContext);
  }), useIsomorphicLayoutEffect(() => {
    visualElement && visualElement.render();
  }), (0, import_react9.useEffect)(() => {
    visualElement && visualElement.updateFeatures();
  }), (window.HandoffAppearAnimations ? useIsomorphicLayoutEffect : import_react9.useEffect)(() => {
    visualElement && visualElement.animationState && visualElement.animationState.animateChanges();
  }), visualElement;
}

// ../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react10 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return typeof ref == "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// ../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement, externalRef) {
  return (0, import_react10.useCallback)(
    (instance) => {
      instance && visualState.mount && visualState.mount(instance), visualElement && (instance ? visualElement.mount(instance) : visualElement.unmount()), externalRef && (typeof externalRef == "function" ? externalRef(instance) : isRefObject(externalRef) && (externalRef.current = instance));
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]
  );
}

// ../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react11 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs
function isVariantLabel(v) {
  return typeof v == "string" || Array.isArray(v);
}

// ../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v) {
  return typeof v == "object" && typeof v.start == "function";
}

// ../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs
var variantPriorityOrder = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
], variantProps = ["initial", ...variantPriorityOrder];

// ../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs
function isControllingVariants(props) {
  return isAnimationControls(props.animate) || variantProps.some((name) => isVariantLabel(props[name]));
}
function isVariantNode(props) {
  return Boolean(isControllingVariants(props) || props.variants);
}

// ../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (isControllingVariants(props)) {
    let { initial, animate } = props;
    return {
      initial: initial === !1 || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate) ? animate : void 0
    };
  }
  return props.inherit !== !1 ? context : {};
}

// ../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  let { initial, animate } = getCurrentTreeVariants(props, (0, import_react11.useContext)(MotionContext));
  return (0, import_react11.useMemo)(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}

// ../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var featureProps = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
}, featureDefinitions = {};
for (let key in featureProps)
  featureDefinitions[key] = {
    isEnabled: (props) => featureProps[key].some((name) => !!props[name])
  };

// ../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs
function loadFeatures(features) {
  for (let key in features)
    featureDefinitions[key] = {
      ...featureDefinitions[key],
      ...features[key]
    };
}

// ../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react12 = __toESM(require_react(), 1), LayoutGroupContext = (0, import_react12.createContext)({});

// ../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react13 = __toESM(require_react(), 1), SwitchLayoutGroupContext = (0, import_react13.createContext)({});

// ../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs
var motionComponentSymbol = Symbol.for("motionComponentSymbol");

// ../../../node_modules/framer-motion/dist/es/motion/index.mjs
function createMotionComponent({ preloadedFeatures: preloadedFeatures2, createVisualElement, useRender, useVisualState, Component }) {
  preloadedFeatures2 && loadFeatures(preloadedFeatures2);
  function MotionComponent(props, externalRef) {
    let MeasureLayout2, configAndProps = {
      ...(0, import_react14.useContext)(MotionConfigContext),
      ...props,
      layoutId: useLayoutId(props)
    }, { isStatic } = configAndProps, context = useCreateMotionContext(props), visualState = useVisualState(props, isStatic);
    if (!isStatic && isBrowser) {
      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);
      let initialLayoutGroupConfig = (0, import_react14.useContext)(SwitchLayoutGroupContext), isStrict = (0, import_react14.useContext)(LazyContext).strict;
      context.visualElement && (MeasureLayout2 = context.visualElement.loadFeatures(
        // Note: Pass the full new combined props to correctly re-render dynamic feature components.
        configAndProps,
        isStrict,
        preloadedFeatures2,
        initialLayoutGroupConfig
      ));
    }
    return React.createElement(
      MotionContext.Provider,
      { value: context },
      MeasureLayout2 && context.visualElement ? React.createElement(MeasureLayout2, { visualElement: context.visualElement, ...configAndProps }) : null,
      useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)
    );
  }
  let ForwardRefComponent = (0, import_react14.forwardRef)(MotionComponent);
  return ForwardRefComponent[motionComponentSymbol] = Component, ForwardRefComponent;
}
function useLayoutId({ layoutId }) {
  let layoutGroupId = (0, import_react14.useContext)(LayoutGroupContext).id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}

// ../../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs
function createMotionProxy(createConfig) {
  function custom(Component, customMotionComponentConfig = {}) {
    return createMotionComponent(createConfig(Component, customMotionComponentConfig));
  }
  if (typeof Proxy > "u")
    return custom;
  let componentCache = /* @__PURE__ */ new Map();
  return new Proxy(custom, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (_target, key) => (componentCache.has(key) || componentCache.set(key, custom(key)), componentCache.get(key))
  });
}

// ../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component) {
  return (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component != "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component.includes("-") ? !1 : (
      /**
       * If it's in our list of lowercase SVG tags, it's an SVG component
       */
      !!(lowercaseSVGElements.indexOf(Component) > -1 || /**
       * If it contains a capital letter, it's an SVG component
       */
      /[A-Z]/.test(Component))
    )
  );
}

// ../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react17 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react15 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  Object.assign(scaleCorrectors, correctors);
}

// ../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs
var transformPropOrder = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
], transformProps = new Set(transformPropOrder);

// ../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, { layout: layout2, layoutId }) {
  return transformProps.has(key) || key.startsWith("origin") || (layout2 || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// ../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = (value) => Boolean(value && value.getVelocity);

// ../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
}, numTransforms = transformPropOrder.length;
function buildTransform(transform, { enableHardwareAcceleration = !0, allowTransformNone = !0 }, transformIsDefault, transformTemplate) {
  let transformString = "";
  for (let i13 = 0; i13 < numTransforms; i13++) {
    let key = transformPropOrder[i13];
    if (transform[key] !== void 0) {
      let transformName = translateAlias[key] || key;
      transformString += `${transformName}(${transform[key]}) `;
    }
  }
  return enableHardwareAcceleration && !transform.z && (transformString += "translateZ(0)"), transformString = transformString.trim(), transformTemplate ? transformString = transformTemplate(transform, transformIsDefault ? "" : transformString) : allowTransformNone && transformIsDefault && (transformString = "none"), transformString;
}

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
var checkStringStartsWith = (token) => (key) => typeof key == "string" && key.startsWith(token), isCSSVariableName = checkStringStartsWith("--"), isCSSVariableToken = checkStringStartsWith("var(--"), cssVariableRegex = /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g;

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType = (value, type2) => type2 && typeof value == "number" ? type2.transform(value) : value;

// ../../../node_modules/framer-motion/dist/es/utils/clamp.mjs
var clamp = (min4, max4, v) => Math.min(Math.max(v, min4), max4);

// ../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs
var number = {
  test: (v) => typeof v == "number",
  parse: parseFloat,
  transform: (v) => v
}, alpha = {
  ...number,
  transform: (v) => clamp(0, 1, v)
}, scale = {
  ...number,
  default: 1
};

// ../../../node_modules/framer-motion/dist/es/value/types/utils.mjs
var sanitize = (v) => Math.round(v * 1e5) / 1e5, floatRegex = /(-)?([\d]*\.?[\d])+/g, colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi, singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
function isString(v) {
  return typeof v == "string";
}

// ../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v) => isString(v) && v.endsWith(unit) && v.split(" ").length === 1,
  parse: parseFloat,
  transform: (v) => `${v}${unit}`
}), degrees = createUnitType("deg"), percent = createUnitType("%"), px = createUnitType("px"), vh = createUnitType("vh"), vw = createUnitType("vw"), progressPercentage = {
  ...percent,
  parse: (v) => percent.parse(v) / 100,
  transform: (v) => percent.transform(v * 100)
};

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int = {
  ...number,
  transform: Math.round
};

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  size: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Transform props
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px,
  // Misc
  zIndex: int,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// ../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state, latestValues, options, transformTemplate) {
  let { style, vars, transform, transformOrigin } = state, hasTransform2 = !1, hasTransformOrigin = !1, transformIsNone = !0;
  for (let key in latestValues) {
    let value = latestValues[key];
    if (isCSSVariableName(key)) {
      vars[key] = value;
      continue;
    }
    let valueType = numberValueTypes[key], valueAsType = getValueAsType(value, valueType);
    if (transformProps.has(key)) {
      if (hasTransform2 = !0, transform[key] = valueAsType, !transformIsNone)
        continue;
      value !== (valueType.default || 0) && (transformIsNone = !1);
    } else
      key.startsWith("origin") ? (hasTransformOrigin = !0, transformOrigin[key] = valueAsType) : style[key] = valueAsType;
  }
  if (latestValues.transform || (hasTransform2 || transformTemplate ? style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate) : style.transform && (style.transform = "none")), hasTransformOrigin) {
    let { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
    style.transformOrigin = `${originX} ${originY} ${originZ}`;
  }
}

// ../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
});

// ../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (let key in source)
    !isMotionValue(source[key]) && !isForcedMotionValue(key, props) && (target[key] = source[key]);
}
function useInitialMotionValues({ transformTemplate }, visualState, isStatic) {
  return (0, import_react15.useMemo)(() => {
    let state = createHtmlRenderState();
    return buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate), Object.assign({}, state.vars, state.style);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  let styleProp = props.style || {}, style = {};
  return copyRawValuesOnly(style, styleProp, props), Object.assign(style, useInitialMotionValues(props, visualState, isStatic)), props.transformValues ? props.transformValues(style) : style;
}
function useHTMLProps(props, visualState, isStatic) {
  let htmlProps = {}, style = useStyle(props, visualState, isStatic);
  return props.drag && props.dragListener !== !1 && (htmlProps.draggable = !1, style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none", style.touchAction = props.drag === !0 ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`), props.tabIndex === void 0 && (props.onTap || props.onTapStart || props.whileTap) && (htmlProps.tabIndex = 0), htmlProps.style = style, htmlProps;
}

// ../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "ignoreStrict",
  "viewport"
]);
function isValidMotionProp(key) {
  return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || validMotionProps.has(key);
}

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = (key) => !isValidMotionProp(key);
function loadExternalIsValidProp(isValidProp) {
  isValidProp && (shouldForward = (key) => key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key));
}
try {
  loadExternalIsValidProp(require_is_prop_valid_cjs().default);
} catch {
}
function filterProps(props, isDom, forwardMotionProps) {
  let filteredProps = {};
  for (let key in props)
    key === "values" && typeof props.values == "object" || (shouldForward(key) || forwardMotionProps === !0 && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props.draggable && key.startsWith("onDrag")) && (filteredProps[key] = props[key]);
  return filteredProps;
}

// ../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react16 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset2, size2) {
  return typeof origin == "string" ? origin : px.transform(offset2 + size2 * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  let pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width), pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return `${pxOriginX} ${pxOriginY}`;
}

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
}, camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length, spacing = 1, offset2 = 0, useDashCase = !0) {
  attrs.pathLength = 1;
  let keys = useDashCase ? dashKeys : camelKeys;
  attrs[keys.offset] = px.transform(-offset2);
  let pathLength = px.transform(length), pathSpacing = px.transform(spacing);
  attrs[keys.array] = `${pathLength} ${pathSpacing}`;
}

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state, {
  attrX,
  attrY,
  attrScale,
  originX,
  originY,
  pathLength,
  pathSpacing = 1,
  pathOffset = 0,
  // This is object creation, which we try to avoid per-frame.
  ...latest
}, options, isSVGTag2, transformTemplate) {
  if (buildHTMLStyles(state, latest, options, transformTemplate), isSVGTag2) {
    state.style.viewBox && (state.attrs.viewBox = state.style.viewBox);
    return;
  }
  state.attrs = state.style, state.style = {};
  let { attrs, style, dimensions } = state;
  attrs.transform && (dimensions && (style.transform = attrs.transform), delete attrs.transform), dimensions && (originX !== void 0 || originY !== void 0 || style.transform) && (style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5)), attrX !== void 0 && (attrs.x = attrX), attrY !== void 0 && (attrs.y = attrY), attrScale !== void 0 && (attrs.scale = attrScale), pathLength !== void 0 && buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, !1);
}

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = () => ({
  ...createHtmlRenderState(),
  attrs: {}
});

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs
var isSVGTag = (tag) => typeof tag == "string" && tag.toLowerCase() === "svg";

// ../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState, _isStatic, Component) {
  let visualProps = (0, import_react16.useMemo)(() => {
    let state = createSvgRenderState();
    return buildSVGAttrs(state, visualState, { enableHardwareAcceleration: !1 }, isSVGTag(Component), props.transformTemplate), {
      ...state.attrs,
      style: { ...state.style }
    };
  }, [visualState]);
  if (props.style) {
    let rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props), visualProps.style = { ...rawStyles, ...visualProps.style };
  }
  return visualProps;
}

// ../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps = !1) {
  return (Component, props, ref, { latestValues }, isStatic) => {
    let visualProps = (isSVGComponent(Component) ? useSVGProps : useHTMLProps)(props, latestValues, isStatic, Component), elementProps = {
      ...filterProps(props, typeof Component == "string", forwardMotionProps),
      ...visualProps,
      ref
    }, { children } = props, renderedChildren = (0, import_react17.useMemo)(() => isMotionValue(children) ? children.get() : children, [children]);
    return (0, import_react17.createElement)(Component, {
      ...elementProps,
      children: renderedChildren
    });
  };
}

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();

// ../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, { style, vars }, styleProp, projection) {
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (let key in vars)
    element.style.setProperty(key, vars[key]);
}

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (let key in renderState.attrs)
    element.setAttribute(camelCaseAttributes.has(key) ? key : camelToDash(key), renderState.attrs[key]);
}

// ../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props, prevProps) {
  let { style } = props, newValues = {};
  for (let key in style)
    (isMotionValue(style[key]) || prevProps.style && isMotionValue(prevProps.style[key]) || isForcedMotionValue(key, props)) && (newValues[key] = style[key]);
  return newValues;
}

// ../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props, prevProps) {
  let newValues = scrapeMotionValuesFromProps(props, prevProps);
  for (let key in props)
    if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {
      let targetKey = transformPropOrder.indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
      newValues[targetKey] = props[key];
    }
  return newValues;
}

// ../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react19 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs
function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {
  return typeof definition == "function" && (definition = definition(custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)), typeof definition == "string" && (definition = props.variants && props.variants[definition]), typeof definition == "function" && (definition = definition(custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)), definition;
}

// ../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react18 = __toESM(require_react(), 1);
function useConstant(init) {
  let ref = (0, import_react18.useRef)(null);
  return ref.current === null && (ref.current = init()), ref.current;
}

// ../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = (v) => Array.isArray(v);

// ../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue = (v) => Boolean(v && typeof v == "object" && v.mix && v.toValue), resolveFinalValueInKeyframes = (v) => isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;

// ../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  let unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}

// ../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState({ scrapeMotionValuesFromProps: scrapeMotionValuesFromProps3, createRenderState, onMount }, props, context, presenceContext) {
  let state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  return onMount && (state.mount = (instance) => onMount(props, instance, state)), state;
}
var makeUseVisualState = (config) => (props, isStatic) => {
  let context = (0, import_react19.useContext)(MotionContext), presenceContext = (0, import_react19.useContext)(PresenceContext), make = () => makeState(config, props, context, presenceContext);
  return isStatic ? make() : useConstant(make);
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  let values = {}, motionValues = scrapeMotionValues(props, {});
  for (let key in motionValues)
    values[key] = resolveMotionValue(motionValues[key]);
  let { initial, animate } = props, isControllingVariants$1 = isControllingVariants(props), isVariantNode$1 = isVariantNode(props);
  context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== !1 && (initial === void 0 && (initial = context.initial), animate === void 0 && (animate = context.animate));
  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === !1 : !1;
  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === !1;
  let variantToSet = isInitialAnimationBlocked ? animate : initial;
  return variantToSet && typeof variantToSet != "boolean" && !isAnimationControls(variantToSet) && (Array.isArray(variantToSet) ? variantToSet : [variantToSet]).forEach((definition) => {
    let resolved = resolveVariantFromProps(props, definition);
    if (!resolved)
      return;
    let { transitionEnd, transition, ...target } = resolved;
    for (let key in target) {
      let valueTarget = target[key];
      if (Array.isArray(valueTarget)) {
        let index2 = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
        valueTarget = valueTarget[index2];
      }
      valueTarget !== null && (values[key] = valueTarget);
    }
    for (let key in transitionEnd)
      values[key] = transitionEnd[key];
  }), values;
}

// ../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState,
    onMount: (props, instance, { renderState, latestValues }) => {
      try {
        renderState.dimensions = typeof instance.getBBox == "function" ? instance.getBBox() : instance.getBoundingClientRect();
      } catch {
        renderState.dimensions = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
      }
      buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: !1 }, isSVGTag(instance.tagName), props.transformTemplate), renderSVG(instance, renderState);
    }
  })
};

// ../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs
function createDomMotionConfig(Component, { forwardMotionProps = !1 }, preloadedFeatures2, createVisualElement) {
  return {
    ...isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig,
    preloadedFeatures: preloadedFeatures2,
    useRender: createUseRender(forwardMotionProps),
    createVisualElement,
    Component
  };
}

// ../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs
function addDomEvent(target, eventName, handler, options = { passive: !0 }) {
  return target.addEventListener(eventName, handler, options), () => target.removeEventListener(eventName, handler);
}

// ../../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs
var isPrimaryPointer = (event) => event.pointerType === "mouse" ? typeof event.button != "number" || event.button <= 0 : event.isPrimary !== !1;

// ../../../node_modules/framer-motion/dist/es/events/event-info.mjs
function extractEventInfo(event, pointType = "page") {
  return {
    point: {
      x: event[pointType + "X"],
      y: event[pointType + "Y"]
    }
  };
}
var addPointerInfo = (handler) => (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));

// ../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, eventName, addPointerInfo(handler), options);
}

// ../../../node_modules/framer-motion/dist/es/utils/pipe.mjs
var combineFunctions = (a8, b) => (v) => b(a8(v)), pipe = (...transformers) => transformers.reduce(combineFunctions);

// ../../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs
function createLock(name) {
  let lock = null;
  return () => {
    let openLock = () => {
      lock = null;
    };
    return lock === null ? (lock = name, openLock) : !1;
  };
}
var globalHorizontalLock = createLock("dragHorizontal"), globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  let lock = !1;
  if (drag2 === "y")
    lock = globalVerticalLock();
  else if (drag2 === "x")
    lock = globalHorizontalLock();
  else {
    let openHorizontal = globalHorizontalLock(), openVertical = globalVerticalLock();
    openHorizontal && openVertical ? lock = () => {
      openHorizontal(), openVertical();
    } : (openHorizontal && openHorizontal(), openVertical && openVertical());
  }
  return lock;
}
function isDragActive() {
  let openGestureLock = getGlobalLock(!0);
  return openGestureLock ? (openGestureLock(), !1) : !0;
}

// ../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs
var Feature = class {
  constructor(node) {
    this.isMounted = !1, this.node = node;
  }
  update() {
  }
};

// ../../../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs
function createRenderStep(runNextFrame2) {
  let toRun = [], toRunNextFrame = [], numToRun = 0, isProcessing = !1, flushNextFrame = !1, toKeepAlive = /* @__PURE__ */ new WeakSet(), step2 = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (callback, keepAlive = !1, immediate = !1) => {
      let addToCurrentFrame = immediate && isProcessing, buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      return keepAlive && toKeepAlive.add(callback), buffer.indexOf(callback) === -1 && (buffer.push(callback), addToCurrentFrame && isProcessing && (numToRun = toRun.length)), callback;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (callback) => {
      let index2 = toRunNextFrame.indexOf(callback);
      index2 !== -1 && toRunNextFrame.splice(index2, 1), toKeepAlive.delete(callback);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (frameData2) => {
      if (isProcessing) {
        flushNextFrame = !0;
        return;
      }
      if (isProcessing = !0, [toRun, toRunNextFrame] = [toRunNextFrame, toRun], toRunNextFrame.length = 0, numToRun = toRun.length, numToRun)
        for (let i13 = 0; i13 < numToRun; i13++) {
          let callback = toRun[i13];
          callback(frameData2), toKeepAlive.has(callback) && (step2.schedule(callback), runNextFrame2());
        }
      isProcessing = !1, flushNextFrame && (flushNextFrame = !1, step2.process(frameData2));
    }
  };
  return step2;
}

// ../../../node_modules/framer-motion/dist/es/frameloop/data.mjs
var frameData = {
  delta: 0,
  timestamp: 0,
  isProcessing: !1
};

// ../../../node_modules/framer-motion/dist/es/frameloop/index.mjs
var maxElapsed = 40, useDefaultElapsed = !0, runNextFrame = !1, stepsOrder = [
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
], steps = stepsOrder.reduce((acc, key) => (acc[key] = createRenderStep(() => runNextFrame = !0), acc), {}), processStep = (stepId) => steps[stepId].process(frameData), processFrame = (timestamp) => {
  runNextFrame = !1, frameData.delta = useDefaultElapsed ? 1e3 / 60 : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1), frameData.timestamp = timestamp, frameData.isProcessing = !0, stepsOrder.forEach(processStep), frameData.isProcessing = !1, runNextFrame && (useDefaultElapsed = !1, requestAnimationFrame(processFrame));
}, startLoop = () => {
  runNextFrame = !0, useDefaultElapsed = !0, frameData.isProcessing || requestAnimationFrame(processFrame);
}, frame = stepsOrder.reduce((acc, key) => {
  let step2 = steps[key];
  return acc[key] = (process2, keepAlive = !1, immediate = !1) => (runNextFrame || startLoop(), step2.schedule(process2, keepAlive, immediate)), acc;
}, {});
function cancelFrame(process2) {
  stepsOrder.forEach((key) => steps[key].cancel(process2));
}

// ../../../node_modules/framer-motion/dist/es/gestures/hover.mjs
function addHoverEvent(node, isActive) {
  let eventName = "pointer" + (isActive ? "enter" : "leave"), callbackName = "onHover" + (isActive ? "Start" : "End"), handleEvent = (event, info) => {
    if (event.type === "touch" || isDragActive())
      return;
    let props = node.getProps();
    node.animationState && props.whileHover && node.animationState.setActive("whileHover", isActive), props[callbackName] && frame.update(() => props[callbackName](event, info));
  };
  return addPointerEvent(node.current, eventName, handleEvent, {
    passive: !node.getProps()[callbackName]
  });
}
var HoverGesture = class extends Feature {
  mount() {
    this.unmount = pipe(addHoverEvent(this.node, !0), addHoverEvent(this.node, !1));
  }
  unmount() {
  }
};

// ../../../node_modules/framer-motion/dist/es/gestures/focus.mjs
var FocusGesture = class extends Feature {
  constructor() {
    super(...arguments), this.isActive = !1;
  }
  onFocus() {
    let isFocusVisible = !1;
    try {
      isFocusVisible = this.node.current.matches(":focus-visible");
    } catch {
      isFocusVisible = !0;
    }
    !isFocusVisible || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !0), this.isActive = !0);
  }
  onBlur() {
    !this.isActive || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !1), this.isActive = !1);
  }
  mount() {
    this.unmount = pipe(addDomEvent(this.node.current, "focus", () => this.onFocus()), addDomEvent(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
};

// ../../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = (parent, child) => child ? parent === child ? !0 : isNodeOrChild(parent, child.parentElement) : !1;

// ../../../node_modules/framer-motion/dist/es/utils/noop.mjs
var noop = (any) => any;

// ../../../node_modules/framer-motion/dist/es/gestures/press.mjs
function fireSyntheticPointerEvent(name, handler) {
  if (!handler)
    return;
  let syntheticPointerEvent = new PointerEvent("pointer" + name);
  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));
}
var PressGesture = class extends Feature {
  constructor() {
    super(...arguments), this.removeStartListeners = noop, this.removeEndListeners = noop, this.removeAccessibleListeners = noop, this.startPointerPress = (startEvent, startInfo) => {
      if (this.removeEndListeners(), this.isPressing)
        return;
      let props = this.node.getProps(), removePointerUpListener = addPointerEvent(window, "pointerup", (endEvent, endInfo) => {
        if (!this.checkPressEnd())
          return;
        let { onTap, onTapCancel } = this.node.getProps();
        frame.update(() => {
          isNodeOrChild(this.node.current, endEvent.target) ? onTap && onTap(endEvent, endInfo) : onTapCancel && onTapCancel(endEvent, endInfo);
        });
      }, { passive: !(props.onTap || props.onPointerUp) }), removePointerCancelListener = addPointerEvent(window, "pointercancel", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props.onPointerCancel) });
      this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener), this.startPress(startEvent, startInfo);
    }, this.startAccessiblePress = () => {
      let handleKeydown = (keydownEvent) => {
        if (keydownEvent.key !== "Enter" || this.isPressing)
          return;
        let handleKeyup = (keyupEvent) => {
          keyupEvent.key !== "Enter" || !this.checkPressEnd() || fireSyntheticPointerEvent("up", (event, info) => {
            let { onTap } = this.node.getProps();
            onTap && frame.update(() => onTap(event, info));
          });
        };
        this.removeEndListeners(), this.removeEndListeners = addDomEvent(this.node.current, "keyup", handleKeyup), fireSyntheticPointerEvent("down", (event, info) => {
          this.startPress(event, info);
        });
      }, removeKeydownListener = addDomEvent(this.node.current, "keydown", handleKeydown), handleBlur = () => {
        this.isPressing && fireSyntheticPointerEvent("cancel", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));
      }, removeBlurListener = addDomEvent(this.node.current, "blur", handleBlur);
      this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);
    };
  }
  startPress(event, info) {
    this.isPressing = !0;
    let { onTapStart, whileTap } = this.node.getProps();
    whileTap && this.node.animationState && this.node.animationState.setActive("whileTap", !0), onTapStart && frame.update(() => onTapStart(event, info));
  }
  checkPressEnd() {
    return this.removeEndListeners(), this.isPressing = !1, this.node.getProps().whileTap && this.node.animationState && this.node.animationState.setActive("whileTap", !1), !isDragActive();
  }
  cancelPress(event, info) {
    if (!this.checkPressEnd())
      return;
    let { onTapCancel } = this.node.getProps();
    onTapCancel && frame.update(() => onTapCancel(event, info));
  }
  mount() {
    let props = this.node.getProps(), removePointerListener = addPointerEvent(this.node.current, "pointerdown", this.startPointerPress, { passive: !(props.onTapStart || props.onPointerStart) }), removeFocusListener = addDomEvent(this.node.current, "focus", this.startAccessiblePress);
    this.removeStartListeners = pipe(removePointerListener, removeFocusListener);
  }
  unmount() {
    this.removeStartListeners(), this.removeEndListeners(), this.removeAccessibleListeners();
  }
};

// ../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap(), observers = /* @__PURE__ */ new WeakMap(), fireObserverCallback = (entry2) => {
  let callback = observerCallbacks.get(entry2.target);
  callback && callback(entry2);
}, fireAllObserverCallbacks = (entries) => {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver({ root, ...options }) {
  let lookupRoot = root || document;
  observers.has(lookupRoot) || observers.set(lookupRoot, {});
  let rootObservers = observers.get(lookupRoot), key = JSON.stringify(options);
  return rootObservers[key] || (rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options })), rootObservers[key];
}
function observeIntersection(element, options, callback) {
  let rootInteresectionObserver = initIntersectionObserver(options);
  return observerCallbacks.set(element, callback), rootInteresectionObserver.observe(element), () => {
    observerCallbacks.delete(element), rootInteresectionObserver.unobserve(element);
  };
}

// ../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs
var thresholdNames = {
  some: 0,
  all: 1
}, InViewFeature = class extends Feature {
  constructor() {
    super(...arguments), this.hasEnteredView = !1, this.isInView = !1;
  }
  startObserver() {
    this.unmount();
    let { viewport = {} } = this.node.getProps(), { root, margin: rootMargin, amount = "some", once } = viewport, options = {
      root: root ? root.current : void 0,
      rootMargin,
      threshold: typeof amount == "number" ? amount : thresholdNames[amount]
    }, onIntersectionUpdate = (entry2) => {
      let { isIntersecting } = entry2;
      if (this.isInView === isIntersecting || (this.isInView = isIntersecting, once && !isIntersecting && this.hasEnteredView))
        return;
      isIntersecting && (this.hasEnteredView = !0), this.node.animationState && this.node.animationState.setActive("whileInView", isIntersecting);
      let { onViewportEnter, onViewportLeave } = this.node.getProps(), callback = isIntersecting ? onViewportEnter : onViewportLeave;
      callback && callback(entry2);
    };
    return observeIntersection(this.node.current, options, onIntersectionUpdate);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u")
      return;
    let { props, prevProps } = this.node;
    ["amount", "margin", "root"].some(hasViewportOptionChanged(props, prevProps)) && this.startObserver();
  }
  unmount() {
  }
};
function hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
  return (name) => viewport[name] !== prevViewport[name];
}

// ../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: {
    Feature: InViewFeature
  },
  tap: {
    Feature: PressGesture
  },
  focus: {
    Feature: FocusGesture
  },
  hover: {
    Feature: HoverGesture
  }
};

// ../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return !1;
  let prevLength = prev.length;
  if (prevLength !== next.length)
    return !1;
  for (let i13 = 0; i13 < prevLength; i13++)
    if (prev[i13] !== next[i13])
      return !1;
  return !0;
}

// ../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs
function getCurrent(visualElement) {
  let current = {};
  return visualElement.values.forEach((value, key) => current[key] = value.get()), current;
}
function getVelocity(visualElement) {
  let velocity = {};
  return visualElement.values.forEach((value, key) => velocity[key] = value.getVelocity()), velocity;
}
function resolveVariant(visualElement, definition, custom) {
  let props = visualElement.getProps();
  return resolveVariantFromProps(props, definition, custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));
}

// ../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs
var optimizedAppearDataId = "framerAppearId", optimizedAppearDataAttribute = "data-" + camelToDash(optimizedAppearDataId);

// ../../../node_modules/framer-motion/dist/es/utils/errors.mjs
var warning = noop, invariant = noop;

// ../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs
var secondsToMilliseconds = (seconds) => seconds * 1e3, millisecondsToSeconds = (milliseconds) => milliseconds / 1e3;

// ../../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState = {
  current: !1
};

// ../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs
var isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] == "number";

// ../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs
function isWaapiSupportedEasing(easing) {
  return Boolean(!easing || typeof easing == "string" && supportedWaapiEasing[easing] || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));
}
var cubicBezierAsString = ([a8, b, c, d]) => `cubic-bezier(${a8}, ${b}, ${c}, ${d})`, supportedWaapiEasing = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),
  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),
  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])
};
function mapEasingToNativeEasing(easing) {
  if (easing)
    return isBezierDefinition(easing) ? cubicBezierAsString(easing) : Array.isArray(easing) ? easing.map(mapEasingToNativeEasing) : supportedWaapiEasing[easing];
}

// ../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs
function animateStyle(element, valueName, keyframes2, { delay: delay2 = 0, duration, repeat = 0, repeatType = "loop", ease: ease2, times } = {}) {
  let keyframeOptions = { [valueName]: keyframes2 };
  times && (keyframeOptions.offset = times);
  let easing = mapEasingToNativeEasing(ease2);
  return Array.isArray(easing) && (keyframeOptions.easing = easing), element.animate(keyframeOptions, {
    delay: delay2,
    duration,
    easing: Array.isArray(easing) ? "linear" : easing,
    fill: "both",
    iterations: repeat + 1,
    direction: repeatType === "reverse" ? "alternate" : "normal"
  });
}

// ../../../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs
var featureTests = {
  waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate")
}, results = {}, supports = {};
for (let key in featureTests)
  supports[key] = () => (results[key] === void 0 && (results[key] = featureTests[key]()), results[key]);

// ../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs
function getFinalKeyframe(keyframes2, { repeat, repeatType = "loop" }) {
  let index2 = repeat && repeatType !== "loop" && repeat % 2 === 1 ? 0 : keyframes2.length - 1;
  return keyframes2[index2];
}

// ../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs
var calcBezier = (t17, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t17 + (3 * a22 - 6 * a1)) * t17 + 3 * a1) * t17, subdivisionPrecision = 1e-7, subdivisionMaxIterations = 12;
function binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {
  let currentX, currentT, i13 = 0;
  do
    currentT = lowerBound + (upperBound - lowerBound) / 2, currentX = calcBezier(currentT, mX1, mX2) - x, currentX > 0 ? upperBound = currentT : lowerBound = currentT;
  while (Math.abs(currentX) > subdivisionPrecision && ++i13 < subdivisionMaxIterations);
  return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noop;
  let getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
  return (t17) => t17 === 0 || t17 === 1 ? t17 : calcBezier(getTForX(t17), mY1, mY2);
}

// ../../../node_modules/framer-motion/dist/es/easing/ease.mjs
var easeIn = cubicBezier(0.42, 0, 1, 1), easeOut = cubicBezier(0, 0, 0.58, 1), easeInOut = cubicBezier(0.42, 0, 0.58, 1);

// ../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs
var isEasingArray = (ease2) => Array.isArray(ease2) && typeof ease2[0] != "number";

// ../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs
var mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;

// ../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs
var reverseEasing = (easing) => (p) => 1 - easing(1 - p);

// ../../../node_modules/framer-motion/dist/es/easing/circ.mjs
var circIn = (p) => 1 - Math.sin(Math.acos(p)), circOut = reverseEasing(circIn), circInOut = mirrorEasing(circOut);

// ../../../node_modules/framer-motion/dist/es/easing/back.mjs
var backOut = cubicBezier(0.33, 1.53, 0.69, 0.99), backIn = reverseEasing(backOut), backInOut = mirrorEasing(backIn);

// ../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs
var anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));

// ../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs
var easingLookup = {
  linear: noop,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate
}, easingDefinitionToFunction = (definition) => {
  if (Array.isArray(definition)) {
    invariant(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
    let [x1, y1, x2, y2] = definition;
    return cubicBezier(x1, y1, x2, y2);
  } else if (typeof definition == "string")
    return invariant(easingLookup[definition] !== void 0, `Invalid easing type '${definition}'`), easingLookup[definition];
  return definition;
};

// ../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs
var isColorString = (type2, testProp) => (v) => Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type2) || testProp && Object.prototype.hasOwnProperty.call(v, testProp)), splitColor = (aName, bName, cName) => (v) => {
  if (!isString(v))
    return v;
  let [a8, b, c, alpha2] = v.match(floatRegex);
  return {
    [aName]: parseFloat(a8),
    [bName]: parseFloat(b),
    [cName]: parseFloat(c),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// ../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs
var clampRgbUnit = (v) => clamp(0, 255, v), rgbUnit = {
  ...number,
  transform: (v) => Math.round(clampRgbUnit(v))
}, rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// ../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs
function parseHex(v) {
  let r24 = "", g = "", b = "", a8 = "";
  return v.length > 5 ? (r24 = v.substring(1, 3), g = v.substring(3, 5), b = v.substring(5, 7), a8 = v.substring(7, 9)) : (r24 = v.substring(1, 2), g = v.substring(2, 3), b = v.substring(3, 4), a8 = v.substring(4, 5), r24 += r24, g += g, b += b, a8 += a8), {
    red: parseInt(r24, 16),
    green: parseInt(g, 16),
    blue: parseInt(b, 16),
    alpha: a8 ? parseInt(a8, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// ../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// ../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs
var color = {
  test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),
  parse: (v) => rgba.test(v) ? rgba.parse(v) : hsla.test(v) ? hsla.parse(v) : hex.parse(v),
  transform: (v) => isString(v) ? v : v.hasOwnProperty("red") ? rgba.transform(v) : hsla.transform(v)
};

// ../../../node_modules/framer-motion/dist/es/utils/mix.mjs
var mix = (from, to, progress2) => -progress2 * from + progress2 * to + from;

// ../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p, q, t17) {
  return t17 < 0 && (t17 += 1), t17 > 1 && (t17 -= 1), t17 < 1 / 6 ? p + (q - p) * 6 * t17 : t17 < 1 / 2 ? q : t17 < 2 / 3 ? p + (q - p) * (2 / 3 - t17) * 6 : p;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360, saturation /= 100, lightness /= 100;
  let red = 0, green = 0, blue = 0;
  if (!saturation)
    red = green = blue = lightness;
  else {
    let q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation, p = 2 * lightness - q;
    red = hueToRgb(p, q, hue + 1 / 3), green = hueToRgb(p, q, hue), blue = hueToRgb(p, q, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// ../../../node_modules/framer-motion/dist/es/utils/mix-color.mjs
var mixLinearColor = (from, to, v) => {
  let fromExpo = from * from;
  return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));
}, colorTypes = [hex, rgba, hsla], getColorType = (v) => colorTypes.find((type2) => type2.test(v));
function asRGBA(color2) {
  let type2 = getColorType(color2);
  invariant(Boolean(type2), `'${color2}' is not an animatable color. Use the equivalent color code instead.`);
  let model = type2.parse(color2);
  return type2 === hsla && (model = hslaToRgba(model)), model;
}
var mixColor = (from, to) => {
  let fromRGBA = asRGBA(from), toRGBA = asRGBA(to), blended = { ...fromRGBA };
  return (v) => (blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v), blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v), blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v), blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v), rgba.transform(blended));
};

// ../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs
function test(v) {
  var _a, _b;
  return isNaN(v) && isString(v) && (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) + (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) > 0;
}
var cssVarTokeniser = {
  regex: cssVariableRegex,
  countKey: "Vars",
  token: "${v}",
  parse: noop
}, colorTokeniser = {
  regex: colorRegex,
  countKey: "Colors",
  token: "${c}",
  parse: color.parse
}, numberTokeniser = {
  regex: floatRegex,
  countKey: "Numbers",
  token: "${n}",
  parse: number.parse
};
function tokenise(info, { regex, countKey, token, parse }) {
  let matches = info.tokenised.match(regex);
  matches && (info["num" + countKey] = matches.length, info.tokenised = info.tokenised.replace(regex, token), info.values.push(...matches.map(parse)));
}
function analyseComplexValue(value) {
  let originalValue = value.toString(), info = {
    value: originalValue,
    tokenised: originalValue,
    values: [],
    numVars: 0,
    numColors: 0,
    numNumbers: 0
  };
  return info.value.includes("var(--") && tokenise(info, cssVarTokeniser), tokenise(info, colorTokeniser), tokenise(info, numberTokeniser), info;
}
function parseComplexValue(v) {
  return analyseComplexValue(v).values;
}
function createTransformer(source) {
  let { values, numColors, numVars, tokenised } = analyseComplexValue(source), numValues = values.length;
  return (v) => {
    let output = tokenised;
    for (let i13 = 0; i13 < numValues; i13++)
      i13 < numVars ? output = output.replace(cssVarTokeniser.token, v[i13]) : i13 < numVars + numColors ? output = output.replace(colorTokeniser.token, color.transform(v[i13])) : output = output.replace(numberTokeniser.token, sanitize(v[i13]));
    return output;
  };
}
var convertNumbersToZero = (v) => typeof v == "number" ? 0 : v;
function getAnimatableNone(v) {
  let parsed = parseComplexValue(v);
  return createTransformer(v)(parsed.map(convertNumbersToZero));
}
var complex = {
  test,
  parse: parseComplexValue,
  createTransformer,
  getAnimatableNone
};

// ../../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs
var mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;
function getMixer(origin, target) {
  return typeof origin == "number" ? (v) => mix(origin, target, v) : color.test(origin) ? mixColor(origin, target) : origin.startsWith("var(") ? mixImmediate(origin, target) : mixComplex(origin, target);
}
var mixArray = (from, to) => {
  let output = [...from], numValues = output.length, blendValue = from.map((fromThis, i13) => getMixer(fromThis, to[i13]));
  return (v) => {
    for (let i13 = 0; i13 < numValues; i13++)
      output[i13] = blendValue[i13](v);
    return output;
  };
}, mixObject = (origin, target) => {
  let output = { ...origin, ...target }, blendValue = {};
  for (let key in output)
    origin[key] !== void 0 && target[key] !== void 0 && (blendValue[key] = getMixer(origin[key], target[key]));
  return (v) => {
    for (let key in blendValue)
      output[key] = blendValue[key](v);
    return output;
  };
}, mixComplex = (origin, target) => {
  let template = complex.createTransformer(target), originStats = analyseComplexValue(origin), targetStats = analyseComplexValue(target);
  return originStats.numVars === targetStats.numVars && originStats.numColors === targetStats.numColors && originStats.numNumbers >= targetStats.numNumbers ? pipe(mixArray(originStats.values, targetStats.values), template) : (warning(!0, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), mixImmediate(origin, target));
};

// ../../../node_modules/framer-motion/dist/es/utils/progress.mjs
var progress = (from, to, value) => {
  let toFromDifference = to - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

// ../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs
var mixNumber = (from, to) => (p) => mix(from, to, p);
function detectMixerFactory(v) {
  return typeof v == "number" ? mixNumber : typeof v == "string" ? color.test(v) ? mixColor : mixComplex : Array.isArray(v) ? mixArray : typeof v == "object" ? mixObject : mixNumber;
}
function createMixers(output, ease2, customMixer) {
  let mixers = [], mixerFactory = customMixer || detectMixerFactory(output[0]), numMixers = output.length - 1;
  for (let i13 = 0; i13 < numMixers; i13++) {
    let mixer = mixerFactory(output[i13], output[i13 + 1]);
    if (ease2) {
      let easingFunction = Array.isArray(ease2) ? ease2[i13] || noop : ease2;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function interpolate(input, output, { clamp: isClamp = !0, ease: ease2, mixer } = {}) {
  let inputLength = input.length;
  if (invariant(inputLength === output.length, "Both input and output ranges must be the same length"), inputLength === 1)
    return () => output[0];
  input[0] > input[inputLength - 1] && (input = [...input].reverse(), output = [...output].reverse());
  let mixers = createMixers(output, ease2, mixer), numMixers = mixers.length, interpolator = (v) => {
    let i13 = 0;
    if (numMixers > 1)
      for (; i13 < input.length - 2 && !(v < input[i13 + 1]); i13++)
        ;
    let progressInRange = progress(input[i13], input[i13 + 1], v);
    return mixers[i13](progressInRange);
  };
  return isClamp ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v)) : interpolator;
}

// ../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs
function fillOffset(offset2, remaining) {
  let min4 = offset2[offset2.length - 1];
  for (let i13 = 1; i13 <= remaining; i13++) {
    let offsetProgress = progress(0, remaining, i13);
    offset2.push(mix(min4, 1, offsetProgress));
  }
}

// ../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs
function defaultOffset(arr) {
  let offset2 = [0];
  return fillOffset(offset2, arr.length - 1), offset2;
}

// ../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs
function convertOffsetToTimes(offset2, duration) {
  return offset2.map((o3) => o3 * duration);
}

// ../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function keyframes({ duration = 300, keyframes: keyframeValues, times, ease: ease2 = "easeInOut" }) {
  let easingFunctions = isEasingArray(ease2) ? ease2.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease2), state = {
    done: !1,
    value: keyframeValues[0]
  }, absoluteTimes = convertOffsetToTimes(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : defaultOffset(keyframeValues),
    duration
  ), mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {
    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)
  });
  return {
    calculatedDuration: duration,
    next: (t17) => (state.value = mapTimeToKeyframe(t17), state.done = t17 >= duration, state)
  };
}

// ../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// ../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs
var velocitySampleDuration = 5;
function calcGeneratorVelocity(resolveValue, t17, current) {
  let prevT = Math.max(t17 - velocitySampleDuration, 0);
  return velocityPerSecond(current - resolveValue(prevT), t17 - prevT);
}

// ../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs
var safeMin = 1e-3, minDuration = 0.01, maxDuration = 10, minDamping = 0.05, maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope, derivative;
  warning(duration <= secondsToMilliseconds(maxDuration), "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp(minDamping, maxDamping, dampingRatio), duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration)), dampingRatio < 1 ? (envelope = (undampedFreq2) => {
    let exponentialDecay = undampedFreq2 * dampingRatio, delta = exponentialDecay * duration, a8 = exponentialDecay - velocity, b = calcAngularFreq(undampedFreq2, dampingRatio), c = Math.exp(-delta);
    return safeMin - a8 / b * c;
  }, derivative = (undampedFreq2) => {
    let delta = undampedFreq2 * dampingRatio * duration, d = delta * velocity + velocity, e23 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration, f = Math.exp(-delta), g = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
    return (-envelope(undampedFreq2) + safeMin > 0 ? -1 : 1) * ((d - e23) * f) / g;
  }) : (envelope = (undampedFreq2) => {
    let a8 = Math.exp(-undampedFreq2 * duration), b = (undampedFreq2 - velocity) * duration + 1;
    return -safeMin + a8 * b;
  }, derivative = (undampedFreq2) => {
    let a8 = Math.exp(-undampedFreq2 * duration), b = (velocity - undampedFreq2) * (duration * duration);
    return a8 * b;
  });
  let initialGuess = 5 / duration, undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  if (duration = secondsToMilliseconds(duration), isNaN(undampedFreq))
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  {
    let stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i13 = 1; i13 < rootIterations; i13++)
    result = result - envelope(result) / derivative(result);
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// ../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs
var durationKeys = ["duration", "bounce"], physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
  return keys.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: !1,
    ...options
  };
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    let derived = findSpring(options);
    springOptions = {
      ...springOptions,
      ...derived,
      velocity: 0,
      mass: 1
    }, springOptions.isResolvedFromDuration = !0;
  }
  return springOptions;
}
function spring({ keyframes: keyframes2, restDelta, restSpeed, ...options }) {
  let origin = keyframes2[0], target = keyframes2[keyframes2.length - 1], state = { done: !1, value: origin }, { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options), initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0, dampingRatio = damping / (2 * Math.sqrt(stiffness * mass)), initialDelta = target - origin, undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass)), isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? 0.01 : 2), restDelta || (restDelta = isGranularScale ? 5e-3 : 0.5);
  let resolveSpring;
  if (dampingRatio < 1) {
    let angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
    resolveSpring = (t17) => {
      let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t17);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t17) + initialDelta * Math.cos(angularFreq * t17));
    };
  } else if (dampingRatio === 1)
    resolveSpring = (t17) => target - Math.exp(-undampedAngularFreq * t17) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t17);
  else {
    let dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
    resolveSpring = (t17) => {
      let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t17), freqForT = Math.min(dampedAngularFreq * t17, 300);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
    };
  }
  return {
    calculatedDuration: isResolvedFromDuration && duration || null,
    next: (t17) => {
      let current = resolveSpring(t17);
      if (isResolvedFromDuration)
        state.done = t17 >= duration;
      else {
        let currentVelocity = initialVelocity;
        t17 !== 0 && (dampingRatio < 1 ? currentVelocity = calcGeneratorVelocity(resolveSpring, t17, current) : currentVelocity = 0);
        let isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed, isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      }
      return state.value = state.done ? target : current, state;
    }
  };
}

// ../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs
function inertia({ keyframes: keyframes2, velocity = 0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min: min4, max: max4, restDelta = 0.5, restSpeed }) {
  let origin = keyframes2[0], state = {
    done: !1,
    value: origin
  }, isOutOfBounds = (v) => min4 !== void 0 && v < min4 || max4 !== void 0 && v > max4, nearestBoundary = (v) => min4 === void 0 ? max4 : max4 === void 0 || Math.abs(min4 - v) < Math.abs(max4 - v) ? min4 : max4, amplitude = power * velocity, ideal = origin + amplitude, target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  target !== ideal && (amplitude = target - origin);
  let calcDelta = (t17) => -amplitude * Math.exp(-t17 / timeConstant), calcLatest = (t17) => target + calcDelta(t17), applyFriction = (t17) => {
    let delta = calcDelta(t17), latest = calcLatest(t17);
    state.done = Math.abs(delta) <= restDelta, state.value = state.done ? target : latest;
  }, timeReachedBoundary, spring$1, checkCatchBoundary = (t17) => {
    isOutOfBounds(state.value) && (timeReachedBoundary = t17, spring$1 = spring({
      keyframes: [state.value, nearestBoundary(state.value)],
      velocity: calcGeneratorVelocity(calcLatest, t17, state.value),
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDelta,
      restSpeed
    }));
  };
  return checkCatchBoundary(0), {
    calculatedDuration: null,
    next: (t17) => {
      let hasUpdatedFrame = !1;
      return !spring$1 && timeReachedBoundary === void 0 && (hasUpdatedFrame = !0, applyFriction(t17), checkCatchBoundary(t17)), timeReachedBoundary !== void 0 && t17 > timeReachedBoundary ? spring$1.next(t17 - timeReachedBoundary) : (!hasUpdatedFrame && applyFriction(t17), state);
    }
  };
}

// ../../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs
var frameloopDriver = (update) => {
  let passTimestamp = ({ timestamp }) => update(timestamp);
  return {
    start: () => frame.update(passTimestamp, !0),
    stop: () => cancelFrame(passTimestamp),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => frameData.isProcessing ? frameData.timestamp : performance.now()
  };
};

// ../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs
function calcGeneratorDuration(generator) {
  let duration = 0, timeStep = 50, state = generator.next(duration);
  for (; !state.done && duration < 2e4; )
    duration += timeStep, state = generator.next(duration);
  return duration >= 2e4 ? 1 / 0 : duration;
}

// ../../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs
var types = {
  decay: inertia,
  inertia,
  tween: keyframes,
  keyframes,
  spring
};
function animateValue({ autoplay = !0, delay: delay2 = 0, driver = frameloopDriver, keyframes: keyframes$1, type: type2 = "keyframes", repeat = 0, repeatDelay = 0, repeatType = "loop", onPlay, onStop, onComplete, onUpdate, ...options }) {
  let speed = 1, hasStopped = !1, resolveFinishedPromise, currentFinishedPromise, updateFinishedPromise = () => {
    resolveFinishedPromise && resolveFinishedPromise(), currentFinishedPromise = new Promise((resolve) => {
      resolveFinishedPromise = resolve;
    });
  };
  updateFinishedPromise();
  let animationDriver, generatorFactory = types[type2] || keyframes, mapNumbersToKeyframes;
  generatorFactory !== keyframes && typeof keyframes$1[0] != "number" && (mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {
    clamp: !1
  }), keyframes$1 = [0, 100]);
  let generator = generatorFactory({ ...options, keyframes: keyframes$1 }), mirroredGenerator;
  repeatType === "mirror" && (mirroredGenerator = generatorFactory({
    ...options,
    keyframes: [...keyframes$1].reverse(),
    velocity: -(options.velocity || 0)
  }));
  let playState = "idle", holdTime = null, startTime = null, cancelTime = null;
  generator.calculatedDuration === null && repeat && (generator.calculatedDuration = calcGeneratorDuration(generator));
  let { calculatedDuration } = generator, resolvedDuration = 1 / 0, totalDuration = 1 / 0;
  calculatedDuration !== null && (resolvedDuration = calculatedDuration + repeatDelay, totalDuration = resolvedDuration * (repeat + 1) - repeatDelay);
  let currentTime = 0, tick = (timestamp) => {
    if (startTime === null)
      return;
    speed > 0 && (startTime = Math.min(startTime, timestamp)), holdTime !== null ? currentTime = holdTime : currentTime = (timestamp - startTime) * speed;
    let timeWithoutDelay = currentTime - delay2, isInDelayPhase = timeWithoutDelay < 0;
    currentTime = Math.max(timeWithoutDelay, 0), playState === "finished" && holdTime === null && (currentTime = totalDuration);
    let elapsed = currentTime, frameGenerator = generator;
    if (repeat) {
      let progress2 = currentTime / resolvedDuration, currentIteration = Math.floor(progress2), iterationProgress = progress2 % 1;
      !iterationProgress && progress2 >= 1 && (iterationProgress = 1), iterationProgress === 1 && currentIteration--, currentIteration = Math.min(currentIteration, repeat + 1);
      let iterationIsOdd = Boolean(currentIteration % 2);
      iterationIsOdd && (repeatType === "reverse" ? (iterationProgress = 1 - iterationProgress, repeatDelay && (iterationProgress -= repeatDelay / resolvedDuration)) : repeatType === "mirror" && (frameGenerator = mirroredGenerator));
      let p = clamp(0, 1, iterationProgress);
      currentTime > totalDuration && (p = repeatType === "reverse" && iterationIsOdd ? 1 : 0), elapsed = p * resolvedDuration;
    }
    let state = isInDelayPhase ? { done: !1, value: keyframes$1[0] } : frameGenerator.next(elapsed);
    mapNumbersToKeyframes && (state.value = mapNumbersToKeyframes(state.value));
    let { done } = state;
    !isInDelayPhase && calculatedDuration !== null && (done = currentTime >= totalDuration);
    let isAnimationFinished = holdTime === null && (playState === "finished" || playState === "running" && done || speed < 0 && currentTime <= 0);
    return onUpdate && onUpdate(state.value), isAnimationFinished && finish(), state;
  }, stopAnimationDriver = () => {
    animationDriver && animationDriver.stop(), animationDriver = void 0;
  }, cancel = () => {
    playState = "idle", stopAnimationDriver(), updateFinishedPromise(), startTime = cancelTime = null;
  }, finish = () => {
    playState = "finished", onComplete && onComplete(), stopAnimationDriver(), updateFinishedPromise();
  }, play = () => {
    if (hasStopped)
      return;
    animationDriver || (animationDriver = driver(tick));
    let now = animationDriver.now();
    onPlay && onPlay(), holdTime !== null ? startTime = now - holdTime : (!startTime || playState === "finished") && (startTime = now), cancelTime = startTime, holdTime = null, playState = "running", animationDriver.start();
  };
  autoplay && play();
  let controls = {
    then(resolve, reject) {
      return currentFinishedPromise.then(resolve, reject);
    },
    get time() {
      return millisecondsToSeconds(currentTime);
    },
    set time(newTime) {
      newTime = secondsToMilliseconds(newTime), currentTime = newTime, holdTime !== null || !animationDriver || speed === 0 ? holdTime = newTime : startTime = animationDriver.now() - newTime / speed;
    },
    get duration() {
      let duration = generator.calculatedDuration === null ? calcGeneratorDuration(generator) : generator.calculatedDuration;
      return millisecondsToSeconds(duration);
    },
    get speed() {
      return speed;
    },
    set speed(newSpeed) {
      newSpeed === speed || !animationDriver || (speed = newSpeed, controls.time = millisecondsToSeconds(currentTime));
    },
    get state() {
      return playState;
    },
    play,
    pause: () => {
      playState = "paused", holdTime = currentTime;
    },
    stop: () => {
      hasStopped = !0, playState !== "idle" && (playState = "idle", onStop && onStop(), cancel());
    },
    cancel: () => {
      cancelTime !== null && tick(cancelTime), cancel();
    },
    complete: () => {
      playState = "finished";
    },
    sample: (elapsed) => (startTime = 0, tick(elapsed))
  };
  return controls;
}

// ../../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs
var acceleratedValues = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform",
  "backgroundColor"
]), sampleDelta = 10, maxDuration2 = 2e4, requiresPregeneratedKeyframes = (valueName, options) => options.type === "spring" || valueName === "backgroundColor" || !isWaapiSupportedEasing(options.ease);
function createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {
  if (!(supports.waapi() && acceleratedValues.has(valueName) && !options.repeatDelay && options.repeatType !== "mirror" && options.damping !== 0 && options.type !== "inertia"))
    return !1;
  let hasStopped = !1, resolveFinishedPromise, currentFinishedPromise, updateFinishedPromise = () => {
    currentFinishedPromise = new Promise((resolve) => {
      resolveFinishedPromise = resolve;
    });
  };
  updateFinishedPromise();
  let { keyframes: keyframes2, duration = 300, ease: ease2, times } = options;
  if (requiresPregeneratedKeyframes(valueName, options)) {
    let sampleAnimation = animateValue({
      ...options,
      repeat: 0,
      delay: 0
    }), state = { done: !1, value: keyframes2[0] }, pregeneratedKeyframes = [], t17 = 0;
    for (; !state.done && t17 < maxDuration2; )
      state = sampleAnimation.sample(t17), pregeneratedKeyframes.push(state.value), t17 += sampleDelta;
    times = void 0, keyframes2 = pregeneratedKeyframes, duration = t17 - sampleDelta, ease2 = "linear";
  }
  let animation = animateStyle(value.owner.current, valueName, keyframes2, {
    ...options,
    duration,
    /**
     * This function is currently not called if ease is provided
     * as a function so the cast is safe.
     *
     * However it would be possible for a future refinement to port
     * in easing pregeneration from Motion One for browsers that
     * support the upcoming `linear()` easing function.
     */
    ease: ease2,
    times
  }), cancelAnimation = () => animation.cancel(), safeCancel = () => {
    frame.update(cancelAnimation), resolveFinishedPromise(), updateFinishedPromise();
  };
  return animation.onfinish = () => {
    value.set(getFinalKeyframe(keyframes2, options)), onComplete && onComplete(), safeCancel();
  }, {
    then(resolve, reject) {
      return currentFinishedPromise.then(resolve, reject);
    },
    get time() {
      return millisecondsToSeconds(animation.currentTime || 0);
    },
    set time(newTime) {
      animation.currentTime = secondsToMilliseconds(newTime);
    },
    get speed() {
      return animation.playbackRate;
    },
    set speed(newSpeed) {
      animation.playbackRate = newSpeed;
    },
    get duration() {
      return millisecondsToSeconds(duration);
    },
    play: () => {
      hasStopped || (animation.play(), cancelFrame(cancelAnimation));
    },
    pause: () => animation.pause(),
    stop: () => {
      if (hasStopped = !0, animation.playState === "idle")
        return;
      let { currentTime } = animation;
      if (currentTime) {
        let sampleAnimation = animateValue({
          ...options,
          autoplay: !1
        });
        value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);
      }
      safeCancel();
    },
    complete: () => animation.finish(),
    cancel: safeCancel
  };
}

// ../../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs
function createInstantAnimation({ keyframes: keyframes2, delay: delay2, onUpdate, onComplete }) {
  let setValue = () => (onUpdate && onUpdate(keyframes2[keyframes2.length - 1]), onComplete && onComplete(), {
    time: 0,
    speed: 1,
    duration: 0,
    play: noop,
    pause: noop,
    stop: noop,
    then: (resolve) => (resolve(), Promise.resolve()),
    cancel: noop,
    complete: noop
  });
  return delay2 ? animateValue({
    keyframes: [0, 1],
    duration: 0,
    delay: delay2,
    onComplete: setValue
  }) : setValue();
}

// ../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
}, criticallyDampedSpring = (target) => ({
  type: "spring",
  stiffness: 550,
  damping: target === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
}), keyframesTransition = {
  type: "keyframes",
  duration: 0.8
}, ease = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
}, getDefaultTransition = (valueKey, { keyframes: keyframes2 }) => keyframes2.length > 2 ? keyframesTransition : transformProps.has(valueKey) ? valueKey.startsWith("scale") ? criticallyDampedSpring(keyframes2[1]) : underDampedSpring : ease;

// ../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = (key, value) => key === "zIndex" ? !1 : !!(typeof value == "number" || Array.isArray(value) || typeof value == "string" && // It's animatable if we have a string
(complex.test(value) || value === "0") && // And it contains numbers and/or colors
!value.startsWith("url("));

// ../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v) {
  let [name, value] = v.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v;
  let [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v;
  let unit = value.replace(number2, ""), defaultValue = maxDefaults.has(name) ? 1 : 0;
  return number2 !== value && (defaultValue *= 100), name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g, filter = {
  ...complex,
  getAnimatableNone: (v) => {
    let functions = v.match(functionRegex);
    return functions ? functions.map(applyDefaultFilter).join(" ") : v;
  }
};

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes = {
  ...numberValueTypes,
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter,
  WebkitFilter: filter
}, getDefaultValueType = (key) => defaultValueTypes[key];

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  let defaultValueType = getDefaultValueType(key);
  return defaultValueType !== filter && (defaultValueType = complex), defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;
}

// ../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString = (v) => /^0[^.\s]+$/.test(v);

// ../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs
function isNone(value) {
  if (typeof value == "number")
    return value === 0;
  if (value !== null)
    return value === "none" || value === "0" || isZeroValueString(value);
}

// ../../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs
function getKeyframes(value, valueName, target, transition) {
  let isTargetAnimatable = isAnimatable(valueName, target), keyframes2;
  Array.isArray(target) ? keyframes2 = [...target] : keyframes2 = [null, target];
  let defaultOrigin = transition.from !== void 0 ? transition.from : value.get(), animatableTemplateValue, noneKeyframeIndexes = [];
  for (let i13 = 0; i13 < keyframes2.length; i13++)
    keyframes2[i13] === null && (keyframes2[i13] = i13 === 0 ? defaultOrigin : keyframes2[i13 - 1]), isNone(keyframes2[i13]) && noneKeyframeIndexes.push(i13), typeof keyframes2[i13] == "string" && keyframes2[i13] !== "none" && keyframes2[i13] !== "0" && (animatableTemplateValue = keyframes2[i13]);
  if (isTargetAnimatable && noneKeyframeIndexes.length && animatableTemplateValue)
    for (let i13 = 0; i13 < noneKeyframeIndexes.length; i13++) {
      let index2 = noneKeyframeIndexes[i13];
      keyframes2[index2] = getAnimatableNone2(valueName, animatableTemplateValue);
    }
  return keyframes2;
}

// ../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs
function isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {
  return !!Object.keys(transition).length;
}
function getValueTransition(transition, key) {
  return transition[key] || transition.default || transition;
}

// ../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs
var animateMotionValue = (valueName, value, target, transition = {}) => (onComplete) => {
  let valueTransition = getValueTransition(transition, valueName) || {}, delay2 = valueTransition.delay || transition.delay || 0, { elapsed = 0 } = transition;
  elapsed = elapsed - secondsToMilliseconds(delay2);
  let keyframes2 = getKeyframes(value, valueName, target, valueTransition), originKeyframe = keyframes2[0], targetKeyframe = keyframes2[keyframes2.length - 1], isOriginAnimatable = isAnimatable(valueName, originKeyframe), isTargetAnimatable = isAnimatable(valueName, targetKeyframe);
  warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from "${originKeyframe}" to "${targetKeyframe}". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \`style\` property.`);
  let options = {
    keyframes: keyframes2,
    velocity: value.getVelocity(),
    ease: "easeOut",
    ...valueTransition,
    delay: -elapsed,
    onUpdate: (v) => {
      value.set(v), valueTransition.onUpdate && valueTransition.onUpdate(v);
    },
    onComplete: () => {
      onComplete(), valueTransition.onComplete && valueTransition.onComplete();
    }
  };
  if (isTransitionDefined(valueTransition) || (options = {
    ...options,
    ...getDefaultTransition(valueName, options)
  }), options.duration && (options.duration = secondsToMilliseconds(options.duration)), options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay)), !isOriginAnimatable || !isTargetAnimatable || instantAnimationState.current || valueTransition.type === !1)
    return createInstantAnimation(options);
  if (value.owner && value.owner.current instanceof HTMLElement && !value.owner.getProps().onUpdate) {
    let acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);
    if (acceleratedAnimation)
      return acceleratedAnimation;
  }
  return animateValue(options);
};

// ../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs
function isWillChangeMotionValue(value) {
  return Boolean(isMotionValue(value) && value.add);
}

// ../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString = (v) => /^\-?\d*\.?\d+$/.test(v);

// ../../../node_modules/framer-motion/dist/es/utils/array.mjs
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
  let index2 = arr.indexOf(item);
  index2 > -1 && arr.splice(index2, 1);
}

// ../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs
var SubscriptionManager = class {
  constructor() {
    this.subscriptions = [];
  }
  add(handler) {
    return addUniqueItem(this.subscriptions, handler), () => removeItem(this.subscriptions, handler);
  }
  notify(a8, b, c) {
    let numSubscriptions = this.subscriptions.length;
    if (numSubscriptions)
      if (numSubscriptions === 1)
        this.subscriptions[0](a8, b, c);
      else
        for (let i13 = 0; i13 < numSubscriptions; i13++) {
          let handler = this.subscriptions[i13];
          handler && handler(a8, b, c);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
};

// ../../../node_modules/framer-motion/dist/es/value/index.mjs
var isFloat = (value) => !isNaN(parseFloat(value)), MotionValue = class {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   *
   * @internal
   */
  constructor(init, options = {}) {
    this.version = "10.12.16", this.timeDelta = 0, this.lastUpdated = 0, this.canTrackVelocity = !1, this.events = {}, this.updateAndNotify = (v, render = !0) => {
      this.prev = this.current, this.current = v;
      let { delta, timestamp } = frameData;
      this.lastUpdated !== timestamp && (this.timeDelta = delta, this.lastUpdated = timestamp, frame.postRender(this.scheduleVelocityCheck)), this.prev !== this.current && this.events.change && this.events.change.notify(this.current), this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()), render && this.events.renderRequest && this.events.renderRequest.notify(this.current);
    }, this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck), this.velocityCheck = ({ timestamp }) => {
      timestamp !== this.lastUpdated && (this.prev = this.current, this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()));
    }, this.hasAnimated = !1, this.prev = this.current = init, this.canTrackVelocity = isFloat(this.current), this.owner = options.owner;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(subscription) {
    return this.on("change", subscription);
  }
  on(eventName, callback) {
    this.events[eventName] || (this.events[eventName] = new SubscriptionManager());
    let unsubscribe = this.events[eventName].add(callback);
    return eventName === "change" ? () => {
      unsubscribe(), frame.read(() => {
        this.events.change.getSize() || this.stop();
      });
    } : unsubscribe;
  }
  clearListeners() {
    for (let eventManagers in this.events)
      this.events[eventManagers].clear();
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   *
   * @internal
   */
  attach(passiveEffect, stopPassiveEffect) {
    this.passiveEffect = passiveEffect, this.stopPassiveEffect = stopPassiveEffect;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(v, render = !0) {
    !render || !this.passiveEffect ? this.updateAndNotify(v, render) : this.passiveEffect(v, this.updateAndNotify);
  }
  setWithVelocity(prev, current, delta) {
    this.set(current), this.prev = prev, this.timeDelta = delta;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(v) {
    this.updateAndNotify(v), this.prev = v, this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    return this.canTrackVelocity ? (
      // These casts could be avoided if parseFloat would be typed better
      velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
    ) : 0;
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   *
   * @internal
   */
  start(startAnimation) {
    return this.stop(), new Promise((resolve) => {
      this.hasAnimated = !0, this.animation = startAnimation(resolve), this.events.animationStart && this.events.animationStart.notify();
    }).then(() => {
      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
};
function motionValue(init, options) {
  return new MotionValue(init, options);
}

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType = (v) => (type2) => type2.test(v);

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto = {
  test: (v) => v === "auto",
  parse: (v) => v
};

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto], findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));

// ../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes = [...dimensionValueTypes, color, complex], findValueType = (v) => valueTypes.find(testValueType(v));

// ../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement, key, value) {
  visualElement.hasValue(key) ? visualElement.getValue(key).set(value) : visualElement.addValue(key, motionValue(value));
}
function setTarget(visualElement, definition) {
  let resolved = resolveVariant(visualElement, definition), { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, !1) : {};
  target = { ...target, ...transitionEnd };
  for (let key in target) {
    let value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement, key, value);
  }
}
function checkTargetForNewValues(visualElement, target, origin) {
  var _a, _b;
  let newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key)), numNewValues = newValueKeys.length;
  if (numNewValues)
    for (let i13 = 0; i13 < numNewValues; i13++) {
      let key = newValueKeys[i13], targetValue = target[key], value = null;
      Array.isArray(targetValue) && (value = targetValue[0]), value === null && (value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key]), value != null && (typeof value == "string" && (isNumericalString(value) || isZeroValueString(value)) ? value = parseFloat(value) : !findValueType(value) && complex.test(targetValue) && (value = getAnimatableNone2(key, targetValue)), visualElement.addValue(key, motionValue(value, { owner: visualElement })), origin[key] === void 0 && (origin[key] = value), value !== null && visualElement.setBaseTarget(key, value));
    }
}
function getOriginFromTransition(key, transition) {
  return transition ? (transition[key] || transition.default || transition).from : void 0;
}
function getOrigin(target, transition, visualElement) {
  let origin = {};
  for (let key in target) {
    let transitionOrigin = getOriginFromTransition(key, transition);
    if (transitionOrigin !== void 0)
      origin[key] = transitionOrigin;
    else {
      let value = visualElement.getValue(key);
      value && (origin[key] = value.get());
    }
  }
  return origin;
}

// ../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs
function shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {
  let shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== !0;
  return needsAnimating[key] = !1, shouldBlock;
}
function animateTarget(visualElement, definition, { delay: delay2 = 0, transitionOverride, type: type2 } = {}) {
  let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition), willChange = visualElement.getValue("willChange");
  transitionOverride && (transition = transitionOverride);
  let animations2 = [], animationTypeState = type2 && visualElement.animationState && visualElement.animationState.getState()[type2];
  for (let key in target) {
    let value = visualElement.getValue(key), valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key))
      continue;
    let valueTransition = { delay: delay2, elapsed: 0, ...transition };
    if (window.HandoffAppearAnimations && !value.hasAnimated) {
      let appearId = visualElement.getProps()[optimizedAppearDataAttribute];
      appearId && (valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame));
    }
    value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key) ? { type: !1 } : valueTransition));
    let animation = value.animation;
    isWillChangeMotionValue(willChange) && (willChange.add(key), animation.then(() => willChange.remove(key))), animations2.push(animation);
  }
  return transitionEnd && Promise.all(animations2).then(() => {
    transitionEnd && setTarget(visualElement, transitionEnd);
  }), animations2;
}

// ../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs
function animateVariant(visualElement, variant, options = {}) {
  let resolved = resolveVariant(visualElement, variant, options.custom), { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
  options.transitionOverride && (transition = options.transitionOverride);
  let getAnimation = resolved ? () => Promise.all(animateTarget(visualElement, resolved, options)) : () => Promise.resolve(), getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0) => {
    let { delayChildren = 0, staggerChildren, staggerDirection } = transition;
    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : () => Promise.resolve(), { when } = transition;
  if (when) {
    let [first, last] = when === "beforeChildren" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];
    return first().then(() => last());
  } else
    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
}
function animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
  let animations2 = [], maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren, generateStaggerDuration = staggerDirection === 1 ? (i13 = 0) => i13 * staggerChildren : (i13 = 0) => maxStaggerDuration - i13 * staggerChildren;
  return Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i13) => {
    child.notify("AnimationStart", variant), animations2.push(animateVariant(child, variant, {
      ...options,
      delay: delayChildren + generateStaggerDuration(i13)
    }).then(() => child.notify("AnimationComplete", variant)));
  }), Promise.all(animations2);
}
function sortByTreeOrder(a8, b) {
  return a8.sortNodePosition(b);
}

// ../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs
function animateVisualElement(visualElement, definition, options = {}) {
  visualElement.notify("AnimationStart", definition);
  let animation;
  if (Array.isArray(definition)) {
    let animations2 = definition.map((variant) => animateVariant(visualElement, variant, options));
    animation = Promise.all(animations2);
  } else if (typeof definition == "string")
    animation = animateVariant(visualElement, definition, options);
  else {
    let resolvedDefinition = typeof definition == "function" ? resolveVariant(visualElement, definition, options.custom) : definition;
    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));
  }
  return animation.then(() => visualElement.notify("AnimationComplete", definition));
}

// ../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var reversePriorityOrder = [...variantPriorityOrder].reverse(), numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement) {
  return (animations2) => Promise.all(animations2.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));
}
function createAnimationState(visualElement) {
  let animate = animateList(visualElement), state = createState(), isInitialRender = !0, buildResolvedTypeValues = (acc, definition) => {
    let resolved = resolveVariant(visualElement, definition);
    if (resolved) {
      let { transition, transitionEnd, ...target } = resolved;
      acc = { ...acc, ...target, ...transitionEnd };
    }
    return acc;
  };
  function setAnimateFunction(makeAnimator) {
    animate = makeAnimator(visualElement);
  }
  function animateChanges(options, changedActiveType) {
    let props = visualElement.getProps(), context = visualElement.getVariantContext(!0) || {}, animations2 = [], removedKeys = /* @__PURE__ */ new Set(), encounteredKeys = {}, removedVariantIndex = 1 / 0;
    for (let i13 = 0; i13 < numAnimationTypes; i13++) {
      let type2 = reversePriorityOrder[i13], typeState = state[type2], prop = props[type2] !== void 0 ? props[type2] : context[type2], propIsVariant = isVariantLabel(prop), activeDelta = type2 === changedActiveType ? typeState.isActive : null;
      activeDelta === !1 && (removedVariantIndex = i13);
      let isInherited = prop === context[type2] && prop !== props[type2] && propIsVariant;
      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount && (isInherited = !1), typeState.protectedKeys = { ...encounteredKeys }, // If it isn't active and hasn't *just* been set as inactive
      !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
      !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
      isAnimationControls(prop) || typeof prop == "boolean")
        continue;
      let variantDidChange = checkVariantsDidChange(typeState.prevProp, prop), shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type2 === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i13 > removedVariantIndex && propIsVariant, definitionList = Array.isArray(prop) ? prop : [prop], resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      activeDelta === !1 && (resolvedValues = {});
      let { prevResolvedValues = {} } = typeState, allKeys = {
        ...prevResolvedValues,
        ...resolvedValues
      }, markToAnimate = (key) => {
        shouldAnimateType = !0, removedKeys.delete(key), typeState.needsAnimating[key] = !0;
      };
      for (let key in allKeys) {
        let next = resolvedValues[key], prev = prevResolvedValues[key];
        encounteredKeys.hasOwnProperty(key) || (next !== prev ? isKeyframesTarget(next) && isKeyframesTarget(prev) ? !shallowCompare(next, prev) || variantDidChange ? markToAnimate(key) : typeState.protectedKeys[key] = !0 : next !== void 0 ? markToAnimate(key) : removedKeys.add(key) : next !== void 0 && removedKeys.has(key) ? markToAnimate(key) : typeState.protectedKeys[key] = !0);
      }
      typeState.prevProp = prop, typeState.prevResolvedValues = resolvedValues, typeState.isActive && (encounteredKeys = { ...encounteredKeys, ...resolvedValues }), isInitialRender && visualElement.blockInitialAnimation && (shouldAnimateType = !1), shouldAnimateType && !isInherited && animations2.push(...definitionList.map((animation) => ({
        animation,
        options: { type: type2, ...options }
      })));
    }
    if (removedKeys.size) {
      let fallbackAnimation = {};
      removedKeys.forEach((key) => {
        let fallbackTarget = visualElement.getBaseTarget(key);
        fallbackTarget !== void 0 && (fallbackAnimation[key] = fallbackTarget);
      }), animations2.push({ animation: fallbackAnimation });
    }
    let shouldAnimate = Boolean(animations2.length);
    return isInitialRender && props.initial === !1 && !visualElement.manuallyAnimateOnMount && (shouldAnimate = !1), isInitialRender = !1, shouldAnimate ? animate(animations2) : Promise.resolve();
  }
  function setActive(type2, isActive, options) {
    var _a;
    if (state[type2].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement.variantChildren) === null || _a === void 0 || _a.forEach((child) => {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type2, isActive);
    }), state[type2].isActive = isActive;
    let animations2 = animateChanges(options, type2);
    for (let key in state)
      state[key].protectedKeys = {};
    return animations2;
  }
  return {
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: () => state
  };
}
function checkVariantsDidChange(prev, next) {
  return typeof next == "string" ? next !== prev : Array.isArray(next) ? !shallowCompare(next, prev) : !1;
}
function createTypeState(isActive = !1) {
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  return {
    animate: createTypeState(!0),
    whileInView: createTypeState(),
    whileHover: createTypeState(),
    whileTap: createTypeState(),
    whileDrag: createTypeState(),
    whileFocus: createTypeState(),
    exit: createTypeState()
  };
}

// ../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs
var AnimationFeature = class extends Feature {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(node) {
    super(node), node.animationState || (node.animationState = createAnimationState(node));
  }
  updateAnimationControlsSubscription() {
    let { animate } = this.node.getProps();
    this.unmount(), isAnimationControls(animate) && (this.unmount = animate.subscribe(this.node));
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    let { animate } = this.node.getProps(), { animate: prevAnimate } = this.node.prevProps || {};
    animate !== prevAnimate && this.updateAnimationControlsSubscription();
  }
  unmount() {
  }
};

// ../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs
var id = 0, ExitAnimationFeature = class extends Feature {
  constructor() {
    super(...arguments), this.id = id++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    let { isPresent, onExitComplete, custom } = this.node.presenceContext, { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || isPresent === prevIsPresent)
      return;
    let exitAnimation = this.node.animationState.setActive("exit", !isPresent, { custom: custom ?? this.node.getProps().custom });
    onExitComplete && !isPresent && exitAnimation.then(() => onExitComplete(this.id));
  }
  mount() {
    let { register } = this.node.presenceContext || {};
    register && (this.unmount = register(this.id));
  }
  unmount() {
  }
};

// ../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: {
    Feature: AnimationFeature
  },
  exit: {
    Feature: ExitAnimationFeature
  }
};

// ../../../node_modules/framer-motion/dist/es/utils/distance.mjs
var distance = (a8, b) => Math.abs(a8 - b);
function distance2D(a8, b) {
  let xDelta = distance(a8.x, b.x), yDelta = distance(a8.y, b.y);
  return Math.sqrt(xDelta ** 2 + yDelta ** 2);
}

// ../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs
var PanSession = class {
  constructor(event, handlers, { transformPagePoint } = {}) {
    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.updatePoint = () => {
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      let info2 = getPanInfo(this.lastMoveEventInfo, this.history), isPanStarted = this.startEvent !== null, isDistancePastThreshold = distance2D(info2.offset, { x: 0, y: 0 }) >= 3;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      let { point: point2 } = info2, { timestamp: timestamp2 } = frameData;
      this.history.push({ ...point2, timestamp: timestamp2 });
      let { onStart, onMove } = this.handlers;
      isPanStarted || (onStart && onStart(this.lastMoveEvent, info2), this.startEvent = this.lastMoveEvent), onMove && onMove(this.lastMoveEvent, info2);
    }, this.handlePointerMove = (event2, info2) => {
      this.lastMoveEvent = event2, this.lastMoveEventInfo = transformPoint(info2, this.transformPagePoint), frame.update(this.updatePoint, !0);
    }, this.handlePointerUp = (event2, info2) => {
      if (this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      let { onEnd, onSessionEnd } = this.handlers, panInfo = getPanInfo(event2.type === "pointercancel" ? this.lastMoveEventInfo : transformPoint(info2, this.transformPagePoint), this.history);
      this.startEvent && onEnd && onEnd(event2, panInfo), onSessionEnd && onSessionEnd(event2, panInfo);
    }, !isPrimaryPointer(event))
      return;
    this.handlers = handlers, this.transformPagePoint = transformPagePoint;
    let info = extractEventInfo(event), initialInfo = transformPoint(info, this.transformPagePoint), { point } = initialInfo, { timestamp } = frameData;
    this.history = [{ ...point, timestamp }];
    let { onSessionStart } = handlers;
    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history)), this.removeListeners = pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
  }
  updateHandlers(handlers) {
    this.handlers = handlers;
  }
  end() {
    this.removeListeners && this.removeListeners(), cancelFrame(this.updatePoint);
  }
};
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a8, b) {
  return { x: a8.x - b.x, y: a8.y - b.y };
}
function getPanInfo({ point }, history) {
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity2(history, timeDelta) {
  if (history.length < 2)
    return { x: 0, y: 0 };
  let i13 = history.length - 1, timestampedPoint = null, lastPoint = lastDevicePoint(history);
  for (; i13 >= 0 && (timestampedPoint = history[i13], !(lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta))); )
    i13--;
  if (!timestampedPoint)
    return { x: 0, y: 0 };
  let time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);
  if (time === 0)
    return { x: 0, y: 0 };
  let currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time,
    y: (lastPoint.y - timestampedPoint.y) / time
  };
  return currentVelocity.x === 1 / 0 && (currentVelocity.x = 0), currentVelocity.y === 1 / 0 && (currentVelocity.y = 0), currentVelocity;
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target = 0, maxDistance = 0.01) {
  return Math.abs(value - target) <= maxDistance;
}
function calcAxisDelta(delta, source, target, origin = 0.5) {
  delta.origin = origin, delta.originPoint = mix(source.min, source.max, delta.origin), delta.scale = calcLength(target) / calcLength(source), (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale)) && (delta.scale = 1), delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint, (isNear(delta.translate) || isNaN(delta.translate)) && (delta.translate = 0);
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : void 0), calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : void 0);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min, target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x), calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout2, parent) {
  target.min = layout2.min - parent.min, target.max = target.min + calcLength(layout2);
}
function calcRelativePosition(target, layout2, parent) {
  calcRelativeAxisPosition(target.x, layout2.x, parent.x), calcRelativeAxisPosition(target.y, layout2.y, parent.y);
}

// ../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, { min: min4, max: max4 }, elastic) {
  return min4 !== void 0 && point < min4 ? point = elastic ? mix(min4, point, elastic.min) : Math.max(point, min4) : max4 !== void 0 && point > max4 && (point = elastic ? mix(max4, point, elastic.max) : Math.min(point, max4)), point;
}
function calcRelativeAxisConstraints(axis, min4, max4) {
  return {
    min: min4 !== void 0 ? axis.min + min4 : void 0,
    max: max4 !== void 0 ? axis.max + max4 - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  let min4 = constraintsAxis.min - layoutAxis.min, max4 = constraintsAxis.max - layoutAxis.max;
  return constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min && ([min4, max4] = [max4, min4]), { min: min4, max: max4 };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  let origin = 0.5, sourceLength = calcLength(source), targetLength = calcLength(target);
  return targetLength > sourceLength ? origin = progress(target.min, target.max - sourceLength, source.min) : sourceLength > targetLength && (origin = progress(source.min, source.max - targetLength, target.min)), clamp(0, 1, origin);
}
function rebaseAxisConstraints(layout2, constraints) {
  let relativeConstraints = {};
  return constraints.min !== void 0 && (relativeConstraints.min = constraints.min - layout2.min), constraints.max !== void 0 && (relativeConstraints.max = constraints.max - layout2.min), relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic = defaultElastic) {
  return dragElastic === !1 ? dragElastic = 0 : dragElastic === !0 && (dragElastic = defaultElastic), {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label2) {
  return typeof dragElastic == "number" ? dragElastic : dragElastic[label2] || 0;
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = () => ({
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
}), createDelta = () => ({
  x: createAxisDelta(),
  y: createAxisDelta()
}), createAxis = () => ({ min: 0, max: 0 }), createBox = () => ({
  x: createAxis(),
  y: createAxis()
});

// ../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox({ top, left, right, bottom }) {
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function convertBoxToBoundingBox({ x, y }) {
  return { top: y.min, right: x.max, bottom: y.max, left: x.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  let topLeft = transformPoint2({ x: point.left, y: point.top }), bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// ../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale2) {
  return scale2 === void 0 || scale2 === 1;
}
function hasScale({ scale: scale2, scaleX, scaleY }) {
  return !isIdentityScale(scale2) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
  return hasScale(values) || has2DTranslate(values) || values.z || values.rotate || values.rotateX || values.rotateY;
}
function has2DTranslate(values) {
  return is2DTranslate(values.x) || is2DTranslate(values.y);
}
function is2DTranslate(value) {
  return value && value !== "0%";
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale2, originPoint) {
  let distanceFromOrigin = point - originPoint, scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  return boxScale !== void 0 && (point = scalePoint(point, boxScale, originPoint)), scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate = 0, scale2 = 1, originPoint, boxScale) {
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale), axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box, { x, y }) {
  applyAxisDelta(box.x, x.translate, x.scale, x.originPoint), applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);
}
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition = !1) {
  let treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  let node, delta;
  for (let i13 = 0; i13 < treeLength; i13++) {
    node = treePath[i13], delta = node.projectionDelta;
    let instance = node.instance;
    instance && instance.style && instance.style.display === "contents" || (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root && transformBox(box, {
      x: -node.scroll.offset.x,
      y: -node.scroll.offset.y
    }), delta && (treeScale.x *= delta.x.scale, treeScale.y *= delta.y.scale, applyBoxDelta(box, delta)), isSharedTransition && hasTransform(node.latestValues) && transformBox(box, node.latestValues));
  }
  treeScale.x = snapToDefault(treeScale.x), treeScale.y = snapToDefault(treeScale.y);
}
function snapToDefault(scale2) {
  return Number.isInteger(scale2) || scale2 > 1.0000000000001 || scale2 < 0.999999999999 ? scale2 : 1;
}
function translateAxis(axis, distance2) {
  axis.min = axis.min + distance2, axis.max = axis.max + distance2;
}
function transformAxis(axis, transforms, [key, scaleKey, originKey]) {
  let axisOrigin = transforms[originKey] !== void 0 ? transforms[originKey] : 0.5, originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);
}
var xKeys = ["x", "scaleX", "originX"], yKeys = ["y", "scaleY", "originY"];
function transformBox(box, transform) {
  transformAxis(box.x, transform, xKeys), transformAxis(box.y, transform, yKeys);
}

// ../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  let viewportBox = measureViewportBox(element, transformPagePoint), { scroll } = rootProjectionNode2;
  return scroll && (translateAxis(viewportBox.x, scroll.offset.x), translateAxis(viewportBox.y, scroll.offset.y)), viewportBox;
}

// ../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap(), VisualElementDragControls = class {
  constructor(visualElement) {
    this.openGlobalLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = createBox(), this.visualElement = visualElement;
  }
  start(originEvent, { snapToCursor = !1 } = {}) {
    let { presenceContext } = this.visualElement;
    if (presenceContext && presenceContext.isPresent === !1)
      return;
    let onSessionStart = (event) => {
      this.stopAnimation(), snapToCursor && this.snapToCursor(extractEventInfo(event, "page").point);
    }, onStart = (event, info) => {
      let { drag: drag2, dragPropagation, onDragStart } = this.getProps();
      if (drag2 && !dragPropagation && (this.openGlobalLock && this.openGlobalLock(), this.openGlobalLock = getGlobalLock(drag2), !this.openGlobalLock))
        return;
      this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), eachAxis((axis) => {
        let current = this.getAxisMotionValue(axis).get() || 0;
        if (percent.test(current)) {
          let { projection } = this.visualElement;
          if (projection && projection.layout) {
            let measuredAxis = projection.layout.layoutBox[axis];
            measuredAxis && (current = calcLength(measuredAxis) * (parseFloat(current) / 100));
          }
        }
        this.originPoint[axis] = current;
      }), onDragStart && frame.update(() => onDragStart(event, info), !1, !0);
      let { animationState } = this.visualElement;
      animationState && animationState.setActive("whileDrag", !0);
    }, onMove = (event, info) => {
      let { dragPropagation, dragDirectionLock, onDirectionLock, onDrag } = this.getProps();
      if (!dragPropagation && !this.openGlobalLock)
        return;
      let { offset: offset2 } = info;
      if (dragDirectionLock && this.currentDirection === null) {
        this.currentDirection = getCurrentDirection(offset2), this.currentDirection !== null && onDirectionLock && onDirectionLock(this.currentDirection);
        return;
      }
      this.updateAxis("x", info.point, offset2), this.updateAxis("y", info.point, offset2), this.visualElement.render(), onDrag && onDrag(event, info);
    }, onSessionEnd = (event, info) => this.stop(event, info);
    this.panSession = new PanSession(originEvent, {
      onSessionStart,
      onStart,
      onMove,
      onSessionEnd
    }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
  }
  stop(event, info) {
    let isDragging = this.isDragging;
    if (this.cancel(), !isDragging)
      return;
    let { velocity } = info;
    this.startAnimation(velocity);
    let { onDragEnd } = this.getProps();
    onDragEnd && frame.update(() => onDragEnd(event, info));
  }
  cancel() {
    this.isDragging = !1;
    let { projection, animationState } = this.visualElement;
    projection && (projection.isAnimationBlocked = !1), this.panSession && this.panSession.end(), this.panSession = void 0;
    let { dragPropagation } = this.getProps();
    !dragPropagation && this.openGlobalLock && (this.openGlobalLock(), this.openGlobalLock = null), animationState && animationState.setActive("whileDrag", !1);
  }
  updateAxis(axis, _point, offset2) {
    let { drag: drag2 } = this.getProps();
    if (!offset2 || !shouldDrag(axis, drag2, this.currentDirection))
      return;
    let axisValue = this.getAxisMotionValue(axis), next = this.originPoint[axis] + offset2[axis];
    this.constraints && this.constraints[axis] && (next = applyConstraints(next, this.constraints[axis], this.elastic[axis])), axisValue.set(next);
  }
  resolveConstraints() {
    let { dragConstraints, dragElastic } = this.getProps(), { layout: layout2 } = this.visualElement.projection || {}, prevConstraints = this.constraints;
    dragConstraints && isRefObject(dragConstraints) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : dragConstraints && layout2 ? this.constraints = calcRelativeConstraints(layout2.layoutBox, dragConstraints) : this.constraints = !1, this.elastic = resolveDragElastic(dragElastic), prevConstraints !== this.constraints && layout2 && this.constraints && !this.hasMutatedConstraints && eachAxis((axis) => {
      this.getAxisMotionValue(axis) && (this.constraints[axis] = rebaseAxisConstraints(layout2.layoutBox[axis], this.constraints[axis]));
    });
  }
  resolveRefConstraints() {
    let { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();
    if (!constraints || !isRefObject(constraints))
      return !1;
    let constraintsElement = constraints.current;
    invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
    let { projection } = this.visualElement;
    if (!projection || !projection.layout)
      return !1;
    let constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint()), measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);
    if (onMeasureDragConstraints) {
      let userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
      this.hasMutatedConstraints = !!userConstraints, userConstraints && (measuredConstraints = convertBoundingBoxToBox(userConstraints));
    }
    return measuredConstraints;
  }
  startAnimation(velocity) {
    let { drag: drag2, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd } = this.getProps(), constraints = this.constraints || {}, momentumAnimations = eachAxis((axis) => {
      if (!shouldDrag(axis, drag2, this.currentDirection))
        return;
      let transition = constraints && constraints[axis] || {};
      dragSnapToOrigin && (transition = { min: 0, max: 0 });
      let bounceStiffness = dragElastic ? 200 : 1e6, bounceDamping = dragElastic ? 40 : 1e7, inertia2 = {
        type: "inertia",
        velocity: dragMomentum ? velocity[axis] : 0,
        bounceStiffness,
        bounceDamping,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10,
        ...dragTransition,
        ...transition
      };
      return this.startAxisValueAnimation(axis, inertia2);
    });
    return Promise.all(momentumAnimations).then(onDragTransitionEnd);
  }
  startAxisValueAnimation(axis, transition) {
    let axisValue = this.getAxisMotionValue(axis);
    return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));
  }
  stopAnimation() {
    eachAxis((axis) => this.getAxisMotionValue(axis).stop());
  }
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  getAxisMotionValue(axis) {
    let dragKey = "_drag" + axis.toUpperCase(), props = this.visualElement.getProps(), externalMotionValue = props[dragKey];
    return externalMotionValue || this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : void 0) || 0);
  }
  snapToCursor(point) {
    eachAxis((axis) => {
      let { drag: drag2 } = this.getProps();
      if (!shouldDrag(axis, drag2, this.currentDirection))
        return;
      let { projection } = this.visualElement, axisValue = this.getAxisMotionValue(axis);
      if (projection && projection.layout) {
        let { min: min4, max: max4 } = projection.layout.layoutBox[axis];
        axisValue.set(point[axis] - mix(min4, max4, 0.5));
      }
    });
  }
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints() {
    if (!this.visualElement.current)
      return;
    let { drag: drag2, dragConstraints } = this.getProps(), { projection } = this.visualElement;
    if (!isRefObject(dragConstraints) || !projection || !this.constraints)
      return;
    this.stopAnimation();
    let boxProgress = { x: 0, y: 0 };
    eachAxis((axis) => {
      let axisValue = this.getAxisMotionValue(axis);
      if (axisValue) {
        let latest = axisValue.get();
        boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, this.constraints[axis]);
      }
    });
    let { transformTemplate } = this.visualElement.getProps();
    this.visualElement.current.style.transform = transformTemplate ? transformTemplate({}, "") : "none", projection.root && projection.root.updateScroll(), projection.updateLayout(), this.resolveConstraints(), eachAxis((axis) => {
      if (!shouldDrag(axis, drag2, null))
        return;
      let axisValue = this.getAxisMotionValue(axis), { min: min4, max: max4 } = this.constraints[axis];
      axisValue.set(mix(min4, max4, boxProgress[axis]));
    });
  }
  addListeners() {
    if (!this.visualElement.current)
      return;
    elementDragControls.set(this.visualElement, this);
    let element = this.visualElement.current, stopPointerListener = addPointerEvent(element, "pointerdown", (event) => {
      let { drag: drag2, dragListener = !0 } = this.getProps();
      drag2 && dragListener && this.start(event);
    }), measureDragConstraints = () => {
      let { dragConstraints } = this.getProps();
      isRefObject(dragConstraints) && (this.constraints = this.resolveRefConstraints());
    }, { projection } = this.visualElement, stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
    projection && !projection.layout && (projection.root && projection.root.updateScroll(), projection.updateLayout()), measureDragConstraints();
    let stopResizeListener = addDomEvent(window, "resize", () => this.scalePositionWithinConstraints()), stopLayoutUpdateListener = projection.addEventListener("didUpdate", ({ delta, hasLayoutChanged }) => {
      this.isDragging && hasLayoutChanged && (eachAxis((axis) => {
        let motionValue2 = this.getAxisMotionValue(axis);
        motionValue2 && (this.originPoint[axis] += delta[axis].translate, motionValue2.set(motionValue2.get() + delta[axis].translate));
      }), this.visualElement.render());
    });
    return () => {
      stopResizeListener(), stopPointerListener(), stopMeasureLayoutListener(), stopLayoutUpdateListener && stopLayoutUpdateListener();
    };
  }
  getProps() {
    let props = this.visualElement.getProps(), { drag: drag2 = !1, dragDirectionLock = !1, dragPropagation = !1, dragConstraints = !1, dragElastic = defaultElastic, dragMomentum = !0 } = props;
    return {
      ...props,
      drag: drag2,
      dragDirectionLock,
      dragPropagation,
      dragConstraints,
      dragElastic,
      dragMomentum
    };
  }
};
function shouldDrag(direction, drag2, currentDirection) {
  return (drag2 === !0 || drag2 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset2, lockThreshold = 10) {
  let direction = null;
  return Math.abs(offset2.y) > lockThreshold ? direction = "y" : Math.abs(offset2.x) > lockThreshold && (direction = "x"), direction;
}

// ../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs
var DragGesture = class extends Feature {
  constructor(node) {
    super(node), this.removeGroupControls = noop, this.removeListeners = noop, this.controls = new VisualElementDragControls(node);
  }
  mount() {
    let { dragControls } = this.node.getProps();
    dragControls && (this.removeGroupControls = dragControls.subscribe(this.controls)), this.removeListeners = this.controls.addListeners() || noop;
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
};

// ../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs
var asyncHandler = (handler) => (event, info) => {
  handler && frame.update(() => handler(event, info));
}, PanGesture = class extends Feature {
  constructor() {
    super(...arguments), this.removePointerDownListener = noop;
  }
  onPointerDown(pointerDownEvent) {
    this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });
  }
  createPanHandlers() {
    let { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();
    return {
      onSessionStart: asyncHandler(onPanSessionStart),
      onStart: asyncHandler(onPanStart),
      onMove: onPan,
      onEnd: (event, info) => {
        delete this.session, onPanEnd && frame.update(() => onPanEnd(event, info));
      }
    };
  }
  mount() {
    this.removePointerDownListener = addPointerEvent(this.node.current, "pointerdown", (event) => this.onPointerDown(event));
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
};

// ../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_react21 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react20 = __toESM(require_react(), 1);
function usePresence() {
  let context = (0, import_react20.useContext)(PresenceContext);
  if (context === null)
    return [!0, null];
  let { isPresent, onExitComplete, register } = context, id3 = (0, import_react20.useId)();
  return (0, import_react20.useEffect)(() => register(id3), []), !isPresent && onExitComplete ? [!1, () => onExitComplete && onExitComplete(id3)] : [!0];
}

// ../../../node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: !0,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: !1
};

// ../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  return axis.max === axis.min ? 0 : pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: (latest, node) => {
    if (!node.target)
      return latest;
    if (typeof latest == "string")
      if (px.test(latest))
        latest = parseFloat(latest);
      else
        return latest;
    let x = pixelsToPercent(latest, node.target.x), y = pixelsToPercent(latest, node.target.y);
    return `${x}% ${y}%`;
  }
};

// ../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var correctBoxShadow = {
  correct: (latest, { treeScale, projectionDelta }) => {
    let original = latest, shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    let template = complex.createTransformer(latest), offset2 = typeof shadow[0] != "number" ? 1 : 0, xScale = projectionDelta.x.scale * treeScale.x, yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset2] /= xScale, shadow[1 + offset2] /= yScale;
    let averageScale = mix(xScale, yScale, 0.5);
    return typeof shadow[2 + offset2] == "number" && (shadow[2 + offset2] /= averageScale), typeof shadow[3 + offset2] == "number" && (shadow[3 + offset2] /= averageScale), template(shadow);
  }
};

// ../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = class extends import_react21.default.Component {
  /**
   * This only mounts projection nodes for components that
   * need measuring, we might want to do it for all components
   * in order to incorporate transforms
   */
  componentDidMount() {
    let { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props, { projection } = visualElement;
    addScaleCorrector(defaultScaleCorrectors), projection && (layoutGroup.group && layoutGroup.group.add(projection), switchLayoutGroup && switchLayoutGroup.register && layoutId && switchLayoutGroup.register(projection), projection.root.didUpdate(), projection.addEventListener("animationComplete", () => {
      this.safeToRemove();
    }), projection.setOptions({
      ...projection.options,
      onExitComplete: () => this.safeToRemove()
    })), globalProjectionState.hasEverUpdated = !0;
  }
  getSnapshotBeforeUpdate(prevProps) {
    let { layoutDependency, visualElement, drag: drag2, isPresent } = this.props, projection = visualElement.projection;
    return projection && (projection.isPresent = isPresent, drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0 ? projection.willUpdate() : this.safeToRemove(), prevProps.isPresent !== isPresent && (isPresent ? projection.promote() : projection.relegate() || frame.postRender(() => {
      let stack = projection.getStack();
      (!stack || !stack.members.length) && this.safeToRemove();
    }))), null;
  }
  componentDidUpdate() {
    let { projection } = this.props.visualElement;
    projection && (projection.root.didUpdate(), queueMicrotask(() => {
      !projection.currentAnimation && projection.isLead() && this.safeToRemove();
    }));
  }
  componentWillUnmount() {
    let { visualElement, layoutGroup, switchLayoutGroup: promoteContext } = this.props, { projection } = visualElement;
    projection && (projection.scheduleCheckAfterUnmount(), layoutGroup && layoutGroup.group && layoutGroup.group.remove(projection), promoteContext && promoteContext.deregister && promoteContext.deregister(projection));
  }
  safeToRemove() {
    let { safeToRemove } = this.props;
    safeToRemove && safeToRemove();
  }
  render() {
    return null;
  }
};
function MeasureLayout(props) {
  let [isPresent, safeToRemove] = usePresence(), layoutGroup = (0, import_react21.useContext)(LayoutGroupContext);
  return import_react21.default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup, switchLayoutGroup: (0, import_react21.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove });
}
var defaultScaleCorrectors = {
  borderRadius: {
    ...correctBorderRadius,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ]
  },
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// ../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"], numBorders = borders.length, asNumber = (value) => typeof value == "string" ? parseFloat(value) : value, isPx = (value) => typeof value == "number" || px.test(value);
function mixValues(target, follow, lead, progress2, shouldCrossfadeOpacity, isOnlyMember) {
  shouldCrossfadeOpacity ? (target.opacity = mix(
    0,
    // TODO Reinstate this if only child
    lead.opacity !== void 0 ? lead.opacity : 1,
    easeCrossfadeIn(progress2)
  ), target.opacityExit = mix(follow.opacity !== void 0 ? follow.opacity : 1, 0, easeCrossfadeOut(progress2))) : isOnlyMember && (target.opacity = mix(follow.opacity !== void 0 ? follow.opacity : 1, lead.opacity !== void 0 ? lead.opacity : 1, progress2));
  for (let i13 = 0; i13 < numBorders; i13++) {
    let borderLabel = `border${borders[i13]}Radius`, followRadius = getRadius(follow, borderLabel), leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0), leadRadius || (leadRadius = 0), followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius) ? (target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress2), 0), (percent.test(leadRadius) || percent.test(followRadius)) && (target[borderLabel] += "%")) : target[borderLabel] = leadRadius;
  }
  (follow.rotate || lead.rotate) && (target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress2));
}
function getRadius(values, radiusName) {
  return values[radiusName] !== void 0 ? values[radiusName] : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut), easeCrossfadeOut = compress(0.5, 0.95, noop);
function compress(min4, max4, easing) {
  return (p) => p < min4 ? 0 : p > max4 ? 1 : easing(progress(min4, max4, p));
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min, axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x), copyAxisInto(box.y, originBox.y);
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  return point -= translate, point = scalePoint(point, 1 / scale2, originPoint), boxScale !== void 0 && (point = scalePoint(point, 1 / boxScale, originPoint)), point;
}
function removeAxisDelta(axis, translate = 0, scale2 = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {
  if (percent.test(translate) && (translate = parseFloat(translate), translate = mix(sourceAxis.min, sourceAxis.max, translate / 100) - sourceAxis.min), typeof translate != "number")
    return;
  let originPoint = mix(originAxis.min, originAxis.max, origin);
  axis === originAxis && (originPoint -= translate), axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale), axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {
  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);
}
var xKeys2 = ["x", "scaleX", "originX"], yKeys2 = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms, xKeys2, originBox ? originBox.x : void 0, sourceBox ? sourceBox.x : void 0), removeAxisTransforms(box.y, transforms, yKeys2, originBox ? originBox.y : void 0, sourceBox ? sourceBox.y : void 0);
}

// ../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a8, b) {
  return a8.x.min === b.x.min && a8.x.max === b.x.max && a8.y.min === b.y.min && a8.y.max === b.y.max;
}
function aspectRatio(box) {
  return calcLength(box.x) / calcLength(box.y);
}

// ../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = class {
  constructor() {
    this.members = [];
  }
  add(node) {
    addUniqueItem(this.members, node), node.scheduleRender();
  }
  remove(node) {
    if (removeItem(this.members, node), node === this.prevLead && (this.prevLead = void 0), node === this.lead) {
      let prevLead = this.members[this.members.length - 1];
      prevLead && this.promote(prevLead);
    }
  }
  relegate(node) {
    let indexOfNode = this.members.findIndex((member) => node === member);
    if (indexOfNode === 0)
      return !1;
    let prevLead;
    for (let i13 = indexOfNode; i13 >= 0; i13--) {
      let member = this.members[i13];
      if (member.isPresent !== !1) {
        prevLead = member;
        break;
      }
    }
    return prevLead ? (this.promote(prevLead), !0) : !1;
  }
  promote(node, preserveFollowOpacity) {
    let prevLead = this.lead;
    if (node !== prevLead && (this.prevLead = prevLead, this.lead = node, node.show(), prevLead)) {
      prevLead.instance && prevLead.scheduleRender(), node.scheduleRender(), node.resumeFrom = prevLead, preserveFollowOpacity && (node.resumeFrom.preserveOpacity = !0), prevLead.snapshot && (node.snapshot = prevLead.snapshot, node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues), node.root && node.root.isUpdating && (node.isLayoutDirty = !0);
      let { crossfade } = node.options;
      crossfade === !1 && prevLead.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((node) => {
      let { options, resumingFrom } = node;
      options.onExitComplete && options.onExitComplete(), resumingFrom && resumingFrom.options.onExitComplete && resumingFrom.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((node) => {
      node.instance && node.scheduleRender(!1);
    });
  }
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
};

// ../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs
function buildProjectionTransform(delta, treeScale, latestTransform) {
  let transform = "", xTranslate = delta.x.translate / treeScale.x, yTranslate = delta.y.translate / treeScale.y;
  if ((xTranslate || yTranslate) && (transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `), (treeScale.x !== 1 || treeScale.y !== 1) && (transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `), latestTransform) {
    let { rotate, rotateX, rotateY } = latestTransform;
    rotate && (transform += `rotate(${rotate}deg) `), rotateX && (transform += `rotateX(${rotateX}deg) `), rotateY && (transform += `rotateY(${rotateY}deg) `);
  }
  let elementScaleX = delta.x.scale * treeScale.x, elementScaleY = delta.y.scale * treeScale.y;
  return (elementScaleX !== 1 || elementScaleY !== 1) && (transform += `scale(${elementScaleX}, ${elementScaleY})`), transform || "none";
}

// ../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = (a8, b) => a8.depth - b.depth;

// ../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = class {
  constructor() {
    this.children = [], this.isDirty = !1;
  }
  add(child) {
    addUniqueItem(this.children, child), this.isDirty = !0;
  }
  remove(child) {
    removeItem(this.children, child), this.isDirty = !0;
  }
  forEach(callback) {
    this.isDirty && this.children.sort(compareByDepth), this.isDirty = !1, this.children.forEach(callback);
  }
};

// ../../../node_modules/framer-motion/dist/es/utils/delay.mjs
function delay(callback, timeout) {
  let start = performance.now(), checkElapsed = ({ timestamp }) => {
    let elapsed = timestamp - start;
    elapsed >= timeout && (cancelFrame(checkElapsed), callback(elapsed - timeout));
  };
  return frame.read(checkElapsed, !0), () => cancelFrame(checkElapsed);
}

// ../../../node_modules/framer-motion/dist/es/debug/record.mjs
function record(data) {
  window.MotionDebug && window.MotionDebug.record(data);
}

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs
function isSVGElement(element) {
  return element instanceof SVGElement && element.tagName !== "svg";
}

// ../../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs
function animateSingleValue(value, keyframes2, options) {
  let motionValue$1 = isMotionValue(value) ? value : motionValue(value);
  return motionValue$1.start(animateMotionValue("", motionValue$1, keyframes2, options)), motionValue$1.animation;
}

// ../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var transformAxes = ["", "X", "Y", "Z"], animationTarget = 1e3, id2 = 0, projectionFrameData = {
  type: "projectionFrame",
  totalNodes: 0,
  resolvedTargetDeltas: 0,
  recalculatedProjection: 0
};
function createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform }) {
  return class {
    constructor(latestValues = {}, parent = defaultParent == null ? void 0 : defaultParent()) {
      this.id = id2++, this.animationId = 0, this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isProjectionDirty = !1, this.isSharedProjectionDirty = !1, this.isTransformDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.hasTreeAnimated = !1, this.updateScheduled = !1, this.checkUpdateFailed = () => {
        this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots());
      }, this.updateProjection = () => {
        projectionFrameData.totalNodes = projectionFrameData.resolvedTargetDeltas = projectionFrameData.recalculatedProjection = 0, this.nodes.forEach(propagateDirtyNodes), this.nodes.forEach(resolveTargetDelta), this.nodes.forEach(calcProjection), this.nodes.forEach(cleanDirtyNodes), record(projectionFrameData);
      }, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.latestValues = latestValues, this.root = parent ? parent.root || parent : this, this.path = parent ? [...parent.path, parent] : [], this.parent = parent, this.depth = parent ? parent.depth + 1 : 0;
      for (let i13 = 0; i13 < this.path.length; i13++)
        this.path[i13].shouldResetTransform = !0;
      this.root === this && (this.nodes = new FlatTree());
    }
    addEventListener(name, handler) {
      return this.eventHandlers.has(name) || this.eventHandlers.set(name, new SubscriptionManager()), this.eventHandlers.get(name).add(handler);
    }
    notifyListeners(name, ...args) {
      let subscriptionManager = this.eventHandlers.get(name);
      subscriptionManager && subscriptionManager.notify(...args);
    }
    hasListeners(name) {
      return this.eventHandlers.has(name);
    }
    /**
     * Lifecycles
     */
    mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = isSVGElement(instance), this.instance = instance;
      let { layoutId, layout: layout2, visualElement } = this.options;
      if (visualElement && !visualElement.current && visualElement.mount(instance), this.root.nodes.add(this), this.parent && this.parent.children.add(this), isLayoutDirty && (layout2 || layoutId) && (this.isLayoutDirty = !0), attachResizeListener) {
        let cancelDelay, resizeUnblockUpdate = () => this.root.updateBlockedByResize = !1;
        attachResizeListener(instance, () => {
          this.root.updateBlockedByResize = !0, cancelDelay && cancelDelay(), cancelDelay = delay(resizeUnblockUpdate, 250), globalProjectionState.hasAnimatedSinceResize && (globalProjectionState.hasAnimatedSinceResize = !1, this.nodes.forEach(finishAnimation));
        });
      }
      layoutId && this.root.registerSharedNode(layoutId, this), this.options.animate !== !1 && visualElement && (layoutId || layout2) && this.addEventListener("didUpdate", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout }) => {
        if (this.isTreeAnimationBlocked()) {
          this.target = void 0, this.relativeTarget = void 0;
          return;
        }
        let layoutTransition = this.options.transition || visualElement.getDefaultTransition() || defaultLayoutTransition, { onLayoutAnimationStart, onLayoutAnimationComplete } = visualElement.getProps(), targetChanged = !this.targetLayout || !boxEquals(this.targetLayout, newLayout) || hasRelativeTargetChanged, hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
        if (this.options.layoutRoot || this.resumeFrom && this.resumeFrom.instance || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !this.currentAnimation)) {
          this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0), this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
          let animationOptions = {
            ...getValueTransition(layoutTransition, "layout"),
            onPlay: onLayoutAnimationStart,
            onComplete: onLayoutAnimationComplete
          };
          (visualElement.shouldReduceMotion || this.options.layoutRoot) && (animationOptions.delay = 0, animationOptions.type = !1), this.startAnimation(animationOptions);
        } else
          hasLayoutChanged || finishAnimation(this), this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
        this.targetLayout = newLayout;
      });
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      let stack = this.getStack();
      stack && stack.remove(this), this.parent && this.parent.children.delete(this), this.instance = void 0, cancelFrame(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1;
    }
    // Note: currently only running on root node
    startUpdate() {
      this.isUpdateBlocked() || (this.isUpdating = !0, this.nodes && this.nodes.forEach(resetRotation), this.animationId++);
    }
    getTransformTemplate() {
      let { visualElement } = this.options;
      return visualElement && visualElement.getProps().transformTemplate;
    }
    willUpdate(shouldNotifyListeners = !0) {
      if (this.root.hasTreeAnimated = !0, this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (!this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
        return;
      this.isLayoutDirty = !0;
      for (let i13 = 0; i13 < this.path.length; i13++) {
        let node = this.path[i13];
        node.shouldResetTransform = !0, node.updateScroll("snapshot"), node.options.layoutRoot && node.willUpdate(!1);
      }
      let { layoutId, layout: layout2 } = this.options;
      if (layoutId === void 0 && !layout2)
        return;
      let transformTemplate = this.getTransformTemplate();
      this.prevTransformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0, this.updateSnapshot(), shouldNotifyListeners && this.notifyListeners("willUpdate");
    }
    update() {
      if (this.updateScheduled = !1, this.isUpdateBlocked()) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(clearMeasurements);
        return;
      }
      this.isUpdating || this.nodes.forEach(clearIsLayoutDirty), this.isUpdating = !1, this.nodes.forEach(resetTransformStyle), this.nodes.forEach(updateLayout), this.nodes.forEach(notifyLayoutUpdate), this.clearAllSnapshots();
      let now = performance.now();
      frameData.delta = clamp(0, 1e3 / 60, now - frameData.timestamp), frameData.timestamp = now, frameData.isProcessing = !0, steps.update.process(frameData), steps.preRender.process(frameData), steps.render.process(frameData), frameData.isProcessing = !1;
    }
    didUpdate() {
      this.updateScheduled || (this.updateScheduled = !0, queueMicrotask(() => this.update()));
    }
    clearAllSnapshots() {
      this.nodes.forEach(clearSnapshot), this.sharedNodes.forEach(removeLeadSnapshots);
    }
    scheduleUpdateProjection() {
      frame.preRender(this.updateProjection, !1, !0);
    }
    scheduleCheckAfterUnmount() {
      frame.postRender(() => {
        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure());
    }
    updateLayout() {
      if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let i13 = 0; i13 < this.path.length; i13++)
          this.path[i13].updateScroll();
      let prevLayout = this.layout;
      this.layout = this.measure(!1), this.layoutCorrected = createBox(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.layoutBox);
      let { visualElement } = this.options;
      visualElement && visualElement.notify("LayoutMeasure", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : void 0);
    }
    updateScroll(phase = "measure") {
      let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);
      this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === phase && (needsMeasurement = !1), needsMeasurement && (this.scroll = {
        animationId: this.root.animationId,
        phase,
        isRoot: checkIsScrollRoot(this.instance),
        offset: measureScroll(this.instance)
      });
    }
    resetTransform() {
      if (!resetTransform)
        return;
      let isResetRequested = this.isLayoutDirty || this.shouldResetTransform, hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta), transformTemplate = this.getTransformTemplate(), transformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0, transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
      isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged) && (resetTransform(this.instance, transformTemplateValue), this.shouldResetTransform = !1, this.scheduleRender());
    }
    measure(removeTransform = !0) {
      let pageBox = this.measurePageBox(), layoutBox = this.removeElementScroll(pageBox);
      return removeTransform && (layoutBox = this.removeTransform(layoutBox)), roundBox(layoutBox), {
        animationId: this.root.animationId,
        measuredBox: pageBox,
        layoutBox,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      let { visualElement } = this.options;
      if (!visualElement)
        return createBox();
      let box = visualElement.measureViewportBox(), { scroll } = this.root;
      return scroll && (translateAxis(box.x, scroll.offset.x), translateAxis(box.y, scroll.offset.y)), box;
    }
    removeElementScroll(box) {
      let boxWithoutScroll = createBox();
      copyBoxInto(boxWithoutScroll, box);
      for (let i13 = 0; i13 < this.path.length; i13++) {
        let node = this.path[i13], { scroll, options } = node;
        if (node !== this.root && scroll && options.layoutScroll) {
          if (scroll.isRoot) {
            copyBoxInto(boxWithoutScroll, box);
            let { scroll: rootScroll } = this.root;
            rootScroll && (translateAxis(boxWithoutScroll.x, -rootScroll.offset.x), translateAxis(boxWithoutScroll.y, -rootScroll.offset.y));
          }
          translateAxis(boxWithoutScroll.x, scroll.offset.x), translateAxis(boxWithoutScroll.y, scroll.offset.y);
        }
      }
      return boxWithoutScroll;
    }
    applyTransform(box, transformOnly = !1) {
      let withTransforms = createBox();
      copyBoxInto(withTransforms, box);
      for (let i13 = 0; i13 < this.path.length; i13++) {
        let node = this.path[i13];
        !transformOnly && node.options.layoutScroll && node.scroll && node !== node.root && transformBox(withTransforms, {
          x: -node.scroll.offset.x,
          y: -node.scroll.offset.y
        }), hasTransform(node.latestValues) && transformBox(withTransforms, node.latestValues);
      }
      return hasTransform(this.latestValues) && transformBox(withTransforms, this.latestValues), withTransforms;
    }
    removeTransform(box) {
      let boxWithoutTransform = createBox();
      copyBoxInto(boxWithoutTransform, box);
      for (let i13 = 0; i13 < this.path.length; i13++) {
        let node = this.path[i13];
        if (!node.instance || !hasTransform(node.latestValues))
          continue;
        hasScale(node.latestValues) && node.updateSnapshot();
        let sourceBox = createBox(), nodeBox = node.measurePageBox();
        copyBoxInto(sourceBox, nodeBox), removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : void 0, sourceBox);
      }
      return hasTransform(this.latestValues) && removeBoxTransforms(boxWithoutTransform, this.latestValues), boxWithoutTransform;
    }
    setTargetDelta(delta) {
      this.targetDelta = delta, this.root.scheduleUpdateProjection(), this.isProjectionDirty = !0;
    }
    setOptions(options) {
      this.options = {
        ...this.options,
        ...options,
        crossfade: options.crossfade !== void 0 ? options.crossfade : !0
      };
    }
    clearMeasurements() {
      this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== frameData.timestamp && this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(forceRecalculation = !1) {
      var _a;
      let lead = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty), this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);
      let isShared = Boolean(this.resumingFrom) || this !== lead;
      if (!(forceRecalculation || isShared && this.isSharedProjectionDirty || this.isProjectionDirty || !((_a = this.parent) === null || _a === void 0) && _a.isProjectionDirty || this.attemptToResolveRelativeTarget))
        return;
      let { layout: layout2, layoutId } = this.options;
      if (!(!this.layout || !(layout2 || layoutId))) {
        if (this.resolvedRelativeTargetAt = frameData.timestamp, !this.targetDelta && !this.relativeTarget) {
          let relativeParent = this.getClosestProjectingParent();
          relativeParent && relativeParent.layout && this.animationProgress !== 1 ? (this.relativeParent = relativeParent, this.forceRelativeParentToResolveTarget(), this.relativeTarget = createBox(), this.relativeTargetOrigin = createBox(), calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox), copyBoxInto(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
        if (!(!this.relativeTarget && !this.targetDelta)) {
          if (this.target || (this.target = createBox(), this.targetWithTransforms = createBox()), this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target ? (this.forceRelativeParentToResolveTarget(), calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target)) : this.targetDelta ? (Boolean(this.resumingFrom) ? this.target = this.applyTransform(this.layout.layoutBox) : copyBoxInto(this.target, this.layout.layoutBox), applyBoxDelta(this.target, this.targetDelta)) : copyBoxInto(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget) {
            this.attemptToResolveRelativeTarget = !1;
            let relativeParent = this.getClosestProjectingParent();
            relativeParent && Boolean(relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !relativeParent.options.layoutScroll && relativeParent.target && this.animationProgress !== 1 ? (this.relativeParent = relativeParent, this.forceRelativeParentToResolveTarget(), this.relativeTarget = createBox(), this.relativeTargetOrigin = createBox(), calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target), copyBoxInto(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
          }
          projectionFrameData.resolvedTargetDeltas++;
        }
      }
    }
    getClosestProjectingParent() {
      if (!(!this.parent || hasScale(this.parent.latestValues) || has2DTranslate(this.parent.latestValues)))
        return this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return Boolean((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      var _a;
      let lead = this.getLead(), isShared = Boolean(this.resumingFrom) || this !== lead, canSkip = !0;
      if ((this.isProjectionDirty || !((_a = this.parent) === null || _a === void 0) && _a.isProjectionDirty) && (canSkip = !1), isShared && (this.isSharedProjectionDirty || this.isTransformDirty) && (canSkip = !1), this.resolvedRelativeTargetAt === frameData.timestamp && (canSkip = !1), canSkip)
        return;
      let { layout: layout2, layoutId } = this.options;
      if (this.isTreeAnimating = Boolean(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(layout2 || layoutId))
        return;
      copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
      let prevTreeScaleX = this.treeScale.x, prevTreeScaleY = this.treeScale.y;
      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared), lead.layout && !lead.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1) && (lead.target = lead.layout.layoutBox);
      let { target } = lead;
      if (!target) {
        this.projectionTransform && (this.projectionDelta = createDelta(), this.projectionTransform = "none", this.scheduleRender());
        return;
      }
      this.projectionDelta || (this.projectionDelta = createDelta(), this.projectionDeltaWithTransform = createDelta());
      let prevProjectionTransform = this.projectionTransform;
      calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues), this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale), (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", target)), projectionFrameData.recalculatedProjection++;
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(notifyAll = !0) {
      if (this.options.scheduleRender && this.options.scheduleRender(), notifyAll) {
        let stack = this.getStack();
        stack && stack.scheduleRender();
      }
      this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
    }
    setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = !1) {
      let snapshot = this.snapshot, snapshotLatestValues = snapshot ? snapshot.latestValues : {}, mixedValues = { ...this.latestValues }, targetDelta = createDelta();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) && (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
      let relativeLayout = createBox(), snapshotSource = snapshot ? snapshot.source : void 0, layoutSource = this.layout ? this.layout.source : void 0, isSharedLayoutAnimation = snapshotSource !== layoutSource, stack = this.getStack(), isOnlyMember = !stack || stack.members.length <= 1, shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === !0 && !this.path.some(hasOpacityCrossfade));
      this.animationProgress = 0;
      let prevRelativeTarget;
      this.mixTargetDelta = (latest) => {
        let progress2 = latest / 1e3;
        mixAxisDelta(targetDelta.x, delta.x, progress2), mixAxisDelta(targetDelta.y, delta.y, progress2), this.setTargetDelta(targetDelta), this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout && (calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox), mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress2), prevRelativeTarget && boxEquals(this.relativeTarget, prevRelativeTarget) && (this.isProjectionDirty = !1), prevRelativeTarget || (prevRelativeTarget = createBox()), copyBoxInto(prevRelativeTarget, this.relativeTarget)), isSharedLayoutAnimation && (this.animationValues = mixedValues, mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress2, shouldCrossfadeOpacity, isOnlyMember)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = progress2;
      }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(options) {
      this.notifyListeners("animationStart"), this.currentAnimation && this.currentAnimation.stop(), this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(), this.pendingAnimation && (cancelFrame(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = frame.update(() => {
        globalProjectionState.hasAnimatedSinceResize = !0, this.currentAnimation = animateSingleValue(0, animationTarget, {
          ...options,
          onUpdate: (latest) => {
            this.mixTargetDelta(latest), options.onUpdate && options.onUpdate(latest);
          },
          onComplete: () => {
            options.onComplete && options.onComplete(), this.completeAnimation();
          }
        }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0);
      let stack = this.getStack();
      stack && stack.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(animationTarget), this.currentAnimation.stop()), this.completeAnimation();
    }
    applyTransformsToTarget() {
      let lead = this.getLead(), { targetWithTransforms, target, layout: layout2, latestValues } = lead;
      if (!(!targetWithTransforms || !target || !layout2)) {
        if (this !== lead && this.layout && layout2 && shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout2.layoutBox)) {
          target = this.target || createBox();
          let xLength = calcLength(this.layout.layoutBox.x);
          target.x.min = lead.target.x.min, target.x.max = target.x.min + xLength;
          let yLength = calcLength(this.layout.layoutBox.y);
          target.y.min = lead.target.y.min, target.y.max = target.y.min + yLength;
        }
        copyBoxInto(targetWithTransforms, target), transformBox(targetWithTransforms, latestValues), calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
      }
    }
    registerSharedNode(layoutId, node) {
      this.sharedNodes.has(layoutId) || this.sharedNodes.set(layoutId, new NodeStack()), this.sharedNodes.get(layoutId).add(node);
      let config = node.options.initialPromotionConfig;
      node.promote({
        transition: config ? config.transition : void 0,
        preserveFollowOpacity: config && config.shouldPreserveFollowOpacity ? config.shouldPreserveFollowOpacity(node) : void 0
      });
    }
    isLead() {
      let stack = this.getStack();
      return stack ? stack.lead === this : !0;
    }
    getLead() {
      var _a;
      let { layoutId } = this.options;
      return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;
    }
    getPrevLead() {
      var _a;
      let { layoutId } = this.options;
      return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : void 0;
    }
    getStack() {
      let { layoutId } = this.options;
      if (layoutId)
        return this.root.sharedNodes.get(layoutId);
    }
    promote({ needsReset, transition, preserveFollowOpacity } = {}) {
      let stack = this.getStack();
      stack && stack.promote(this, preserveFollowOpacity), needsReset && (this.projectionDelta = void 0, this.needsReset = !0), transition && this.setOptions({ transition });
    }
    relegate() {
      let stack = this.getStack();
      return stack ? stack.relegate(this) : !1;
    }
    resetRotation() {
      let { visualElement } = this.options;
      if (!visualElement)
        return;
      let hasRotate = !1, { latestValues } = visualElement;
      if ((latestValues.rotate || latestValues.rotateX || latestValues.rotateY || latestValues.rotateZ) && (hasRotate = !0), !hasRotate)
        return;
      let resetValues = {};
      for (let i13 = 0; i13 < transformAxes.length; i13++) {
        let key = "rotate" + transformAxes[i13];
        latestValues[key] && (resetValues[key] = latestValues[key], visualElement.setStaticValue(key, 0));
      }
      visualElement.render();
      for (let key in resetValues)
        visualElement.setStaticValue(key, resetValues[key]);
      visualElement.scheduleRender();
    }
    getProjectionStyles(styleProp = {}) {
      var _a, _b;
      let styles = {};
      if (!this.instance || this.isSVG)
        return styles;
      if (this.isVisible)
        styles.visibility = "";
      else
        return { visibility: "hidden" };
      let transformTemplate = this.getTransformTemplate();
      if (this.needsReset)
        return this.needsReset = !1, styles.opacity = "", styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "", styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none", styles;
      let lead = this.getLead();
      if (!this.projectionDelta || !this.layout || !lead.target) {
        let emptyStyles = {};
        return this.options.layoutId && (emptyStyles.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1, emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || ""), this.hasProjected && !hasTransform(this.latestValues) && (emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none", this.hasProjected = !1), emptyStyles;
      }
      let valuesToRender = lead.animationValues || lead.latestValues;
      this.applyTransformsToTarget(), styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender), transformTemplate && (styles.transform = transformTemplate(valuesToRender, styles.transform));
      let { x, y } = this.projectionDelta;
      styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`, lead.animationValues ? styles.opacity = lead === this ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit : styles.opacity = lead === this ? valuesToRender.opacity !== void 0 ? valuesToRender.opacity : "" : valuesToRender.opacityExit !== void 0 ? valuesToRender.opacityExit : 0;
      for (let key in scaleCorrectors) {
        if (valuesToRender[key] === void 0)
          continue;
        let { correct, applyTo } = scaleCorrectors[key], corrected = styles.transform === "none" ? valuesToRender[key] : correct(valuesToRender[key], lead);
        if (applyTo) {
          let num = applyTo.length;
          for (let i13 = 0; i13 < num; i13++)
            styles[applyTo[i13]] = corrected;
        } else
          styles[key] = corrected;
      }
      return this.options.layoutId && (styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none"), styles;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((node) => {
        var _a;
        return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();
      }), this.root.nodes.forEach(clearMeasurements), this.root.sharedNodes.clear();
    }
  };
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  var _a;
  let snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    let { layoutBox: layout2, measuredBox: measuredLayout } = node.layout, { animationType } = node.options, isShared = snapshot.source !== node.layout.source;
    animationType === "size" ? eachAxis((axis) => {
      let axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis], length = calcLength(axisSnapshot);
      axisSnapshot.min = layout2[axis].min, axisSnapshot.max = axisSnapshot.min + length;
    }) : shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout2) && eachAxis((axis) => {
      let axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis], length = calcLength(layout2[axis]);
      axisSnapshot.max = axisSnapshot.min + length, node.relativeTarget && !node.currentAnimation && (node.isProjectionDirty = !0, node.relativeTarget[axis].max = node.relativeTarget[axis].min + length);
    });
    let layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout2, snapshot.layoutBox);
    let visualDelta = createDelta();
    isShared ? calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, !0), snapshot.measuredBox) : calcBoxDelta(visualDelta, layout2, snapshot.layoutBox);
    let hasLayoutChanged = !isDeltaZero(layoutDelta), hasRelativeTargetChanged = !1;
    if (!node.resumeFrom) {
      let relativeParent = node.getClosestProjectingParent();
      if (relativeParent && !relativeParent.resumeFrom) {
        let { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;
        if (parentSnapshot && parentLayout) {
          let relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);
          let relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout2, parentLayout.layoutBox), boxEquals(relativeSnapshot, relativeLayout) || (hasRelativeTargetChanged = !0), relativeParent.options.layoutRoot && (node.relativeTarget = relativeLayout, node.relativeTargetOrigin = relativeSnapshot, node.relativeParent = relativeParent);
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout2,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeTargetChanged
    });
  } else if (node.isLead()) {
    let { onExitComplete } = node.options;
    onExitComplete && onExitComplete();
  }
  node.options.transition = void 0;
}
function propagateDirtyNodes(node) {
  projectionFrameData.totalNodes++, node.parent && (node.isProjecting() || (node.isProjectionDirty = node.parent.isProjectionDirty), node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty || node.parent.isProjectionDirty || node.parent.isSharedProjectionDirty)), node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty));
}
function cleanDirtyNodes(node) {
  node.isProjectionDirty = node.isSharedProjectionDirty = node.isTransformDirty = !1;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function clearIsLayoutDirty(node) {
  node.isLayoutDirty = !1;
}
function resetTransformStyle(node) {
  let { visualElement } = node.options;
  visualElement && visualElement.getProps().onBeforeLayoutMeasure && visualElement.notify("BeforeLayoutMeasure"), node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation(), node.targetDelta = node.relativeTarget = node.target = void 0, node.isProjectionDirty = !0;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetRotation(node) {
  node.resetRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p) {
  output.translate = mix(delta.translate, 0, p), output.scale = mix(delta.scale, 1, p), output.origin = delta.origin, output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to, p) {
  output.min = mix(from.min, to.min, p), output.max = mix(from.max, to.max, p);
}
function mixBox(output, from, to, p) {
  mixAxis(output.x, from.x, to.x, p), mixAxis(output.y, from.y, to.y, p);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
function roundAxis(axis) {
  axis.min = Math.round(axis.min), axis.max = Math.round(axis.max);
}
function roundBox(box) {
  roundAxis(box.x), roundAxis(box.y);
}
function shouldAnimatePositionOnly(animationType, snapshot, layout2) {
  return animationType === "position" || animationType === "preserve-aspect" && !isNear(aspectRatio(snapshot), aspectRatio(layout2), 0.2);
}

// ../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode({
  attachResizeListener: (ref, notify2) => addDomEvent(ref, "resize", notify2),
  measureScroll: () => ({
    x: document.documentElement.scrollLeft || document.body.scrollLeft,
    y: document.documentElement.scrollTop || document.body.scrollTop
  }),
  checkIsScrollRoot: () => !0
});

// ../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
}, HTMLProjectionNode = createProjectionNode({
  measureScroll: (instance) => ({
    x: instance.scrollLeft,
    y: instance.scrollTop
  }),
  defaultParent: () => {
    if (!rootProjectionNode.current) {
      let documentNode = new DocumentProjectionNode({});
      documentNode.mount(window), documentNode.setOptions({ layoutScroll: !0 }), rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: (instance, value) => {
    instance.style.transform = value !== void 0 ? value : "none";
  },
  checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === "fixed")
});

// ../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: {
    Feature: PanGesture
  },
  drag: {
    Feature: DragGesture,
    ProjectionNode: HTMLProjectionNode,
    MeasureLayout
  }
};

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
var splitCSSVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  let match = splitCSSVariableRegex.exec(current);
  if (!match)
    return [,];
  let [, token, fallback] = match;
  return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth = 1) {
  invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`);
  let [token, fallback] = parseCSSVariable(current);
  if (!token)
    return;
  let resolved = window.getComputedStyle(element).getPropertyValue(token);
  return resolved ? resolved.trim() : isCSSVariableToken(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
}
function resolveCSSVariables(visualElement, { ...target }, transitionEnd) {
  let element = visualElement.current;
  if (!(element instanceof Element))
    return { target, transitionEnd };
  transitionEnd && (transitionEnd = { ...transitionEnd }), visualElement.values.forEach((value) => {
    let current = value.get();
    if (!isCSSVariableToken(current))
      return;
    let resolved = getVariableValue(current, element);
    resolved && value.set(resolved);
  });
  for (let key in target) {
    let current = target[key];
    if (!isCSSVariableToken(current))
      continue;
    let resolved = getVariableValue(current, element);
    resolved && (target[key] = resolved, transitionEnd || (transitionEnd = {}), transitionEnd[key] === void 0 && (transitionEnd[key] = current));
  }
  return { target, transitionEnd };
}

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y",
  "translateX",
  "translateY"
]), isPositionalKey = (key) => positionalKeys.has(key), hasPositionalKey = (target) => Object.keys(target).some(isPositionalKey), isNumOrPxType = (v) => v === number || v === px, getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(", ")[pos]), getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {
  if (transform === "none" || !transform)
    return 0;
  let matrix3d = transform.match(/^matrix3d\((.+)\)$/);
  if (matrix3d)
    return getPosFromMatrix(matrix3d[1], pos3);
  {
    let matrix = transform.match(/^matrix\((.+)\)$/);
    return matrix ? getPosFromMatrix(matrix[1], pos2) : 0;
  }
}, transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]), nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));
function removeNonTranslationalTransform(visualElement) {
  let removedTransforms = [];
  return nonTranslationalTransformKeys.forEach((key) => {
    let value = visualElement.getValue(key);
    value !== void 0 && (removedTransforms.push([key, value.get()]), value.set(key.startsWith("scale") ? 1 : 0));
  }), removedTransforms.length && visualElement.render(), removedTransforms;
}
var positionalValues = {
  // Dimensions
  width: ({ x }, { paddingLeft = "0", paddingRight = "0" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
  height: ({ y }, { paddingTop = "0", paddingBottom = "0" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
  top: (_bbox, { top }) => parseFloat(top),
  left: (_bbox, { left }) => parseFloat(left),
  bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),
  right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),
  // Transform
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
}, convertChangedValueTypes = (target, visualElement, changedKeys) => {
  let originBbox = visualElement.measureViewportBox(), element = visualElement.current, elementComputedStyle = getComputedStyle(element), { display } = elementComputedStyle, origin = {};
  display === "none" && visualElement.setStaticValue("display", target.display || "block"), changedKeys.forEach((key) => {
    origin[key] = positionalValues[key](originBbox, elementComputedStyle);
  }), visualElement.render();
  let targetBbox = visualElement.measureViewportBox();
  return changedKeys.forEach((key) => {
    let value = visualElement.getValue(key);
    value && value.jump(origin[key]), target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  }), target;
}, checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {
  target = { ...target }, transitionEnd = { ...transitionEnd };
  let targetPositionalKeys = Object.keys(target).filter(isPositionalKey), removedTransformValues = [], hasAttemptedToRemoveTransformValues = !1, changedValueTypeKeys = [];
  if (targetPositionalKeys.forEach((key) => {
    let value = visualElement.getValue(key);
    if (!visualElement.hasValue(key))
      return;
    let from = origin[key], fromType = findDimensionValueType(from), to = target[key], toType;
    if (isKeyframesTarget(to)) {
      let numKeyframes = to.length, fromIndex = to[0] === null ? 1 : 0;
      from = to[fromIndex], fromType = findDimensionValueType(from);
      for (let i13 = fromIndex; i13 < numKeyframes && to[i13] !== null; i13++)
        toType ? invariant(findDimensionValueType(to[i13]) === toType, "All keyframes must be of the same type") : (toType = findDimensionValueType(to[i13]), invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value"));
    } else
      toType = findDimensionValueType(to);
    if (fromType !== toType)
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        let current = value.get();
        typeof current == "string" && value.set(parseFloat(current)), typeof to == "string" ? target[key] = parseFloat(to) : Array.isArray(to) && toType === px && (target[key] = to.map(parseFloat));
      } else
        fromType != null && fromType.transform && (toType != null && toType.transform) && (from === 0 || to === 0) ? from === 0 ? value.set(toType.transform(from)) : target[key] = fromType.transform(to) : (hasAttemptedToRemoveTransformValues || (removedTransformValues = removeNonTranslationalTransform(visualElement), hasAttemptedToRemoveTransformValues = !0), changedValueTypeKeys.push(key), transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key], value.jump(to));
  }), changedValueTypeKeys.length) {
    let scrollY = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null, convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);
    return removedTransformValues.length && removedTransformValues.forEach(([key, value]) => {
      visualElement.getValue(key).set(value);
    }), visualElement.render(), isBrowser && scrollY !== null && window.scrollTo({ top: scrollY }), { target: convertedTarget, transitionEnd };
  } else
    return { target, transitionEnd };
};
function unitConversion(visualElement, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd) : { target, transitionEnd };
}

// ../../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs
var parseDomVariant = (visualElement, target, origin, transitionEnd) => {
  let resolved = resolveCSSVariables(visualElement, target, transitionEnd);
  return target = resolved.target, transitionEnd = resolved.transitionEnd, unitConversion(visualElement, target, origin, transitionEnd);
};

// ../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs
var prefersReducedMotion = { current: null }, hasReducedMotionListener = { current: !1 };

// ../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs
function initPrefersReducedMotion() {
  if (hasReducedMotionListener.current = !0, !!isBrowser)
    if (window.matchMedia) {
      let motionMediaQuery = window.matchMedia("(prefers-reduced-motion)"), setReducedMotionPreferences = () => prefersReducedMotion.current = motionMediaQuery.matches;
      motionMediaQuery.addListener(setReducedMotionPreferences), setReducedMotionPreferences();
    } else
      prefersReducedMotion.current = !1;
}

// ../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  let { willChange } = next;
  for (let key in next) {
    let nextValue = next[key], prevValue = prev[key];
    if (isMotionValue(nextValue))
      element.addValue(key, nextValue), isWillChangeMotionValue(willChange) && willChange.add(key);
    else if (isMotionValue(prevValue))
      element.addValue(key, motionValue(nextValue, { owner: element })), isWillChangeMotionValue(willChange) && willChange.remove(key);
    else if (prevValue !== nextValue)
      if (element.hasValue(key)) {
        let existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        let latestValue = element.getStaticValue(key);
        element.addValue(key, motionValue(latestValue !== void 0 ? latestValue : nextValue, { owner: element }));
      }
  }
  for (let key in prev)
    next[key] === void 0 && element.removeValue(key);
  return next;
}

// ../../../node_modules/framer-motion/dist/es/render/store.mjs
var visualElementStore = /* @__PURE__ */ new WeakMap();

// ../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs
var featureNames = Object.keys(featureDefinitions), numFeatures = featureNames.length, propEventHandlers = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
], numVariantProps = variantProps.length, VisualElement = class {
  constructor({ parent, props, presenceContext, reducedMotionConfig, visualState }, options = {}) {
    this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
      this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
    }, this.scheduleRender = () => frame.render(this.render, !1, !0);
    let { latestValues, renderState } = visualState;
    this.latestValues = latestValues, this.baseTarget = { ...latestValues }, this.initialValues = props.initial ? { ...latestValues } : {}, this.renderState = renderState, this.parent = parent, this.props = props, this.presenceContext = presenceContext, this.depth = parent ? parent.depth + 1 : 0, this.reducedMotionConfig = reducedMotionConfig, this.options = options, this.isControllingVariants = isControllingVariants(props), this.isVariantNode = isVariantNode(props), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = Boolean(parent && parent.current);
    let { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});
    for (let key in initialMotionValues) {
      let value = initialMotionValues[key];
      latestValues[key] !== void 0 && isMotionValue(value) && (value.set(latestValues[key], !1), isWillChangeMotionValue(willChange) && willChange.add(key));
    }
  }
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(_props, _prevProps) {
    return {};
  }
  mount(instance) {
    this.current = instance, visualElementStore.set(instance, this), this.projection && !this.projection.instance && this.projection.mount(instance), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((value, key) => this.bindToMotionValue(key, value)), hasReducedMotionListener.current || initPrefersReducedMotion(), this.shouldReduceMotion = this.reducedMotionConfig === "never" ? !1 : this.reducedMotionConfig === "always" ? !0 : prefersReducedMotion.current, this.parent && this.parent.children.add(this), this.update(this.props, this.presenceContext);
  }
  unmount() {
    visualElementStore.delete(this.current), this.projection && this.projection.unmount(), cancelFrame(this.notifyUpdate), cancelFrame(this.render), this.valueSubscriptions.forEach((remove) => remove()), this.removeFromVariantTree && this.removeFromVariantTree(), this.parent && this.parent.children.delete(this);
    for (let key in this.events)
      this.events[key].clear();
    for (let key in this.features)
      this.features[key].unmount();
    this.current = null;
  }
  bindToMotionValue(key, value) {
    let valueIsTransform = transformProps.has(key), removeOnChange = value.on("change", (latestValue) => {
      this.latestValues[key] = latestValue, this.props.onUpdate && frame.update(this.notifyUpdate, !1, !0), valueIsTransform && this.projection && (this.projection.isTransformDirty = !0);
    }), removeOnRenderRequest = value.on("renderRequest", this.scheduleRender);
    this.valueSubscriptions.set(key, () => {
      removeOnChange(), removeOnRenderRequest();
    });
  }
  sortNodePosition(other) {
    return !this.current || !this.sortInstanceNodePosition || this.type !== other.type ? 0 : this.sortInstanceNodePosition(this.current, other.current);
  }
  loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures2, initialLayoutGroupConfig) {
    let ProjectionNodeConstructor, MeasureLayout2;
    for (let i13 = 0; i13 < numFeatures; i13++) {
      let name = featureNames[i13], { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent } = featureDefinitions[name];
      ProjectionNode && (ProjectionNodeConstructor = ProjectionNode), isEnabled(renderedProps) && (!this.features[name] && FeatureConstructor && (this.features[name] = new FeatureConstructor(this)), MeasureLayoutComponent && (MeasureLayout2 = MeasureLayoutComponent));
    }
    if (!this.projection && ProjectionNodeConstructor) {
      this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);
      let { layoutId, layout: layout2, drag: drag2, dragConstraints, layoutScroll, layoutRoot } = renderedProps;
      this.projection.setOptions({
        layoutId,
        layout: layout2,
        alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
        visualElement: this,
        scheduleRender: () => this.scheduleRender(),
        /**
         * TODO: Update options in an effect. This could be tricky as it'll be too late
         * to update by the time layout animations run.
         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
         * ensuring it gets called if there's no potential layout animations.
         *
         */
        animationType: typeof layout2 == "string" ? layout2 : "both",
        initialPromotionConfig: initialLayoutGroupConfig,
        layoutScroll,
        layoutRoot
      });
    }
    return MeasureLayout2;
  }
  updateFeatures() {
    for (let key in this.features) {
      let feature = this.features[key];
      feature.isMounted ? feature.update() : (feature.mount(), feature.isMounted = !0);
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.options, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();
  }
  getStaticValue(key) {
    return this.latestValues[key];
  }
  setStaticValue(key, value) {
    this.latestValues[key] = value;
  }
  /**
   * Make a target animatable by Popmotion. For instance, if we're
   * trying to animate width from 100px to 100vw we need to measure 100vw
   * in pixels to determine what we really need to animate to. This is also
   * pluggable to support Framer's custom value types like Color,
   * and CSS variables.
   */
  makeTargetAnimatable(target, canMutate = !0) {
    return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(props, presenceContext) {
    (props.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = props, this.prevPresenceContext = this.presenceContext, this.presenceContext = presenceContext;
    for (let i13 = 0; i13 < propEventHandlers.length; i13++) {
      let key = propEventHandlers[i13];
      this.propEventSubscriptions[key] && (this.propEventSubscriptions[key](), delete this.propEventSubscriptions[key]);
      let listener = props["on" + key];
      listener && (this.propEventSubscriptions[key] = this.on(key, listener));
    }
    this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(name) {
    return this.props.variants ? this.props.variants[name] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  getVariantContext(startAtParent = !1) {
    if (startAtParent)
      return this.parent ? this.parent.getVariantContext() : void 0;
    if (!this.isControllingVariants) {
      let context2 = this.parent ? this.parent.getVariantContext() || {} : {};
      return this.props.initial !== void 0 && (context2.initial = this.props.initial), context2;
    }
    let context = {};
    for (let i13 = 0; i13 < numVariantProps; i13++) {
      let name = variantProps[i13], prop = this.props[name];
      (isVariantLabel(prop) || prop === !1) && (context[name] = prop);
    }
    return context;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(child) {
    let closestVariantNode = this.getClosestVariantNode();
    if (closestVariantNode)
      return closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child), () => closestVariantNode.variantChildren.delete(child);
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(key, value) {
    value !== this.values.get(key) && (this.removeValue(key), this.bindToMotionValue(key, value)), this.values.set(key, value), this.latestValues[key] = value.get();
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(key) {
    this.values.delete(key);
    let unsubscribe = this.valueSubscriptions.get(key);
    unsubscribe && (unsubscribe(), this.valueSubscriptions.delete(key)), delete this.latestValues[key], this.removeValueFromRenderState(key, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(key) {
    return this.values.has(key);
  }
  getValue(key, defaultValue) {
    if (this.props.values && this.props.values[key])
      return this.props.values[key];
    let value = this.values.get(key);
    return value === void 0 && defaultValue !== void 0 && (value = motionValue(defaultValue, { owner: this }), this.addValue(key, value)), value;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(key) {
    return this.latestValues[key] !== void 0 || !this.current ? this.latestValues[key] : this.readValueFromInstance(this.current, key, this.options);
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(key, value) {
    this.baseTarget[key] = value;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(key) {
    var _a;
    let { initial } = this.props, valueFromInitial = typeof initial == "string" || typeof initial == "object" ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key] : void 0;
    if (initial && valueFromInitial !== void 0)
      return valueFromInitial;
    let target = this.getBaseTargetFromProps(this.props, key);
    return target !== void 0 && !isMotionValue(target) ? target : this.initialValues[key] !== void 0 && valueFromInitial === void 0 ? void 0 : this.baseTarget[key];
  }
  on(eventName, callback) {
    return this.events[eventName] || (this.events[eventName] = new SubscriptionManager()), this.events[eventName].add(callback);
  }
  notify(eventName, ...args) {
    this.events[eventName] && this.events[eventName].notify(...args);
  }
};

// ../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs
var DOMVisualElement = class extends VisualElement {
  sortInstanceNodePosition(a8, b) {
    return a8.compareDocumentPosition(b) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(props, key) {
    return props.style ? props.style[key] : void 0;
  }
  removeValueFromRenderState(key, { vars, style }) {
    delete vars[key], delete style[key];
  }
  makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {
    let origin = getOrigin(target, transition || {}, this);
    if (transformValues && (transitionEnd && (transitionEnd = transformValues(transitionEnd)), target && (target = transformValues(target)), origin && (origin = transformValues(origin))), isMounted) {
      checkTargetForNewValues(this, target, origin);
      let parsed = parseDomVariant(this, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd, target = parsed.target;
    }
    return {
      transition,
      transitionEnd,
      ...target
    };
  }
};

// ../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs
function getComputedStyle2(element) {
  return window.getComputedStyle(element);
}
var HTMLVisualElement = class extends DOMVisualElement {
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      let defaultType = getDefaultValueType(key);
      return defaultType && defaultType.default || 0;
    } else {
      let computedStyle = getComputedStyle2(instance), value = (isCSSVariableName(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
      return typeof value == "string" ? value.trim() : value;
    }
  }
  measureInstanceViewportBox(instance, { transformPagePoint }) {
    return measureViewportBox(instance, transformPagePoint);
  }
  build(renderState, latestValues, options, props) {
    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
  }
  scrapeMotionValuesFromProps(props, prevProps) {
    return scrapeMotionValuesFromProps(props, prevProps);
  }
  handleChildMotionValue() {
    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
    let { children } = this.props;
    isMotionValue(children) && (this.childSubscription = children.on("change", (latest) => {
      this.current && (this.current.textContent = `${latest}`);
    }));
  }
  renderInstance(instance, renderState, styleProp, projection) {
    renderHTML(instance, renderState, styleProp, projection);
  }
};

// ../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs
var SVGVisualElement = class extends DOMVisualElement {
  constructor() {
    super(...arguments), this.isSVGTag = !1;
  }
  getBaseTargetFromProps(props, key) {
    return props[key];
  }
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      let defaultType = getDefaultValueType(key);
      return defaultType && defaultType.default || 0;
    }
    return key = camelCaseAttributes.has(key) ? key : camelToDash(key), instance.getAttribute(key);
  }
  measureInstanceViewportBox() {
    return createBox();
  }
  scrapeMotionValuesFromProps(props, prevProps) {
    return scrapeMotionValuesFromProps2(props, prevProps);
  }
  build(renderState, latestValues, options, props) {
    buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);
  }
  renderInstance(instance, renderState, styleProp, projection) {
    renderSVG(instance, renderState, styleProp, projection);
  }
  mount(instance) {
    this.isSVGTag = isSVGTag(instance.tagName), super.mount(instance);
  }
};

// ../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = (Component, options) => isSVGComponent(Component) ? new SVGVisualElement(options, { enableHardwareAcceleration: !1 }) : new HTMLVisualElement(options, { enableHardwareAcceleration: !0 });

// ../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs
var layout = {
  layout: {
    ProjectionNode: HTMLProjectionNode,
    MeasureLayout
  }
};

// ../../../node_modules/framer-motion/dist/es/render/dom/motion.mjs
var preloadedFeatures = {
  ...animations,
  ...gestureAnimations,
  ...drag,
  ...layout
}, motion = /* @__PURE__ */ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));

// ../../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react23 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react22 = __toESM(require_react(), 1);
function useIsMounted() {
  let isMounted = (0, import_react22.useRef)(!1);
  return useIsomorphicLayoutEffect(() => (isMounted.current = !0, () => {
    isMounted.current = !1;
  }), []), isMounted;
}

// ../../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs
function useForceUpdate() {
  let isMounted = useIsMounted(), [forcedRenderCount, setForcedRenderCount] = (0, import_react23.useState)(0), forceRender = (0, import_react23.useCallback)(() => {
    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
  }, [forcedRenderCount]);
  return [(0, import_react23.useCallback)(() => frame.postRender(forceRender), [forceRender]), forcedRenderCount];
}

// ../../../node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var React2 = __toESM(require_react(), 1), import_react25 = __toESM(require_react(), 1);

// ../../../node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs
var import_react24 = __toESM(require_react(), 1), DeprecatedLayoutGroupContext = (0, import_react24.createContext)(null);

// ../../../node_modules/framer-motion/dist/es/projection/node/group.mjs
var notify = (node) => !node.isLayoutDirty && node.willUpdate(!1);
function nodeGroup() {
  let nodes = /* @__PURE__ */ new Set(), subscriptions = /* @__PURE__ */ new WeakMap(), dirtyAll = () => nodes.forEach(notify);
  return {
    add: (node) => {
      nodes.add(node), subscriptions.set(node, node.addEventListener("willUpdate", dirtyAll));
    },
    remove: (node) => {
      nodes.delete(node);
      let unsubscribe = subscriptions.get(node);
      unsubscribe && (unsubscribe(), subscriptions.delete(node)), dirtyAll();
    },
    dirty: dirtyAll
  };
}

// ../../../node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var shouldInheritGroup = (inherit) => inherit === !0, shouldInheritId = (inherit) => shouldInheritGroup(inherit === !0) || inherit === "id", LayoutGroup = ({ children, id: id3, inherit = !0 }) => {
  let layoutGroupContext = (0, import_react25.useContext)(LayoutGroupContext), deprecatedLayoutGroupContext = (0, import_react25.useContext)(DeprecatedLayoutGroupContext), [forceRender, key] = useForceUpdate(), context = (0, import_react25.useRef)(null), upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;
  context.current === null && (shouldInheritId(inherit) && upstreamId && (id3 = id3 ? upstreamId + "-" + id3 : upstreamId), context.current = {
    id: id3,
    group: shouldInheritGroup(inherit) ? layoutGroupContext.group || nodeGroup() : nodeGroup()
  });
  let memoizedContext = (0, import_react25.useMemo)(() => ({ ...context.current, forceRender }), [key]);
  return React2.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children);
};

// ../../components/bounce-it.jsx
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1), BounceIt = ({
  disable = !1,
  onClick = (_) => {
  },
  className: className2 = "",
  ...etc
}) => disable ? /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("div", { children: etc.children }) : /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  motion.div,
  {
    tabIndex: -1,
    className: `${className2} flex outline-none`,
    initial: { scale: 1 },
    whileTap: { scale: 0.99 },
    onClick,
    ...etc
  }
);

// ../../components/atoms/button.jsx
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var IconButtonStyles = [
  "outline",
  "basic",
  "plain"
];
var ButtonBase = (0, import_react26.forwardRef)(({
  variant,
  size: size2 = "medium",
  onClick,
  href,
  label: label2,
  type: type2,
  disabled: disabled2,
  sharpLeft = !1,
  sharpRight = !1,
  noBorder,
  className: className2,
  noRounded,
  noRing,
  IconComp,
  DisclosureComp,
  iconOnly = !1,
  selected = !1,
  block = !1,
  ...props
}, ref) => {
  let Component = "button", extraProps = {};
  return extraProps.onClick = onClick, href ? (Component = import_react27.Link, extraProps.to = href) : extraProps.disabled = disabled2, /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(BounceIt, { className: (0, import_classnames.default)(
    className2,
    {
      "w-fit": !block
    }
  ), children: /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(
    Component,
    {
      ref,
      type: type2,
      className: (0, import_classnames.default)(
        "w-full",
        {
          "bodyMd-medium": variant !== "primary-plain" && variant !== "secondary-plain" && variant !== "critical-plain" && variant !== "plain",
          bodyMd: variant === "primary-plain" || variant === "secondary-plain" || variant !== "critical-plain" || variant !== "plain"
        },
        "relative ring-offset-1",
        "outline-none shadow-button",
        "flex flex-row gap-2 items-center justify-center",
        "disabled:text-text-disabled",
        {
          ...noRing ? {} : {
            "focus-visible:ring-2 focus:ring-border-focus focus:z-10": !0
          }
        },
        {
          ...noRounded ? {} : {
            "rounded-none": sharpLeft && sharpRight,
            "rounded-r": sharpLeft && !sharpRight,
            "rounded-l": !sharpLeft && sharpRight,
            rounded: !sharpLeft && !sharpRight
          }
        },
        "transition-all",
        "disabled:pointer-events-none",
        {
          ...noBorder ? { "border-none": !0 } : {
            "border-border-default disabled:border-border-disabled": variant === "basic" || variant === "outline" || variant === "secondary-outline",
            "border-border-primary disabled:border-border-disabled": variant === "primary" || variant === "primary-outline",
            "border-border-secondary disabled:border-border-disabled": variant === "secondary",
            "border-border-danger disabled:border-border-disabled": variant === "critical-outline" || variant === "critical",
            "border-none": variant === "plain" || variant === "primary-plain" || variant === "critical-plain" || variant === "secondary-plain",
            border: !(variant === "plain" || variant === "primary-plain" || variant === "critical-plain" || variant === "secondary-plain")
          }
        },
        {
          "bg-surface-default hover:bg-surface-hovered active:bg-surface-pressed": variant === "basic",
          "bg-surface-pressed hover:bg-surface-pressed active:bg-surface-pressed": variant === "basic" && selected,
          "bg-surface-primary-default hover:bg-surface-primary-hovered active:bg-surface-primary-pressed disabled:bg-surface-default": variant === "primary",
          "bg-surface-secondary-default hover:bg-surface-secondary-hovered active:bg-surface-secondary-pressed disabled:bg-surface-default": variant === "secondary",
          "bg-surface-danger-default hover:bg-surface-danger-hovered active:bg-surface-danger-pressed disabled:bg-surface-default": variant === "critical",
          "bg-none shadow-none hover:bg-surface-danger-subdued active:bg-surface-danger-pressed hover:shadow-button active:shadow-button": variant === "critical-outline",
          "bg-none shadow-none hover:bg-surface-primary-subdued active:bg-surface-primary-pressed hover:shadow-button active:shadow-button": variant === "primary-outline",
          "bg-none shadow-none hover:bg-surface-secondary-hovered active:bg-surface-secondary-pressed hover:shadow-button active:shadow-button": variant === "secondary-outline",
          "bg-none shadow-none hover:bg-surface-hovered active:bg-surface-pressed hover:shadow-button active:shadow-button": variant === "outline",
          "bg-surface-pressed shadow-none hover:bg-surface-hovered active:bg-surface-pressed hover:shadow-button active:shadow-button": variant === "outline" && selected,
          "bg-none shadow-none active:bg-surface-pressed active:shadow-button": variant === "plain" && !iconOnly,
          "bg-none shadow-none hover:bg-surface-hovered active:bg-surface-pressed active:shadow-button": variant === "plain" && iconOnly,
          "bg-none shadow-none active:bg-surface-primary-pressed active:shadow-button": variant === "primary-plain",
          "bg-none shadow-none active:bg-surface-secondary-pressed active:shadow-button": variant === "secondary-plain",
          "bg-none shadow-none active:bg-surface-danger-pressed active:shadow-button": variant === "critical-plain"
        },
        {
          "text-text-default": variant === "basic" || variant === "plain" || variant === "outline",
          "active:text-text-on-primary": variant === "primary-plain" || variant === "critical-plain" || variant === "secondary-plain",
          "text-text-on-primary": variant === "primary" || variant === "critical" || variant === "secondary" || variant === "secondary-outline",
          "text-text-danger": variant === "critical-outline" || variant === "critical-plain",
          "text-text-primary": variant === "primary-outline" || variant === "primary-plain",
          "text-text-secondary": variant === "secondary-plain"
        },
        {
          "focus:underline": noRing
        },
        {
          "hover:underline": variant === "plain" || variant === "primary-plain" || variant === "critical-plain" || variant === "secondary-plain"
        },
        {
          ...iconOnly ? {
            "p-3": size2 === "large",
            "p-2": size2 === "medium",
            "p-1": size2 === "small"
          } : {
            "px-6 py-3": size2 === "large" && variant !== "plain" && variant !== "critical-plain" && variant !== "primary-plain" && variant !== "secondary-plain",
            "px-4 py-2": size2 === "medium" && variant !== "plain" && variant !== "critical-plain" && variant !== "primary-plain" && variant !== "secondary-plain",
            "px-2 py-1": size2 === "small" || variant === "plain" || variant === "primary-plain" || variant === "critical-plain" || variant === "secondary-plain"
          }
        }
      ),
      ...props,
      ...extraProps,
      children: [
        IconComp && /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(IconComp, { size: iconOnly ? 20 : 16, color: "currentColor" }),
        !iconOnly && label2,
        DisclosureComp && !iconOnly && /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(DisclosureComp, { size: 16, color: "currentColor" })
      ]
    }
  ) });
}), IconButton = ({
  variant,
  size: size2 = "medium",
  onClick,
  href,
  type: type2,
  disabled: disabled2,
  sharpLeft = !1,
  sharpRight = !1,
  className: className2,
  noRounded,
  noRing,
  IconComp,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(ButtonBase, { ...props, iconOnly: !0, label: "", variant, size: size2, onClick, href, type: type2, disabled: disabled2, sharpLeft, sharpRight, noRing, noRounded, IconComp, className: className2 }), Button = (0, import_react26.forwardRef)(({
  label: label2,
  variant,
  size: size2 = "medium",
  onClick,
  href,
  type: type2,
  disabled: disabled2,
  sharpLeft = !1,
  sharpRight = !1,
  className: className2,
  noRounded,
  noBorder,
  noRing,
  IconComp,
  DisclosureComp,
  block,
  ...props
}, ref) => /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(ButtonBase, { ref, block, label: label2, noBorder, DisclosureComp, variant, size: size2, onClick, href, type: type2, disabled: disabled2, sharpLeft, sharpRight, noRing, noRounded, IconComp, className: className2, ...props }));
Button.propTypes = {
  /**
   * How the button looks like?
   */
  variant: import_prop_types.default.oneOf([
    "outline",
    "basic",
    "plain",
    "primary",
    "primary-outline",
    "secondary",
    "secondary-outline",
    "critical",
    "critical-outline",
    "primary-plain",
    "secondary-plain",
    "critical-plain"
  ]),
  /**
   * How large should the button be?
   */
  size: import_prop_types.default.oneOf(["small", "medium", "large"]),
  /**
   * Button contents
   */
  label: import_prop_types.default.string.isRequired,
  /**
   * Optional click handler
   */
  onClick: import_prop_types.default.func,
  /**
   * Href for link
   */
  href: import_prop_types.default.string,
  /**
   * Disable button
   */
  disabled: import_prop_types.default.bool,
  type: import_prop_types.default.oneOf(["button", "submit"])
};
Button.defaultProps = {
  variant: "primary",
  size: "medium",
  onClick: void 0,
  type: "button"
};
IconButton.propTypes = {
  /**
   * How the button looks like?
   */
  variant: import_prop_types.default.oneOf(IconButtonStyles),
  /**
   * How large should the button be?
   */
  size: import_prop_types.default.oneOf(["small", "medium", "large"]),
  /**
   * Button contents
   */
  /**
   * Optional click handler
   */
  onClick: import_prop_types.default.func,
  /**
   * Href for link
   */
  href: import_prop_types.default.string,
  /**
   * Disable button
   */
  disabled: import_prop_types.default.bool,
  type: import_prop_types.default.oneOf(["button", "submit"])
};
IconButton.defaultProps = {
  variant: "basic",
  size: "medium",
  onClick: void 0,
  type: "button"
};

// ../../components/atoms/input.jsx
var import_classnames2 = __toESM(require_classnames(), 1), import_prop_types2 = __toESM(require_prop_types(), 1), import_react51 = __toESM(require_react(), 1);

// ../../../node_modules/@jengaicons/react/dist/src/base.js
var import_react28 = __toESM(require_react(), 1), o = (0, import_react28.createContext)({});

// ../../../node_modules/@jengaicons/react/dist/icons/fill/ArrowLeftFill.js
var e = __toESM(require_react(), 1), import_react29 = __toESM(require_react(), 1);
var i = (0, import_react29.forwardRef)(function(r24, i13) {
  var l9 = r24.size, s = r24.color, a8 = r24.alt, n = r24.children, c = r24.mirrored, m = r24.style, d = (0, import_react29.useContext)(o), f = d.alt, h = d.children, p = d.color, w = d.mirrored, g = d.size, u = d.style;
  return e.createElement("svg", { width: l9 || g || 32, height: l9 || g || 32, transform: c || w ? "scale(-1, 1)" : void 0, ref: i13, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!a8) && e.createElement("title", null, a8 || f), e.createElement("path", { stroke: s || p || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", d: "M11.325 9.919 4.96 16.283l6.364 6.364M4.96 16.283h24" }), n || h);
});
i.displayName = "ArrowLeftFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/ArrowsDownUpFill.js
var e2 = __toESM(require_react(), 1), import_react30 = __toESM(require_react(), 1);
var l = (0, import_react30.forwardRef)(function(r24, l9) {
  var s = r24.size, i13 = r24.color, a8 = r24.alt, n = r24.children, c = r24.mirrored, m = r24.style, d = (0, import_react30.useContext)(o), p = d.alt, f = d.children, h = d.color, v = d.mirrored, w = d.size, g = d.style;
  return e2.createElement("svg", { width: s || w || 32, height: s || w || 32, transform: c || v ? "scale(-1, 1)" : void 0, ref: l9, style: Object.assign(Object.assign({}, g), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!p || !!a8) && e2.createElement("title", null, a8 || p), e2.createElement("path", { stroke: i13 || h || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", d: "M9.765 4.283v24M25.2 28.283v-24M20.931 8.603l4.218-4.268 4.217 4.268M5.497 23.963l4.217 4.268 4.217-4.268" }), n || f);
});
l.displayName = "ArrowsDownUpFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/BellFill.js
var e3 = __toESM(require_react(), 1), import_react31 = __toESM(require_react(), 1);
var a = (0, import_react31.forwardRef)(function(l9, a8) {
  var i13 = l9.size, c = l9.color, o3 = l9.alt, s = l9.children, n = l9.mirrored, m = l9.style, d = (0, import_react31.useContext)(o), v = d.alt, f = d.children, h = d.color, p = d.mirrored, g = d.size, u = d.style;
  return e3.createElement("svg", { width: i13 || g || 32, height: i13 || g || 32, transform: n || p ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!v || !!o3) && e3.createElement("title", null, o3 || v), e3.createElement("path", { fill: c || h || "#000000", fillRule: "evenodd", d: "M6.617 22.555c-.218.34.026.8.431.8h4.912v.986c0 1.316.53 2.574 1.47 3.5a5.03 5.03 0 0 0 3.53 1.442 5.03 5.03 0 0 0 3.53-1.442 4.913 4.913 0 0 0 1.47-3.5v-.985h4.911c.405 0 .65-.46.432-.802-.777-1.214-2.161-3.566-2.469-5.329a11.313 11.313 0 0 1-.122-2.595C25 9.694 21.904 4.283 16.96 4.283S8.919 9.694 9.208 14.63c.052.891.022 1.768-.123 2.595-.307 1.762-1.692 4.115-2.468 5.33Zm13.343.8h-6v.986c0 .775.312 1.522.873 2.075a3.03 3.03 0 0 0 2.127.867c.8 0 1.565-.314 2.127-.867.56-.553.873-1.3.873-2.075v-.985Z", clipRule: "evenodd" }), s || f);
});
a.displayName = "BellFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/BellSimpleFill.js
var e4 = __toESM(require_react(), 1), import_react32 = __toESM(require_react(), 1);
var i2 = (0, import_react32.forwardRef)(function(l9, i13) {
  var a8 = l9.size, o3 = l9.color, s = l9.alt, c = l9.children, n = l9.mirrored, m = l9.style, d = (0, import_react32.useContext)(o), f = d.alt, h = d.children, p = d.color, v = d.mirrored, g = d.size, u = d.style;
  return e4.createElement("svg", { width: a8 || g || 32, height: a8 || g || 32, transform: n || v ? "scale(-1, 1)" : void 0, ref: i13, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!s) && e4.createElement("title", null, s || f), e4.createElement("path", { fill: o3 || p || "#000000", fillRule: "evenodd", d: "M6.617 22.555c-.218.34.026.8.431.8h19.823c.405 0 .65-.46.432-.8-.777-1.215-2.161-3.567-2.469-5.33a11.313 11.313 0 0 1-.122-2.595C25 9.694 21.904 4.283 16.96 4.283S8.919 9.694 9.208 14.63c.052.891.022 1.768-.123 2.595-.307 1.762-1.692 4.115-2.468 5.33Zm6.343 4.728a1 1 0 1 0 0 2h8a1 1 0 0 0 0-2h-8Z", clipRule: "evenodd" }), c || h);
});
i2.displayName = "BellSimpleFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/CaretDownFill.js
var e5 = __toESM(require_react(), 1), import_react33 = __toESM(require_react(), 1);
var a2 = (0, import_react33.forwardRef)(function(r24, a8) {
  var i13 = r24.size, o3 = r24.color, s = r24.alt, n = r24.children, c = r24.mirrored, m = r24.style, d = (0, import_react33.useContext)(o), f = d.alt, h = d.children, p = d.color, w = d.mirrored, g = d.size, v = d.style;
  return e5.createElement("svg", { width: i13 || g || 32, height: i13 || g || 32, transform: c || w ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, v), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!s) && e5.createElement("title", null, s || f), e5.createElement("path", { fill: o3 || p || "#000000", d: "M16.606 21.93 5.814 11.136a.5.5 0 0 1 .353-.854h21.586a.5.5 0 0 1 .353.854L17.313 21.928a.5.5 0 0 1-.707 0Z" }), n || h);
});
a2.displayName = "CaretDownFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/CaretUpFill.js
var e6 = __toESM(require_react(), 1), import_react34 = __toESM(require_react(), 1);
var a3 = (0, import_react34.forwardRef)(function(r24, a8) {
  var i13 = r24.size, s = r24.color, o3 = r24.alt, n = r24.children, c = r24.mirrored, m = r24.style, d = (0, import_react34.useContext)(o), f = d.alt, h = d.children, p = d.color, g = d.mirrored, v = d.size, w = d.style;
  return e6.createElement("svg", { width: i13 || v || 32, height: i13 || v || 32, transform: c || g ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, w), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!o3) && e6.createElement("title", null, o3 || f), e6.createElement("path", { fill: s || p || "#000000", d: "M16.607 10.636 5.814 21.43a.5.5 0 0 0 .353.854h21.586a.5.5 0 0 0 .354-.854L17.314 10.637a.5.5 0 0 0-.707 0Z" }), n || h);
});
a3.displayName = "CaretUpFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/EnvelopeFill.js
var e7 = __toESM(require_react(), 1), import_react35 = __toESM(require_react(), 1);
var a4 = (0, import_react35.forwardRef)(function(l9, a8) {
  var i13 = l9.size, o3 = l9.color, s = l9.alt, n = l9.children, c = l9.mirrored, m = l9.style, d = (0, import_react35.useContext)(o), v = d.alt, f = d.children, h = d.color, p = d.mirrored, g = d.size, u = d.style;
  return e7.createElement("svg", { width: i13 || g || 32, height: i13 || g || 32, transform: c || p ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!v || !!s) && e7.createElement("title", null, s || v), e7.createElement("path", { fill: o3 || h || "#000000", fillRule: "evenodd", d: "M5.96 7.283a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h22a1 1 0 0 0 1-1v-16a1 1 0 0 0-1-1h-22Zm9.017 10.603-7.306 6.428a1 1 0 1 1-1.321-1.502l7.18-6.316-7.138-6.85a.872.872 0 0 1 0-1.27.963.963 0 0 1 1.323 0l9.218 8.847 9.332-8.958a.963.963 0 0 1 1.323 0c.365.351.365.92 0 1.27l-7.14 6.852 7.137 6.279a1 1 0 0 1-1.322 1.501L19 17.777l-2.067 1.985-1.956-1.876Z", clipRule: "evenodd" }), n || f);
});
a4.displayName = "EnvelopeFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/GithubLogoFill.js
var e8 = __toESM(require_react(), 1), import_react36 = __toESM(require_react(), 1);
var a5 = (0, import_react36.forwardRef)(function(l9, a8) {
  var i13 = l9.size, o3 = l9.color, c = l9.alt, s = l9.children, n = l9.mirrored, m = l9.style, d = (0, import_react36.useContext)(o), f = d.alt, v = d.children, h = d.color, p = d.mirrored, g = d.size, u = d.style;
  return e8.createElement("svg", { width: i13 || g || 32, height: i13 || g || 32, transform: n || p ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!c) && e8.createElement("title", null, c || f), e8.createElement("path", { fill: o3 || h || "#000000", fillRule: "evenodd", d: "M20.122 29.09c5.651-1.413 9.838-6.524 9.838-12.613 0-7.18-5.82-13-13-13s-13 5.82-13 13c0 6.089 4.186 11.2 9.838 12.612a3.243 3.243 0 0 1-.067-.658V25.63c-.975.288-3.143.444-4.163-1.203-.203-.535-.785-1.716-1.497-2.157-.89-.551-.595-.723-.462-.798.345-.091 1.214-.089 1.92.648.133.147.43.493.55.701l.01.017c.177.309 1.127 1.972 3.66 1.007l.093-.028a3.227 3.227 0 0 1 .907-1.51 12.708 12.708 0 0 1-1.784-.386c-2.464-.616-4.27-2.82-4.27-5.852 0-1.638.514-2.914 1.352-3.91-.519-1.195-.118-2.715.151-3.333 1.182-.154 2.84.846 3.446 1.261.987-.235 2.125-.358 3.388-.358 1.186 0 2.308.124 3.295.35.663-.437 2.235-1.406 3.42-1.24.269.58.674 2.023.2 3.26a6.262 6.262 0 0 1 1.391 3.97c0 2.421-1.339 4.554-3.254 5.461-.816.355-1.807.626-2.907.782a3.22 3.22 0 0 1 1.012 2.348v3.772c0 .226-.023.446-.067.658Z", clipRule: "evenodd" }), s || v);
});
a5.displayName = "GithubLogoFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/GitlabLogoFill.js
var e9 = __toESM(require_react(), 1), import_react37 = __toESM(require_react(), 1);
var l6 = (0, import_react37.forwardRef)(function(t17, l9) {
  var i13 = t17.size, s = t17.color, n = t17.alt, a8 = t17.children, c = t17.mirrored, d = t17.style, m = (0, import_react37.useContext)(o), h = m.alt, f = m.children, p = m.color, k = m.mirrored, u = m.size, g = m.style;
  return e9.createElement("svg", { width: i13 || u || 32, height: i13 || u || 32, transform: c || k ? "scale(-1, 1)" : void 0, ref: l9, style: Object.assign(Object.assign({}, g), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!h || !!n) && e9.createElement("title", null, n || h), e9.createElement("path", { stroke: s || p || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", d: "m27.5 13 1.462 5.454-11.786 8.455-12.299-8.455L6.5 13" }), e9.createElement("path", { fill: s || p || "#000000", stroke: s || p || "#000000", strokeLinejoin: "round", strokeWidth: "2", d: "M12 13H6.5l2-7 3.5 7ZM22 13h5.5l-2-7-3.5 7Z" }), e9.createElement("path", { fill: s || p || "#000000", stroke: s || p || "#000000", strokeLinejoin: "round", d: "M22 13H12l5 14 5-14Z" }), a8 || f);
});
l6.displayName = "GitlabLogoFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/PlusFill.js
var e10 = __toESM(require_react(), 1), import_react38 = __toESM(require_react(), 1);
var a6 = (0, import_react38.forwardRef)(function(l9, a8) {
  var i13 = l9.size, o3 = l9.color, s = l9.alt, n = l9.children, c = l9.mirrored, m = l9.style, d = (0, import_react38.useContext)(o), v = d.alt, f = d.children, h = d.color, p = d.mirrored, u = d.size, g = d.style;
  return e10.createElement("svg", { width: i13 || u || 32, height: i13 || u || 32, transform: c || p ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, g), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!v || !!s) && e10.createElement("title", null, s || v), e10.createElement("path", { fill: o3 || h || "#000000", fillRule: "evenodd", d: "M17.96 9.28a1 1 0 1 0-2 0v6.003H9.957a1 1 0 1 0 0 2h6.003v6.003a1 1 0 1 0 2 0v-6.003h6.003a1 1 0 0 0 0-2H17.96V9.28Z", clipRule: "evenodd" }), n || f);
});
a6.displayName = "PlusFill";

// ../../../node_modules/@jengaicons/react/dist/icons/fill/XCircleFill.js
var e11 = __toESM(require_react(), 1), import_react39 = __toESM(require_react(), 1);
var a7 = (0, import_react39.forwardRef)(function(l9, a8) {
  var i13 = l9.size, s = l9.color, o3 = l9.alt, c = l9.children, n = l9.mirrored, m = l9.style, d = (0, import_react39.useContext)(o), f = d.alt, p = d.children, v = d.color, h = d.mirrored, g = d.size, u = d.style;
  return e11.createElement("svg", { width: i13 || g || 32, height: i13 || g || 32, transform: n || h ? "scale(-1, 1)" : void 0, ref: a8, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!o3) && e11.createElement("title", null, o3 || f), e11.createElement("path", { fill: s || v || "#000000", fillRule: "evenodd", d: "M16.96 28.283c6.627 0 12-5.373 12-12s-5.373-12-12-12c-6.628 0-12 5.373-12 12s5.372 12 12 12Zm4.707-16.707a1 1 0 0 1 0 1.414l-3.293 3.293 3.293 3.293a1 1 0 0 1-1.414 1.414l-3.293-3.293-3.293 3.293a1 1 0 0 1-1.414-1.414l3.293-3.293-3.293-3.293a1 1 0 1 1 1.414-1.414l3.293 3.293 3.293-3.293a1 1 0 0 1 1.414 0Z", clipRule: "evenodd" }), c || p);
});
a7.displayName = "XCircleFill";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/ArrowLeft.js
var e12 = __toESM(require_react(), 1), import_react40 = __toESM(require_react(), 1);
var i3 = (0, import_react40.forwardRef)(function(r24, i13) {
  var s = r24.size, l9 = r24.color, a8 = r24.alt, n = r24.children, c = r24.mirrored, m = r24.weight, d = r24.style, h = (0, import_react40.useContext)(o), f = h.alt, w = h.children, g = h.color, p = h.mirrored, u = h.size, v = h.weight, k = h.style;
  return e12.createElement("svg", { width: s || u || 32, height: s || u || 32, transform: c || p ? "scale(-1, 1)" : void 0, strokeWidth: m || v || 2, ref: i13, style: Object.assign(Object.assign({}, k), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!a8) && e12.createElement("title", null, a8 || f), e12.createElement("path", { stroke: l9 || g || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: m || v || "2", d: "M10.364 9.636 4 16l6.364 6.364M4 16h24" }), n || w);
});
i3.displayName = "ArrowLeft";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/ArrowRight.js
var e13 = __toESM(require_react(), 1), import_react41 = __toESM(require_react(), 1);
var i4 = (0, import_react41.forwardRef)(function(r24, i13) {
  var s = r24.size, l9 = r24.color, a8 = r24.alt, n = r24.children, c = r24.mirrored, m = r24.weight, d = r24.style, h = (0, import_react41.useContext)(o), g = h.alt, w = h.children, f = h.color, p = h.mirrored, u = h.size, v = h.weight, k = h.style;
  return e13.createElement("svg", { width: s || u || 32, height: s || u || 32, transform: c || p ? "scale(-1, 1)" : void 0, strokeWidth: m || v || 2, ref: i13, style: Object.assign(Object.assign({}, k), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!g || !!a8) && e13.createElement("title", null, a8 || g), e13.createElement("path", { stroke: l9 || f || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: m || v || "2", d: "M21.636 9.636 28 16l-6.364 6.364M28 15.994H4" }), n || w);
});
i4.displayName = "ArrowRight";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/CircleDashed.js
var e14 = __toESM(require_react(), 1), import_react42 = __toESM(require_react(), 1);
var i5 = (0, import_react42.forwardRef)(function(r24, i13) {
  var o3 = r24.size, a8 = r24.color, l9 = r24.alt, c = r24.children, n = r24.mirrored, m = r24.weight, d = r24.style, h = (0, import_react42.useContext)(o), f = h.alt, g = h.children, p = h.color, w = h.mirrored, k = h.size, v = h.weight, u = h.style;
  return e14.createElement("svg", { width: o3 || k || 32, height: o3 || k || 32, transform: n || w ? "scale(-1, 1)" : void 0, strokeWidth: m || v || 2, ref: i13, style: Object.assign(Object.assign({}, u), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!l9) && e14.createElement("title", null, l9 || f), e14.createElement("path", { stroke: a8 || p || "#000000", strokeDasharray: "4 4", strokeLinecap: "round", strokeMiterlimit: "10", strokeWidth: m || v || "2", d: "M16 28c6.627 0 12-5.373 12-12S22.627 4 16 4 4 9.373 4 16s5.373 12 12 12Z" }), c || g);
});
i5.displayName = "CircleDashed";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/Envelope.js
var e15 = __toESM(require_react(), 1), import_react43 = __toESM(require_react(), 1);
var i6 = (0, import_react43.forwardRef)(function(t17, i13) {
  var s = t17.size, n = t17.color, l9 = t17.alt, a8 = t17.children, c = t17.mirrored, d = t17.weight, m = t17.style, h = (0, import_react43.useContext)(o), p = h.alt, f = h.children, g = h.color, k = h.mirrored, v = h.size, w = h.weight, u = h.style;
  return e15.createElement("svg", { width: s || v || 32, height: s || v || 32, transform: c || k ? "scale(-1, 1)" : void 0, strokeWidth: d || w || 2, ref: i13, style: Object.assign(Object.assign({}, u), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!p || !!l9) && e15.createElement("title", null, l9 || p), e15.createElement("path", { stroke: n || g || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: d || w || "2", d: "M28 7 16 18 4 7M13.818 16l-9.51 8.717M27.692 24.717 18.182 16" }), e15.createElement("path", { stroke: n || g || "#000000", strokeLinejoin: "round", strokeWidth: d || w || "2", d: "M4 7h24v18H4z" }), a8 || f);
});
i6.displayName = "Envelope";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/Eye.js
var e16 = __toESM(require_react(), 1), import_react44 = __toESM(require_react(), 1);
var i7 = (0, import_react44.forwardRef)(function(t17, i13) {
  var s = t17.size, a8 = t17.color, n = t17.alt, l9 = t17.children, c = t17.mirrored, d = t17.weight, m = t17.style, h = (0, import_react44.useContext)(o), p = h.alt, f = h.children, g = h.color, k = h.mirrored, w = h.size, u = h.weight, v = h.style;
  return e16.createElement("svg", { width: s || w || 32, height: s || w || 32, transform: c || k ? "scale(-1, 1)" : void 0, strokeWidth: d || u || 2, ref: i13, style: Object.assign(Object.assign({}, v), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!p || !!n) && e16.createElement("title", null, n || p), e16.createElement("path", { stroke: a8 || g || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: d || u || "2", d: "M16 19.75a3.75 3.75 0 1 0 0-7.5 3.75 3.75 0 0 0 0 7.5Z" }), e16.createElement("path", { stroke: a8 || g || "#000000", strokeLinejoin: "round", strokeWidth: d || u || "2", d: "M4 15.918c9.122-10.31 14.379-10.043 24 0-9.213 10.19-14.459 10.598-24 0Z" }), l9 || f);
});
i7.displayName = "Eye";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/EyeSlash.js
var e17 = __toESM(require_react(), 1), import_react45 = __toESM(require_react(), 1);
var i8 = (0, import_react45.forwardRef)(function(t17, i13) {
  var s = t17.size, a8 = t17.color, n = t17.alt, l9 = t17.children, c = t17.mirrored, d = t17.weight, m = t17.style, h = (0, import_react45.useContext)(o), p = h.alt, k = h.children, f = h.color, g = h.mirrored, u = h.size, w = h.weight, v = h.style;
  return e17.createElement("svg", { width: s || u || 32, height: s || u || 32, transform: c || g ? "scale(-1, 1)" : void 0, strokeWidth: d || w || 2, ref: i13, style: Object.assign(Object.assign({}, v), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!p || !!n) && e17.createElement("title", null, n || p), e17.createElement("path", { stroke: a8 || f || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: d || w || "2", d: "M18.418 18.866a3.75 3.75 0 0 1-5.43-5.1m3.517-1.482a3.752 3.752 0 0 1 3.204 3.157" }), e17.createElement("path", { stroke: a8 || f || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: d || w || "2", d: "M15.83 8.286c3.651.04 7.367 2.618 12.17 7.632a56.85 56.85 0 0 1-2.733 2.84M9.941 10.361C8.105 11.627 6.161 13.476 4 15.918c7.054 7.835 11.76 9.655 17.457 5.954M6.676 6.676l18.648 18.648" }), l9 || k);
});
i8.displayName = "EyeSlash";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/GoogleLogo.js
var e18 = __toESM(require_react(), 1), import_react46 = __toESM(require_react(), 1);
var i9 = (0, import_react46.forwardRef)(function(t17, i13) {
  var s = t17.size, a8 = t17.color, l9 = t17.alt, n = t17.children, c = t17.mirrored, m = t17.weight, d = t17.style, h = (0, import_react46.useContext)(o), g = h.alt, f = h.children, p = h.color, w = h.mirrored, u = h.size, v = h.weight, k = h.style;
  return e18.createElement("svg", { width: s || u || 32, height: s || u || 32, transform: c || w ? "scale(-1, 1)" : void 0, strokeWidth: m || v || 2, ref: i13, style: Object.assign(Object.assign({}, k), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!g || !!l9) && e18.createElement("title", null, l9 || g), e18.createElement("path", { stroke: a8 || p || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: m || v || "2", d: "M16 16h11a11 11 0 1 1-3.222-7.778" }), n || f);
});
i9.displayName = "GoogleLogo";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/Info.js
var e19 = __toESM(require_react(), 1), import_react47 = __toESM(require_react(), 1);
var i10 = (0, import_react47.forwardRef)(function(t17, i13) {
  var s = t17.size, a8 = t17.color, l9 = t17.alt, n = t17.children, c = t17.mirrored, m = t17.weight, d = t17.style, h = (0, import_react47.useContext)(o), f = h.alt, p = h.children, g = h.color, w = h.mirrored, v = h.size, u = h.weight, k = h.style;
  return e19.createElement("svg", { width: s || v || 32, height: s || v || 32, transform: c || w ? "scale(-1, 1)" : void 0, strokeWidth: m || u || 2, ref: i13, style: Object.assign(Object.assign({}, k), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!l9) && e19.createElement("title", null, l9 || f), e19.createElement("path", { stroke: a8 || g || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: m || u || "2", d: "M16 28c6.627 0 12-5.373 12-12S22.627 4 16 4 4 9.373 4 16s5.373 12 12 12ZM16 15v7" }), e19.createElement("path", { fill: a8 || g || "#000000", d: "M15.75 12a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z" }), n || p);
});
i10.displayName = "Info";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/List.js
var e20 = __toESM(require_react(), 1), import_react48 = __toESM(require_react(), 1);
var o2 = (0, import_react48.forwardRef)(function(t17, o3) {
  var s = t17.size, a8 = t17.color, l9 = t17.alt, n = t17.children, c = t17.mirrored, h = t17.weight, m = t17.style, d = (0, import_react48.useContext)(o), f = d.alt, g = d.children, p = d.color, w = d.mirrored, u = d.size, v = d.weight, k = d.style;
  return e20.createElement("svg", { width: s || u || 32, height: s || u || 32, transform: c || w ? "scale(-1, 1)" : void 0, strokeWidth: h || v || 2, ref: o3, style: Object.assign(Object.assign({}, k), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!l9) && e20.createElement("title", null, l9 || f), e20.createElement("path", { stroke: a8 || p || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: h || v || "2", d: "M6 16h20M6 8.727h20M6 23.273h20" }), n || g);
});
o2.displayName = "List";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/Search.js
var e21 = __toESM(require_react(), 1), import_react49 = __toESM(require_react(), 1);
var i11 = (0, import_react49.forwardRef)(function(r24, i13) {
  var s = r24.size, a8 = r24.color, l9 = r24.alt, n = r24.children, c = r24.mirrored, m = r24.weight, d = r24.style, h = (0, import_react49.useContext)(o), f = h.alt, g = h.children, p = h.color, w = h.mirrored, u = h.size, v = h.weight, k = h.style;
  return e21.createElement("svg", { width: s || u || 32, height: s || u || 32, transform: c || w ? "scale(-1, 1)" : void 0, strokeWidth: m || v || 2, ref: i13, style: Object.assign(Object.assign({}, k), d), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!l9) && e21.createElement("title", null, l9 || f), e21.createElement("path", { stroke: a8 || p || "#000000", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: m || v || "2", d: "M14.861 24.222a8.861 8.861 0 1 0 0-17.722 8.861 8.861 0 0 0 0 17.722ZM21.127 21.627 26 26.5" }), n || g);
});
i11.displayName = "Search";

// ../../../node_modules/@jengaicons/react/dist/icons/regular/SquaresFour.js
var e22 = __toESM(require_react(), 1), import_react50 = __toESM(require_react(), 1);
var i12 = (0, import_react50.forwardRef)(function(r24, i13) {
  var s = r24.size, a8 = r24.color, l9 = r24.alt, n = r24.children, h = r24.mirrored, c = r24.weight, m = r24.style, d = (0, import_react50.useContext)(o), f = d.alt, g = d.children, v = d.color, w = d.mirrored, p = d.size, u = d.weight, z = d.style;
  return e22.createElement("svg", { width: s || p || 32, height: s || p || 32, transform: h || w ? "scale(-1, 1)" : void 0, strokeWidth: c || u || 2, ref: i13, style: Object.assign(Object.assign({}, z), m), xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32" }, (!!f || !!l9) && e22.createElement("title", null, l9 || f), e22.createElement("path", { stroke: a8 || v || "#000000", strokeLinejoin: "round", strokeWidth: c || u || "2", d: "M4 4h9.6v9.6H4zM4 18.4h9.6V28H4zM18.4 4H28v9.6h-9.6zM18.4 18.4H28V28h-9.6z" }), n || g);
});
i12.displayName = "SquaresFour";

// ../../components/atoms/input.jsx
var import_react53 = __toESM(require_react(), 1), import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1), NumberInput = (props = { label, disabled, message, extra, placeholder, value: "", onChange, error: !1, className, step, min, max }) => {
  let [v, setV] = (0, import_react51.useState)(props.value || props.min || 0), ref = (0, import_react53.useRef)(), id3 = (0, import_react51.useId)(), step2 = props.step || 1;
  return (0, import_react51.useEffect)(() => {
    props.onChange && props.onChange({
      target: {
        ...ref.current,
        value: v
      }
    });
  }, [v]), /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: (0, import_classnames2.default)(
    "flex flex-col",
    {
      "gap-1": props.label || props.extra
    }
  ), children: [
    /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: "flex", children: [
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("label", { className: "flex-1 select-none bodyMd-medium", htmlFor: id3, children: props.label }),
      props.extra && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: "bodyMd", children: (0, import_react51.cloneElement)(props.extra) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: (0, import_classnames2.default)(
      "transition-all flex relative",
      "ring-offset-1 focus-within:ring-2 focus-within:ring-border-focus rounded border overflow-hidden",
      {
        "bg-surface-danger-subdued border-border-danger text-text-danger placeholder:text-critical-400": props.error,
        "text-text-default border-border-default": !props.error
      }
    ), children: [
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        "input",
        {
          ref,
          id: id3,
          disabled: props.disabled,
          type: "number",
          autoComplete: "off",
          inputMode: "numeric",
          className: (0, import_classnames2.default)(
            "outline-none flex-1",
            "outline-none disabled:bg-surface-input disabled:text-text-disabled",
            "rounded px-3 py-2 bodyMd ",
            "no-spinner"
          ),
          value: v,
          onChange: (e23) => {
            setV(e23.target.value);
          },
          min: props.min,
          max: props.max
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(
        "div",
        {
          className: (0, import_classnames2.default)(
            "flex flex-col absolute right-0 top-0 bottom-0 justify-center items-center",
            {
              "bg-surface-danger-subdued divide-border-danger divide-y rounded-r border-l border-border-danger text-text-danger placeholder:text-critical-400": props.error,
              "text-text-default border-l border-border-default divide-border-default divide-y": !props.error
            }
          ),
          tabIndex: -1,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
              "button",
              {
                "aria-controls": id3,
                "aria-label": `Increase ${props.label}`,
                tabIndex: -1,
                onClick: () => {
                  setV((v2) => v2 + step2), ref.current.focus();
                },
                className: (0, import_classnames2.default)("flex-1 p-0.5 disabled:text-icon-disabled hover:bg-surface-hovered active:bg-surface-pressed"),
                children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(a3, { size: 16, color: "currentColor" })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
              "button",
              {
                "aria-controls": id3,
                "aria-label": `Decrease ${props.label}`,
                tabIndex: -1,
                onClick: () => {
                  setV((v2) => v2 - step2);
                },
                className: (0, import_classnames2.default)("flex-1 p-0.5 disabled:text-icon-disabled hover:bg-surface-hovered active:bg-surface-pressed"),
                children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(a2, { size: 16, color: "currentColor" })
              }
            )
          ]
        }
      )
    ] }),
    props.message && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("span", { className: (0, import_classnames2.default)("bodySm", {
      "text-text-danger": props.error,
      "text-text-default": !props.error
    }), children: props.message })
  ] });
}, TextInputBase = (0, import_react51.forwardRef)((props = { label, disabled, message, extra, placeholder, value: "", onChange, error: !1, prefix, suffix, showclear, className, component, type, onKeyDown, autoComplete }, ref) => {
  let [val, setVal] = (0, import_react51.useState)(props.value || ""), [type2, setType] = (0, import_react51.useState)(props.type || "text"), id3 = (0, import_react51.useId)();
  (0, import_react51.useEffect)(() => {
    props.onChange && props.onChange({
      target: {
        ...ref.current,
        value: val
      }
    });
  }, [val]);
  let Prefix = props.prefix, Suffix = props.suffix, Component = props.component || "input";
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: (0, import_classnames2.default)(
    "flex flex-col",
    {
      "gap-1": props.label || props.extra
    },
    props.className
  ), children: [
    /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: "flex", children: [
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("label", { className: "flex-1 select-none bodyMd-medium", htmlFor: id3, children: props.label }),
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: "bodyMd", children: props.extra && (0, import_react51.cloneElement)(props.extra) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: (0, import_classnames2.default)(
      "transition-all px-3 rounded border flex flex-row items-center relative ring-offset-1 focus-within:ring-2 focus-within:ring-border-focus ",
      {
        "text-text-danger bg-surface-danger-subdued border-border-danger": props.error,
        "text-text-default border-border-default bg-surface-input": !props.error,
        "text-text-disabled border-border-disabled bg-surface-input": props.disabled,
        "pr-0": props.component != "input"
      }
    ), children: [
      Prefix && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: (0, import_classnames2.default)(
        "pr-2 bodyMd",
        {
          "text-text-strong": typeof Prefix != "object" && !props.error && !props.disabled,
          "text-text-danger": props.error,
          "text-text-disabled": props.disabled
        }
      ), children: typeof Prefix == "object" ? /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(Prefix, { size: 20, color: "currentColor" }) : Prefix }),
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        Component,
        {
          type: type2,
          placeholder: props.placeholder,
          id: id3,
          className: (0, import_classnames2.default)(
            "outline-none disabled:bg-surface-input disabled:text-text-disabled",
            "w-full",
            "rounded py-2 bodyMd ",
            {
              "text-text-danger bg-surface-danger-subdued placeholder:text-critical-400": props.error,
              "text-text-default bg-surface-input": !props.error
            }
          ),
          value: val,
          onChange: (e23) => {
            setVal(e23.target.value);
          },
          disabled: props.disabled,
          ref,
          onKeyDown: props.onKeyDown,
          autoComplete: props.autoComplete
        }
      ),
      Suffix && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: (0, import_classnames2.default)(
        "pl-2 bodyMd",
        {
          "text-text-danger": props.error,
          "text-text-strong": !props.error && !props.disabled,
          "text-text-disabled": props.disabled
        }
      ), children: typeof Suffix == "object" ? /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(Suffix, { size: 20, color: "currentColor" }) : Suffix }),
      props.showclear && !props.disabled && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        "button",
        {
          tabIndex: -1,
          onClick: () => {
            setVal(""), console.log("button");
          },
          className: (0, import_classnames2.default)(
            "outline-none flex items-center rounded justify-center",
            {
              "cursor-default": props.disabled
            }
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(a7, { size: 20, color: "currentColor" })
        }
      ),
      props.type === "password" && !props.disabled && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        "button",
        {
          tabIndex: -1,
          onClick: () => {
            setType((prev) => prev == "text" ? "password" : "text"), console.log("button");
          },
          className: (0, import_classnames2.default)(
            "outline-none flex items-center rounded justify-center",
            {
              "cursor-default": props.disabled
            }
          ),
          children: type2 === "password" ? /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(i8, { size: 16, color: "currentColor" }) : /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(i7, { size: 16, color: "currentColor" })
        }
      )
    ] }),
    props.message && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: (0, import_classnames2.default)("bodySm", {
      "text-text-danger": props.error,
      "text-text-default": !props.error
    }), children: props.message })
  ] });
}), TextInput = (props = { label, disabled, extra, placeholder, value: "", onChange, error, message, prefix, suffix, showclear, className }) => {
  let ref = (0, import_react53.useRef)(null);
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(TextInputBase, { ...props, component: "input", ref, type: "text" });
};
var PasswordInput = (props = { label, disabled, extra, placeholder, value: "", onChange, error, message, className }) => {
  let ref = (0, import_react53.useRef)(null);
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(TextInputBase, { ...props, component: "input", ref, type: "password" });
}, BaseInputProps = {
  label: import_prop_types2.default.string,
  placeholder: import_prop_types2.default.string,
  value: import_prop_types2.default.string,
  onChange: import_prop_types2.default.func,
  error: import_prop_types2.default.bool,
  message: import_prop_types2.default.string,
  extra: import_prop_types2.default.elementType,
  className: import_prop_types2.default.string,
  disabled: import_prop_types2.default.bool
};
TextInput.propTypes = {
  ...BaseInputProps,
  prefix: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.object]),
  suffix: import_prop_types2.default.oneOfType([import_prop_types2.default.string, import_prop_types2.default.object])
};
TextInput.propTypes = {
  ...BaseInputProps
};
NumberInput.propTypes = {
  ...BaseInputProps
};
TextInput.defaultProps = {
  placeholder: "",
  value: "",
  disabled: !1
};

// app/pages/settings/billing.jsx
var import_jsx_runtime6 = __toESM(require_jsx_runtime()), BillingSettings = ({}) => /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", { className: "flex-1 flex flex-col gap-10", children: [
  /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", { className: "border border-border-default rounded-md p-5 flex flex-col gap-5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("span", { className: "text-text-default headingMd", children: "Configure" }),
    /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", { className: "flex flex-row gap-x-5", children: [
      /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(TextInput, { label: "Company name", placeholder: "Company name", className: "flex-1" }),
      /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(TextInput, { label: "Invoice email recipient", placeholder: "Invoice email recipient", className: "flex-1" })
    ] })
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", { className: "border border-border-danger rounded-md p-5 flex items-start flex-col gap-5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("span", { className: "text-text-default headingMd", children: "Delete Account" }),
    /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("p", { children: "Permanently remove your personal account and all of its contents from the Kloudlite platform. This action is not reversible, so please continue with caution." }),
    /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Button, { variant: "critical", label: "Delete" })
  ] })
] }), billing_default = BillingSettings;

// app/routes/console.settings.billing.jsx
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
function ConsoleSettingsBilling() {
  return /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(billing_default, {});
}

// app/routes/console.settings.general.jsx
var console_settings_general_exports = {};
__export(console_settings_general_exports, {
  default: () => ConsoleSettingsGeneral
});

// ../../components/atoms/avatar.jsx
var import_react54 = __toESM(require_react(), 1), import_prop_types3 = __toESM(require_prop_types(), 1), import_classnames3 = __toESM(require_classnames(), 1);
var import_jsx_runtime8 = __toESM(require_jsx_runtime(), 1), colors = {
  one: [
    "#D4D4D8",
    "#FFFFFF",
    "#8C9196",
    "#111827"
  ],
  two: [
    "#D97706",
    "#FDE68A",
    "#b45309",
    "#b45309"
  ],
  three: [
    "#16A34A",
    "#BBF7D0",
    "#15803d",
    "#15803d"
  ],
  four: [
    "#DC2626",
    "#FECACA",
    "#B91C1C",
    "#B91C1C"
  ],
  five: [
    "#0d9488",
    "#99F6E4",
    "#0f766e",
    "#0f766e"
  ]
}, AvatarBase = ({ label: label2, size: size2, color: color2 }) => {
  let ab = () => label2.split(" ").map((word) => word.charAt(0).toUpperCase()).join("");
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)(
    "div",
    {
      className: (0, import_classnames3.default)(
        "relative",
        "outline-none transition-all",
        "rounded-full",
        {
          "w-16 h-16": size2 === "large",
          "w-10 h-10": size2 === "medium",
          "w-8 h-8": size2 === "small",
          "w-6 h-6": size2 === "extra-small"
        }
      ),
      children: [
        !label2 && /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)("svg", { className: (0, import_classnames3.default)(
          {
            "w-16 h-16": size2 === "large",
            "w-10 h-10": size2 === "medium",
            "w-8 h-8": size2 === "small",
            "w-6 h-6": size2 === "extra-small"
          }
        ), viewBox: "0 0 62 61", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
          /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("rect", { x: "1", y: "0.5", width: "60", height: "60", rx: "30", fill: colors[color2][1] }),
          /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M31.0002 27.3571C36.0446 27.3571 40.1339 23.1358 40.1339 17.9286C40.1339 12.7213 36.0446 8.5 31.0002 8.5C25.9558 8.5 21.8665 12.7213 21.8665 17.9286C21.8665 23.1358 25.9558 27.3571 31.0002 27.3571ZM31.0002 52.5C38.6749 52.5 45.5322 48.8162 50 43.0717C45.5322 37.3269 38.6747 33.6429 30.9998 33.6429C23.3251 33.6429 16.4678 37.3267 12 43.0712C16.4678 48.816 23.3253 52.5 31.0002 52.5Z", fill: colors[color2][2] }),
          /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("rect", { x: "1", y: "0.5", width: "60", height: "60", rx: "30", stroke: colors[color2][0] })
        ] }),
        label2 && /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)("div", { className: (0, import_classnames3.default)(
          {
            "w-16 h-16": size2 === "large",
            "w-10 h-10": size2 === "medium",
            "w-8 h-8": size2 === "small",
            "w-6 h-6": size2 === "extra-small"
          },
          "relative"
        ), children: [
          /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)("svg", { className: (0, import_classnames3.default)(
            {
              "w-16 h-16": size2 === "large",
              "w-10 h-10": size2 === "medium",
              "w-8 h-8": size2 === "small",
              "w-6 h-6": size2 === "extra-small"
            }
          ), viewBox: "0 0 62 61", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
            /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("rect", { x: "1", y: "0.5", width: "60", height: "60", rx: "30", fill: colors[color2][1] }),
            /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("rect", { x: "1", y: "0.5", width: "60", height: "60", rx: "30", stroke: colors[color2][0] })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("div", { className: (0, import_classnames3.default)("absolute top-0 bottom-0 left-0 right-0 flex justify-center items-center", {
            headingLg: size2 === "large",
            bodyLg: size2 === "medium" || size2 === "small",
            bodySm: size2 === "extra-small"
          }), style: { color: colors[color2][3] }, children: ab() })
        ] })
      ]
    }
  );
}, Avatar = ({ label: label2, size: size2, color: color2 }) => /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(AvatarBase, { label: label2, size: size2, color: color2 });
Avatar.propTypes = {
  label: import_prop_types3.default.string.isRequired,
  size: import_prop_types3.default.oneOf([
    "large",
    "medium",
    "small",
    "extra-small"
  ]),
  color: import_prop_types3.default.oneOf([
    "one",
    "two",
    "three",
    "four",
    "five"
  ])
};
Avatar.defaultProps = {
  label: "test",
  size: "medium",
  color: "one"
};

// app/pages/settings/general.jsx
var import_jsx_runtime9 = __toESM(require_jsx_runtime()), GeneralSettings = ({}) => /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)("div", { className: "flex-1 flex flex-col gap-10", children: [
  /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)("div", { className: "border border-border-default rounded-md p-5 flex flex-col gap-5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)("span", { className: "text-text-default headingMd", children: "Profile" }),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)("div", { className: "flex flex-row gap-x-5 items-center", children: [
      /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Avatar, { size: "large", color: "one", label: "" }),
      /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Button, { label: "Upload photo", variant: "basic" })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(TextInput, { label: "Team name", placeholder: "Astroman" }),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)("div", { className: "flex flex-row gap-x-5", children: [
      /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(TextInput, { label: "Team URL", placeholder: "team url", prefix: "kloudlite.com/", message: "This is your URL namespace within Kloudlite", className: "flex-1" }),
      /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(TextInput, { label: "Team ID", placeholder: "team id", message: "Used when interacting with the Kloudlite API", className: "flex-1" })
    ] })
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)("div", { className: "border border-border-danger rounded-md p-5 flex items-start flex-col gap-5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)("span", { className: "text-text-default headingMd", children: "Delete Account" }),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)("p", { children: "Permanently remove your personal account and all of its contents from the Kloudlite platform. This action is not reversible, so please continue with caution." }),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Button, { variant: "critical", label: "Delete" })
  ] })
] }), general_default = GeneralSettings;

// app/routes/console.settings.general.jsx
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
function ConsoleSettingsGeneral() {
  return /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(general_default, {});
}

// app/routes/_auth.forgotpassword.jsx
var auth_forgotpassword_exports = {};
__export(auth_forgotpassword_exports, {
  default: () => AuthForgotPassword
});
var import_classnames4 = __toESM(require_classnames());

// ../../components/branding/brand-logo.jsx
var import_prop_types4 = __toESM(require_prop_types(), 1), import_jsx_runtime11 = __toESM(require_jsx_runtime(), 1), Logo = ({ size: size2, darkBg }) => /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)(import_jsx_runtime11.Fragment, { children: [
  !darkBg && /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)("svg", { height: size2, viewBox: "0 0 90 90", fill: "none", children: [
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M36.5546 45.7965C36.0525 45.2945 36.0525 44.4805 36.5546 43.9785L62.3723 18.1608C62.8743 17.6587 63.6883 17.6587 64.1904 18.1608L90.0082 43.9786C90.5103 44.4807 90.5103 45.2946 90.0082 45.7967L64.1905 71.6144C63.6885 72.1164 62.8745 72.1164 62.3724 71.6144L36.5546 45.7965Z", fill: "#2563EB" }),
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M46.5887 0.376535C46.0867 -0.125511 45.2727 -0.125512 44.7707 0.376534L1.05622 44.091C0.554176 44.593 0.554176 45.407 1.05622 45.909L44.7707 89.6235C45.2727 90.1255 46.0867 90.1255 46.5887 89.6235L53.7942 82.418C54.2962 81.9159 54.2962 81.102 53.7942 80.5999L18.9358 45.7415C18.4337 45.2395 18.4337 44.4255 18.9358 43.9234L53.6267 9.23255C54.1287 8.7305 54.1287 7.91652 53.6267 7.41448L46.5887 0.376535Z", fill: "#2563EB" })
  ] }),
  darkBg && /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)("svg", { height: size2, viewBox: "0 0 90 90", fill: "none", children: [
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M36.0546 45.7965C35.5525 45.2945 35.5525 44.4805 36.0546 43.9785L61.8723 18.1608C62.3743 17.6587 63.1883 17.6587 63.6904 18.1608L89.5082 43.9786C90.0103 44.4807 90.0103 45.2946 89.5082 45.7967L63.6905 71.6144C63.1885 72.1164 62.3745 72.1164 61.8724 71.6144L36.0546 45.7965Z", fill: "white" }),
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M46.0887 0.376535C45.5867 -0.125511 44.7727 -0.125512 44.2707 0.376534L0.556222 44.091C0.0541762 44.593 0.0541759 45.407 0.556222 45.909L44.2707 89.6235C44.7727 90.1255 45.5867 90.1255 46.0887 89.6235L53.2942 82.418C53.7962 81.9159 53.7962 81.102 53.2942 80.5999L18.4358 45.7415C17.9337 45.2395 17.9337 44.4255 18.4358 43.9234L53.1267 9.23255C53.6287 8.7305 53.6287 7.91652 53.1267 7.41448L46.0887 0.376535Z", fill: "white" })
  ] })
] }), DetailedLogo = ({ size: size2, darkBg }) => /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)(import_jsx_runtime11.Fragment, { children: [
  !darkBg && /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)("svg", { height: size2, viewBox: "0 0 463 90", fill: "none", children: [
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M36.5546 45.7965C36.0525 45.2945 36.0525 44.4805 36.5546 43.9785L62.3723 18.1608C62.8743 17.6587 63.6883 17.6587 64.1904 18.1608L90.0082 43.9786C90.5103 44.4807 90.5103 45.2946 90.0082 45.7967L64.1905 71.6144C63.6885 72.1164 62.8745 72.1164 62.3724 71.6144L36.5546 45.7965Z", fill: "#2563EB" }),
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M46.5887 0.376535C46.0867 -0.125511 45.2727 -0.125512 44.7707 0.376534L1.05622 44.091C0.554176 44.593 0.554176 45.407 1.05622 45.909L44.7707 89.6235C45.2727 90.1255 46.0867 90.1255 46.5887 89.6235L53.7942 82.418C54.2962 81.9159 54.2962 81.102 53.7942 80.5999L18.9358 45.7415C18.4337 45.2395 18.4337 44.4255 18.9358 43.9234L53.6267 9.23255C54.1287 8.7305 54.1287 7.91652 53.6267 7.41448L46.5887 0.376535Z", fill: "#2563EB" }),
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M114.385 7V83H127.618V59.3079L144.587 83H159.528L139.678 55.2524L159.101 29.1424H144.16L127.618 51.5172V7H114.385ZM377.199 29.0521H363.403V83H377.199V29.0521ZM363.403 7.01953V21.0213H377.199V7.01953H363.403ZM163.325 7.02761L163.642 83H177.437L177.121 7.02761H163.325ZM207.021 29.0521C198.51 29.0521 192.435 31.4201 188.798 36.1559C185.16 40.8232 183.341 47.4123 183.341 55.9231C183.341 73.9744 191.234 83 207.021 83C222.807 83 230.7 73.9744 230.7 55.9231C230.7 47.4123 228.881 40.8232 225.243 36.1559C221.606 31.4201 215.531 29.0521 207.021 29.0521ZM207.021 71.2633C203.383 71.2633 200.843 70.0278 199.402 67.5569C198.029 65.086 197.343 61.2081 197.343 55.9231C197.343 50.6381 198.029 46.7945 199.402 44.3923C200.843 41.99 203.383 40.7889 207.021 40.7889C210.658 40.7889 213.164 41.99 214.536 44.3923C215.978 46.7945 216.698 50.6381 216.698 55.9231C216.698 61.2081 215.978 65.086 214.536 67.5569C213.164 70.0278 210.658 71.2633 207.021 71.2633ZM267.559 29.0521H281.354V83H267.661V78.8819C262.72 81.6273 258.43 83 254.792 83C247.654 83 242.85 81.0439 240.379 77.1317C237.908 73.1508 236.672 66.5274 236.672 57.2615V29.0521H250.468V57.4674C250.468 62.5465 250.88 66.0126 251.704 67.8658C252.527 69.719 254.518 70.6455 257.675 70.6455C260.695 70.6455 263.543 70.1651 266.22 69.2042L267.559 68.7924V29.0521ZM333.41 83L333.409 7.02761H319.614L319.614 30.4935L317.658 30.0817C313.746 29.3953 310.691 29.0521 308.495 29.0521C301.357 29.0521 296.003 31.2141 292.434 35.5382C288.934 39.7937 287.183 46.6229 287.183 56.0261C287.183 65.3606 288.659 72.1898 291.61 76.5139C294.562 80.838 299.778 83 307.259 83C310.76 83 314.912 81.8675 319.717 79.6026V83H333.41ZM319.614 69.1012L318.173 69.4101C315.015 70.2337 311.995 70.6455 309.113 70.6455C306.299 70.6455 304.274 69.5131 303.038 67.2481C301.803 64.9831 301.185 61.1738 301.185 55.8202C301.185 45.9366 303.965 40.9948 309.524 40.9948C312.476 40.9948 315.839 41.338 319.614 42.0243V69.1012ZM341.524 83L341.524 7.02761H355.319L355.32 83H341.524ZM413.212 42.0243H400.549V63.1299C400.549 65.189 400.583 66.6647 400.652 67.5569C400.789 68.3806 401.167 69.1012 401.784 69.719C402.471 70.3367 403.5 70.6455 404.873 70.6455L412.698 70.4396L413.315 81.4557C408.717 82.4853 405.216 83 402.814 83C396.637 83 392.416 81.6273 390.151 78.8819C387.886 76.0678 386.753 70.9201 386.753 63.4388V42.0243V29.0521V7.01953H400.549V29.0521H413.212V42.0243ZM433.992 68.7924C432.414 67.351 431.59 65.0517 431.521 61.8944H461.79L462.819 52.3197C462.819 36.808 455.338 29.0521 440.375 29.0521C425.207 29.0521 417.623 38.2837 417.623 56.7468C417.623 66.0126 419.373 72.7046 422.873 76.8228C426.374 80.941 432.002 83 439.758 83C446.141 83 453.279 82.0391 461.172 80.1173L460.966 69.9249L458.083 70.2337C453.073 70.6455 447.376 70.8515 440.993 70.8515C437.973 70.8515 435.639 70.1651 433.992 68.7924ZM447.273 42.848C448.577 44.4266 449.229 47.275 449.229 51.3931H431.418C431.487 47.4123 432.173 44.5982 433.477 42.9509C434.85 41.235 437.149 40.3771 440.375 40.3771C443.67 40.3771 445.969 41.2007 447.273 42.848Z", fill: "#2563EB" })
  ] }),
  darkBg && /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)("svg", { height: size2, viewBox: "0 0 463 90", fill: "none", children: [
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M36.0546 45.7965C35.5525 45.2945 35.5525 44.4805 36.0546 43.9785L61.8723 18.1608C62.3743 17.6587 63.1883 17.6587 63.6904 18.1608L89.5082 43.9786C90.0103 44.4807 90.0103 45.2946 89.5082 45.7967L63.6905 71.6144C63.1885 72.1164 62.3745 72.1164 61.8724 71.6144L36.0546 45.7965Z", fill: "white" }),
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { d: "M46.0887 0.376535C45.5867 -0.125511 44.7727 -0.125512 44.2707 0.376534L0.556222 44.091C0.0541762 44.593 0.0541759 45.407 0.556222 45.909L44.2707 89.6235C44.7727 90.1255 45.5867 90.1255 46.0887 89.6235L53.2942 82.418C53.7962 81.9159 53.7962 81.102 53.2942 80.5999L18.4358 45.7415C17.9337 45.2395 17.9337 44.4255 18.4358 43.9234L53.1267 9.23255C53.6287 8.7305 53.6287 7.91652 53.1267 7.41448L46.0887 0.376535Z", fill: "white" }),
    /* @__PURE__ */ (0, import_jsx_runtime11.jsx)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M113.885 7V83H127.118V59.3079L144.087 83H159.028L139.178 55.2524L158.601 29.1424H143.66L127.118 51.5172V7H113.885ZM376.699 29.0521H362.903V83H376.699V29.0521ZM362.903 7.01953V21.0213H376.699V7.01953H362.903ZM162.825 7.02761L163.142 83H176.937L176.621 7.02761H162.825ZM206.521 29.0521C198.01 29.0521 191.935 31.4201 188.298 36.1559C184.66 40.8232 182.841 47.4123 182.841 55.9231C182.841 73.9744 190.734 83 206.521 83C222.307 83 230.2 73.9744 230.2 55.9231C230.2 47.4123 228.381 40.8232 224.743 36.1559C221.106 31.4201 215.031 29.0521 206.521 29.0521ZM206.521 71.2633C202.883 71.2633 200.343 70.0278 198.902 67.5569C197.529 65.086 196.843 61.2081 196.843 55.9231C196.843 50.6381 197.529 46.7945 198.902 44.3923C200.343 41.99 202.883 40.7889 206.521 40.7889C210.158 40.7889 212.664 41.99 214.036 44.3923C215.478 46.7945 216.198 50.6381 216.198 55.9231C216.198 61.2081 215.478 65.086 214.036 67.5569C212.664 70.0278 210.158 71.2633 206.521 71.2633ZM267.059 29.0521H280.854V83H267.161V78.8819C262.22 81.6273 257.93 83 254.292 83C247.154 83 242.35 81.0439 239.879 77.1317C237.408 73.1508 236.172 66.5274 236.172 57.2615V29.0521H249.968V57.4674C249.968 62.5465 250.38 66.0126 251.204 67.8658C252.027 69.719 254.018 70.6455 257.175 70.6455C260.195 70.6455 263.043 70.1651 265.72 69.2042L267.059 68.7924V29.0521ZM332.91 83L332.909 7.02761H319.114L319.114 30.4935L317.158 30.0817C313.246 29.3953 310.191 29.0521 307.995 29.0521C300.857 29.0521 295.503 31.2141 291.934 35.5382C288.434 39.7937 286.683 46.6229 286.683 56.0261C286.683 65.3606 288.159 72.1898 291.11 76.5139C294.062 80.838 299.278 83 306.759 83C310.26 83 314.412 81.8675 319.217 79.6026V83H332.91ZM319.114 69.1012L317.673 69.4101C314.515 70.2337 311.495 70.6455 308.613 70.6455C305.799 70.6455 303.774 69.5131 302.538 67.2481C301.303 64.9831 300.685 61.1738 300.685 55.8202C300.685 45.9366 303.465 40.9948 309.024 40.9948C311.976 40.9948 315.339 41.338 319.114 42.0243V69.1012ZM341.024 83L341.024 7.02761H354.819L354.82 83H341.024ZM412.712 42.0243H400.049V63.1299C400.049 65.189 400.083 66.6647 400.152 67.5569C400.289 68.3806 400.667 69.1012 401.284 69.719C401.971 70.3367 403 70.6455 404.373 70.6455L412.198 70.4396L412.815 81.4557C408.217 82.4853 404.716 83 402.314 83C396.137 83 391.916 81.6273 389.651 78.8819C387.386 76.0678 386.253 70.9201 386.253 63.4388V42.0243V29.0521V7.01953H400.049V29.0521H412.712V42.0243ZM433.492 68.7924C431.914 67.351 431.09 65.0517 431.021 61.8944H461.29L462.319 52.3197C462.319 36.808 454.838 29.0521 439.875 29.0521C424.707 29.0521 417.123 38.2837 417.123 56.7468C417.123 66.0126 418.873 72.7046 422.373 76.8228C425.874 80.941 431.502 83 439.258 83C445.641 83 452.779 82.0391 460.672 80.1173L460.466 69.9249L457.583 70.2337C452.573 70.6455 446.876 70.8515 440.493 70.8515C437.473 70.8515 435.139 70.1651 433.492 68.7924ZM446.773 42.848C448.077 44.4266 448.729 47.275 448.729 51.3931H430.918C430.987 47.4123 431.673 44.5982 432.977 42.9509C434.35 41.235 436.649 40.3771 439.875 40.3771C443.17 40.3771 445.469 41.2007 446.773 42.848Z", fill: "white" })
  ] })
] }), BrandLogo = ({ size: size2, darkBg, detailed }) => /* @__PURE__ */ (0, import_jsx_runtime11.jsxs)(import_jsx_runtime11.Fragment, { children: [
  detailed && /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(DetailedLogo, { size: size2, darkBg }),
  !detailed && /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(Logo, { size: size2, darkBg })
] });
BrandLogo.propTypes = {
  size: import_prop_types4.default.number,
  darkBg: import_prop_types4.default.bool,
  detailed: import_prop_types4.default.bool
};
BrandLogo.defaultProps = {
  size: 24,
  darkBg: !1,
  detailed: !1
};

// app/routes/_auth.forgotpassword.jsx
var import_react_google_recaptcha_v32 = __toESM(require_react_google_recaptcha_v3_cjs()), import_jsx_runtime12 = __toESM(require_jsx_runtime());
function AuthForgotPassword({}) {
  let onsubmit = (e23) => {
    e23.preventDefault();
  };
  return /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("div", { className: (0, import_classnames4.default)("flex flex-col items-center justify-center h-full"), children: [
    /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("form", { className: (0, import_classnames4.default)("flex flex-1 flex-col items-center self-stretch justify-center px-5 pb-8 border-b border-border-default md:py-37.5"), onSubmit: onsubmit, children: [
      /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("div", { className: "flex flex-col items-stretch justify-center gap-8 md:w-[400px]", children: [
        /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(BrandLogo, { darkBg: !1, size: 60 }),
        /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("div", { className: "flex flex-col items-stretch gap-8 pb-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("div", { className: "flex flex-col gap-2 items-center md:px-12", children: [
            /* @__PURE__ */ (0, import_jsx_runtime12.jsx)("div", { className: (0, import_classnames4.default)("text-text-strong heading3xl text-center"), children: "Forgot password" }),
            /* @__PURE__ */ (0, import_jsx_runtime12.jsx)("div", { className: "text-text-soft bodySm text-center", children: "Enter your registered email below to receive password reset instruction." })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("div", { className: "flex flex-col items-stretch gap-5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(TextInput, { label: "Email", placeholder: "ex: john@company.com" }),
            /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(Button, { size: "large", variant: "primary", label: "Send instructions", DisclosureComp: i4, block: !0, type: "submit" })
          ] })
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(import_react_google_recaptcha_v32.GoogleReCaptcha, { onVerify: (e23) => {
      } })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("div", { className: "py-8  px-5 flex flex-row items-center justify-center self-stretch", children: [
      /* @__PURE__ */ (0, import_jsx_runtime12.jsx)("div", { className: "bodyMd text-text-default", children: "Remember password?" }),
      /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(Button, { label: "Login", variant: "primary-plain", size: "medium", href: "/login" })
    ] })
  ] });
}

// app/routes/console.newproject.jsx
var console_newproject_exports = {};
__export(console_newproject_exports, {
  default: () => ConsoleNewProject
});

// app/pages/new-project.jsx
var import_react68 = __toESM(require_react());

// ../../components/organisms/contextual-save-bar.jsx
var import_classnames5 = __toESM(require_classnames(), 1);
var import_jsx_runtime13 = __toESM(require_jsx_runtime(), 1), ContextualSaveBar = ({ logo, logoWidth, message: message2, saveAction, discardAction, fixed }) => /* @__PURE__ */ (0, import_jsx_runtime13.jsx)("div", { className: (0, import_classnames5.default)(
  "bg-surface-secondary-pressed py-3 px-5",
  {
    "fixed top-0 left-0 right-0": fixed
  }
), children: /* @__PURE__ */ (0, import_jsx_runtime13.jsxs)("div", { className: "flex flex-row items-center justify-between  m-auto", children: [
  logo && /* @__PURE__ */ (0, import_jsx_runtime13.jsx)("div", { className: "hidden md:block lg:block xl:block", width: logoWidth || 124, children: logo }),
  message2 && /* @__PURE__ */ (0, import_jsx_runtime13.jsx)("div", { className: "headingMd text-text-on-primary font-sans-serif", children: message2 }),
  logo && /* @__PURE__ */ (0, import_jsx_runtime13.jsxs)(import_jsx_runtime13.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime13.jsx)("div", {}),
    /* @__PURE__ */ (0, import_jsx_runtime13.jsx)("div", {}),
    /* @__PURE__ */ (0, import_jsx_runtime13.jsx)("div", {})
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime13.jsxs)("div", { className: "gap-x-2 flex flex-row items-center", children: [
    discardAction && /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(Button, { label: "Discard", onClick: discardAction, variant: "secondary-outline" }),
    saveAction && /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(Button, { label: "Save", onClick: saveAction, variant: "basic" })
  ] })
] }) });
ContextualSaveBar.defaultProps = {
  imageWidth: 124,
  logo: /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(BrandLogo, { detailed: !0, darkBg: !0, size: 20 }),
  message: "Unsaved changes",
  saveAction: (e23) => {
    console.log(e23);
  },
  discardAction: (e23) => {
  }
};

// ../../components/organisms/progress-tracker.jsx
var import_classnames6 = __toESM(require_classnames(), 1), import_prop_types5 = __toESM(require_prop_types(), 1), import_jsx_runtime14 = __toESM(require_jsx_runtime(), 1);
var ProgressTrackerItem = ({ label: label2, active }) => /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("div", { className: (0, import_classnames6.default)(
  "flex flex-row gap-x-3 items-center",
  {
    "bodyMd-semibold text-text-default": active,
    "bodyMd text-text-disabled": !active
  }
), children: [
  /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("div", { className: (0, import_classnames6.default)("w-2.5 h-2.5 rounded-full flex items-center justify-center"), children: [
    active && /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("svg", { width: "10", height: "10", viewBox: "0 0 10 10", xmlns: "http://www.w3.org/2000/svg", className: "fill-icon-primary", children: /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("circle", { cx: "5", cy: "5", r: "5" }) }),
    !active && /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("svg", { width: "10", height: "10", viewBox: "0 0 10 10", xmlns: "http://www.w3.org/2000/svg", className: "fill-border-default", children: /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("circle", { cx: "5", cy: "5", r: "2.5" }) })
  ] }),
  /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("div", { className: "py-2", children: label2 })
] }), ProgressTracker = ({ items }) => /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("div", { className: "flex flex-col gap-y-2", children: items && items.map((item, index2) => /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("div", { className: "flex flex-col", children: [
  /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(ProgressTrackerItem, { active: item.active, label: item.label }),
  index2 != items.length - 1 && /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("div", { className: "flex items-center justify-center w-2.5", children: /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("svg", { width: "10", height: "35", className: "-mt-3.25 -mb-5.5 stroke-border-default", children: /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("line", { x1: "5", y1: "1", x2: "5", y2: "34", strokeWidth: "1", strokeLinecap: "round", strokeDasharray: "3, 4" }) }) })
] }, item.key)) });
ProgressTracker.propTypes = {
  items: import_prop_types5.default.arrayOf(import_prop_types5.default.shape({
    label: import_prop_types5.default.string.isRequired,
    active: import_prop_types5.default.bool,
    key: import_prop_types5.default.any
  })).isRequired
};
ProgressTracker.defaultProps = {
  items: [
    {
      label: "Item 1",
      active: !0,
      key: 1
    },
    {
      label: "Item 2",
      active: !0,
      key: 2
    },
    {
      label: "Item 3",
      active: !1,
      key: 3
    },
    {
      label: "Item 4",
      active: !1,
      key: 4
    },
    {
      label: "Item 5",
      active: !1,
      key: 5
    }
  ]
};

// ../../components/atoms/checkbox.jsx
var import_prop_types6 = __toESM(require_prop_types(), 1), import_classnames7 = __toESM(require_classnames(), 1), import_react67 = __toESM(require_react(), 1);

// ../../../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i13 = 1; i13 < arguments.length; i13++) {
      var source = arguments[i13];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends.apply(this, arguments);
}

// ../../../node_modules/@radix-ui/react-checkbox/dist/index.mjs
var import_react66 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs
var import_react56 = __toESM(require_react(), 1);
function $6ed0406888f73fc4$var$setRef(ref, value) {
  typeof ref == "function" ? ref(value) : ref != null && (ref.current = value);
}
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  return (0, import_react56.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}

// ../../../node_modules/@radix-ui/react-context/dist/index.mjs
var import_react57 = __toESM(require_react(), 1);
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
    let BaseContext = /* @__PURE__ */ (0, import_react57.createContext)(defaultContext), index2 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider(props) {
      let { scope, children, ...context } = props, Context = (scope == null ? void 0 : scope[scopeName][index2]) || BaseContext, value = (0, import_react57.useMemo)(
        () => context,
        Object.values(context)
      );
      return /* @__PURE__ */ (0, import_react57.createElement)(Context.Provider, {
        value
      }, children);
    }
    function useContext8(consumerName, scope) {
      let Context = (scope == null ? void 0 : scope[scopeName][index2]) || BaseContext, context = (0, import_react57.useContext)(Context);
      if (context)
        return context;
      if (defaultContext !== void 0)
        return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    return Provider.displayName = rootComponentName + "Provider", [
      Provider,
      useContext8
    ];
  }
  let createScope = () => {
    let scopeContexts = defaultContexts.map((defaultContext) => /* @__PURE__ */ (0, import_react57.createContext)(defaultContext));
    return function(scope) {
      let contexts = (scope == null ? void 0 : scope[scopeName]) || scopeContexts;
      return (0, import_react57.useMemo)(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  return createScope.scopeName = scopeName, [
    $c512c27ab02ef895$export$fd42f52fd3ae1109,
    $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  let baseScope = scopes[0];
  if (scopes.length === 1)
    return baseScope;
  let createScope1 = () => {
    let scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function(overrideScopes) {
      let nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        let currentScope = useScope(overrideScopes)[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0, import_react57.useMemo)(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  return createScope1.scopeName = baseScope.scopeName, createScope1;
}

// ../../../node_modules/@radix-ui/primitive/dist/index.mjs
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = !0 } = {}) {
  return function(event) {
    if (originalEventHandler == null || originalEventHandler(event), checkForDefaultPrevented === !1 || !event.defaultPrevented)
      return ourEventHandler == null ? void 0 : ourEventHandler(event);
  };
}

// ../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var import_react59 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs
var import_react58 = __toESM(require_react(), 1);
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  let callbackRef = (0, import_react58.useRef)(callback);
  return (0, import_react58.useEffect)(() => {
    callbackRef.current = callback;
  }), (0, import_react58.useMemo)(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}

// ../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop, defaultProp, onChange: onChange2 = () => {
} }) {
  let [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
    defaultProp,
    onChange: onChange2
  }), isControlled = prop !== void 0, value1 = isControlled ? prop : uncontrolledProp, handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange2), setValue = (0, import_react59.useCallback)((nextValue) => {
    if (isControlled) {
      let value = typeof nextValue == "function" ? nextValue(prop) : nextValue;
      value !== prop && handleChange(value);
    } else
      setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp, onChange: onChange2 }) {
  let uncontrolledState = (0, import_react59.useState)(defaultProp), [value] = uncontrolledState, prevValueRef = (0, import_react59.useRef)(value), handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange2);
  return (0, import_react59.useEffect)(() => {
    prevValueRef.current !== value && (handleChange(value), prevValueRef.current = value);
  }, [
    value,
    prevValueRef,
    handleChange
  ]), uncontrolledState;
}

// ../../../node_modules/@radix-ui/react-use-previous/dist/index.mjs
var import_react60 = __toESM(require_react(), 1);
function $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {
  let ref = (0, import_react60.useRef)({
    value,
    previous: value
  });
  return (0, import_react60.useMemo)(() => (ref.current.value !== value && (ref.current.previous = ref.current.value, ref.current.value = value), ref.current.previous), [
    value
  ]);
}

// ../../../node_modules/@radix-ui/react-use-size/dist/index.mjs
var import_react62 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs
var import_react61 = __toESM(require_react(), 1), $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis == null ? void 0 : globalThis.document) ? import_react61.useLayoutEffect : () => {
};

// ../../../node_modules/@radix-ui/react-use-size/dist/index.mjs
function $db6c3485150b8e66$export$1ab7ae714698c4b8(element) {
  let [size2, setSize] = (0, import_react62.useState)(void 0);
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (element) {
      setSize({
        width: element.offsetWidth,
        height: element.offsetHeight
      });
      let resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries) || !entries.length)
          return;
        let entry2 = entries[0], width, height;
        if ("borderBoxSize" in entry2) {
          let borderSizeEntry = entry2.borderBoxSize, borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize.inlineSize, height = borderSize.blockSize;
        } else
          width = element.offsetWidth, height = element.offsetHeight;
        setSize({
          width,
          height
        });
      });
      return resizeObserver.observe(element, {
        box: "border-box"
      }), () => resizeObserver.unobserve(element);
    } else
      setSize(void 0);
  }, [
    element
  ]), size2;
}

// ../../../node_modules/@radix-ui/react-presence/dist/index.mjs
var import_react63 = __toESM(require_react(), 1), import_react_dom = __toESM(require_react_dom(), 1);
function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {
  return (0, import_react63.useReducer)((state, event) => {
    let nextState = machine[state][event];
    return nextState ?? state;
  }, initialState);
}
var $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props) => {
  let { present, children } = props, presence = $921a889cee6df7e8$var$usePresence(present), child = typeof children == "function" ? children({
    present: presence.isPresent
  }) : import_react63.Children.only(children), ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  return typeof children == "function" || presence.isPresent ? /* @__PURE__ */ (0, import_react63.cloneElement)(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence(present) {
  let [node1, setNode] = (0, import_react63.useState)(), stylesRef = (0, import_react63.useRef)({}), prevPresentRef = (0, import_react63.useRef)(present), prevAnimationNameRef = (0, import_react63.useRef)("none"), initialState = present ? "mounted" : "unmounted", [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  return (0, import_react63.useEffect)(() => {
    let currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]), $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let styles = stylesRef.current, wasPresent = prevPresentRef.current;
    if (wasPresent !== present) {
      let prevAnimationName = prevAnimationNameRef.current, currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
      present ? send("MOUNT") : currentAnimationName === "none" || (styles == null ? void 0 : styles.display) === "none" ? send("UNMOUNT") : send(wasPresent && prevAnimationName !== currentAnimationName ? "ANIMATION_OUT" : "UNMOUNT"), prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]), $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      let handleAnimationEnd = (event) => {
        let isCurrentAnimation = $921a889cee6df7e8$var$getAnimationName(stylesRef.current).includes(event.animationName);
        event.target === node1 && isCurrentAnimation && (0, import_react_dom.flushSync)(
          () => send("ANIMATION_END")
        );
      }, handleAnimationStart = (event) => {
        event.target === node1 && (prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current));
      };
      return node1.addEventListener("animationstart", handleAnimationStart), node1.addEventListener("animationcancel", handleAnimationEnd), node1.addEventListener("animationend", handleAnimationEnd), () => {
        node1.removeEventListener("animationstart", handleAnimationStart), node1.removeEventListener("animationcancel", handleAnimationEnd), node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]), {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: (0, import_react63.useCallback)((node) => {
      node && (stylesRef.current = getComputedStyle(node)), setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName(styles) {
  return (styles == null ? void 0 : styles.animationName) || "none";
}

// ../../../node_modules/@radix-ui/react-primitive/dist/index.mjs
var import_react65 = __toESM(require_react(), 1), import_react_dom2 = __toESM(require_react_dom(), 1);

// ../../../node_modules/@radix-ui/react-slot/dist/index.mjs
var import_react64 = __toESM(require_react(), 1);
var $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /* @__PURE__ */ (0, import_react64.forwardRef)((props, forwardedRef) => {
  let { children, ...slotProps } = props, childrenArray = import_react64.Children.toArray(children), slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    let newElement = slottable.props.children, newChildren = childrenArray.map((child) => child === slottable ? import_react64.Children.count(newElement) > 1 ? import_react64.Children.only(null) : /* @__PURE__ */ (0, import_react64.isValidElement)(newElement) ? newElement.props.children : null : child);
    return /* @__PURE__ */ (0, import_react64.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
      ref: forwardedRef
    }), /* @__PURE__ */ (0, import_react64.isValidElement)(newElement) ? /* @__PURE__ */ (0, import_react64.cloneElement)(newElement, void 0, newChildren) : null);
  }
  return /* @__PURE__ */ (0, import_react64.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = "Slot";
var $5e63c961fc1ce211$var$SlotClone = /* @__PURE__ */ (0, import_react64.forwardRef)((props, forwardedRef) => {
  let { children, ...slotProps } = props;
  return /* @__PURE__ */ (0, import_react64.isValidElement)(children) ? /* @__PURE__ */ (0, import_react64.cloneElement)(children, {
    ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
    ref: forwardedRef ? $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref) : children.ref
  }) : import_react64.Children.count(children) > 1 ? import_react64.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = "SlotClone";
var $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children }) => /* @__PURE__ */ (0, import_react64.createElement)(import_react64.Fragment, null, children);
function $5e63c961fc1ce211$var$isSlottable(child) {
  return /* @__PURE__ */ (0, import_react64.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  let overrideProps = {
    ...childProps
  };
  for (let propName in childProps) {
    let slotPropValue = slotProps[propName], childPropValue = childProps[propName];
    /^on[A-Z]/.test(propName) ? slotPropValue && childPropValue ? overrideProps[propName] = (...args) => {
      childPropValue(...args), slotPropValue(...args);
    } : slotPropValue && (overrideProps[propName] = slotPropValue) : propName === "style" ? overrideProps[propName] = {
      ...slotPropValue,
      ...childPropValue
    } : propName === "className" && (overrideProps[propName] = [
      slotPropValue,
      childPropValue
    ].filter(Boolean).join(" "));
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}

// ../../../node_modules/@radix-ui/react-primitive/dist/index.mjs
var $8927f6f2acc4f386$var$NODES = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
], $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  let Node = /* @__PURE__ */ (0, import_react65.forwardRef)((props, forwardedRef) => {
    let { asChild, ...primitiveProps } = props, Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    return (0, import_react65.useEffect)(() => {
      window[Symbol.for("radix-ui")] = !0;
    }, []), /* @__PURE__ */ (0, import_react65.createElement)(Comp, _extends({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  return Node.displayName = `Primitive.${node}`, {
    ...primitive,
    [node]: Node
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  target && (0, import_react_dom2.flushSync)(
    () => target.dispatchEvent(event)
  );
}

// ../../../node_modules/@radix-ui/react-checkbox/dist/index.mjs
var $e698a72e93240346$var$CHECKBOX_NAME = "Checkbox", [$e698a72e93240346$var$createCheckboxContext, $e698a72e93240346$export$b566c4ff5488ea01] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($e698a72e93240346$var$CHECKBOX_NAME), [$e698a72e93240346$var$CheckboxProvider, $e698a72e93240346$var$useCheckboxContext] = $e698a72e93240346$var$createCheckboxContext($e698a72e93240346$var$CHECKBOX_NAME), $e698a72e93240346$export$48513f6b9f8ce62d = /* @__PURE__ */ (0, import_react66.forwardRef)((props, forwardedRef) => {
  let { __scopeCheckbox, name, checked: checkedProp, defaultChecked, required, disabled: disabled2, value = "on", onCheckedChange, ...checkboxProps } = props, [button, setButton] = (0, import_react66.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  ), hasConsumerStoppedPropagationRef = (0, import_react66.useRef)(!1), isFormControl = button ? Boolean(button.closest("form")) : !0, [checked = !1, setChecked] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: checkedProp,
    defaultProp: defaultChecked,
    onChange: onCheckedChange
  }), initialCheckedStateRef = (0, import_react66.useRef)(checked);
  return (0, import_react66.useEffect)(() => {
    let form = button == null ? void 0 : button.form;
    if (form) {
      let reset = () => setChecked(initialCheckedStateRef.current);
      return form.addEventListener("reset", reset), () => form.removeEventListener("reset", reset);
    }
  }, [
    button,
    setChecked
  ]), /* @__PURE__ */ (0, import_react66.createElement)($e698a72e93240346$var$CheckboxProvider, {
    scope: __scopeCheckbox,
    state: checked,
    disabled: disabled2
  }, /* @__PURE__ */ (0, import_react66.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    role: "checkbox",
    "aria-checked": $e698a72e93240346$var$isIndeterminate(checked) ? "mixed" : checked,
    "aria-required": required,
    "data-state": $e698a72e93240346$var$getState(checked),
    "data-disabled": disabled2 ? "" : void 0,
    disabled: disabled2,
    value
  }, checkboxProps, {
    ref: composedRefs,
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      event.key === "Enter" && event.preventDefault();
    }),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      setChecked(
        (prevChecked) => $e698a72e93240346$var$isIndeterminate(prevChecked) ? !0 : !prevChecked
      ), isFormControl && (hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(), hasConsumerStoppedPropagationRef.current || event.stopPropagation());
    })
  })), isFormControl && /* @__PURE__ */ (0, import_react66.createElement)($e698a72e93240346$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled: disabled2,
    style: {
      transform: "translateX(-100%)"
    }
  }));
}), $e698a72e93240346$var$INDICATOR_NAME = "CheckboxIndicator", $e698a72e93240346$export$59aad738f51d1c05 = /* @__PURE__ */ (0, import_react66.forwardRef)((props, forwardedRef) => {
  let { __scopeCheckbox, forceMount, ...indicatorProps } = props, context = $e698a72e93240346$var$useCheckboxContext($e698a72e93240346$var$INDICATOR_NAME, __scopeCheckbox);
  return /* @__PURE__ */ (0, import_react66.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || $e698a72e93240346$var$isIndeterminate(context.state) || context.state === !0
  }, /* @__PURE__ */ (0, import_react66.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    "data-state": $e698a72e93240346$var$getState(context.state),
    "data-disabled": context.disabled ? "" : void 0
  }, indicatorProps, {
    ref: forwardedRef,
    style: {
      pointerEvents: "none",
      ...props.style
    }
  })));
}), $e698a72e93240346$var$BubbleInput = (props) => {
  let { control, checked, bubbles = !0, ...inputProps } = props, ref = (0, import_react66.useRef)(null), prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked), controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  return (0, import_react66.useEffect)(() => {
    let input = ref.current, inputProto = window.HTMLInputElement.prototype, setChecked = Object.getOwnPropertyDescriptor(inputProto, "checked").set;
    if (prevChecked !== checked && setChecked) {
      let event = new Event("click", {
        bubbles
      });
      input.indeterminate = $e698a72e93240346$var$isIndeterminate(checked), setChecked.call(input, $e698a72e93240346$var$isIndeterminate(checked) ? !1 : checked), input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]), /* @__PURE__ */ (0, import_react66.createElement)("input", _extends({
    type: "checkbox",
    "aria-hidden": !0,
    defaultChecked: $e698a72e93240346$var$isIndeterminate(checked) ? !1 : checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $e698a72e93240346$var$isIndeterminate(checked) {
  return checked === "indeterminate";
}
function $e698a72e93240346$var$getState(checked) {
  return $e698a72e93240346$var$isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
var $e698a72e93240346$export$be92b6f5f03c0fe9 = $e698a72e93240346$export$48513f6b9f8ce62d, $e698a72e93240346$export$adb584737d712b70 = $e698a72e93240346$export$59aad738f51d1c05;

// ../../components/atoms/checkbox.jsx
var import_jsx_runtime15 = __toESM(require_jsx_runtime(), 1), Checkbox = (props) => {
  let [checked, setChecked] = (0, import_react67.useState)(props.checked);
  (0, import_react67.useEffect)(() => {
    props.onChange && props.onChange(checked);
  }, [checked]);
  let id3 = (0, import_react67.useId)();
  return /* @__PURE__ */ (0, import_jsx_runtime15.jsxs)("div", { className: "flex items-center justify-center w-fit", children: [
    /* @__PURE__ */ (0, import_jsx_runtime15.jsx)(
      $e698a72e93240346$export$be92b6f5f03c0fe9,
      {
        className: (0, import_classnames7.default)(
          "rounded flex flex-row items-center justify-center border w-5 h-5 outline-none transition-all cursor-pointer",
          "ring-border-focus ring-offset-1 focus:ring-2",
          {
            "border-border-disabled !cursor-default": props.disabled
          },
          {
            "bg-surface-default border-border-default": !checked && !props.disabled,
            "bg-surface-primary-default border-border-primary": checked && !props.error && !props.disabled,
            "bg-surface-danger-default border-border-danger": checked && props.error && !props.disabled,
            "hover:bg-surface-hovered": !checked && !props.disabled
          }
        ),
        defaultChecked: !0,
        id: id3,
        checked,
        onCheckedChange: (e23) => {
          setChecked((prev) => props.indeterminate ? prev == "indeterminate" ? !1 : "indeterminate" : e23);
        },
        disabled: props.disabled,
        children: /* @__PURE__ */ (0, import_jsx_runtime15.jsx)($e698a72e93240346$export$adb584737d712b70, { children: /* @__PURE__ */ (0, import_jsx_runtime15.jsxs)("svg", { width: "17", height: "16", viewBox: "0 0 17 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [
          checked == !0 && /* @__PURE__ */ (0, import_jsx_runtime15.jsx)("path", { d: "M14.5 4.00019L6.5 11.9998L2.5 8.00019", className: (0, import_classnames7.default)({
            "stroke-text-disabled": props.disabled,
            "stroke-text-on-primary": !props.disabled
          }), strokeLinecap: "round", strokeLinejoin: "round" }),
          checked === "indeterminate" && /* @__PURE__ */ (0, import_jsx_runtime15.jsx)("path", { d: "M2.5 8H14.5", className: (0, import_classnames7.default)({
            "stroke-text-disabled": props.disabled,
            "stroke-text-on-primary": !props.disabled
          }), strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" })
        ] }) })
      }
    ),
    props.label && /* @__PURE__ */ (0, import_jsx_runtime15.jsx)(
      "label",
      {
        className: (0, import_classnames7.default)({
          "text-text-disabled": props.disabled,
          "text-text-default cursor-pointer": !props.disabled
        }, "bodyMd-medium pl-2 select-none"),
        htmlFor: id3,
        children: props.label
      }
    )
  ] });
};
Checkbox.propTypes = {
  label: import_prop_types6.default.string.isRequired,
  onChange: import_prop_types6.default.func,
  disabled: import_prop_types6.default.bool,
  error: import_prop_types6.default.bool,
  checked: import_prop_types6.default.any,
  indeterminate: import_prop_types6.default.bool
};
Checkbox.defaultProps = {
  onChange: () => {
  },
  disabled: !1,
  error: !1
};

// app/pages/new-project.jsx
var import_jsx_runtime16 = __toESM(require_jsx_runtime()), NewProject = ({}) => {
  let [clusters, setClusters] = (0, import_react68.useState)([
    {
      label: "Plaxonic",
      time: ". 197d ago"
    },
    {
      label: "Plaxonic",
      time: ". 197d ago"
    },
    {
      label: "Plaxonic",
      time: ". 197d ago"
    },
    {
      label: "Plaxonic",
      time: ". 197d ago"
    },
    {
      label: "Plaxonic",
      time: ". 197d ago"
    },
    {
      label: "Plaxonic",
      time: ". 197d ago"
    }
  ]);
  return /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)(import_jsx_runtime16.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(ContextualSaveBar, { fullwidth: !0, message: "Unsaved changes", fixed: !0 }),
    /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-row justify-between gap-[91px] pt-16", children: [
      /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-col gap-5 items-start", children: [
        /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Button, { label: "Back", IconComp: i, style: "plain" }),
        /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("span", { className: "heading2xl text-text-default", children: "Let\u2019s create new project." }),
        /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(ProgressTracker, { items: [
          {
            label: "Configure projects",
            active: !0,
            key: "configureprojects"
          },
          {
            label: "Publish",
            active: !1,
            key: "publish"
          }
        ] })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-col border border-border-default bg-surface-default shadow-card rounded-md flex-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("div", { className: "bg-surface-subdued p-5 text-text-default headingXl rounded-t-md", children: "Configure Projects" }),
        /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-col gap-8 px-5 pt-5 pb-8", children: [
          /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-row gap-5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(TextInput, { label: "Project Name", className: "flex-1", placeholder: "" }),
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(TextInput, { label: "Project ID", suffix: i10, className: "flex-1", placeholder: "" })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-col border border-border-disabled bg-surface-default rounded-md", children: [
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("div", { className: "bg-surface-subdued py-2 px-4 text-text-default headingMd rounded-t-md", children: "Cluster(s)" }),
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("div", { className: "flex flex-col", children: clusters.map((child, index2) => /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "p-4 flex flex-row gap-2.5 items-center", children: [
              /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(i5, {}),
              /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-row flex-1 items-center gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("span", { className: "headingMd text-text-default", children: "Plaxonic" }),
                /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("span", { className: "bodyMd text-text-default", children: ". 197d ago" })
              ] }),
              /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Checkbox, { label: "" })
            ] }, index2)) })
          ] })
        ] })
      ] })
    ] })
  ] });
}, new_project_default = NewProject;

// app/routes/console.newproject.jsx
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
function ConsoleNewProject() {
  return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(new_project_default, {});
}

// app/routes/console.projects.jsx
var console_projects_exports = {};
__export(console_projects_exports, {
  default: () => console_projects_default
});
var import_react89 = __toESM(require_react()), import_react90 = __toESM(require_dist3());

// ../../components/organisms/sub-header.jsx
var import_classnames8 = __toESM(require_classnames(), 1), import_jsx_runtime18 = __toESM(require_jsx_runtime(), 1), SubHeader = ({ title, actions }) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime18.jsx)("div", { className: "flex flex-col justify-center max-w-296 m-auto", children: /* @__PURE__ */ (0, import_jsx_runtime18.jsxs)("div", { className: "flex flex-row items-center justify-between py-5", children: [
  /* @__PURE__ */ (0, import_jsx_runtime18.jsx)("div", { className: "text-text-strong headingLg py-1.5", children: title }),
  /* @__PURE__ */ (0, import_jsx_runtime18.jsx)("div", { className: "flex flex-row items-center justify-center", children: actions && actions })
] }) }) });

// ../../components/molecule/filters.jsx
var import_prop_types7 = __toESM(require_prop_types(), 1), import_react87 = __toESM(require_react(), 1);

// ../../components/atoms/dropdown.jsx
var React7 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var import_react81 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-menu/dist/index.mjs
var import_react80 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-collection/dist/index.mjs
var import_react70 = __toESM(require_react(), 1);
function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {
  let PROVIDER_NAME = name + "CollectionProvider", [createCollectionContext, createCollectionScope] = $c512c27ab02ef895$export$50c7b4e9d9f19c1(PROVIDER_NAME), [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
    collectionRef: {
      current: null
    },
    itemMap: /* @__PURE__ */ new Map()
  }), CollectionProvider = (props) => {
    let { scope, children } = props, ref = import_react70.default.useRef(null), itemMap = import_react70.default.useRef(/* @__PURE__ */ new Map()).current;
    return /* @__PURE__ */ import_react70.default.createElement(CollectionProviderImpl, {
      scope,
      itemMap,
      collectionRef: ref
    }, children);
  }, COLLECTION_SLOT_NAME = name + "CollectionSlot", CollectionSlot = /* @__PURE__ */ import_react70.default.forwardRef((props, forwardedRef) => {
    let { scope, children } = props, context = useCollectionContext(COLLECTION_SLOT_NAME, scope), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.collectionRef);
    return /* @__PURE__ */ import_react70.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      ref: composedRefs
    }, children);
  }), ITEM_SLOT_NAME = name + "CollectionItemSlot", ITEM_DATA_ATTR = "data-radix-collection-item", CollectionItemSlot = /* @__PURE__ */ import_react70.default.forwardRef((props, forwardedRef) => {
    let { scope, children, ...itemData } = props, ref = import_react70.default.useRef(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), context = useCollectionContext(ITEM_SLOT_NAME, scope);
    return import_react70.default.useEffect(() => (context.itemMap.set(ref, {
      ref,
      ...itemData
    }), () => void context.itemMap.delete(ref))), /* @__PURE__ */ import_react70.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      [ITEM_DATA_ATTR]: "",
      ref: composedRefs
    }, children);
  });
  function useCollection(scope) {
    let context = useCollectionContext(name + "CollectionConsumer", scope);
    return import_react70.default.useCallback(() => {
      let collectionNode = context.collectionRef.current;
      if (!collectionNode)
        return [];
      let orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      return Array.from(context.itemMap.values()).sort(
        (a8, b) => orderedNodes.indexOf(a8.ref.current) - orderedNodes.indexOf(b.ref.current)
      );
    }, [
      context.collectionRef,
      context.itemMap
    ]);
  }
  return [
    {
      Provider: CollectionProvider,
      Slot: CollectionSlot,
      ItemSlot: CollectionItemSlot
    },
    useCollection,
    createCollectionScope
  ];
}

// ../../../node_modules/@radix-ui/react-direction/dist/index.mjs
var import_react71 = __toESM(require_react(), 1), $f631663db3294ace$var$DirectionContext = /* @__PURE__ */ (0, import_react71.createContext)(void 0);
function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {
  let globalDir = (0, import_react71.useContext)($f631663db3294ace$var$DirectionContext);
  return localDir || globalDir || "ltr";
}

// ../../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var import_react73 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs
var import_react72 = __toESM(require_react(), 1);
function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  let onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEscapeKeyDownProp);
  (0, import_react72.useEffect)(() => {
    let handleKeyDown = (event) => {
      event.key === "Escape" && onEscapeKeyDown(event);
    };
    return ownerDocument.addEventListener("keydown", handleKeyDown), () => ownerDocument.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown,
    ownerDocument
  ]);
}

// ../../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var $5cb92bef7577960e$var$CONTEXT_UPDATE = "dismissableLayer.update", $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside", $5cb92bef7577960e$var$FOCUS_OUTSIDE = "dismissableLayer.focusOutside", $5cb92bef7577960e$var$originalBodyPointerEvents, $5cb92bef7577960e$var$DismissableLayerContext = /* @__PURE__ */ (0, import_react73.createContext)({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), $5cb92bef7577960e$export$177fb62ff3ec1f22 = /* @__PURE__ */ (0, import_react73.forwardRef)((props, forwardedRef) => {
  var _node$ownerDocument;
  let { disableOutsidePointerEvents = !1, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props, context = (0, import_react73.useContext)($5cb92bef7577960e$var$DismissableLayerContext), [node1, setNode] = (0, import_react73.useState)(null), ownerDocument = (_node$ownerDocument = node1 == null ? void 0 : node1.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis == null ? void 0 : globalThis.document, [, force] = (0, import_react73.useState)({}), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  ), layers = Array.from(context.layers), [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1), highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled), index2 = node1 ? layers.indexOf(node1) : -1, isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0, isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex, pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event) => {
    let target = event.target, isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    !isPointerEventsEnabled || isPointerDownOnBranch || (onPointerDownOutside == null || onPointerDownOutside(event), onInteractOutside == null || onInteractOutside(event), event.defaultPrevented || onDismiss == null || onDismiss());
  }, ownerDocument), focusOutside = $5cb92bef7577960e$var$useFocusOutside((event) => {
    let target = event.target;
    [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    ) || (onFocusOutside == null || onFocusOutside(event), onInteractOutside == null || onInteractOutside(event), event.defaultPrevented || onDismiss == null || onDismiss());
  }, ownerDocument);
  return $addc16e1bbe58fd0$export$3a72a57244d6e765((event) => {
    index2 === context.layers.size - 1 && (onEscapeKeyDown == null || onEscapeKeyDown(event), !event.defaultPrevented && onDismiss && (event.preventDefault(), onDismiss()));
  }, ownerDocument), (0, import_react73.useEffect)(() => {
    if (node1)
      return disableOutsidePointerEvents && (context.layersWithOutsidePointerEventsDisabled.size === 0 && ($5cb92bef7577960e$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents, ownerDocument.body.style.pointerEvents = "none"), context.layersWithOutsidePointerEventsDisabled.add(node1)), context.layers.add(node1), $5cb92bef7577960e$var$dispatchUpdate(), () => {
        disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1 && (ownerDocument.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents);
      };
  }, [
    node1,
    ownerDocument,
    disableOutsidePointerEvents,
    context
  ]), (0, import_react73.useEffect)(() => () => {
    node1 && (context.layers.delete(node1), context.layersWithOutsidePointerEventsDisabled.delete(node1), $5cb92bef7577960e$var$dispatchUpdate());
  }, [
    node1,
    context
  ]), (0, import_react73.useEffect)(() => {
    let handleUpdate = () => force({});
    return document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate), () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
  }, []), /* @__PURE__ */ (0, import_react73.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
var $5cb92bef7577960e$export$4d5eb2109db14228 = /* @__PURE__ */ (0, import_react73.forwardRef)((props, forwardedRef) => {
  let context = (0, import_react73.useContext)($5cb92bef7577960e$var$DismissableLayerContext), ref = (0, import_react73.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react73.useEffect)(() => {
    let node = ref.current;
    if (node)
      return context.branches.add(node), () => {
        context.branches.delete(node);
      };
  }, [
    context.branches
  ]), /* @__PURE__ */ (0, import_react73.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, props, {
    ref: composedRefs
  }));
});
function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  let handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPointerDownOutside), isPointerInsideReactTreeRef = (0, import_react73.useRef)(!1), handleClickRef = (0, import_react73.useRef)(() => {
  });
  return (0, import_react73.useEffect)(() => {
    let handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
            discrete: !0
          });
        }, eventDetail = {
          originalEvent: event
        };
        event.pointerType === "touch" ? (ownerDocument.removeEventListener("click", handleClickRef.current), handleClickRef.current = handleAndDispatchPointerDownOutsideEvent, ownerDocument.addEventListener("click", handleClickRef.current, {
          once: !0
        })) : handleAndDispatchPointerDownOutsideEvent();
      }
      isPointerInsideReactTreeRef.current = !1;
    }, timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId), ownerDocument.removeEventListener("pointerdown", handlePointerDown), ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [
    ownerDocument,
    handlePointerDownOutside
  ]), {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = !0
  };
}
function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  let handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onFocusOutside), isFocusInsideReactTreeRef = (0, import_react73.useRef)(!1);
  return (0, import_react73.useEffect)(() => {
    let handleFocus = (event) => {
      event.target && !isFocusInsideReactTreeRef.current && $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, {
        originalEvent: event
      }, {
        discrete: !1
      });
    };
    return ownerDocument.addEventListener("focusin", handleFocus), () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [
    ownerDocument,
    handleFocusOutside
  ]), {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = !0,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = !1
  };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
  let event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  let target = detail.originalEvent.target, event = new CustomEvent(name, {
    bubbles: !1,
    cancelable: !0,
    detail
  });
  handler && target.addEventListener(name, handler, {
    once: !0
  }), discrete ? $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) : target.dispatchEvent(event);
}
var $5cb92bef7577960e$export$be92b6f5f03c0fe9 = $5cb92bef7577960e$export$177fb62ff3ec1f22, $5cb92bef7577960e$export$aecb2ddcb55c95be = $5cb92bef7577960e$export$4d5eb2109db14228;

// ../../../node_modules/@radix-ui/react-focus-guards/dist/index.mjs
var import_react74 = __toESM(require_react(), 1), $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
  (0, import_react74.useEffect)(() => {
    var _edgeGuards$, _edgeGuards$2;
    let edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard()), document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard()), $3db38b7d1fb3fe6a$var$count++, () => {
      $3db38b7d1fb3fe6a$var$count === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach(
        (node) => node.remove()
      ), $3db38b7d1fb3fe6a$var$count--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
  let element = document.createElement("span");
  return element.setAttribute("data-radix-focus-guard", ""), element.tabIndex = 0, element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", element;
}

// ../../../node_modules/@radix-ui/react-focus-scope/dist/index.mjs
var import_react75 = __toESM(require_react(), 1);
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount", $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount", $d3863c46a17e8a28$var$EVENT_OPTIONS = {
  bubbles: !1,
  cancelable: !0
};
var $d3863c46a17e8a28$export$20e40289641fbbb6 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { loop = !1, trapped = !1, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props, [container1, setContainer] = (0, import_react75.useState)(null), onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onMountAutoFocusProp), onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onUnmountAutoFocusProp), lastFocusedElementRef = (0, import_react75.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContainer(node)
  ), focusScope = (0, import_react75.useRef)({
    paused: !1,
    pause() {
      this.paused = !0;
    },
    resume() {
      this.paused = !1;
    }
  }).current;
  (0, import_react75.useEffect)(() => {
    if (trapped) {
      let handleFocusIn = function(event) {
        if (focusScope.paused || !container1)
          return;
        let target = event.target;
        container1.contains(target) ? lastFocusedElementRef.current = target : $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
          select: !0
        });
      }, handleFocusOut = function(event) {
        if (focusScope.paused || !container1)
          return;
        let relatedTarget = event.relatedTarget;
        relatedTarget !== null && (container1.contains(relatedTarget) || $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
          select: !0
        }));
      }, handleMutations = function(mutations) {
        let focusedElement = document.activeElement;
        for (let mutation of mutations)
          mutation.removedNodes.length > 0 && (container1 != null && container1.contains(focusedElement) || $d3863c46a17e8a28$var$focus(container1));
      };
      document.addEventListener("focusin", handleFocusIn), document.addEventListener("focusout", handleFocusOut);
      let mutationObserver = new MutationObserver(handleMutations);
      return container1 && mutationObserver.observe(container1, {
        childList: !0,
        subtree: !0
      }), () => {
        document.removeEventListener("focusin", handleFocusIn), document.removeEventListener("focusout", handleFocusOut), mutationObserver.disconnect();
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]), (0, import_react75.useEffect)(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
      let previouslyFocusedElement = document.activeElement;
      if (!container1.contains(previouslyFocusedElement)) {
        let mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus), container1.dispatchEvent(mountEvent), mountEvent.defaultPrevented || ($d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
          select: !0
        }), document.activeElement === previouslyFocusedElement && $d3863c46a17e8a28$var$focus(container1));
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus), setTimeout(() => {
          let unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus), container1.dispatchEvent(unmountEvent), unmountEvent.defaultPrevented || $d3863c46a17e8a28$var$focus(previouslyFocusedElement ?? document.body, {
            select: !0
          }), container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus), $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  let handleKeyDown = (0, import_react75.useCallback)((event) => {
    if (!loop && !trapped || focusScope.paused)
      return;
    let isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey, focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      let container = event.currentTarget, [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);
      first && last ? !event.shiftKey && focusedElement === last ? (event.preventDefault(), loop && $d3863c46a17e8a28$var$focus(first, {
        select: !0
      })) : event.shiftKey && focusedElement === first && (event.preventDefault(), loop && $d3863c46a17e8a28$var$focus(last, {
        select: !0
      })) : focusedElement === container && event.preventDefault();
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return /* @__PURE__ */ (0, import_react75.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
function $d3863c46a17e8a28$var$focusFirst(candidates, { select = !1 } = {}) {
  let previouslyFocusedElement = document.activeElement;
  for (let candidate of candidates)
    if ($d3863c46a17e8a28$var$focus(candidate, {
      select
    }), document.activeElement !== previouslyFocusedElement)
      return;
}
function $d3863c46a17e8a28$var$getTabbableEdges(container) {
  let candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container), first = $d3863c46a17e8a28$var$findVisible(candidates, container), last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);
  return [
    first,
    last
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates(container) {
  let nodes = [], walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      let isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      return node.disabled || node.hidden || isHiddenInput ? NodeFilter.FILTER_SKIP : node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; walker.nextNode(); )
    nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible(elements, container) {
  for (let element of elements)
    if (!$d3863c46a17e8a28$var$isHidden(element, {
      upTo: container
    }))
      return element;
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden")
    return !0;
  for (; node; ) {
    if (upTo !== void 0 && node === upTo)
      return !1;
    if (getComputedStyle(node).display === "none")
      return !0;
    node = node.parentElement;
  }
  return !1;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus(element, { select = !1 } = {}) {
  if (element && element.focus) {
    let previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: !0
    }), element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select && element.select();
  }
}
var $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      let activeFocusScope = stack[0];
      focusScope !== activeFocusScope && (activeFocusScope == null || activeFocusScope.pause()), stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope), stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope), (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove(array, item) {
  let updatedArray = [
    ...array
  ], index2 = updatedArray.indexOf(item);
  return index2 !== -1 && updatedArray.splice(index2, 1), updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items) {
  return items.filter(
    (item) => item.tagName !== "A"
  );
}

// ../../../node_modules/@radix-ui/react-id/dist/index.mjs
var $2AODx$react = __toESM(require_react(), 1);
var $1746a345f3d73bb7$var$useReactId = $2AODx$react["useId".toString()] || (() => {
}), $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
  let [id3, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId());
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    deterministicId || setId(
      (reactId) => reactId ?? String($1746a345f3d73bb7$var$count++)
    );
  }, [
    deterministicId
  ]), deterministicId || (id3 ? `radix-${id3}` : "");
}

// ../../../node_modules/@radix-ui/react-popper/dist/index.mjs
var import_react77 = __toESM(require_react(), 1);

// ../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref, commonX = reference.x + reference.width / 2 - floating.width / 2, commonY = reference.y + reference.height / 2 - floating.height / 2, mainAxis = getMainAxisFromPlacement(placement), length = getLengthFromAxis(mainAxis), commonAlign = reference[length] / 2 - floating[length] / 2, side = getSide(placement), isVertical = mainAxis === "x", coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  let {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config, validMiddleware = middleware.filter(Boolean), rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating)), rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  }), {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl), statefulPlacement = placement, middlewareData = {}, resetCount = 0;
  for (let i13 = 0; i13 < validMiddleware.length; i13++) {
    let {
      name,
      fn
    } = validMiddleware[i13], {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    if (x = nextX ?? x, y = nextY ?? y, middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    }, reset && resetCount <= 50) {
      resetCount++, typeof reset == "object" && (reset.placement && (statefulPlacement = reset.placement), reset.rects && (rects = reset.rects === !0 ? await platform2.getElementRects({
        reference,
        floating,
        strategy
      }) : reset.rects), {
        x,
        y
      } = computeCoordsFromPlacement(rects, statefulPlacement, rtl)), i13 = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
function evaluate(value, param) {
  return typeof value == "function" ? value(param) : value;
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getSideObjectFromPadding(padding) {
  return typeof padding != "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  options === void 0 && (options = {});
  let {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state, {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = !1,
    padding = 0
  } = evaluate(options, state), paddingObject = getSideObjectFromPadding(padding), element = elements[altBoundary ? elementContext === "floating" ? "reference" : "floating" : elementContext], clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: (_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) == null || _await$platform$isEle ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  })), rect = elementContext === "floating" ? {
    ...rects.floating,
    x,
    y
  } : rects.reference, offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating)), offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var min2 = Math.min, max2 = Math.max;
function within(min$1, value, max$1) {
  return max2(min$1, min2(value, max$1));
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    let {
      x,
      y,
      placement,
      rects,
      platform: platform2,
      elements
    } = state, {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null)
      return {};
    let paddingObject = getSideObjectFromPadding(padding), coords = {
      x,
      y
    }, axis = getMainAxisFromPlacement(placement), length = getLengthFromAxis(axis), arrowDimensions = await platform2.getDimensions(element), isYAxis = axis === "y", minProp = isYAxis ? "top" : "left", maxProp = isYAxis ? "bottom" : "right", clientProp = isYAxis ? "clientHeight" : "clientWidth", endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length], startDiff = coords[axis] - rects.reference[axis], arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element)), clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) && (clientSize = elements.floating[clientProp] || rects.floating[length]);
    let centerToReference = endDiff / 2 - startDiff / 2, largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1, minPadding = min2(paddingObject[minProp], largestPossiblePadding), maxPadding = min2(paddingObject[maxProp], largestPossiblePadding), min$1 = minPadding, max4 = clientSize - arrowDimensions[length] - maxPadding, center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference, offset2 = within(min$1, center, max4), alignmentOffset = getAlignment(placement) != null && center != offset2 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0 ? center < min$1 ? min$1 - center : max4 - center : 0;
    return {
      [axis]: coords[axis] - alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2 + alignmentOffset
      }
    };
  }
}), sides = ["top", "right", "bottom", "left"];
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function getAlignmentSides(placement, rects, rtl) {
  rtl === void 0 && (rtl = !1);
  let alignment = getAlignment(placement), mainAxis = getMainAxisFromPlacement(placement), length = getLengthFromAxis(mainAxis), mainAlignmentSide = mainAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  return rects.reference[length] > rects.floating[length] && (mainAlignmentSide = getOppositePlacement(mainAlignmentSide)), {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getExpandedPlacements(placement) {
  let oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getSideList(side, isStart, rtl) {
  let lr = ["left", "right"], rl = ["right", "left"], tb = ["top", "bottom"], bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      return rtl ? isStart ? rl : lr : isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  let alignment = getAlignment(placement), list2 = getSideList(getSide(placement), direction === "start", rtl);
  return alignment && (list2 = list2.map((side) => side + "-" + alignment), flipAlignment && (list2 = list2.concat(list2.map(getOppositeAlignmentPlacement)))), list2;
}
var flip = function(options) {
  return options === void 0 && (options = {}), {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$flip;
      let {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state, {
        mainAxis: checkMainAxis = !0,
        crossAxis: checkCrossAxis = !0,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = !0,
        ...detectOverflowOptions
      } = evaluate(options, state), side = getSide(placement), isBasePlacement = getSide(initialPlacement) === initialPlacement, rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)), fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      !specifiedFallbackPlacements && fallbackAxisSideDirection !== "none" && fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      let placements = [initialPlacement, ...fallbackPlacements], overflow = await detectOverflow(state, detectOverflowOptions), overflows = [], overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis && overflows.push(overflow[side]), checkCrossAxis) {
        let {
          main,
          cross
        } = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[main], overflow[cross]);
      }
      if (overflowsData = [...overflowsData, {
        placement,
        overflows
      }], !overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        let nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1, nextPlacement = placements[nextIndex];
        if (nextPlacement)
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a8, b) => a8.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement)
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              let placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a8, b) => a8[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              placement2 && (resetPlacement = placement2);
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        if (placement !== resetPlacement)
          return {
            reset: {
              placement: resetPlacement
            }
          };
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(options) {
  return options === void 0 && (options = {}), {
    name: "hide",
    options,
    async fn(state) {
      let {
        rects
      } = state, {
        strategy = "referenceHidden",
        ...detectOverflowOptions
      } = evaluate(options, state);
      switch (strategy) {
        case "referenceHidden": {
          let overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            elementContext: "reference"
          }), offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          let overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            altBoundary: !0
          }), offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default:
          return {};
      }
    }
  };
};
async function convertValueToCoords(state, options) {
  let {
    placement,
    platform: platform2,
    elements
  } = state, rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)), side = getSide(placement), alignment = getAlignment(placement), isVertical = getMainAxisFromPlacement(placement) === "x", mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1, crossAxisMulti = rtl && isVertical ? -1 : 1, rawValue = evaluate(options, state), {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue == "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  return alignment && typeof alignmentAxis == "number" && (crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis), isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(options) {
  return options === void 0 && (options = 0), {
    name: "offset",
    options,
    async fn(state) {
      let {
        x,
        y
      } = state, diffCoords = await convertValueToCoords(state, options);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};
function getCrossAxis(axis) {
  return axis === "x" ? "y" : "x";
}
var shift = function(options) {
  return options === void 0 && (options = {}), {
    name: "shift",
    options,
    async fn(state) {
      let {
        x,
        y,
        placement
      } = state, {
        mainAxis: checkMainAxis = !0,
        crossAxis: checkCrossAxis = !1,
        limiter = {
          fn: (_ref) => {
            let {
              x: x2,
              y: y2
            } = _ref;
            return {
              x: x2,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state), coords = {
        x,
        y
      }, overflow = await detectOverflow(state, detectOverflowOptions), mainAxis = getMainAxisFromPlacement(getSide(placement)), crossAxis = getCrossAxis(mainAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        let minSide = mainAxis === "y" ? "top" : "left", maxSide = mainAxis === "y" ? "bottom" : "right", min4 = mainAxisCoord + overflow[minSide], max4 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = within(min4, mainAxisCoord, max4);
      }
      if (checkCrossAxis) {
        let minSide = crossAxis === "y" ? "top" : "left", maxSide = crossAxis === "y" ? "bottom" : "right", min4 = crossAxisCoord + overflow[minSide], max4 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = within(min4, crossAxisCoord, max4);
      }
      let limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }
  };
}, limitShift = function(options) {
  return options === void 0 && (options = {}), {
    options,
    fn(state) {
      let {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = state, {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = !0,
        crossAxis: checkCrossAxis = !0
      } = evaluate(options, state), coords = {
        x,
        y
      }, mainAxis = getMainAxisFromPlacement(placement), crossAxis = getCrossAxis(mainAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis], rawOffset = evaluate(offset2, state), computedOffset = typeof rawOffset == "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        let len = mainAxis === "y" ? "height" : "width", limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis, limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        mainAxisCoord < limitMin ? mainAxisCoord = limitMin : mainAxisCoord > limitMax && (mainAxisCoord = limitMax);
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        let len = mainAxis === "y" ? "width" : "height", isOriginSide = ["top", "left"].includes(getSide(placement)), limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide && ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0) + (isOriginSide ? 0 : computedOffset.crossAxis), limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        crossAxisCoord < limitMin ? crossAxisCoord = limitMin : crossAxisCoord > limitMax && (crossAxisCoord = limitMax);
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
}, size = function(options) {
  return options === void 0 && (options = {}), {
    name: "size",
    options,
    async fn(state) {
      let {
        placement,
        rects,
        platform: platform2,
        elements
      } = state, {
        apply = () => {
        },
        ...detectOverflowOptions
      } = evaluate(options, state), overflow = await detectOverflow(state, detectOverflowOptions), side = getSide(placement), alignment = getAlignment(placement), isXAxis = getMainAxisFromPlacement(placement) === "x", {
        width,
        height
      } = rects.floating, heightSide, widthSide;
      side === "top" || side === "bottom" ? (heightSide = side, widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right") : (widthSide = side, heightSide = alignment === "end" ? "top" : "bottom");
      let overflowAvailableHeight = height - overflow[heightSide], overflowAvailableWidth = width - overflow[widthSide], noShift = !state.middlewareData.shift, availableHeight = overflowAvailableHeight, availableWidth = overflowAvailableWidth;
      if (isXAxis) {
        let maximumClippingWidth = width - overflow.left - overflow.right;
        availableWidth = alignment || noShift ? min2(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
      } else {
        let maximumClippingHeight = height - overflow.top - overflow.bottom;
        availableHeight = alignment || noShift ? min2(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
      }
      if (noShift && !alignment) {
        let xMin = max2(overflow.left, 0), xMax = max2(overflow.right, 0), yMin = max2(overflow.top, 0), yMax = max2(overflow.bottom, 0);
        isXAxis ? availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max2(overflow.left, overflow.right)) : availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max2(overflow.top, overflow.bottom));
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      let nextDimensions = await platform2.getDimensions(elements.floating);
      return width !== nextDimensions.width || height !== nextDimensions.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};

// ../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getWindow(node) {
  var _node$ownerDocument;
  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function getNodeName(node) {
  return isNode(node) ? (node.nodeName || "").toLowerCase() : "#document";
}
function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement(value) {
  return value instanceof getWindow(value).Element;
}
function isShadowRoot(node) {
  return typeof ShadowRoot > "u" ? !1 : node instanceof getWindow(node).ShadowRoot || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  let {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  let safari = isSafari(), css = getComputedStyle$1(element);
  return css.transform !== "none" || css.perspective !== "none" || !safari && (css.backdropFilter ? css.backdropFilter !== "none" : !1) || !safari && (css.filter ? css.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function isSafari() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
var min3 = Math.min, max3 = Math.max, round = Math.round, floor = Math.floor, createEmptyCoords = (v) => ({
  x: v,
  y: v
});
function getCssDimensions(element) {
  let css = getComputedStyle$1(element), width = parseFloat(css.width) || 0, height = parseFloat(css.height) || 0, hasOffset = isHTMLElement(element), offsetWidth = hasOffset ? element.offsetWidth : width, offsetHeight = hasOffset ? element.offsetHeight : height, shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  return shouldFallback && (width = offsetWidth, height = offsetHeight), {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return isElement(element) ? element : element.contextElement;
}
function getScale(element) {
  let domElement = unwrapElement(element);
  if (!isHTMLElement(domElement))
    return createEmptyCoords(1);
  let rect = domElement.getBoundingClientRect(), {
    width,
    height,
    $
  } = getCssDimensions(domElement), x = ($ ? round(rect.width) : rect.width) / width, y = ($ ? round(rect.height) : rect.height) / height;
  return (!x || !Number.isFinite(x)) && (x = 1), (!y || !Number.isFinite(y)) && (y = 1), {
    x,
    y
  };
}
var noOffsets = /* @__PURE__ */ createEmptyCoords(0);
function getVisualOffsets(element, isFixed, floatingOffsetParent) {
  var _win$visualViewport, _win$visualViewport2;
  if (isFixed === void 0 && (isFixed = !0), !isSafari())
    return noOffsets;
  let win = element ? getWindow(element) : window;
  return !floatingOffsetParent || isFixed && floatingOffsetParent !== win ? noOffsets : {
    x: ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0,
    y: ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0
  };
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  includeScale === void 0 && (includeScale = !1), isFixedStrategy === void 0 && (isFixedStrategy = !1);
  let clientRect = element.getBoundingClientRect(), domElement = unwrapElement(element), scale2 = createEmptyCoords(1);
  includeScale && (offsetParent ? isElement(offsetParent) && (scale2 = getScale(offsetParent)) : scale2 = getScale(element));
  let visualOffsets = getVisualOffsets(domElement, isFixedStrategy, offsetParent), x = (clientRect.left + visualOffsets.x) / scale2.x, y = (clientRect.top + visualOffsets.y) / scale2.y, width = clientRect.width / scale2.x, height = clientRect.height / scale2.y;
  if (domElement) {
    let win = getWindow(domElement), offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent, currentIFrame = win.frameElement;
    for (; currentIFrame && offsetParent && offsetWin !== win; ) {
      let iframeScale = getScale(currentIFrame), iframeRect = currentIFrame.getBoundingClientRect(), css = getComputedStyle(currentIFrame), left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x, top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x, y *= iframeScale.y, width *= iframeScale.x, height *= iframeScale.y, x += left, y += top, currentIFrame = getWindow(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}
function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}
function getNodeScroll(element) {
  return isElement(element) ? {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  } : {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref, isOffsetParentAnElement = isHTMLElement(offsetParent), documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement)
    return rect;
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  }, scale2 = createEmptyCoords(1), offsets = createEmptyCoords(0);
  if ((isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") && ((getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) && (scroll = getNodeScroll(offsetParent)), isHTMLElement(offsetParent))) {
    let offsetRect = getBoundingClientRect(offsetParent);
    scale2 = getScale(offsetParent), offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;
  }
  return {
    width: rect.width * scale2.x,
    height: rect.height * scale2.y,
    x: rect.x * scale2.x - scroll.scrollLeft * scale2.x + offsets.x,
    y: rect.y * scale2.y - scroll.scrollTop * scale2.y + offsets.y
  };
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  let html = getDocumentElement(element), scroll = getNodeScroll(element), body = element.ownerDocument.body, width = max3(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth), height = max3(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight), x = -scroll.scrollLeft + getWindowScrollBarX(element), y = -scroll.scrollTop;
  return getComputedStyle$1(body).direction === "rtl" && (x += max3(html.clientWidth, body.clientWidth) - width), {
    width,
    height,
    x,
    y
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html")
    return node;
  let result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  let parentNode = getParentNode(node);
  return isLastTraversableNode(parentNode) ? node.ownerDocument ? node.ownerDocument.body : node.body : isHTMLElement(parentNode) && isOverflowElement(parentNode) ? parentNode : getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list2) {
  var _node$ownerDocument;
  list2 === void 0 && (list2 = []);
  let scrollableAncestor = getNearestOverflowAncestor(node), isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body), win = getWindow(scrollableAncestor);
  return isBody ? list2.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : list2.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
}
function getViewportRect(element, strategy) {
  let win = getWindow(element), html = getDocumentElement(element), visualViewport = win.visualViewport, width = html.clientWidth, height = html.clientHeight, x = 0, y = 0;
  if (visualViewport) {
    width = visualViewport.width, height = visualViewport.height;
    let visualViewportBased = isSafari();
    (!visualViewportBased || visualViewportBased && strategy === "fixed") && (x = visualViewport.offsetLeft, y = visualViewport.offsetTop);
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  let clientRect = getBoundingClientRect(element, !0, strategy === "fixed"), top = clientRect.top + element.clientTop, left = clientRect.left + element.clientLeft, scale2 = isHTMLElement(element) ? getScale(element) : createEmptyCoords(1), width = element.clientWidth * scale2.x, height = element.clientHeight * scale2.y, x = left * scale2.x, y = top * scale2.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport")
    rect = getViewportRect(element, strategy);
  else if (clippingAncestor === "document")
    rect = getDocumentRect(getDocumentElement(element));
  else if (isElement(clippingAncestor))
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  else {
    let visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  let parentNode = getParentNode(element);
  return parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode) ? !1 : getComputedStyle$1(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  let cachedResult = cache.get(element);
  if (cachedResult)
    return cachedResult;
  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== "body"), currentContainingBlockComputedStyle = null, elementIsFixed = getComputedStyle$1(element).position === "fixed", currentNode = elementIsFixed ? getParentNode(element) : element;
  for (; isElement(currentNode) && !isLastTraversableNode(currentNode); ) {
    let computedStyle = getComputedStyle$1(currentNode), currentNodeIsContaining = isContainingBlock(currentNode);
    !currentNodeIsContaining && computedStyle.position === "fixed" && (currentContainingBlockComputedStyle = null), (elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode)) ? result = result.filter((ancestor) => ancestor !== currentNode) : currentContainingBlockComputedStyle = computedStyle, currentNode = getParentNode(currentNode);
  }
  return cache.set(element, result), result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref, clippingAncestors = [...boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary), rootBoundary], firstClippingAncestor = clippingAncestors[0], clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    let rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    return accRect.top = max3(rect.top, accRect.top), accRect.right = min3(rect.right, accRect.right), accRect.bottom = min3(rect.bottom, accRect.bottom), accRect.left = max3(rect.left, accRect.left), accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getTrueOffsetParent(element, polyfill) {
  return !isHTMLElement(element) || getComputedStyle$1(element).position === "fixed" ? null : polyfill ? polyfill(element) : element.offsetParent;
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  for (; isHTMLElement(currentNode) && !isLastTraversableNode(currentNode); ) {
    if (isContainingBlock(currentNode))
      return currentNode;
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function getOffsetParent(element, polyfill) {
  let window2 = getWindow(element);
  if (!isHTMLElement(element))
    return window2;
  let offsetParent = getTrueOffsetParent(element, polyfill);
  for (; offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static"; )
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  return offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static" && !isContainingBlock(offsetParent)) ? window2 : offsetParent || getContainingBlock(element) || window2;
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  let isOffsetParentAnElement = isHTMLElement(offsetParent), documentElement = getDocumentElement(offsetParent), isFixed = strategy === "fixed", rect = getBoundingClientRect(element, !0, isFixed, offsetParent), scroll = {
    scrollLeft: 0,
    scrollTop: 0
  }, offsets = createEmptyCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed)
    if ((getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) && (scroll = getNodeScroll(offsetParent)), isHTMLElement(offsetParent)) {
      let offsetRect = getBoundingClientRect(offsetParent, !0, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;
    } else
      documentElement && (offsets.x = getWindowScrollBarX(documentElement));
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
var platform = {
  getClippingRect,
  convertOffsetParentRelativeRectToViewportRelativeRect,
  isElement,
  getDimensions,
  getOffsetParent,
  getDocumentElement,
  getScale,
  async getElementRects(_ref) {
    let {
      reference,
      floating,
      strategy
    } = _ref, getOffsetParentFn = this.getOffsetParent || getOffsetParent, getDimensionsFn = this.getDimensions;
    return {
      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
      floating: {
        x: 0,
        y: 0,
        ...await getDimensionsFn(floating)
      }
    };
  },
  getClientRects: (element) => Array.from(element.getClientRects()),
  isRTL: (element) => getComputedStyle$1(element).direction === "rtl"
};
function observeMove(element, onMove) {
  let io = null, timeoutId, root = getDocumentElement(element);
  function cleanup() {
    clearTimeout(timeoutId), io && io.disconnect(), io = null;
  }
  function refresh(skip, threshold) {
    skip === void 0 && (skip = !1), threshold === void 0 && (threshold = 1), cleanup();
    let {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (skip || onMove(), !width || !height)
      return;
    let insetTop = floor(top), insetRight = floor(root.clientWidth - (left + width)), insetBottom = floor(root.clientHeight - (top + height)), insetLeft = floor(left), rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px", isFirstUpdate = !0;
    io = new IntersectionObserver((entries) => {
      let ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate)
          return refresh();
        ratio ? refresh(!1, ratio) : timeoutId = setTimeout(() => {
          refresh(!1, 1e-7);
        }, 100);
      }
      isFirstUpdate = !1;
    }, {
      rootMargin,
      threshold: max3(0, min3(1, threshold)) || 1
    }), io.observe(element);
  }
  return refresh(!0), cleanup;
}
function autoUpdate(reference, floating, update, options) {
  options === void 0 && (options = {});
  let {
    ancestorScroll = !0,
    ancestorResize = !0,
    elementResize = !0,
    layoutShift = typeof IntersectionObserver == "function",
    animationFrame = !1
  } = options, referenceEl = unwrapElement(reference), ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: !0
    }), ancestorResize && ancestor.addEventListener("resize", update);
  });
  let cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null, resizeObserver = null;
  elementResize && (resizeObserver = new ResizeObserver(update), referenceEl && !animationFrame && resizeObserver.observe(referenceEl), resizeObserver.observe(floating));
  let frameId, prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  animationFrame && frameLoop();
  function frameLoop() {
    let nextRefRect = getBoundingClientRect(reference);
    prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height) && update(), prevRefRect = nextRefRect, frameId = requestAnimationFrame(frameLoop);
  }
  return update(), () => {
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update), ancestorResize && ancestor.removeEventListener("resize", update);
    }), cleanupIo && cleanupIo(), resizeObserver && resizeObserver.disconnect(), resizeObserver = null, animationFrame && cancelAnimationFrame(frameId);
  };
}
var computePosition2 = (reference, floating, options) => {
  let cache = /* @__PURE__ */ new Map(), mergedOptions = {
    platform,
    ...options
  }, platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// ../../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js
var React6 = __toESM(require_react()), import_react76 = __toESM(require_react()), ReactDOM = __toESM(require_react_dom()), arrow2 = (options) => {
  function isRef(value) {
    return {}.hasOwnProperty.call(value, "current");
  }
  return {
    name: "arrow",
    options,
    fn(state) {
      let {
        element,
        padding
      } = typeof options == "function" ? options(state) : options;
      return element && isRef(element) ? element.current != null ? arrow({
        element: element.current,
        padding
      }).fn(state) : {} : element ? arrow({
        element,
        padding
      }).fn(state) : {};
    }
  };
}, index = typeof document < "u" ? import_react76.useLayoutEffect : import_react76.useEffect;
function deepEqual(a8, b) {
  if (a8 === b)
    return !0;
  if (typeof a8 != typeof b)
    return !1;
  if (typeof a8 == "function" && a8.toString() === b.toString())
    return !0;
  let length, i13, keys;
  if (a8 && b && typeof a8 == "object") {
    if (Array.isArray(a8)) {
      if (length = a8.length, length != b.length)
        return !1;
      for (i13 = length; i13-- !== 0; )
        if (!deepEqual(a8[i13], b[i13]))
          return !1;
      return !0;
    }
    if (keys = Object.keys(a8), length = keys.length, length !== Object.keys(b).length)
      return !1;
    for (i13 = length; i13-- !== 0; )
      if (!{}.hasOwnProperty.call(b, keys[i13]))
        return !1;
    for (i13 = length; i13-- !== 0; ) {
      let key = keys[i13];
      if (!(key === "_owner" && a8.$$typeof) && !deepEqual(a8[key], b[key]))
        return !1;
    }
    return !0;
  }
  return a8 !== a8 && b !== b;
}
function getDPR(element) {
  return typeof window > "u" ? 1 : (element.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  let dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  let ref = React6.useRef(value);
  return index(() => {
    ref.current = value;
  }), ref;
}
function useFloating(options) {
  options === void 0 && (options = {});
  let {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = !0,
    whileElementsMounted,
    open
  } = options, [data, setData] = React6.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: !1
  }), [latestMiddleware, setLatestMiddleware] = React6.useState(middleware);
  deepEqual(latestMiddleware, middleware) || setLatestMiddleware(middleware);
  let [_reference, _setReference] = React6.useState(null), [_floating, _setFloating] = React6.useState(null), setReference = React6.useCallback((node) => {
    node != referenceRef.current && (referenceRef.current = node, _setReference(node));
  }, [_setReference]), setFloating = React6.useCallback((node) => {
    node !== floatingRef.current && (floatingRef.current = node, _setFloating(node));
  }, [_setFloating]), referenceEl = externalReference || _reference, floatingEl = externalFloating || _floating, referenceRef = React6.useRef(null), floatingRef = React6.useRef(null), dataRef = React6.useRef(data), whileElementsMountedRef = useLatestRef(whileElementsMounted), platformRef = useLatestRef(platform2), update = React6.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current)
      return;
    let config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    platformRef.current && (config.platform = platformRef.current), computePosition2(referenceRef.current, floatingRef.current, config).then((data2) => {
      let fullData = {
        ...data2,
        isPositioned: !0
      };
      isMountedRef.current && !deepEqual(dataRef.current, fullData) && (dataRef.current = fullData, ReactDOM.flushSync(() => {
        setData(fullData);
      }));
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index(() => {
    open === !1 && dataRef.current.isPositioned && (dataRef.current.isPositioned = !1, setData((data2) => ({
      ...data2,
      isPositioned: !1
    })));
  }, [open]);
  let isMountedRef = React6.useRef(!1);
  index(() => (isMountedRef.current = !0, () => {
    isMountedRef.current = !1;
  }), []), index(() => {
    if (referenceEl && (referenceRef.current = referenceEl), floatingEl && (floatingRef.current = floatingEl), referenceEl && floatingEl) {
      if (whileElementsMountedRef.current)
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);
  let refs = React6.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]), elements = React6.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]), floatingStyles = React6.useMemo(() => {
    let initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating)
      return initialStyles;
    let x = roundByDPR(elements.floating, data.x), y = roundByDPR(elements.floating, data.y);
    return transform ? {
      ...initialStyles,
      transform: "translate(" + x + "px, " + y + "px)",
      ...getDPR(elements.floating) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return React6.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}

// ../../../node_modules/@radix-ui/react-popper/dist/index.mjs
var $cf1ac5d9fe0e8206$var$POPPER_NAME = "Popper", [$cf1ac5d9fe0e8206$var$createPopperContext, $cf1ac5d9fe0e8206$export$722aac194ae923] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cf1ac5d9fe0e8206$var$POPPER_NAME), [$cf1ac5d9fe0e8206$var$PopperProvider, $cf1ac5d9fe0e8206$var$usePopperContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$POPPER_NAME), $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9 = (props) => {
  let { __scopePopper, children } = props, [anchor, setAnchor] = (0, import_react77.useState)(null);
  return /* @__PURE__ */ (0, import_react77.createElement)($cf1ac5d9fe0e8206$var$PopperProvider, {
    scope: __scopePopper,
    anchor,
    onAnchorChange: setAnchor
  }, children);
}, $cf1ac5d9fe0e8206$var$ANCHOR_NAME = "PopperAnchor", $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopePopper, virtualRef, ...anchorProps } = props, context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$ANCHOR_NAME, __scopePopper), ref = (0, import_react77.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react77.useEffect)(() => {
    context.onAnchorChange((virtualRef == null ? void 0 : virtualRef.current) || ref.current);
  }), virtualRef ? null : /* @__PURE__ */ (0, import_react77.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, anchorProps, {
    ref: composedRefs
  }));
}), $cf1ac5d9fe0e8206$var$CONTENT_NAME = "PopperContent", [$cf1ac5d9fe0e8206$var$PopperContentProvider, $cf1ac5d9fe0e8206$var$useContentContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME), $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  var _arrowSize$width, _arrowSize$height, _middlewareData$arrow, _middlewareData$arrow2, _middlewareData$arrow3, _middlewareData$trans, _middlewareData$trans2, _middlewareData$hide;
  let { __scopePopper, side = "bottom", sideOffset = 0, align = "center", alignOffset = 0, arrowPadding = 0, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = "partial", hideWhenDetached = !1, avoidCollisions = !0, onPlaced, ...contentProps } = props, context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper), [content, setContent] = (0, import_react77.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  ), [arrow3, setArrow] = (0, import_react77.useState)(null), arrowSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(arrow3), arrowWidth = (_arrowSize$width = arrowSize == null ? void 0 : arrowSize.width) !== null && _arrowSize$width !== void 0 ? _arrowSize$width : 0, arrowHeight = (_arrowSize$height = arrowSize == null ? void 0 : arrowSize.height) !== null && _arrowSize$height !== void 0 ? _arrowSize$height : 0, desiredPlacement = side + (align !== "center" ? "-" + align : ""), collisionPadding = typeof collisionPaddingProp == "number" ? collisionPaddingProp : {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...collisionPaddingProp
  }, boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [
    collisionBoundary
  ], hasExplicitBoundaries = boundary.length > 0, detectOverflowOptions = {
    padding: collisionPadding,
    boundary: boundary.filter($cf1ac5d9fe0e8206$var$isNotNull),
    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
    altBoundary: hasExplicitBoundaries
  }, { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({
    // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
    strategy: "fixed",
    placement: desiredPlacement,
    whileElementsMounted: autoUpdate,
    elements: {
      reference: context.anchor
    },
    middleware: [
      offset({
        mainAxis: sideOffset + arrowHeight,
        alignmentAxis: alignOffset
      }),
      avoidCollisions && shift({
        mainAxis: !0,
        crossAxis: !1,
        limiter: sticky === "partial" ? limitShift() : void 0,
        ...detectOverflowOptions
      }),
      avoidCollisions && flip({
        ...detectOverflowOptions
      }),
      size({
        ...detectOverflowOptions,
        apply: ({ elements, rects, availableWidth, availableHeight }) => {
          let { width: anchorWidth, height: anchorHeight } = rects.reference, contentStyle = elements.floating.style;
          contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`), contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`), contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`), contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
        }
      }),
      arrow3 && arrow2({
        element: arrow3,
        padding: arrowPadding
      }),
      $cf1ac5d9fe0e8206$var$transformOrigin({
        arrowWidth,
        arrowHeight
      }),
      hideWhenDetached && hide({
        strategy: "referenceHidden"
      })
    ]
  }), [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement), handlePlaced = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPlaced);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    isPositioned && (handlePlaced == null || handlePlaced());
  }, [
    isPositioned,
    handlePlaced
  ]);
  let arrowX = (_middlewareData$arrow = middlewareData.arrow) === null || _middlewareData$arrow === void 0 ? void 0 : _middlewareData$arrow.x, arrowY = (_middlewareData$arrow2 = middlewareData.arrow) === null || _middlewareData$arrow2 === void 0 ? void 0 : _middlewareData$arrow2.y, cannotCenterArrow = ((_middlewareData$arrow3 = middlewareData.arrow) === null || _middlewareData$arrow3 === void 0 ? void 0 : _middlewareData$arrow3.centerOffset) !== 0, [contentZIndex, setContentZIndex] = (0, import_react77.useState)();
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    content && setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]), /* @__PURE__ */ (0, import_react77.createElement)("div", {
    ref: refs.setFloating,
    "data-radix-popper-content-wrapper": "",
    style: {
      ...floatingStyles,
      transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
      // keep off the page when measuring
      minWidth: "max-content",
      zIndex: contentZIndex,
      ["--radix-popper-transform-origin"]: [
        (_middlewareData$trans = middlewareData.transformOrigin) === null || _middlewareData$trans === void 0 ? void 0 : _middlewareData$trans.x,
        (_middlewareData$trans2 = middlewareData.transformOrigin) === null || _middlewareData$trans2 === void 0 ? void 0 : _middlewareData$trans2.y
      ].join(" ")
    },
    dir: props.dir
  }, /* @__PURE__ */ (0, import_react77.createElement)($cf1ac5d9fe0e8206$var$PopperContentProvider, {
    scope: __scopePopper,
    placedSide,
    onArrowChange: setArrow,
    arrowX,
    arrowY,
    shouldHideArrow: cannotCenterArrow
  }, /* @__PURE__ */ (0, import_react77.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-side": placedSide,
    "data-align": placedAlign
  }, contentProps, {
    ref: composedRefs,
    style: {
      ...contentProps.style,
      // if the PopperContent hasn't been placed yet (not all measurements done)
      // we prevent animations so that users's animation don't kick in too early referring wrong sides
      animation: isPositioned ? void 0 : "none",
      // hide the content if using the hide middleware and should be hidden
      opacity: (_middlewareData$hide = middlewareData.hide) !== null && _middlewareData$hide !== void 0 && _middlewareData$hide.referenceHidden ? 0 : void 0
    }
  }))));
});
function $cf1ac5d9fe0e8206$var$isNotNull(value) {
  return value !== null;
}
var $cf1ac5d9fe0e8206$var$transformOrigin = (options) => ({
  name: "transformOrigin",
  options,
  fn(data) {
    var _middlewareData$arrow4, _middlewareData$arrow5, _middlewareData$arrow6, _middlewareData$arrow7, _middlewareData$arrow8;
    let { placement, rects, middlewareData } = data, isArrowHidden = ((_middlewareData$arrow4 = middlewareData.arrow) === null || _middlewareData$arrow4 === void 0 ? void 0 : _middlewareData$arrow4.centerOffset) !== 0, arrowWidth = isArrowHidden ? 0 : options.arrowWidth, arrowHeight = isArrowHidden ? 0 : options.arrowHeight, [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement), noArrowAlign = {
      start: "0%",
      center: "50%",
      end: "100%"
    }[placedAlign], arrowXCenter = ((_middlewareData$arrow5 = (_middlewareData$arrow6 = middlewareData.arrow) === null || _middlewareData$arrow6 === void 0 ? void 0 : _middlewareData$arrow6.x) !== null && _middlewareData$arrow5 !== void 0 ? _middlewareData$arrow5 : 0) + arrowWidth / 2, arrowYCenter = ((_middlewareData$arrow7 = (_middlewareData$arrow8 = middlewareData.arrow) === null || _middlewareData$arrow8 === void 0 ? void 0 : _middlewareData$arrow8.y) !== null && _middlewareData$arrow7 !== void 0 ? _middlewareData$arrow7 : 0) + arrowHeight / 2, x = "", y = "";
    return placedSide === "bottom" ? (x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`, y = `${-arrowHeight}px`) : placedSide === "top" ? (x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`, y = `${rects.floating.height + arrowHeight}px`) : placedSide === "right" ? (x = `${-arrowHeight}px`, y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`) : placedSide === "left" && (x = `${rects.floating.width + arrowHeight}px`, y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`), {
      data: {
        x,
        y
      }
    };
  }
});
function $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement) {
  let [side, align = "center"] = placement.split("-");
  return [
    side,
    align
  ];
}
var $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9 = $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9, $cf1ac5d9fe0e8206$export$b688253958b8dfe7 = $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d, $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2 = $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc;

// ../../../node_modules/@radix-ui/react-portal/dist/index.mjs
var import_react78 = __toESM(require_react(), 1), import_react_dom4 = __toESM(require_react_dom(), 1);
var $f1701beae083dbae$export$602eac185826482c = /* @__PURE__ */ (0, import_react78.forwardRef)((props, forwardedRef) => {
  var _globalThis$document;
  let { container = globalThis == null || (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container ? /* @__PURE__ */ import_react_dom4.default.createPortal(/* @__PURE__ */ (0, import_react78.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, portalProps, {
    ref: forwardedRef
  })), container) : null;
});

// ../../../node_modules/@radix-ui/react-roving-focus/dist/index.mjs
var import_react79 = __toESM(require_react(), 1);
var $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus", $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {
  bubbles: !1,
  cancelable: !0
}, $d7bdfb9eb0fdf311$var$GROUP_NAME = "RovingFocusGroup", [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($d7bdfb9eb0fdf311$var$GROUP_NAME), [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d7bdfb9eb0fdf311$var$GROUP_NAME, [
  $d7bdfb9eb0fdf311$var$createCollectionScope
]), [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME), $d7bdfb9eb0fdf311$export$8699f7c8af148338 = /* @__PURE__ */ (0, import_react79.forwardRef)((props, forwardedRef) => /* @__PURE__ */ (0, import_react79.createElement)($d7bdfb9eb0fdf311$var$Collection.Provider, {
  scope: props.__scopeRovingFocusGroup
}, /* @__PURE__ */ (0, import_react79.createElement)($d7bdfb9eb0fdf311$var$Collection.Slot, {
  scope: props.__scopeRovingFocusGroup
}, /* @__PURE__ */ (0, import_react79.createElement)($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, _extends({}, props, {
  ref: forwardedRef
}))))), $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = /* @__PURE__ */ (0, import_react79.forwardRef)((props, forwardedRef) => {
  let { __scopeRovingFocusGroup, orientation, loop = !1, dir, currentTabStopId: currentTabStopIdProp, defaultCurrentTabStopId, onCurrentTabStopIdChange, onEntryFocus, ...groupProps } = props, ref = (0, import_react79.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), direction = $f631663db3294ace$export$b39126d51d94e6f3(dir), [currentTabStopId = null, setCurrentTabStopId] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId,
    onChange: onCurrentTabStopIdChange
  }), [isTabbingBackOut, setIsTabbingBackOut] = (0, import_react79.useState)(!1), handleEntryFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEntryFocus), getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup), isClickFocusRef = (0, import_react79.useRef)(!1), [focusableItemsCount, setFocusableItemsCount] = (0, import_react79.useState)(0);
  return (0, import_react79.useEffect)(() => {
    let node = ref.current;
    if (node)
      return node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus), () => node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
  }, [
    handleEntryFocus
  ]), /* @__PURE__ */ (0, import_react79.createElement)($d7bdfb9eb0fdf311$var$RovingFocusProvider, {
    scope: __scopeRovingFocusGroup,
    orientation,
    dir: direction,
    loop,
    currentTabStopId,
    onItemFocus: (0, import_react79.useCallback)(
      (tabStopId) => setCurrentTabStopId(tabStopId),
      [
        setCurrentTabStopId
      ]
    ),
    onItemShiftTab: (0, import_react79.useCallback)(
      () => setIsTabbingBackOut(!0),
      []
    ),
    onFocusableItemAdd: (0, import_react79.useCallback)(
      () => setFocusableItemsCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onFocusableItemRemove: (0, import_react79.useCallback)(
      () => setFocusableItemsCount(
        (prevCount) => prevCount - 1
      ),
      []
    )
  }, /* @__PURE__ */ (0, import_react79.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
    "data-orientation": orientation
  }, groupProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...props.style
    },
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, () => {
      isClickFocusRef.current = !0;
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, (event) => {
      let isKeyboardFocus = !isClickFocusRef.current;
      if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
        let entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);
        if (event.currentTarget.dispatchEvent(entryFocusEvent), !entryFocusEvent.defaultPrevented) {
          let items = getItems().filter(
            (item) => item.focusable
          ), activeItem = items.find(
            (item) => item.active
          ), currentItem = items.find(
            (item) => item.id === currentTabStopId
          ), candidateNodes = [
            activeItem,
            currentItem,
            ...items
          ].filter(Boolean).map(
            (item) => item.ref.current
          );
          $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);
        }
      }
      isClickFocusRef.current = !1;
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsTabbingBackOut(!1)
    )
  })));
}), $d7bdfb9eb0fdf311$var$ITEM_NAME = "RovingFocusGroupItem", $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = /* @__PURE__ */ (0, import_react79.forwardRef)((props, forwardedRef) => {
  let { __scopeRovingFocusGroup, focusable = !0, active = !1, tabStopId, ...itemProps } = props, autoId = $1746a345f3d73bb7$export$f680877a34711e37(), id3 = tabStopId || autoId, context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup), isCurrentTabStop = context.currentTabStopId === id3, getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup), { onFocusableItemAdd, onFocusableItemRemove } = context;
  return (0, import_react79.useEffect)(() => {
    if (focusable)
      return onFocusableItemAdd(), () => onFocusableItemRemove();
  }, [
    focusable,
    onFocusableItemAdd,
    onFocusableItemRemove
  ]), /* @__PURE__ */ (0, import_react79.createElement)($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {
    scope: __scopeRovingFocusGroup,
    id: id3,
    focusable,
    active
  }, /* @__PURE__ */ (0, import_react79.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    tabIndex: isCurrentTabStop ? 0 : -1,
    "data-orientation": context.orientation
  }, itemProps, {
    ref: forwardedRef,
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, (event) => {
      focusable ? context.onItemFocus(id3) : event.preventDefault();
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => context.onItemFocus(id3)
    ),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Tab" && event.shiftKey) {
        context.onItemShiftTab();
        return;
      }
      if (event.target !== event.currentTarget)
        return;
      let focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);
      if (focusIntent !== void 0) {
        event.preventDefault();
        let candidateNodes = getItems().filter(
          (item) => item.focusable
        ).map(
          (item) => item.ref.current
        );
        if (focusIntent === "last")
          candidateNodes.reverse();
        else if (focusIntent === "prev" || focusIntent === "next") {
          focusIntent === "prev" && candidateNodes.reverse();
          let currentIndex = candidateNodes.indexOf(event.currentTarget);
          candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes)
        );
      }
    })
  })));
}), $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function $d7bdfb9eb0fdf311$var$getDirectionAwareKey(key, dir) {
  return dir !== "rtl" ? key : key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function $d7bdfb9eb0fdf311$var$getFocusIntent(event, orientation, dir) {
  let key = $d7bdfb9eb0fdf311$var$getDirectionAwareKey(event.key, dir);
  if (!(orientation === "vertical" && [
    "ArrowLeft",
    "ArrowRight"
  ].includes(key)) && !(orientation === "horizontal" && [
    "ArrowUp",
    "ArrowDown"
  ].includes(key)))
    return $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT[key];
}
function $d7bdfb9eb0fdf311$var$focusFirst(candidates) {
  let PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (let candidate of candidates)
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT || (candidate.focus(), document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT))
      return;
}
function $d7bdfb9eb0fdf311$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index2) => array[(startIndex + index2) % array.length]
  );
}
var $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 = $d7bdfb9eb0fdf311$export$8699f7c8af148338, $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 = $d7bdfb9eb0fdf311$export$ab9df7c53fe8454;

// ../../../node_modules/@radix-ui/react-menu/dist/index.mjs
var import_aria_hidden = __toESM(require_es5(), 1), import_react_remove_scroll = __toESM(require_es57(), 1), $6cc32821e9371a1c$var$SELECTION_KEYS = [
  "Enter",
  " "
], $6cc32821e9371a1c$var$FIRST_KEYS = [
  "ArrowDown",
  "PageUp",
  "Home"
], $6cc32821e9371a1c$var$LAST_KEYS = [
  "ArrowUp",
  "PageDown",
  "End"
], $6cc32821e9371a1c$var$FIRST_LAST_KEYS = [
  ...$6cc32821e9371a1c$var$FIRST_KEYS,
  ...$6cc32821e9371a1c$var$LAST_KEYS
], $6cc32821e9371a1c$var$SUB_OPEN_KEYS = {
  ltr: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowRight"
  ],
  rtl: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowLeft"
  ]
};
var $6cc32821e9371a1c$var$MENU_NAME = "Menu", [$6cc32821e9371a1c$var$Collection, $6cc32821e9371a1c$var$useCollection, $6cc32821e9371a1c$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($6cc32821e9371a1c$var$MENU_NAME), [$6cc32821e9371a1c$var$createMenuContext, $6cc32821e9371a1c$export$4027731b685e72eb] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($6cc32821e9371a1c$var$MENU_NAME, [
  $6cc32821e9371a1c$var$createCollectionScope,
  $cf1ac5d9fe0e8206$export$722aac194ae923,
  $d7bdfb9eb0fdf311$export$c7109489551a4f4
]), $6cc32821e9371a1c$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923(), $6cc32821e9371a1c$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4(), [$6cc32821e9371a1c$var$MenuProvider, $6cc32821e9371a1c$var$useMenuContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME), [$6cc32821e9371a1c$var$MenuRootProvider, $6cc32821e9371a1c$var$useMenuRootContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME), $6cc32821e9371a1c$export$d9b273488cd8ce6f = (props) => {
  let { __scopeMenu, open = !1, children, dir, onOpenChange, modal = !0 } = props, popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu), [content, setContent] = (0, import_react80.useState)(null), isUsingKeyboardRef = (0, import_react80.useRef)(!1), handleOpenChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onOpenChange), direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  return (0, import_react80.useEffect)(() => {
    let handleKeyDown = () => {
      isUsingKeyboardRef.current = !0, document.addEventListener("pointerdown", handlePointer, {
        capture: !0,
        once: !0
      }), document.addEventListener("pointermove", handlePointer, {
        capture: !0,
        once: !0
      });
    }, handlePointer = () => isUsingKeyboardRef.current = !1;
    return document.addEventListener("keydown", handleKeyDown, {
      capture: !0
    }), () => {
      document.removeEventListener("keydown", handleKeyDown, {
        capture: !0
      }), document.removeEventListener("pointerdown", handlePointer, {
        capture: !0
      }), document.removeEventListener("pointermove", handlePointer, {
        capture: !0
      });
    };
  }, []), /* @__PURE__ */ (0, import_react80.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuProvider, {
    scope: __scopeMenu,
    open,
    onOpenChange: handleOpenChange,
    content,
    onContentChange: setContent
  }, /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuRootProvider, {
    scope: __scopeMenu,
    onClose: (0, import_react80.useCallback)(
      () => handleOpenChange(!1),
      [
        handleOpenChange
      ]
    ),
    isUsingKeyboardRef,
    dir: direction,
    modal
  }, children)));
};
var $6cc32821e9371a1c$export$9fa5ebd18bee4d43 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...anchorProps } = props, popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  return /* @__PURE__ */ (0, import_react80.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends({}, popperScope, anchorProps, {
    ref: forwardedRef
  }));
}), $6cc32821e9371a1c$var$PORTAL_NAME = "MenuPortal", [$6cc32821e9371a1c$var$PortalProvider, $6cc32821e9371a1c$var$usePortalContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, {
  forceMount: void 0
}), $6cc32821e9371a1c$export$793392f970497feb = (props) => {
  let { __scopeMenu, forceMount, children, container } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, __scopeMenu);
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$PortalProvider, {
    scope: __scopeMenu,
    forceMount
  }, /* @__PURE__ */ (0, import_react80.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react80.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: !0,
    container
  }, children)));
}, $6cc32821e9371a1c$var$CONTENT_NAME = "MenuContent", [$6cc32821e9371a1c$var$MenuContentProvider, $6cc32821e9371a1c$var$useMenuContentContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$CONTENT_NAME), $6cc32821e9371a1c$export$479f0f2f71193efe = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), { forceMount = portalContext.forceMount, ...contentProps } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, /* @__PURE__ */ (0, import_react80.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, rootContext.modal ? /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuRootContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuRootContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })))));
}), $6cc32821e9371a1c$var$MenuRootContentModal = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), ref = (0, import_react80.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react80.useEffect)(() => {
    let content = ref.current;
    if (content)
      return (0, import_aria_hidden.hideOthers)(content);
  }, []), /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: context.open,
    disableOutsideScroll: !0,
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault(),
      {
        checkForDefaultPrevented: !1
      }
    ),
    onDismiss: () => context.onOpenChange(!1)
  }));
}), $6cc32821e9371a1c$var$MenuRootContentNonModal = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: !1,
    disableOutsidePointerEvents: !1,
    disableOutsideScroll: !1,
    onDismiss: () => context.onOpenChange(!1)
  }));
}), $6cc32821e9371a1c$var$MenuContentImpl = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, loop = !1, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEntryFocus, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, disableOutsideScroll, ...contentProps } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu), popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu), rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu), getItems = $6cc32821e9371a1c$var$useCollection(__scopeMenu), [currentItemId, setCurrentItemId] = (0, import_react80.useState)(null), contentRef = (0, import_react80.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef, context.onContentChange), timerRef = (0, import_react80.useRef)(0), searchRef = (0, import_react80.useRef)(""), pointerGraceTimerRef = (0, import_react80.useRef)(0), pointerGraceIntentRef = (0, import_react80.useRef)(null), pointerDirRef = (0, import_react80.useRef)("right"), lastPointerXRef = (0, import_react80.useRef)(0), ScrollLockWrapper = disableOutsideScroll ? import_react_remove_scroll.RemoveScroll : import_react80.Fragment, scrollLockWrapperProps = disableOutsideScroll ? {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: !0
  } : void 0, handleTypeaheadSearch = (key) => {
    var _items$find, _items$find2;
    let search = searchRef.current + key, items = getItems().filter(
      (item) => !item.disabled
    ), currentItem = document.activeElement, currentMatch = (_items$find = items.find(
      (item) => item.ref.current === currentItem
    )) === null || _items$find === void 0 ? void 0 : _items$find.textValue, values = items.map(
      (item) => item.textValue
    ), nextMatch = $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch), newItem = (_items$find2 = items.find(
      (item) => item.textValue === nextMatch
    )) === null || _items$find2 === void 0 ? void 0 : _items$find2.ref.current;
    (function updateSearch(value) {
      searchRef.current = value, window.clearTimeout(timerRef.current), value !== "" && (timerRef.current = window.setTimeout(
        () => updateSearch(""),
        1e3
      ));
    })(search), newItem && setTimeout(
      () => newItem.focus()
    );
  };
  (0, import_react80.useEffect)(() => () => window.clearTimeout(timerRef.current), []), $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  let isPointerMovingToSubmenu = (0, import_react80.useCallback)((event) => {
    var _pointerGraceIntentRe, _pointerGraceIntentRe2;
    return pointerDirRef.current === ((_pointerGraceIntentRe = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe === void 0 ? void 0 : _pointerGraceIntentRe.side) && $6cc32821e9371a1c$var$isPointerInGraceArea(event, (_pointerGraceIntentRe2 = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe2 === void 0 ? void 0 : _pointerGraceIntentRe2.area);
  }, []);
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuContentProvider, {
    scope: __scopeMenu,
    searchRef,
    onItemEnter: (0, import_react80.useCallback)((event) => {
      isPointerMovingToSubmenu(event) && event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    onItemLeave: (0, import_react80.useCallback)((event) => {
      var _contentRef$current;
      isPointerMovingToSubmenu(event) || ((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus(), setCurrentItemId(null));
    }, [
      isPointerMovingToSubmenu
    ]),
    onTriggerLeave: (0, import_react80.useCallback)((event) => {
      isPointerMovingToSubmenu(event) && event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    pointerGraceTimerRef,
    onPointerGraceIntentChange: (0, import_react80.useCallback)((intent) => {
      pointerGraceIntentRef.current = intent;
    }, [])
  }, /* @__PURE__ */ (0, import_react80.createElement)(ScrollLockWrapper, scrollLockWrapperProps, /* @__PURE__ */ (0, import_react80.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: !0,
    trapped: trapFocus,
    onMountAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onOpenAutoFocus, (event) => {
      var _contentRef$current2;
      event.preventDefault(), (_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 || _contentRef$current2.focus();
    }),
    onUnmountAutoFocus: onCloseAutoFocus
  }, /* @__PURE__ */ (0, import_react80.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: !0,
    disableOutsidePointerEvents,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside,
    onInteractOutside,
    onDismiss
  }, /* @__PURE__ */ (0, import_react80.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends({
    asChild: !0
  }, rovingFocusGroupScope, {
    dir: rootContext.dir,
    orientation: "vertical",
    loop,
    currentTabStopId: currentItemId,
    onCurrentTabStopIdChange: setCurrentItemId,
    onEntryFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEntryFocus, (event) => {
      rootContext.isUsingKeyboardRef.current || event.preventDefault();
    })
  }), /* @__PURE__ */ (0, import_react80.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends({
    role: "menu",
    "aria-orientation": "vertical",
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open),
    "data-radix-menu-content": "",
    dir: rootContext.dir
  }, popperScope, contentProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...contentProps.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onKeyDown, (event) => {
      let isKeyDownInside = event.target.closest("[data-radix-menu-content]") === event.currentTarget, isModifierKey = event.ctrlKey || event.altKey || event.metaKey, isCharacterKey = event.key.length === 1;
      isKeyDownInside && (event.key === "Tab" && event.preventDefault(), !isModifierKey && isCharacterKey && handleTypeaheadSearch(event.key));
      let content = contentRef.current;
      if (event.target !== content || !$6cc32821e9371a1c$var$FIRST_LAST_KEYS.includes(event.key))
        return;
      event.preventDefault();
      let candidateNodes = getItems().filter(
        (item) => !item.disabled
      ).map(
        (item) => item.ref.current
      );
      $6cc32821e9371a1c$var$LAST_KEYS.includes(event.key) && candidateNodes.reverse(), $6cc32821e9371a1c$var$focusFirst(candidateNodes);
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, (event) => {
      event.currentTarget.contains(event.target) || (window.clearTimeout(timerRef.current), searchRef.current = "");
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      let target = event.target, pointerXHasChanged = lastPointerXRef.current !== event.clientX;
      if (event.currentTarget.contains(target) && pointerXHasChanged) {
        let newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
        pointerDirRef.current = newDir, lastPointerXRef.current = event.clientX;
      }
    }))
  })))))));
});
var $6cc32821e9371a1c$export$22a631d1f72787bb = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...groupProps } = props;
  return /* @__PURE__ */ (0, import_react80.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "group"
  }, groupProps, {
    ref: forwardedRef
  }));
});
var $6cc32821e9371a1c$export$dd37bec0e8a99143 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...labelProps } = props;
  return /* @__PURE__ */ (0, import_react80.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, labelProps, {
    ref: forwardedRef
  }));
}), $6cc32821e9371a1c$var$ITEM_NAME = "MenuItem", $6cc32821e9371a1c$var$ITEM_SELECT = "menu.itemSelect", $6cc32821e9371a1c$export$2ce376c2cc3355c8 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { disabled: disabled2 = !1, onSelect, ...itemProps } = props, ref = (0, import_react80.useRef)(null), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu), contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), isPointerDownRef = (0, import_react80.useRef)(!1), handleSelect = () => {
    let menuItem = ref.current;
    if (!disabled2 && menuItem) {
      let itemSelectEvent = new CustomEvent($6cc32821e9371a1c$var$ITEM_SELECT, {
        bubbles: !0,
        cancelable: !0
      });
      menuItem.addEventListener(
        $6cc32821e9371a1c$var$ITEM_SELECT,
        (event) => onSelect == null ? void 0 : onSelect(event),
        {
          once: !0
        }
      ), $8927f6f2acc4f386$export$6d1a0317bde7de7f(menuItem, itemSelectEvent), itemSelectEvent.defaultPrevented ? isPointerDownRef.current = !1 : rootContext.onClose();
    }
  };
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends({}, itemProps, {
    ref: composedRefs,
    disabled: disabled2,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, handleSelect),
    onPointerDown: (event) => {
      var _props$onPointerDown;
      (_props$onPointerDown = props.onPointerDown) === null || _props$onPointerDown === void 0 || _props$onPointerDown.call(props, event), isPointerDownRef.current = !0;
    },
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event) => {
      var _event$currentTarget;
      isPointerDownRef.current || (_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || _event$currentTarget.click();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      let isTypingAhead = contentContext.searchRef.current !== "";
      disabled2 || isTypingAhead && event.key === " " || $6cc32821e9371a1c$var$SELECTION_KEYS.includes(event.key) && (event.currentTarget.click(), event.preventDefault());
    })
  }));
}), $6cc32821e9371a1c$var$MenuItemImpl = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, disabled: disabled2 = !1, textValue, ...itemProps } = props, contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, __scopeMenu), rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu), ref = (0, import_react80.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), [isFocused, setIsFocused] = (0, import_react80.useState)(!1), [textContent, setTextContent] = (0, import_react80.useState)("");
  return (0, import_react80.useEffect)(() => {
    let menuItem = ref.current;
    if (menuItem) {
      var _menuItem$textContent;
      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : "").trim());
    }
  }, [
    itemProps.children
  ]), /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$Collection.ItemSlot, {
    scope: __scopeMenu,
    disabled: disabled2,
    textValue: textValue ?? textContent
  }, /* @__PURE__ */ (0, import_react80.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends({
    asChild: !0
  }, rovingFocusGroupScope, {
    focusable: !disabled2
  }), /* @__PURE__ */ (0, import_react80.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "menuitem",
    "data-highlighted": isFocused ? "" : void 0,
    "aria-disabled": disabled2 || void 0,
    "data-disabled": disabled2 ? "" : void 0
  }, itemProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      disabled2 ? contentContext.onItemLeave(event) : (contentContext.onItemEnter(event), event.defaultPrevented || event.currentTarget.focus());
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse(
      (event) => contentContext.onItemLeave(event)
    )),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => setIsFocused(!0)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsFocused(!1)
    )
  }))));
});
var $6cc32821e9371a1c$export$f6f243521332502d = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { checked = !1, onCheckedChange, ...checkboxItemProps } = props;
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends({
    role: "menuitemcheckbox",
    "aria-checked": $6cc32821e9371a1c$var$isIndeterminate(checked) ? "mixed" : checked
  }, checkboxItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      checkboxItemProps.onSelect,
      () => onCheckedChange == null ? void 0 : onCheckedChange($6cc32821e9371a1c$var$isIndeterminate(checked) ? !0 : !checked),
      {
        checkForDefaultPrevented: !1
      }
    )
  })));
}), $6cc32821e9371a1c$var$RADIO_GROUP_NAME = "MenuRadioGroup", [$6cc32821e9371a1c$var$RadioGroupProvider, $6cc32821e9371a1c$var$useRadioGroupContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$RADIO_GROUP_NAME, {
  value: void 0,
  onValueChange: () => {
  }
}), $6cc32821e9371a1c$export$ea2200c9eee416b3 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { value, onValueChange, ...groupProps } = props, handleValueChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onValueChange);
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$RadioGroupProvider, {
    scope: props.__scopeMenu,
    value,
    onValueChange: handleValueChange
  }, /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$export$22a631d1f72787bb, _extends({}, groupProps, {
    ref: forwardedRef
  })));
}), $6cc32821e9371a1c$var$RADIO_ITEM_NAME = "MenuRadioItem", $6cc32821e9371a1c$export$69bd225e9817f6d0 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { value, ...radioItemProps } = props, context = $6cc32821e9371a1c$var$useRadioGroupContext($6cc32821e9371a1c$var$RADIO_ITEM_NAME, props.__scopeMenu), checked = value === context.value;
  return /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, /* @__PURE__ */ (0, import_react80.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends({
    role: "menuitemradio",
    "aria-checked": checked
  }, radioItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(radioItemProps.onSelect, () => {
      var _context$onValueChang;
      return (_context$onValueChang = context.onValueChange) === null || _context$onValueChang === void 0 ? void 0 : _context$onValueChang.call(context, value);
    }, {
      checkForDefaultPrevented: !1
    })
  })));
}), $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME = "MenuItemIndicator", [$6cc32821e9371a1c$var$ItemIndicatorProvider, $6cc32821e9371a1c$var$useItemIndicatorContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, {
  checked: !1
}), $6cc32821e9371a1c$export$a2593e23056970a3 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, forceMount, ...itemIndicatorProps } = props, indicatorContext = $6cc32821e9371a1c$var$useItemIndicatorContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, __scopeMenu);
  return /* @__PURE__ */ (0, import_react80.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || $6cc32821e9371a1c$var$isIndeterminate(indicatorContext.checked) || indicatorContext.checked === !0
  }, /* @__PURE__ */ (0, import_react80.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, itemIndicatorProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(indicatorContext.checked)
  })));
});
var $6cc32821e9371a1c$export$1cec7dcdd713e220 = /* @__PURE__ */ (0, import_react80.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...separatorProps } = props;
  return /* @__PURE__ */ (0, import_react80.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "separator",
    "aria-orientation": "horizontal"
  }, separatorProps, {
    ref: forwardedRef
  }));
});
var $6cc32821e9371a1c$var$SUB_NAME = "MenuSub", [$6cc32821e9371a1c$var$MenuSubProvider, $6cc32821e9371a1c$var$useMenuSubContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$SUB_NAME);
function $6cc32821e9371a1c$var$getOpenState(open) {
  return open ? "open" : "closed";
}
function $6cc32821e9371a1c$var$isIndeterminate(checked) {
  return checked === "indeterminate";
}
function $6cc32821e9371a1c$var$getCheckedState(checked) {
  return $6cc32821e9371a1c$var$isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
function $6cc32821e9371a1c$var$focusFirst(candidates) {
  let PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (let candidate of candidates)
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT || (candidate.focus(), document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT))
      return;
}
function $6cc32821e9371a1c$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index2) => array[(startIndex + index2) % array.length]
  );
}
function $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch) {
  let normalizedSearch = search.length > 1 && Array.from(search).every(
    (char) => char === search[0]
  ) ? search[0] : search, currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1, wrappedValues = $6cc32821e9371a1c$var$wrapArray(values, Math.max(currentMatchIndex, 0));
  normalizedSearch.length === 1 && (wrappedValues = wrappedValues.filter(
    (v) => v !== currentMatch
  ));
  let nextMatch = wrappedValues.find(
    (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextMatch !== currentMatch ? nextMatch : void 0;
}
function $6cc32821e9371a1c$var$isPointInPolygon(point, polygon) {
  let { x, y } = point, inside = !1;
  for (let i13 = 0, j = polygon.length - 1; i13 < polygon.length; j = i13++) {
    let xi = polygon[i13].x, yi = polygon[i13].y, xj = polygon[j].x, yj = polygon[j].y;
    yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi && (inside = !inside);
  }
  return inside;
}
function $6cc32821e9371a1c$var$isPointerInGraceArea(event, area) {
  if (!area)
    return !1;
  let cursorPos = {
    x: event.clientX,
    y: event.clientY
  };
  return $6cc32821e9371a1c$var$isPointInPolygon(cursorPos, area);
}
function $6cc32821e9371a1c$var$whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var $6cc32821e9371a1c$export$be92b6f5f03c0fe9 = $6cc32821e9371a1c$export$d9b273488cd8ce6f, $6cc32821e9371a1c$export$b688253958b8dfe7 = $6cc32821e9371a1c$export$9fa5ebd18bee4d43, $6cc32821e9371a1c$export$602eac185826482c = $6cc32821e9371a1c$export$793392f970497feb, $6cc32821e9371a1c$export$7c6e2c02157bb7d2 = $6cc32821e9371a1c$export$479f0f2f71193efe;
var $6cc32821e9371a1c$export$b04be29aa201d4f5 = $6cc32821e9371a1c$export$dd37bec0e8a99143, $6cc32821e9371a1c$export$6d08773d2e66f8f2 = $6cc32821e9371a1c$export$2ce376c2cc3355c8, $6cc32821e9371a1c$export$16ce288f89fa631c = $6cc32821e9371a1c$export$f6f243521332502d, $6cc32821e9371a1c$export$a98f0dcb43a68a25 = $6cc32821e9371a1c$export$ea2200c9eee416b3, $6cc32821e9371a1c$export$371ab307eab489c0 = $6cc32821e9371a1c$export$69bd225e9817f6d0, $6cc32821e9371a1c$export$c3468e2714d175fa = $6cc32821e9371a1c$export$a2593e23056970a3, $6cc32821e9371a1c$export$1ff3c3f08ae963c0 = $6cc32821e9371a1c$export$1cec7dcdd713e220;

// ../../../node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var $d08ef79370b62062$var$DROPDOWN_MENU_NAME = "DropdownMenu", [$d08ef79370b62062$var$createDropdownMenuContext, $d08ef79370b62062$export$c0623cd925aeb687] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d08ef79370b62062$var$DROPDOWN_MENU_NAME, [
  $6cc32821e9371a1c$export$4027731b685e72eb
]), $d08ef79370b62062$var$useMenuScope = $6cc32821e9371a1c$export$4027731b685e72eb(), [$d08ef79370b62062$var$DropdownMenuProvider, $d08ef79370b62062$var$useDropdownMenuContext] = $d08ef79370b62062$var$createDropdownMenuContext($d08ef79370b62062$var$DROPDOWN_MENU_NAME), $d08ef79370b62062$export$e44a253a59704894 = (props) => {
  let { __scopeDropdownMenu, children, dir, open: openProp, defaultOpen, onOpenChange, modal = !0 } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu), triggerRef = (0, import_react81.useRef)(null), [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react81.createElement)($d08ef79370b62062$var$DropdownMenuProvider, {
    scope: __scopeDropdownMenu,
    triggerId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react81.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$be92b6f5f03c0fe9, _extends({}, menuScope, {
    open,
    onOpenChange: setOpen,
    dir,
    modal
  }), children));
}, $d08ef79370b62062$var$TRIGGER_NAME = "DropdownMenuTrigger", $d08ef79370b62062$export$d2469213b3befba9 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, disabled: disabled2 = !1, ...triggerProps } = props, context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$TRIGGER_NAME, __scopeDropdownMenu), menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$b688253958b8dfe7, _extends({
    asChild: !0
  }, menuScope), /* @__PURE__ */ (0, import_react81.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    id: context.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open,
    "aria-controls": context.open ? context.contentId : void 0,
    "data-state": context.open ? "open" : "closed",
    "data-disabled": disabled2 ? "" : void 0,
    disabled: disabled2
  }, triggerProps, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, context.triggerRef),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      !disabled2 && event.button === 0 && event.ctrlKey === !1 && (context.onOpenToggle(), context.open || event.preventDefault());
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      disabled2 || ([
        "Enter",
        " "
      ].includes(event.key) && context.onOpenToggle(), event.key === "ArrowDown" && context.onOpenChange(!0), [
        "Enter",
        " ",
        "ArrowDown"
      ].includes(event.key) && event.preventDefault());
    })
  })));
});
var $d08ef79370b62062$export$cd369b4d4d54efc9 = (props) => {
  let { __scopeDropdownMenu, ...portalProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$602eac185826482c, _extends({}, menuScope, portalProps));
}, $d08ef79370b62062$var$CONTENT_NAME = "DropdownMenuContent", $d08ef79370b62062$export$6e76d93a37c01248 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...contentProps } = props, context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$CONTENT_NAME, __scopeDropdownMenu), menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu), hasInteractedOutsideRef = (0, import_react81.useRef)(!1);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$7c6e2c02157bb7d2, _extends({
    id: context.contentId,
    "aria-labelledby": context.triggerId
  }, menuScope, contentProps, {
    ref: forwardedRef,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      hasInteractedOutsideRef.current || (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus(), hasInteractedOutsideRef.current = !1, event.preventDefault();
    }),
    onInteractOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onInteractOutside, (event) => {
      let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0, isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      (!context.modal || isRightClick) && (hasInteractedOutsideRef.current = !0);
    }),
    style: {
      ...props.style,
      "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
var $d08ef79370b62062$export$76e48c5b57f24495 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...labelProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$b04be29aa201d4f5, _extends({}, menuScope, labelProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$ed97964d1871885d = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...itemProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$6d08773d2e66f8f2, _extends({}, menuScope, itemProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$53a69729da201fa9 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...checkboxItemProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$16ce288f89fa631c, _extends({}, menuScope, checkboxItemProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$3323ad73d55f587e = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...radioGroupProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$a98f0dcb43a68a25, _extends({}, menuScope, radioGroupProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$e4f69b41b1637536 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...radioItemProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$371ab307eab489c0, _extends({}, menuScope, radioItemProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$42355ae145153fb6 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...itemIndicatorProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$c3468e2714d175fa, _extends({}, menuScope, itemIndicatorProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$da160178fd3bc7e9 = /* @__PURE__ */ (0, import_react81.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...separatorProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react81.createElement)($6cc32821e9371a1c$export$1ff3c3f08ae963c0, _extends({}, menuScope, separatorProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$be92b6f5f03c0fe9 = $d08ef79370b62062$export$e44a253a59704894, $d08ef79370b62062$export$41fb9f06171c75f4 = $d08ef79370b62062$export$d2469213b3befba9, $d08ef79370b62062$export$602eac185826482c = $d08ef79370b62062$export$cd369b4d4d54efc9, $d08ef79370b62062$export$7c6e2c02157bb7d2 = $d08ef79370b62062$export$6e76d93a37c01248;
var $d08ef79370b62062$export$b04be29aa201d4f5 = $d08ef79370b62062$export$76e48c5b57f24495, $d08ef79370b62062$export$6d08773d2e66f8f2 = $d08ef79370b62062$export$ed97964d1871885d, $d08ef79370b62062$export$16ce288f89fa631c = $d08ef79370b62062$export$53a69729da201fa9, $d08ef79370b62062$export$a98f0dcb43a68a25 = $d08ef79370b62062$export$3323ad73d55f587e, $d08ef79370b62062$export$371ab307eab489c0 = $d08ef79370b62062$export$e4f69b41b1637536, $d08ef79370b62062$export$c3468e2714d175fa = $d08ef79370b62062$export$42355ae145153fb6, $d08ef79370b62062$export$1ff3c3f08ae963c0 = $d08ef79370b62062$export$da160178fd3bc7e9;

// ../../components/atoms/dropdown.jsx
var import_classnames9 = __toESM(require_classnames(), 1);
var import_jsx_runtime19 = __toESM(require_jsx_runtime(), 1), import_react82 = __toESM(require_react(), 1), OptionMenu = $d08ef79370b62062$export$be92b6f5f03c0fe9, OptionMenuTriggerBase = $d08ef79370b62062$export$41fb9f06171c75f4, OptionMenuRadioGroup = $d08ef79370b62062$export$a98f0dcb43a68a25, OptionMenuTrigger = React7.forwardRef(({ ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(OptionMenuTriggerBase, { ref, ...props, asChild: !0 })), OptionMenuContent = React7.forwardRef(({ className: className2, sideOffset = 4, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)($d08ef79370b62062$export$602eac185826482c, { children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  $d08ef79370b62062$export$7c6e2c02157bb7d2,
  {
    ref,
    sideOffset,
    align: "end",
    loop: !0,
    className: (0, import_classnames9.default)(
      "OptionContent z-50 border border-border-default shadow-popover bg-surface-default rounded min-w-48 overflow-hidden",
      className2
    ),
    ...props
  }
) }));
OptionMenuContent.displayName = $d08ef79370b62062$export$7c6e2c02157bb7d2.displayName;
var OptionMenuItem = React7.forwardRef(({ className: className2, inset, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  $d08ef79370b62062$export$6d08773d2e66f8f2,
  {
    ref,
    className: (0, import_classnames9.default)(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className2
    ),
    ...props
  }
)), OptionMenuSearchItem = React7.forwardRef(({ onChange: onChange2 }, ref) => {
  let searchRef = React7.useRef(null), setSearchFocus = (e23) => {
    e23 == null || e23.preventDefault(), searchRef.current.focus();
  };
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
    $d08ef79370b62062$export$6d08773d2e66f8f2,
    {
      ref,
      className: (0, import_classnames9.default)(
        "filter-dropdown-item group relative flex flex-row gap-2.5 items-center bodyMd gap cursor-default select-none py-2 px-3 text-text-default outline-none transition-colors focus:bg-surface-hovered data-[disabled]:pointer-events-none data-[disabled]:text-text-disabled"
      ),
      onSelect: setSearchFocus,
      onClick: (e23) => setSearchFocus(),
      onPointerUp: setSearchFocus,
      onPointerDown: (e23) => setSearchFocus(),
      onMouseMove: (e23) => e23.preventDefault(),
      onMouseEnter: (e23) => e23.preventDefault(),
      onMouseLeave: (e23) => e23.preventDefault(),
      onPointerMove: (e23) => e23.preventDefault(),
      onPointerLeave: (e23) => e23.preventDefault(),
      onFocus: (e23) => {
        searchRef.current.focus();
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
        TextInputBase,
        {
          component: "input",
          ref: searchRef,
          autoComplete: "off",
          onKeyDown: (e23) => {
            if (e23.key === "ArrowDown" || e23.key === "Escape") {
              e23.target.blur();
              let items = Array.from(document.querySelectorAll("[data-radix-collection-item]")), searchItemIndex = items.findIndex((x) => x.isSameNode(e23.target.closest(".filter-dropdown-item")));
              items.at(searchItemIndex + 1).focus();
            }
          },
          onChange: (e23) => {
            onChange2 && onChange2(e23.target.value);
          }
        }
      )
    }
  );
});
OptionMenuSearchItem.displayName = $d08ef79370b62062$export$6d08773d2e66f8f2.displayName;
var OptionMenuCheckboxItem = React7.forwardRef(({ className: className2, children, checked, onValueChange, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
  $d08ef79370b62062$export$16ce288f89fa631c,
  {
    ref,
    className: (0, import_classnames9.default)(
      "group relative flex flex-row gap-2.5 items-center bodyMd gap cursor-default select-none py-2 px-3 text-text-default outline-none transition-colors focus:bg-surface-hovered data-[disabled]:pointer-events-none data-[disabled]:text-text-disabled",
      className2
    ),
    checked,
    ...props,
    onMouseMove: (e23) => e23.preventDefault(),
    onMouseEnter: (e23) => e23.preventDefault(),
    onMouseLeave: (e23) => e23.preventDefault(),
    onPointerLeave: (e23) => e23.preventDefault(),
    onPointerEnter: (e23) => e23.preventDefault(),
    onPointerMove: (e23) => e23.preventDefault(),
    onCheckedChange: onValueChange,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("span", { className: "w-5 h-5 rounded border transition-all flex items-center justify-center border-border-default group-data-[state=checked]:border-border-primary group-data-[state=checked]:bg-surface-primary-default group-data-[disabled]:border-border-disabled group-data-[disabled]:bg-surface-default ", children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)($d08ef79370b62062$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("svg", { width: "17", height: "16", viewBox: "0 0 17 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("path", { d: "M14.5 4.00019L6.5 11.9998L2.5 8.00019", className: (0, import_classnames9.default)("stroke-text-on-primary group-data-[disabled]:stroke-text-disabled"), strokeLinecap: "round", strokeLinejoin: "round" }) }) }) }),
      children
    ]
  }
));
OptionMenuCheckboxItem.displayName = $d08ef79370b62062$export$16ce288f89fa631c.displayName;
var OptionMenuRadioItem = React7.forwardRef(({ className: className2, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(
  $d08ef79370b62062$export$371ab307eab489c0,
  {
    ref,
    className: (0, import_classnames9.default)(
      "group relative flex flex-row gap-2.5 items-center bodyMd gap cursor-default select-none py-2 px-3 text-text-default outline-none transition-colors focus:bg-surface-hovered hover:bg-surface-hovered data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className2
    ),
    ...props,
    onMouseMove: (e23) => e23.preventDefault(),
    onMouseEnter: (e23) => e23.preventDefault(),
    onMouseLeave: (e23) => e23.preventDefault(),
    onPointerLeave: (e23) => e23.preventDefault(),
    onPointerEnter: (e23) => e23.preventDefault(),
    onPointerMove: (e23) => e23.preventDefault(),
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("span", { className: (0, import_classnames9.default)(
        "w-5 h-5 rounded-full border transition-all flex items-center justify-center border-border-default group-data-[state=checked]:border-border-primary group-data-[disabled]:border-border-disabled"
      ), children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)($d08ef79370b62062$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: (0, import_classnames9.default)(
        "block w-3 h-3 rounded-full bg-surface-primary-default group-data-[disabled]:bg-icon-disabled"
      ) }) }) }),
      children
    ]
  }
));
OptionMenuRadioItem.displayName = $d08ef79370b62062$export$371ab307eab489c0.displayName;
var OptionMenuLabel = React7.forwardRef(({ className: className2, inset, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  $d08ef79370b62062$export$b04be29aa201d4f5,
  {
    ref,
    className: (0, import_classnames9.default)(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className2
    ),
    ...props
  }
));
OptionMenuLabel.displayName = $d08ef79370b62062$export$b04be29aa201d4f5.displayName;
var OptionMenuSeparator = React7.forwardRef(({ className: className2, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  $d08ef79370b62062$export$1ff3c3f08ae963c0,
  {
    ref,
    className: (0, import_classnames9.default)("h-px bg-border-disabled", className2),
    ...props
  }
));
OptionMenuSeparator.displayName = $d08ef79370b62062$export$1ff3c3f08ae963c0.displayName;
var OptionMenuShortcut = ({
  className: className2,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(
  "span",
  {
    className: (0, import_classnames9.default)("ml-auto text-xs tracking-widest opacity-60", className2),
    ...props
  }
);
OptionMenuShortcut.displayName = "OptionMenuShortcut";
var OptionListBase = ({ ...props }) => {
  let [open, setOpen] = React7.useState(!1);
  return console.log(open), /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(OptionMenu, { open, onOpenChange: setOpen, children: [
    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(OptionMenuTrigger, { children: /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(ButtonBase, { ...props.trigger.props, sharpLeft: props.sharpLeft, sharpRight: props.sharpRight, className: props.className, selected: open }) }),
    /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(OptionMenuContent, { children: [
      props.filter && /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(OptionMenuSearchItem, { onChange: props.onFilterChange }),
      props.children
    ] })
  ] });
}, OptionList = ({ children, trigger, filter: filter2, onFilterChange }) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(OptionListBase, { children, trigger, filter: filter2, onFilterChange }), OptionListGroup = ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "flex flex-row", children: Array.isArray(children) ? children.map((child, index2) => {
  let sharpRight = index2 < children.length - 1, sharpLeft = index2 > 0;
  return /* @__PURE__ */ (0, import_react82.createElement)(OptionListBase, { ...child.props, sharpLeft, sharpRight, className: (0, import_classnames9.default)({ "-ml-px": sharpLeft || sharpRight }), key: `option-list-group-${index2}` });
}) : /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(OptionListBase, { ...children.props }) });
OptionList.RadioGroup = OptionMenuRadioGroup;
OptionList.RadioGroupItem = OptionMenuRadioItem;
OptionList.CheckboxItem = OptionMenuCheckboxItem;
OptionList.Separator = OptionMenuSeparator;

// ../../components/molecule/toast.jsx
var import_classnames10 = __toESM(require_classnames(), 1);
var import_react85 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-toast/dist/index.mjs
var import_react84 = __toESM(require_react(), 1), import_react_dom5 = __toESM(require_react_dom(), 1);

// ../../../node_modules/@radix-ui/react-visually-hidden/dist/index.mjs
var import_react83 = __toESM(require_react(), 1);
var $ea1ef594cf570d83$export$439d29a4e110a164 = /* @__PURE__ */ (0, import_react83.forwardRef)((props, forwardedRef) => /* @__PURE__ */ (0, import_react83.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, props, {
  ref: forwardedRef,
  style: {
    // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
    position: "absolute",
    border: 0,
    width: 1,
    height: 1,
    padding: 0,
    margin: -1,
    overflow: "hidden",
    clip: "rect(0, 0, 0, 0)",
    whiteSpace: "nowrap",
    wordWrap: "normal",
    ...props.style
  }
})));

// ../../../node_modules/@radix-ui/react-toast/dist/index.mjs
var $054eb8030ebde76e$var$PROVIDER_NAME = "ToastProvider", [$054eb8030ebde76e$var$Collection, $054eb8030ebde76e$var$useCollection, $054eb8030ebde76e$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2("Toast"), [$054eb8030ebde76e$var$createToastContext, $054eb8030ebde76e$export$8a359da18fbc9073] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Toast", [
  $054eb8030ebde76e$var$createCollectionScope
]), [$054eb8030ebde76e$var$ToastProviderProvider, $054eb8030ebde76e$var$useToastProviderContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$PROVIDER_NAME), $054eb8030ebde76e$export$f5d03d415824e0e = (props) => {
  let { __scopeToast, label: label2 = "Notification", duration = 5e3, swipeDirection = "right", swipeThreshold = 50, children } = props, [viewport, setViewport] = (0, import_react84.useState)(null), [toastCount, setToastCount] = (0, import_react84.useState)(0), isFocusedToastEscapeKeyDownRef = (0, import_react84.useRef)(!1), isClosePausedRef = (0, import_react84.useRef)(!1);
  return /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$Collection.Provider, {
    scope: __scopeToast
  }, /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$ToastProviderProvider, {
    scope: __scopeToast,
    label: label2,
    duration,
    swipeDirection,
    swipeThreshold,
    toastCount,
    viewport,
    onViewportChange: setViewport,
    onToastAdd: (0, import_react84.useCallback)(
      () => setToastCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onToastRemove: (0, import_react84.useCallback)(
      () => setToastCount(
        (prevCount) => prevCount - 1
      ),
      []
    ),
    isFocusedToastEscapeKeyDownRef,
    isClosePausedRef
  }, children));
};
$054eb8030ebde76e$export$f5d03d415824e0e.propTypes = {
  label(props) {
    if (props.label && typeof props.label == "string" && !props.label.trim()) {
      let error2 = `Invalid prop \`label\` supplied to \`${$054eb8030ebde76e$var$PROVIDER_NAME}\`. Expected non-empty \`string\`.`;
      return new Error(error2);
    }
    return null;
  }
};
var $054eb8030ebde76e$var$VIEWPORT_NAME = "ToastViewport", $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY = [
  "F8"
], $054eb8030ebde76e$var$VIEWPORT_PAUSE = "toast.viewportPause", $054eb8030ebde76e$var$VIEWPORT_RESUME = "toast.viewportResume", $054eb8030ebde76e$export$6192c2425ecfd989 = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, hotkey = $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY, label: label2 = "Notifications ({hotkey})", ...viewportProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$VIEWPORT_NAME, __scopeToast), getItems = $054eb8030ebde76e$var$useCollection(__scopeToast), wrapperRef = (0, import_react84.useRef)(null), headFocusProxyRef = (0, import_react84.useRef)(null), tailFocusProxyRef = (0, import_react84.useRef)(null), ref = (0, import_react84.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onViewportChange), hotkeyLabel = hotkey.join("+").replace(/Key/g, "").replace(/Digit/g, ""), hasToasts = context.toastCount > 0;
  (0, import_react84.useEffect)(() => {
    let handleKeyDown = (event) => {
      var _ref$current;
      hotkey.every(
        (key) => event[key] || event.code === key
      ) && ((_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus());
    };
    return document.addEventListener("keydown", handleKeyDown), () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    hotkey
  ]), (0, import_react84.useEffect)(() => {
    let wrapper = wrapperRef.current, viewport = ref.current;
    if (hasToasts && wrapper && viewport) {
      let handlePause = () => {
        if (!context.isClosePausedRef.current) {
          let pauseEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_PAUSE);
          viewport.dispatchEvent(pauseEvent), context.isClosePausedRef.current = !0;
        }
      }, handleResume = () => {
        if (context.isClosePausedRef.current) {
          let resumeEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_RESUME);
          viewport.dispatchEvent(resumeEvent), context.isClosePausedRef.current = !1;
        }
      }, handleFocusOutResume = (event) => {
        !wrapper.contains(event.relatedTarget) && handleResume();
      }, handlePointerLeaveResume = () => {
        wrapper.contains(document.activeElement) || handleResume();
      };
      return wrapper.addEventListener("focusin", handlePause), wrapper.addEventListener("focusout", handleFocusOutResume), wrapper.addEventListener("pointermove", handlePause), wrapper.addEventListener("pointerleave", handlePointerLeaveResume), window.addEventListener("blur", handlePause), window.addEventListener("focus", handleResume), () => {
        wrapper.removeEventListener("focusin", handlePause), wrapper.removeEventListener("focusout", handleFocusOutResume), wrapper.removeEventListener("pointermove", handlePause), wrapper.removeEventListener("pointerleave", handlePointerLeaveResume), window.removeEventListener("blur", handlePause), window.removeEventListener("focus", handleResume);
      };
    }
  }, [
    hasToasts,
    context.isClosePausedRef
  ]);
  let getSortedTabbableCandidates = (0, import_react84.useCallback)(({ tabbingDirection }) => {
    let tabbableCandidates = getItems().map((toastItem) => {
      let toastNode = toastItem.ref.current, toastTabbableCandidates = [
        toastNode,
        ...$054eb8030ebde76e$var$getTabbableCandidates(toastNode)
      ];
      return tabbingDirection === "forwards" ? toastTabbableCandidates : toastTabbableCandidates.reverse();
    });
    return (tabbingDirection === "forwards" ? tabbableCandidates.reverse() : tabbableCandidates).flat();
  }, [
    getItems
  ]);
  return (0, import_react84.useEffect)(() => {
    let viewport = ref.current;
    if (viewport) {
      let handleKeyDown = (event) => {
        let isMetaKey = event.altKey || event.ctrlKey || event.metaKey;
        if (event.key === "Tab" && !isMetaKey) {
          let focusedElement = document.activeElement, isTabbingBackwards = event.shiftKey;
          if (event.target === viewport && isTabbingBackwards) {
            var _headFocusProxyRef$cu;
            (_headFocusProxyRef$cu = headFocusProxyRef.current) === null || _headFocusProxyRef$cu === void 0 || _headFocusProxyRef$cu.focus();
            return;
          }
          let sortedCandidates = getSortedTabbableCandidates({
            tabbingDirection: isTabbingBackwards ? "backwards" : "forwards"
          }), index2 = sortedCandidates.findIndex(
            (candidate) => candidate === focusedElement
          );
          if ($054eb8030ebde76e$var$focusFirst(sortedCandidates.slice(index2 + 1)))
            event.preventDefault();
          else {
            var _headFocusProxyRef$cu2, _tailFocusProxyRef$cu;
            isTabbingBackwards ? (_headFocusProxyRef$cu2 = headFocusProxyRef.current) === null || _headFocusProxyRef$cu2 === void 0 || _headFocusProxyRef$cu2.focus() : (_tailFocusProxyRef$cu = tailFocusProxyRef.current) === null || _tailFocusProxyRef$cu === void 0 || _tailFocusProxyRef$cu.focus();
          }
        }
      };
      return viewport.addEventListener("keydown", handleKeyDown), () => viewport.removeEventListener("keydown", handleKeyDown);
    }
  }, [
    getItems,
    getSortedTabbableCandidates
  ]), /* @__PURE__ */ (0, import_react84.createElement)($5cb92bef7577960e$export$aecb2ddcb55c95be, {
    ref: wrapperRef,
    role: "region",
    "aria-label": label2.replace("{hotkey}", hotkeyLabel),
    tabIndex: -1,
    style: {
      pointerEvents: hasToasts ? void 0 : "none"
    }
  }, hasToasts && /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$FocusProxy, {
    ref: headFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      let tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "forwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }), /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$Collection.Slot, {
    scope: __scopeToast
  }, /* @__PURE__ */ (0, import_react84.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.ol, _extends({
    tabIndex: -1
  }, viewportProps, {
    ref: composedRefs
  }))), hasToasts && /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$FocusProxy, {
    ref: tailFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      let tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "backwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }));
}), $054eb8030ebde76e$var$FOCUS_PROXY_NAME = "ToastFocusProxy", $054eb8030ebde76e$var$FocusProxy = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$FOCUS_PROXY_NAME, __scopeToast);
  return /* @__PURE__ */ (0, import_react84.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, _extends({
    "aria-hidden": !0,
    tabIndex: 0
  }, proxyProps, {
    ref: forwardedRef,
    style: {
      position: "fixed"
    },
    onFocus: (event) => {
      var _context$viewport;
      let prevFocusedElement = event.relatedTarget;
      !((_context$viewport = context.viewport) !== null && _context$viewport !== void 0 && _context$viewport.contains(prevFocusedElement)) && onFocusFromOutsideViewport();
    }
  }));
}), $054eb8030ebde76e$var$TOAST_NAME = "Toast", $054eb8030ebde76e$var$TOAST_SWIPE_START = "toast.swipeStart", $054eb8030ebde76e$var$TOAST_SWIPE_MOVE = "toast.swipeMove", $054eb8030ebde76e$var$TOAST_SWIPE_CANCEL = "toast.swipeCancel", $054eb8030ebde76e$var$TOAST_SWIPE_END = "toast.swipeEnd", $054eb8030ebde76e$export$8d8dc7d5f743331b = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props, [open = !0, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react84.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || open
  }, /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$ToastImpl, _extends({
    open
  }, toastProps, {
    ref: forwardedRef,
    onClose: () => setOpen(!1),
    onPause: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onPause),
    onResume: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onResume),
    onSwipeStart: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeStart, (event) => {
      event.currentTarget.setAttribute("data-swipe", "start");
    }),
    onSwipeMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeMove, (event) => {
      let { x, y } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "move"), event.currentTarget.style.setProperty("--radix-toast-swipe-move-x", `${x}px`), event.currentTarget.style.setProperty("--radix-toast-swipe-move-y", `${y}px`);
    }),
    onSwipeCancel: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeCancel, (event) => {
      event.currentTarget.setAttribute("data-swipe", "cancel"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"), event.currentTarget.style.removeProperty("--radix-toast-swipe-end-x"), event.currentTarget.style.removeProperty("--radix-toast-swipe-end-y");
    }),
    onSwipeEnd: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeEnd, (event) => {
      let { x, y } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "end"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"), event.currentTarget.style.setProperty("--radix-toast-swipe-end-x", `${x}px`), event.currentTarget.style.setProperty("--radix-toast-swipe-end-y", `${y}px`), setOpen(!1);
    })
  })));
}), [$054eb8030ebde76e$var$ToastInteractiveProvider, $054eb8030ebde76e$var$useToastInteractiveContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$TOAST_NAME, {
  onClose() {
  }
}), $054eb8030ebde76e$var$ToastImpl = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, type: type2 = "foreground", duration: durationProp, open, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast), [node1, setNode] = (0, import_react84.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  ), pointerStartRef = (0, import_react84.useRef)(null), swipeDeltaRef = (0, import_react84.useRef)(null), duration1 = durationProp || context.duration, closeTimerStartTimeRef = (0, import_react84.useRef)(0), closeTimerRemainingTimeRef = (0, import_react84.useRef)(duration1), closeTimerRef = (0, import_react84.useRef)(0), { onToastAdd, onToastRemove } = context, handleClose = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(() => {
    var _context$viewport2;
    (node1 == null ? void 0 : node1.contains(document.activeElement)) && ((_context$viewport2 = context.viewport) === null || _context$viewport2 === void 0 || _context$viewport2.focus()), onClose();
  }), startTimer = (0, import_react84.useCallback)((duration) => {
    !duration || duration === 1 / 0 || (window.clearTimeout(closeTimerRef.current), closeTimerStartTimeRef.current = (/* @__PURE__ */ new Date()).getTime(), closeTimerRef.current = window.setTimeout(handleClose, duration));
  }, [
    handleClose
  ]);
  (0, import_react84.useEffect)(() => {
    let viewport = context.viewport;
    if (viewport) {
      let handleResume = () => {
        startTimer(closeTimerRemainingTimeRef.current), onResume == null || onResume();
      }, handlePause = () => {
        let elapsedTime = (/* @__PURE__ */ new Date()).getTime() - closeTimerStartTimeRef.current;
        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime, window.clearTimeout(closeTimerRef.current), onPause == null || onPause();
      };
      return viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause), viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume), () => {
        viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause), viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume);
      };
    }
  }, [
    context.viewport,
    duration1,
    onPause,
    onResume,
    startTimer
  ]), (0, import_react84.useEffect)(() => {
    open && !context.isClosePausedRef.current && startTimer(duration1);
  }, [
    open,
    duration1,
    context.isClosePausedRef,
    startTimer
  ]), (0, import_react84.useEffect)(() => (onToastAdd(), () => onToastRemove()), [
    onToastAdd,
    onToastRemove
  ]);
  let announceTextContent = (0, import_react84.useMemo)(() => node1 ? $054eb8030ebde76e$var$getAnnounceTextContent(node1) : null, [
    node1
  ]);
  return context.viewport ? /* @__PURE__ */ (0, import_react84.createElement)(import_react84.Fragment, null, announceTextContent && /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$ToastAnnounce, {
    __scopeToast,
    role: "status",
    "aria-live": type2 === "foreground" ? "assertive" : "polite",
    "aria-atomic": !0
  }, announceTextContent), /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$ToastInteractiveProvider, {
    scope: __scopeToast,
    onClose: handleClose
  }, /* @__PURE__ */ (0, import_react_dom5.createPortal)(/* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$Collection.ItemSlot, {
    scope: __scopeToast
  }, /* @__PURE__ */ (0, import_react84.createElement)($5cb92bef7577960e$export$be92b6f5f03c0fe9, {
    asChild: !0,
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEscapeKeyDown, () => {
      context.isFocusedToastEscapeKeyDownRef.current || handleClose(), context.isFocusedToastEscapeKeyDownRef.current = !1;
    })
  }, /* @__PURE__ */ (0, import_react84.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.li, _extends({
    // Ensure toasts are announced as status list or status when focused
    role: "status",
    "aria-live": "off",
    "aria-atomic": !0,
    tabIndex: 0,
    "data-state": open ? "open" : "closed",
    "data-swipe-direction": context.swipeDirection
  }, toastProps, {
    ref: composedRefs,
    style: {
      userSelect: "none",
      touchAction: "none",
      ...props.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      event.key === "Escape" && (onEscapeKeyDown == null || onEscapeKeyDown(event.nativeEvent), event.nativeEvent.defaultPrevented || (context.isFocusedToastEscapeKeyDownRef.current = !0, handleClose()));
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      event.button === 0 && (pointerStartRef.current = {
        x: event.clientX,
        y: event.clientY
      });
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (!pointerStartRef.current)
        return;
      let x = event.clientX - pointerStartRef.current.x, y = event.clientY - pointerStartRef.current.y, hasSwipeMoveStarted = Boolean(swipeDeltaRef.current), isHorizontalSwipe = [
        "left",
        "right"
      ].includes(context.swipeDirection), clamp2 = [
        "left",
        "up"
      ].includes(context.swipeDirection) ? Math.min : Math.max, clampedX = isHorizontalSwipe ? clamp2(0, x) : 0, clampedY = isHorizontalSwipe ? 0 : clamp2(0, y), moveStartBuffer = event.pointerType === "touch" ? 10 : 2, delta = {
        x: clampedX,
        y: clampedY
      }, eventDetail = {
        originalEvent: event,
        delta
      };
      hasSwipeMoveStarted ? (swipeDeltaRef.current = delta, $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {
        discrete: !1
      })) : $054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer) ? (swipeDeltaRef.current = delta, $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_START, onSwipeStart, eventDetail, {
        discrete: !1
      }), event.target.setPointerCapture(event.pointerId)) : (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) && (pointerStartRef.current = null);
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event1) => {
      let delta = swipeDeltaRef.current, target = event1.target;
      if (target.hasPointerCapture(event1.pointerId) && target.releasePointerCapture(event1.pointerId), swipeDeltaRef.current = null, pointerStartRef.current = null, delta) {
        let toast = event1.currentTarget, eventDetail = {
          originalEvent: event1,
          delta
        };
        $054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold) ? $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_END, onSwipeEnd, eventDetail, {
          discrete: !0
        }) : $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {
          discrete: !0
        }), toast.addEventListener(
          "click",
          (event) => event.preventDefault(),
          {
            once: !0
          }
        );
      }
    })
  })))), context.viewport))) : null;
});
$054eb8030ebde76e$var$ToastImpl.propTypes = {
  type(props) {
    if (props.type && ![
      "foreground",
      "background"
    ].includes(props.type)) {
      let error2 = `Invalid prop \`type\` supplied to \`${$054eb8030ebde76e$var$TOAST_NAME}\`. Expected \`foreground | background\`.`;
      return new Error(error2);
    }
    return null;
  }
};
var $054eb8030ebde76e$var$ToastAnnounce = (props) => {
  let { __scopeToast, children, ...announceProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast), [renderAnnounceText, setRenderAnnounceText] = (0, import_react84.useState)(!1), [isAnnounced, setIsAnnounced] = (0, import_react84.useState)(!1);
  return $054eb8030ebde76e$var$useNextFrame(
    () => setRenderAnnounceText(!0)
  ), (0, import_react84.useEffect)(() => {
    let timer = window.setTimeout(
      () => setIsAnnounced(!0),
      1e3
    );
    return () => window.clearTimeout(timer);
  }, []), isAnnounced ? null : /* @__PURE__ */ (0, import_react84.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: !0
  }, /* @__PURE__ */ (0, import_react84.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, announceProps, renderAnnounceText && /* @__PURE__ */ (0, import_react84.createElement)(import_react84.Fragment, null, context.label, " ", children)));
};
var $054eb8030ebde76e$export$16d42d7c29b95a4 = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, ...titleProps } = props;
  return /* @__PURE__ */ (0, import_react84.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, titleProps, {
    ref: forwardedRef
  }));
});
var $054eb8030ebde76e$var$ACTION_NAME = "ToastAction", $054eb8030ebde76e$export$3019feecfda683d2 = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { altText, ...actionProps } = props;
  return altText ? /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$ToastAnnounceExclude, {
    altText,
    asChild: !0
  }, /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$export$811e70f61c205839, _extends({}, actionProps, {
    ref: forwardedRef
  }))) : null;
});
$054eb8030ebde76e$export$3019feecfda683d2.propTypes = {
  altText(props) {
    return props.altText ? null : new Error(`Missing prop \`altText\` expected on \`${$054eb8030ebde76e$var$ACTION_NAME}\``);
  }
};
var $054eb8030ebde76e$var$CLOSE_NAME = "ToastClose", $054eb8030ebde76e$export$811e70f61c205839 = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, ...closeProps } = props, interactiveContext = $054eb8030ebde76e$var$useToastInteractiveContext($054eb8030ebde76e$var$CLOSE_NAME, __scopeToast);
  return /* @__PURE__ */ (0, import_react84.createElement)($054eb8030ebde76e$var$ToastAnnounceExclude, {
    asChild: !0
  }, /* @__PURE__ */ (0, import_react84.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, interactiveContext.onClose)
  })));
}), $054eb8030ebde76e$var$ToastAnnounceExclude = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, altText, ...announceExcludeProps } = props;
  return /* @__PURE__ */ (0, import_react84.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    "data-radix-toast-announce-exclude": "",
    "data-radix-toast-announce-alt": altText || void 0
  }, announceExcludeProps, {
    ref: forwardedRef
  }));
});
function $054eb8030ebde76e$var$getAnnounceTextContent(container) {
  let textContent = [];
  return Array.from(container.childNodes).forEach((node) => {
    if (node.nodeType === node.TEXT_NODE && node.textContent && textContent.push(node.textContent), $054eb8030ebde76e$var$isHTMLElement(node)) {
      let isHidden = node.ariaHidden || node.hidden || node.style.display === "none", isExcluded = node.dataset.radixToastAnnounceExclude === "";
      if (!isHidden)
        if (isExcluded) {
          let altText = node.dataset.radixToastAnnounceAlt;
          altText && textContent.push(altText);
        } else
          textContent.push(...$054eb8030ebde76e$var$getAnnounceTextContent(node));
    }
  }), textContent;
}
function $054eb8030ebde76e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  let currentTarget = detail.originalEvent.currentTarget, event = new CustomEvent(name, {
    bubbles: !0,
    cancelable: !0,
    detail
  });
  handler && currentTarget.addEventListener(name, handler, {
    once: !0
  }), discrete ? $8927f6f2acc4f386$export$6d1a0317bde7de7f(currentTarget, event) : currentTarget.dispatchEvent(event);
}
var $054eb8030ebde76e$var$isDeltaInDirection = (delta, direction, threshold = 0) => {
  let deltaX = Math.abs(delta.x), deltaY = Math.abs(delta.y), isDeltaX = deltaX > deltaY;
  return direction === "left" || direction === "right" ? isDeltaX && deltaX > threshold : !isDeltaX && deltaY > threshold;
};
function $054eb8030ebde76e$var$useNextFrame(callback = () => {
}) {
  let fn = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let raf1 = 0, raf2 = 0;
    return raf1 = window.requestAnimationFrame(
      () => raf2 = window.requestAnimationFrame(fn)
    ), () => {
      window.cancelAnimationFrame(raf1), window.cancelAnimationFrame(raf2);
    };
  }, [
    fn
  ]);
}
function $054eb8030ebde76e$var$isHTMLElement(node) {
  return node.nodeType === node.ELEMENT_NODE;
}
function $054eb8030ebde76e$var$getTabbableCandidates(container) {
  let nodes = [], walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      let isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      return node.disabled || node.hidden || isHiddenInput ? NodeFilter.FILTER_SKIP : node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; walker.nextNode(); )
    nodes.push(walker.currentNode);
  return nodes;
}
function $054eb8030ebde76e$var$focusFirst(candidates) {
  let previouslyFocusedElement = document.activeElement;
  return candidates.some((candidate) => candidate === previouslyFocusedElement ? !0 : (candidate.focus(), document.activeElement !== previouslyFocusedElement));
}
var $054eb8030ebde76e$export$2881499e37b75b9a = $054eb8030ebde76e$export$f5d03d415824e0e, $054eb8030ebde76e$export$d5c6c08dc2d3ca7 = $054eb8030ebde76e$export$6192c2425ecfd989, $054eb8030ebde76e$export$be92b6f5f03c0fe9 = $054eb8030ebde76e$export$8d8dc7d5f743331b, $054eb8030ebde76e$export$f99233281efd08a0 = $054eb8030ebde76e$export$16d42d7c29b95a4;
var $054eb8030ebde76e$export$e19cd5f9376f8cee = $054eb8030ebde76e$export$3019feecfda683d2;

// ../../components/molecule/toast.jsx
var import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1), ToastProvider = ({ children, duration }) => /* @__PURE__ */ (0, import_jsx_runtime20.jsxs)($054eb8030ebde76e$export$2881499e37b75b9a, { swipeDirection: "right", duration, children: [
  children,
  /* @__PURE__ */ (0, import_jsx_runtime20.jsx)($054eb8030ebde76e$export$d5c6c08dc2d3ca7, { className: "flex flex-col gap-2 fixed bottom-2 right-2 m-0 list-none z-[2147483647] outline-none" })
] }), Toast = ({ show }) => {
  let [open, setOpen] = (0, import_react85.useState)(show);
  return /* @__PURE__ */ (0, import_jsx_runtime20.jsxs)(
    $054eb8030ebde76e$export$be92b6f5f03c0fe9,
    {
      className: (0, import_classnames10.default)(
        "toast flex flex-row bg-surface-tertiary-default border-border-tertiary rounded shadow-popover text-text-on-primary p-3 gap-3 items-center justify-between",
        "data-[state=open]:animate-slideIn data-[state=closed]:animate-slideOut data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=cancel]:translate-x-0 data-[swipe=cancel]:transition-[transform_200ms_ease-out] data-[swipe=end]:animate-swipeOut"
      ),
      open,
      onOpenChange: setOpen,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime20.jsx)($054eb8030ebde76e$export$f99233281efd08a0, { className: "bodyMd-medium", children: "Scheduled: Catch up" }),
        /* @__PURE__ */ (0, import_jsx_runtime20.jsx)($054eb8030ebde76e$export$e19cd5f9376f8cee, { asChild: !0, altText: "undo", children: /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(Button, { label: "Undo", variant: "secondary-plain", size: "small", className: "text-text-surface-primary" }) })
      ]
    }
  );
};

// ../../components/molecule/filters.jsx
var import_jsx_runtime21 = __toESM(require_jsx_runtime(), 1), Filters = ({ onFilterTextChange, filterActions }) => {
  let [selected, setSelected] = (0, import_react87.useState)("hi"), [helloWorld, setHelloworld] = (0, import_react87.useState)(!0);
  return /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)("div", { className: "flex flex-row items-center gap-2 w-full flex-wrap", children: [
    /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(
      TextInput,
      {
        placeholder: "Filters",
        prefix: i11,
        onChange: onFilterTextChange,
        className: "flex-1 min-w-32"
      }
    ),
    filterActions && filterActions,
    /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(OptionListGroup, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(
        OptionList,
        {
          trigger: /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Button, { variant: "outline", label: "Menu" }),
          filter: !0,
          onFilterChange: (e23) => {
            console.log(e23);
          },
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.CheckboxItem, { checked: helloWorld, onValueChange: setHelloworld, children: "Hello world" }),
            /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.Separator, {}),
            /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(OptionList.RadioGroup, { value: selected, onValueChange: setSelected, children: [
              /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.RadioGroupItem, { value: "hello", children: "Hello" }),
              /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.RadioGroupItem, { value: "hi", children: "Hi" })
            ] })
          ]
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(
        OptionList,
        {
          trigger: /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Button, { variant: "outline", label: "Menu" }),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.CheckboxItem, { children: "Hello world" }),
            /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.Separator, {}),
            /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(OptionList.RadioGroup, { value: "hi", children: [
              /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.RadioGroupItem, { value: "hello", children: "Hello" }),
              /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.RadioGroupItem, { value: "hi", children: "Hi" })
            ] })
          ]
        }
      )
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(
      OptionList,
      {
        trigger: /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Button, { variant: "outline", label: "Menu" }),
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.CheckboxItem, { children: "Hello world" }),
          /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.Separator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(OptionList.RadioGroup, { value: "hi", children: [
            /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.RadioGroupItem, { value: "hello", children: "Hello" }),
            /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(OptionList.RadioGroupItem, { value: "hi", children: "Hi" })
          ] })
        ]
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)(ToastProvider, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Toast, { show: !0 }),
      /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Toast, { show: !0 }),
      /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Toast, { show: !0 })
    ] })
  ] });
};
Filters.propTypes = {
  onFilterTextChange: import_prop_types7.default.func,
  filterActions: import_prop_types7.default.element
};

// ../../components/atoms/button-groups.jsx
var import_react88 = __toESM(require_react(), 1), import_prop_types8 = __toESM(require_prop_types(), 1);
var import_classnames11 = __toESM(require_classnames(), 1), import_jsx_runtime22 = __toESM(require_jsx_runtime(), 1), ButtonGroup = ({ items, size: size2, value, onChange: onChange2, selectable }) => {
  let [currentValue, setCurrentValue] = (0, import_react88.useState)(value);
  return (0, import_react88.useEffect)(() => {
    onChange2 && onChange2(currentValue);
  }, [currentValue]), /* @__PURE__ */ (0, import_jsx_runtime22.jsx)("div", { className: (0, import_classnames11.default)("flex flex-row"), children: items && items.map((child, index2) => {
    let sharpRight = index2 < items.length - 1, sharpLeft = index2 > 0;
    return /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(
      ButtonBase,
      {
        label: child.label,
        size: size2,
        variant: "basic",
        sharpLeft,
        sharpRight,
        selected: child.value == currentValue && selectable,
        className: (0, import_classnames11.default)({ "-ml-px": sharpLeft || sharpRight }),
        IconComp: child.icon,
        iconOnly: !child.label && child.icon,
        DisclosureComp: child.label && child.disclosureComp,
        onClick: () => {
          setCurrentValue(child.value);
        }
      },
      child.key
    );
  }) });
};
ButtonGroup.propTypes = {
  items: import_prop_types8.default.arrayOf(import_prop_types8.default.shape({
    label: import_prop_types8.default.string,
    value: import_prop_types8.default.string.isRequired,
    icon: function(props, propName, componentName) {
      if ((props.label == null || props.label == "") && (props[propName] == null || typeof props[propName] != "object"))
        return new Error("Either label or icon is required!");
    },
    disclosureComp: import_prop_types8.default.object,
    key: import_prop_types8.default.string
  })).isRequired,
  selectable: import_prop_types8.default.bool,
  onChange: import_prop_types8.default.func,
  value: import_prop_types8.default.string,
  size: import_prop_types8.default.oneOf(["small", "medium", "large"])
};
ButtonGroup.defaultProps = {
  size: "medium",
  onChange: (e23) => {
    console.log(e23);
  },
  selectable: !1,
  items: [
    {
      label: "item 1",
      value: "item1",
      key: "item1"
    },
    {
      value: "item2",
      label: "item 2",
      key: "item2"
    },
    {
      label: "item 3",
      value: "item3",
      key: "item3"
    },
    {
      label: "item 4",
      value: "item4",
      key: "item4"
    }
  ]
};

// ../../components/molecule/empty-state.jsx
var import_classnames12 = __toESM(require_classnames(), 1);
var import_prop_types9 = __toESM(require_prop_types(), 1), import_jsx_runtime23 = __toESM(require_jsx_runtime(), 1), EmptyState = ({ image, heading, children, footer, action, secondaryAction }) => /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "flex flex-col items-center shadow-card border border-border-default rounded", children: /* @__PURE__ */ (0, import_jsx_runtime23.jsxs)("div", { className: (0, import_classnames12.default)("flex flex-col items-center pt-20 pb-5 px-5"), children: [
  image ? /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("img", { src: image, className: "max-h-43 max-w-37" }) : /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "h-43 w-37 bg-surface-hovered" }),
  /* @__PURE__ */ (0, import_jsx_runtime23.jsxs)("div", { className: "flex flex-col gap-4 pb-15", children: [
    /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "headingLg text-center", children: heading }),
    children && /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "text-text-strong bodyMd text-center", children }),
    (action || secondaryAction) && /* @__PURE__ */ (0, import_jsx_runtime23.jsxs)("div", { className: "flex flex-row items-center justify-center gap-2", children: [
      secondaryAction && /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(Button, { label: secondaryAction == null ? void 0 : secondaryAction.title, variant: "outline", onClick: secondaryAction == null ? void 0 : secondaryAction.click }),
      action && /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(Button, { label: action == null ? void 0 : action.title, variant: "primary", onClick: action == null ? void 0 : action.click })
    ] }),
    footer && /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "bodySm text-text-soft", children: footer })
  ] })
] }) });
EmptyState.propTypes = {
  image: import_prop_types9.default.string,
  heading: import_prop_types9.default.string,
  children: import_prop_types9.default.any,
  footer: import_prop_types9.default.any,
  action: import_prop_types9.default.shape({
    title: import_prop_types9.default.string.isRequired,
    click: import_prop_types9.default.func
  }),
  secondaryAction: import_prop_types9.default.shape({
    title: import_prop_types9.default.string.isRequired,
    click: import_prop_types9.default.func
  }),
  fullwidth: import_prop_types9.default.bool
};
EmptyState.defaultProps = {
  heading: "This is where you\u2019ll manage your projects",
  children: /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { children: "You can create a new project and manage the listed project." }),
  fullwidth: !0
};

// app/routes/console.projects.jsx
var import_jsx_runtime24 = __toESM(require_jsx_runtime()), Projects = ({}) => {
  let [projects, setProjects] = (0, import_react89.useState)([1]), navigate = (0, import_react90.useNavigate)(), [projectListMode, setProjectListMode] = (0, import_react89.useState)("list");
  return /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)(import_jsx_runtime24.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(SubHeader, { title: "Projects", actions: projects.length != 0 && /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(import_jsx_runtime24.Fragment, { children: /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(Button, { variant: "primary", label: "Add new", IconComp: a6, onClick: () => {
      navigate("../newproject"), console.log("called");
    } }) }) }),
    projects.length > 0 && /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)("div", { className: "pt-5 flex flex-col gap-10", children: [
      /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(Filters, { filterActions: /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)("div", { className: "flex flex-row gap-2 items-center justify-center", children: [
        /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(Button, { IconComp: l, variant: "basic", label: "Sortby" }),
        /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(
          ButtonGroup,
          {
            selectable: !0,
            value: "list",
            onChange: (e23) => {
              setProjectListMode(e23);
            },
            items: [
              {
                key: "list",
                value: "list",
                icon: o2
              },
              {
                key: "grid",
                value: "grid",
                icon: i12
              }
            ]
          }
        )
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("div", {})
    ] }),
    projects.length == 0 && /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("div", { className: "pt-5", children: /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(
      EmptyState,
      {
        heading: "This is where you\u2019ll manage your projects",
        children: /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("p", { children: "You can create a new project and manage the listed project." }),
        action: {
          title: "Create Project",
          click: () => {
            navigate("newproject");
          }
        }
      }
    ) })
  ] });
}, console_projects_default = Projects;

// app/routes/console.settings.jsx
var console_settings_exports = {};
__export(console_settings_exports, {
  default: () => ConsoleSettings
});
var import_react94 = __toESM(require_dist3()), import_react95 = __toESM(require_dist3());

// ../../components/atoms/action-list.jsx
var import_react92 = __toESM(require_react(), 1), import_prop_types10 = __toESM(require_prop_types(), 1), import_classnames13 = __toESM(require_classnames(), 1);
var import_react93 = __toESM(require_dist3(), 1), import_jsx_runtime25 = __toESM(require_jsx_runtime(), 1), ActionButton = ({
  label: label2,
  disabled: disabled2,
  critical,
  active,
  onClick,
  href,
  LeftIconComp,
  RightIconComp,
  rightEmptyPlaceholder
}) => /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)("div", { className: (0, import_classnames13.default)("w-full flex flex-row gap-x-1"), children: [
  active && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(motion.div, { layoutId: "line", className: "w-0.5 bg-icon-primary rounded" }),
  !active && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(motion.div, { layoutId: "line_1", className: "w-0.5 bg-transparent rounded" }),
  /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(
    import_react93.Link,
    {
      to: href,
      className: (0, import_classnames13.default)(
        "w-[inherit] rounded border bodyMd flex gap-1 items-center justify-between cursor-pointer outline-none border-none px-4 py-2 ring-offset-1 focus-visible:ring-2 focus:ring-border-focus",
        {
          "text-text-primary bodyMd-medium": active,
          "text-text-disabled": disabled2,
          "text-text-danger hover:text-text-on-primary active:text-text-on-primary": critical
        },
        {
          "pointer-events-none": disabled2
        },
        {
          "bg-none hover:bg-surface-hovered active:bg-surface-pressed": !active && !disabled2 && !critical,
          "bg-none hover:bg-surface-danger-hovered active:bg-surface-danger-pressed": !active && !disabled2 && critical,
          "bg-none": disabled2,
          "bg-surface-primary-selected": !critical && active
        }
      ),
      onClick: critical ? null : onClick,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)("div", { className: "flex flex-row items-center gap-1", children: [
          LeftIconComp && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(LeftIconComp, { size: 16, color: "currentColor" }),
          label2
        ] }),
        RightIconComp && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(RightIconComp, { size: 16, color: "currentColor" }),
        !RightIconComp && rightEmptyPlaceholder && /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: "w-4 h-4" })
      ]
    }
  )
] }), ActionList = ({ items, value, onChange: onChange2, layoutId }) => {
  let [active, setActive] = (0, import_react92.useState)(value);
  return (0, import_react92.useEffect)(() => {
    onChange2 && onChange2(active);
  }, [active]), /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("div", { className: (0, import_classnames13.default)("flex flex-col gap-y-1"), children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(LayoutGroup, { id: layoutId, children: items.map((child, index2) => /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
    ActionButton,
    {
      critical: child.critical,
      label: child.label,
      href: child.href,
      LeftIconComp: child.LeftIconComp,
      RightIconComp: child.RightIconComp,
      rightEmptyPlaceholder: !child.RightIconComp,
      active: child.value === active,
      onClick: () => {
        setActive(child.value);
      }
    },
    child.key
  )) }) });
};
ActionButton.propTypes = {
  label: import_prop_types10.default.string.isRequired,
  href: import_prop_types10.default.string.isRequired,
  active: import_prop_types10.default.bool,
  onClick: import_prop_types10.default.func,
  disabled: import_prop_types10.default.bool
};
ActionButton.defaultProps = {
  label: "test",
  href: "#",
  active: !1,
  onClick: null,
  disabled: !1
};
ActionList.propTypes = {
  items: import_prop_types10.default.arrayOf(import_prop_types10.default.shape({
    label: import_prop_types10.default.string.isRequired,
    value: import_prop_types10.default.oneOfType([import_prop_types10.default.string, import_prop_types10.default.object]).isRequired,
    key: import_prop_types10.default.string,
    RightIconComp: import_prop_types10.default.object,
    LeftIconComp: import_prop_types10.default.object
  })).isRequired,
  value: import_prop_types10.default.oneOfType([import_prop_types10.default.string, import_prop_types10.default.object]).isRequired,
  onChange: import_prop_types10.default.func,
  layoutId: import_prop_types10.default.string.isRequired
};

// app/routes/console.settings.jsx
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
function ConsoleSettings() {
  let location = (0, import_react95.useLocation)();
  console.log("location", location.pathname);
  let match = (0, import_react95.useMatch)({
    path: "/console/:path/*"
  }, location.pathname);
  return /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex flex-col gap-y-10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SubHeader, { title: "Personal Account Settings" }),
    /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex flex-row gap-x-25", children: [
      /* @__PURE__ */ (0, import_jsx_runtime26.jsx)("div", { className: "w-45", children: /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(
        ActionList,
        {
          layoutId: "settings",
          value: match.params["*"],
          items: [
            {
              label: "General",
              value: "general",
              key: "general",
              href: "general"
            },
            {
              label: "Billing",
              value: "billing",
              key: "billing",
              href: "billing"
            },
            {
              label: "Invoices",
              value: "invoices",
              key: "invoices"
            },
            {
              label: "User management",
              value: "usermanagement",
              key: "usermanagement"
            },
            {
              label: "Security & Privacy",
              value: "securityandprivacy",
              key: "securityandprivacy"
            }
          ]
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(import_react94.Outlet, {})
    ] })
  ] });
}

// app/routes/console.cluster.jsx
var console_cluster_exports = {};
__export(console_cluster_exports, {
  default: () => ConsoleCluster
});

// app/pages/cluster.jsx
var import_jsx_runtime27 = __toESM(require_jsx_runtime()), Cluster = ({}) => /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(import_jsx_runtime27.Fragment, { children: [
  /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(SubHeader, { title: "Cluster" }),
  /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(
    EmptyState,
    {
      heading: "This is where you\u2019ll manage your cluster ",
      children: /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("p", { children: "You can create a new cluster and manage the listed cluster." }),
      action: {
        title: "Create Cluster"
      }
    }
  )
] }), cluster_default = Cluster;

// app/routes/console.cluster.jsx
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
function ConsoleCluster() {
  return /* @__PURE__ */ (0, import_jsx_runtime28.jsx)(cluster_default, {});
}

// app/routes/console._index.jsx
var console_index_exports = {};
__export(console_index_exports, {
  default: () => ConsoleIndex
});

// app/pages/container.jsx
var import_react102 = __toESM(require_dist3()), import_classnames17 = __toESM(require_classnames());

// ../../components/organisms/top-bar.jsx
var import_classnames16 = __toESM(require_classnames(), 1), import_prop_types13 = __toESM(require_prop_types(), 1);

// ../../components/atoms/tabs.jsx
var import_react96 = __toESM(require_react(), 1);
var import_react97 = __toESM(require_react(), 1);
var import_react98 = __toESM(require_dist3(), 1), import_classnames14 = __toESM(require_classnames(), 1);
var import_prop_types11 = __toESM(require_prop_types(), 1), import_jsx_runtime29 = __toESM(require_jsx_runtime(), 1), NavTab = ({ href, label: label2, active, fitted, onClick }) => /* @__PURE__ */ (0, import_jsx_runtime29.jsxs)("div", { className: (0, import_classnames14.default)(
  "outline-none flex flex-col relative group bodyMd-medium hover:text-text-default active:text-text-default ",
  {
    "text-text-default": active,
    "text-text-soft": !active
  }
), children: [
  /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(import_react98.Link, { onClick, to: href, className: (0, import_classnames14.default)(
    "outline-none flex flex-col rounded ring-offset-1 focus-visible:ring-2 focus-visible:ring-border-focus",
    {
      "p-4": !fitted,
      "pt-2 pb-3": fitted
    }
  ), children: label2 }),
  active && /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(motion.div, { layoutId: "underline", className: (0, import_classnames14.default)("h-1 bg-surface-primary-pressed z-10 absolute bottom-0 w-full") }),
  /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { className: "h-1 group-hover:bg-border-default group-active:bg-border-tertiary bg-none transition-all absolute bottom-0 w-full z-0" })
] }), NavTabs = ({ items, fitted, onChange: onChange2, layoutId, value }) => {
  let [active, setActive] = (0, import_react96.useState)(value);
  return (0, import_react97.useEffect)(() => {
    onChange2 && onChange2(active);
  }, [active]), /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { className: "flex flex-row gap-6", children: /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(LayoutGroup, { id: layoutId, children: items.map((child, index2) => /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(
    NavTab,
    {
      onClick: () => {
        setActive(child.value);
      },
      fitted,
      href: child.href,
      label: child.label,
      active: active === child.value
    },
    child.key
  )) }) });
};
NavTab.propTypes = {
  href: import_prop_types11.default.string,
  label: import_prop_types11.default.string.isRequired,
  onPress: import_prop_types11.default.func,
  active: import_prop_types11.default.bool,
  fitted: import_prop_types11.default.bool
};
NavTabs.propTypes = {
  /**
  * LayoutId should be provided in order to prevent multiple tabs to share same instance.
  */
  layoutId: import_prop_types11.default.string.isRequired,
  items: import_prop_types11.default.arrayOf(import_prop_types11.default.object.isRequired).isRequired,
  fitted: import_prop_types11.default.bool,
  onChange: import_prop_types11.default.func,
  value: import_prop_types11.default.any
};
NavTabs.defaultProps = {
  layoutId: "nav-tabs"
};
NavTab.defaultProps = {
  label: "Item",
  active: !1,
  fitted: !1
};

// ../../components/molecule/profile.jsx
var import_prop_types12 = __toESM(require_prop_types(), 1), import_classnames15 = __toESM(require_classnames(), 1), import_react99 = __toESM(require_react(), 1);
var import_jsx_runtime30 = __toESM(require_jsx_runtime(), 1), Profile = (0, import_react99.forwardRef)(({ name, subtitle, color: color2, size: size2, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(BounceIt, { className: "w-fit", children: /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(
  "button",
  {
    ...props,
    ref,
    className: (0, import_classnames15.default)("flex py-0.5 px-1 gap-2 items-center ring-offset-1 outline-none transition-all rounded focus-visible:ring-2 focus-visible:ring-border-focus"),
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(AvatarBase, { label: name, color: color2, size: size2 }),
      /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)("div", { className: "flex flex-col gap-y-1  items-start", children: [
        /* @__PURE__ */ (0, import_jsx_runtime30.jsx)("div", { className: "bodyMd-medium", children: name }),
        subtitle && /* @__PURE__ */ (0, import_jsx_runtime30.jsx)("div", { className: "bodySm text-text-soft", children: subtitle })
      ] })
    ]
  }
) }));
Profile.propTypes = {
  name: import_prop_types12.default.string.isRequired,
  subtitle: import_prop_types12.default.string,
  color: import_prop_types12.default.oneOf([
    "one",
    "two",
    "three",
    "four",
    "five"
  ]),
  size: import_prop_types12.default.oneOf([
    "large",
    "medium",
    "small",
    "extra-small"
  ])
};
Profile.defaultProps = {
  name: "test",
  subtitle: "subtitle",
  color: "one",
  size: "medium"
};

// ../../components/organisms/top-bar.jsx
var import_jsx_runtime31 = __toESM(require_jsx_runtime(), 1), TopBar = ({ tab, actions, logo, fixed }) => /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("div", { className: (0, import_classnames16.default)(
  "border-b border-border-default bg-surface-subdued px-2.5 z-10",
  {
    "fixed top-0 left-0 right-0": fixed
  }
), children: /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "flex flex-col m-auto", children: [
  /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "flex flex-row items-center justify-between py-2", children: [
    logo && logo,
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("div", { className: "flex flex-row items-center justify-center", children: actions && actions })
  ] }),
  tab && /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(NavTabs, { value: tab.value, layoutId: tab.layoutId, fitted: tab.fitted, items: tab.items, onChange: tab.onChange })
] }) });
TopBar.propTypes = {
  tab: import_prop_types13.default.object,
  actions: import_prop_types13.default.any,
  logo: import_prop_types13.default.any,
  fixed: import_prop_types13.default.bool
};
TopBar.defaultProps = {
  logo: /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(BrandLogo, { detailed: !0, size: 20 }),
  actions: /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)(import_jsx_runtime31.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Button, { label: "Nuveo", variant: "basic", DisclosureComp: a2 }),
    /* @__PURE__ */ (0, import_jsx_runtime31.jsx)("div", { className: "h-3.75 w-px bg-border-default mx-4" }),
    /* @__PURE__ */ (0, import_jsx_runtime31.jsxs)("div", { className: "flex flex-row gap-2 items-center justify-center", children: [
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(IconButton, { IconComp: a, variant: "plain" }),
      /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(Profile, { name: "Astroman", size: "small", subtitle: null })
    ] })
  ] }),
  tab: {
    value: "projects",
    fitted: !0,
    layoutId: "projects",
    onChange: (e23) => {
      console.log(e23);
    },
    items: [
      {
        label: "Projects",
        href: "#",
        key: "projects",
        value: "projects"
      },
      {
        label: "Cluster",
        href: "#",
        key: "cluster",
        value: "cluster"
      },
      {
        label: "Cloud provider",
        href: "#",
        key: "cloudprovider",
        value: "cloudprovider"
      },
      {
        label: "Domains",
        href: "#",
        key: "domains",
        value: "domains"
      },
      {
        label: "Container registry",
        href: "#",
        value: "containerregistry",
        key: "containerregistry"
      },
      {
        label: "VPN",
        href: "#",
        key: "vpn",
        value: "vpn"
      },
      {
        label: "Settings",
        href: "#",
        key: "settings",
        value: "settings"
      }
    ]
  }
};

// app/pages/container.jsx
var import_jsx_runtime32 = __toESM(require_jsx_runtime()), Container = ({ children }) => {
  let fixedHeader = !0, location = (0, import_react102.useLocation)();
  console.log("location", location.pathname);
  let match = (0, import_react102.useMatch)({
    path: "/console/:path/*"
  }, location.pathname);
  return console.log("match", match), /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "px-2.5", children: [
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
      TopBar,
      {
        fixed: fixedHeader,
        logo: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(BrandLogo, { detailed: !0, size: 20 }),
        tab: {
          value: match.params.path,
          fitted: !0,
          layoutId: "projects",
          onChange: (e23) => {
            console.log(e23);
          },
          items: [
            {
              label: "Projects",
              href: "projects",
              key: "projects",
              value: "projects"
            },
            {
              label: "Cluster",
              href: "cluster",
              key: "cluster",
              value: "cluster"
            },
            {
              label: "Cloud provider",
              href: "#",
              key: "cloudprovider",
              value: "cloudprovider"
            },
            {
              label: "Domains",
              href: "#",
              key: "domains",
              value: "domains"
            },
            {
              label: "Container registry",
              href: "#",
              value: "containerregistry",
              key: "containerregistry"
            },
            {
              label: "VPN",
              href: "#",
              key: "vpn",
              value: "vpn"
            },
            {
              label: "Settings",
              href: "settings/general",
              key: "settings",
              value: "settings"
            }
          ]
        },
        actions: /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)(import_jsx_runtime32.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Button, { label: "Nuveo", variant: "basic", DisclosureComp: a2 }),
          /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: "h-[15px] w-px bg-border-default mx-4" }),
          /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "flex flex-row gap-2 items-center justify-center", children: [
            /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(IconButton, { IconComp: i2, variant: "plain" }),
            /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(Profile, { name: "Astroman", size: "small", subtitle: null })
          ] })
        ] })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { className: (0, import_classnames17.default)(
      "max-w-[1184px] m-auto",
      {
        "pt-23.75": fixedHeader && !0,
        "pt-15": !1
      }
    ), children })
  ] });
}, container_default = Container;

// app/routes/console._index.jsx
function ConsoleIndex() {
  return "hello";
}

// app/routes/_auth.signup.jsx
var auth_signup_exports = {};
__export(auth_signup_exports, {
  default: () => AuthLogin
});
var import_classnames18 = __toESM(require_classnames());
var import_react_router_dom = __toESM(require_main2());
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
function AuthLogin({}) {
  let [searchParams, setSearchParams] = (0, import_react_router_dom.useSearchParams)();
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: (0, import_classnames18.default)("flex flex-col items-center justify-center min-h-full"), children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: (0, import_classnames18.default)("flex flex-1 flex-col items-center self-stretch justify-center px-5 py-16 border-b border-border-default"), children: /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-col items-stretch justify-center gap-8 md:w-[400px]", children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(BrandLogo, { darkBg: !1, size: 60 }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-col items-stretch gap-8 border-b pb-8 border-border-default", children: [
        /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-col gap-2 items-center md:px-12", children: [
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: (0, import_classnames18.default)("text-text-strong heading3xl text-center"), children: "Signup to Kloudlite" }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "text-text-soft bodySm text-center", children: "To access your DevOps console, Please provide your login credentials." })
        ] }),
        searchParams.get("mode") == "email" ? /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-col items-stretch gap-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(TextInput, { label: "Name", placeholder: "Full name" }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "flex flex-col gap-5 items-stretch md:flex-row", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(TextInput, { label: "Company Name", className: "flex-1" }) }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(TextInput, { label: "Email", placeholder: "ex: john@company.com" }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(PasswordInput, { label: "Password", placeholder: "XXXXXX" }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { size: "large", variant: "primary", label: "Continue with Email", IconComp: a4, block: !0 })
        ] }) : /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "flex flex-col items-stretch gap-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { size: "large", variant: "basic", label: "Continue with GitHub", IconComp: a5, href: "https://google.com", block: !0 }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { size: "large", variant: "primary", label: "Continue with GitLab", IconComp: l6, block: !0 }),
          /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { size: "large", variant: "secondary", label: "Continue with Google", IconComp: i9, block: !0 })
        ] })
      ] }),
      searchParams.get("mode") == "email" ? /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { size: "large", variant: "outline", label: "Other Signup options", IconComp: i3, href: "/signup", block: !0 }) : /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { size: "large", variant: "outline", label: "Signup with Email", IconComp: i6, href: "/signup/?mode=email", block: !0 }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "bodyMd text-text-soft text-center", children: "By signing up, you agree to the Terms of Service and Privacy Policy." })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "py-8  px-5 flex flex-row items-center justify-center self-stretch", children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "bodyMd text-text-default", children: "Already have an account?" }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Button, { label: "Login", variant: "primary-plain", size: "medium", href: "/login" })
    ] })
  ] });
}

// app/routes/_auth.login.jsx
var auth_login_exports = {};
__export(auth_login_exports, {
  default: () => AuthLogin2
});
var import_classnames19 = __toESM(require_classnames());
var import_react_router_dom2 = __toESM(require_main2());
var import_jsx_runtime34 = __toESM(require_jsx_runtime()), CustomGoogleIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(i9, { ...props, weight: 4 });
function AuthLogin2({}) {
  let [searchParams, setSearchParams] = (0, import_react_router_dom2.useSearchParams)();
  return /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: (0, import_classnames19.default)("flex flex-col items-center justify-center h-full"), children: [
    /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("div", { className: (0, import_classnames19.default)("flex flex-1 flex-col items-center self-stretch justify-center px-5 pb-8 border-b border-border-default md:py-37.5"), children: /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "flex flex-col items-stretch justify-center gap-8 md:w-[400px]", children: [
      /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(BrandLogo, { darkBg: !1, size: 60 }),
      /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "flex flex-col items-stretch gap-8 border-b pb-8 border-border-default", children: [
        /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "flex flex-col gap-2 items-center md:px-12", children: [
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("div", { className: (0, import_classnames19.default)("text-text-strong heading3xl text-center"), children: "Login to Kloudlite" }),
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("div", { className: "text-text-soft bodySm text-center", children: "To access your DevOps console, Please provide your login credentials." })
        ] }),
        searchParams.get("mode") == "email" ? /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "flex flex-col items-stretch gap-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(TextInput, { label: "Email", placeholder: "ex: john@company.com" }),
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(PasswordInput, { label: "Password", placeholder: "XXXXXX", extra: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "medium", variant: "primary-plain", label: "Forgot password", href: "/forgotpassword" }) }),
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "large", variant: "primary", label: "Continue with Email", IconComp: a4, block: !0 })
        ] }) : /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "flex flex-col items-stretch gap-5", children: [
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "large", variant: "basic", label: "Continue with GitHub", IconComp: a5, href: "https://google.com", block: !0 }),
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "large", variant: "secondary", style: { background: "#7759c2", borderColor: "#673ab7" }, label: "Continue with GitLab", IconComp: l6, block: !0 }),
          /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "large", variant: "primary", label: "Continue with Google", IconComp: CustomGoogleIcon, block: !0 })
        ] })
      ] }),
      searchParams.get("mode") == "email" ? /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "large", variant: "outline", label: "Other Login options", IconComp: i3, href: "/login", block: !0 }) : /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { size: "large", variant: "outline", label: "Login with Email", IconComp: i6, href: "/login/?mode=email", block: !0 })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "py-8  px-5 flex flex-row items-center justify-center self-stretch", children: [
      /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("div", { className: "bodyMd text-text-default", children: "Don\u2019t have an account?" }),
      /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Button, { label: "Signup", variant: "primary-plain", size: "medium", href: "/signup" })
    ] })
  ] });
}

// app/routes/console.jsx
var console_exports = {};
__export(console_exports, {
  default: () => Console
});
var import_react105 = __toESM(require_dist3()), import_jsx_runtime35 = __toESM(require_jsx_runtime());
function Console() {
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(container_default, { children: /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(import_react105.Outlet, {}) });
}

// app/routes/_index.jsx
var index_exports = {};
__export(index_exports, {
  default: () => IndexRoute
});
var import_react106 = __toESM(require_dist3()), import_jsx_runtime36 = __toESM(require_jsx_runtime());
function IndexRoute() {
  return /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)("div", { children: [
    "hi",
    /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(import_react106.Outlet, {})
  ] });
}

// server-assets-manifest:@remix-run/dev/assets-manifest
var assets_manifest_default = { entry: { module: "/build/entry.client-6HFAW3FG.js", imports: ["/build/_shared/chunk-DIPFWXCB.js", "/build/_shared/chunk-Y37JVKKV.js"] }, routes: { root: { id: "root", parentId: void 0, path: "", index: void 0, caseSensitive: void 0, module: "/build/root-YPWUHQ34.js", imports: ["/build/_shared/chunk-YLXLXWGR.js", "/build/_shared/chunk-QD7GOPD7.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/_auth.forgotpassword": { id: "routes/_auth.forgotpassword", parentId: "root", path: "forgotpassword", index: void 0, caseSensitive: void 0, module: "/build/routes/_auth.forgotpassword-C5QN4DYX.js", imports: ["/build/_shared/chunk-PSXQCRDL.js", "/build/_shared/chunk-FVY2YGIA.js", "/build/_shared/chunk-MD4CPEFE.js", "/build/_shared/chunk-5D4I7JMZ.js", "/build/_shared/chunk-NAXXRUWX.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/_auth.login": { id: "routes/_auth.login", parentId: "root", path: "login", index: void 0, caseSensitive: void 0, module: "/build/routes/_auth.login-XL6LPCZO.js", imports: ["/build/_shared/chunk-PSXQCRDL.js", "/build/_shared/chunk-FVY2YGIA.js", "/build/_shared/chunk-MD4CPEFE.js", "/build/_shared/chunk-5D4I7JMZ.js", "/build/_shared/chunk-NAXXRUWX.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/_auth.signup": { id: "routes/_auth.signup", parentId: "root", path: "signup", index: void 0, caseSensitive: void 0, module: "/build/routes/_auth.signup-EG6HZO46.js", imports: ["/build/_shared/chunk-PSXQCRDL.js", "/build/_shared/chunk-FVY2YGIA.js", "/build/_shared/chunk-MD4CPEFE.js", "/build/_shared/chunk-5D4I7JMZ.js", "/build/_shared/chunk-NAXXRUWX.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/_index": { id: "routes/_index", parentId: "root", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/_index-RUDY7OOG.js", imports: void 0, hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console": { id: "routes/console", parentId: "root", path: "console", index: void 0, caseSensitive: void 0, module: "/build/routes/console-IXTFQ7LJ.js", imports: ["/build/_shared/chunk-7JOICWA6.js", "/build/_shared/chunk-MJIXG3ZA.js", "/build/_shared/chunk-PSXQCRDL.js", "/build/_shared/chunk-MD4CPEFE.js", "/build/_shared/chunk-5D4I7JMZ.js", "/build/_shared/chunk-NAXXRUWX.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console._index": { id: "routes/console._index", parentId: "routes/console", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/console._index-N66EJGZO.js", imports: ["/build/_shared/chunk-YLXLXWGR.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console.cluster": { id: "routes/console.cluster", parentId: "routes/console", path: "cluster", index: void 0, caseSensitive: void 0, module: "/build/routes/console.cluster-2CAUQC2H.js", imports: ["/build/_shared/chunk-TZVU4RHX.js", "/build/_shared/chunk-IJ7WMHBE.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console.newproject": { id: "routes/console.newproject", parentId: "routes/console", path: "newproject", index: void 0, caseSensitive: void 0, module: "/build/routes/console.newproject-QY2E2WFX.js", imports: ["/build/_shared/chunk-DMIWLF32.js", "/build/_shared/chunk-FVY2YGIA.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console.projects": { id: "routes/console.projects", parentId: "routes/console", path: "projects", index: void 0, caseSensitive: void 0, module: "/build/routes/console.projects-N44OAAPV.js", imports: ["/build/_shared/chunk-TZVU4RHX.js", "/build/_shared/chunk-DMIWLF32.js", "/build/_shared/chunk-FVY2YGIA.js", "/build/_shared/chunk-IJ7WMHBE.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console.settings": { id: "routes/console.settings", parentId: "routes/console", path: "settings", index: void 0, caseSensitive: void 0, module: "/build/routes/console.settings-7BSGBGHW.js", imports: ["/build/_shared/chunk-IJ7WMHBE.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console.settings.billing": { id: "routes/console.settings.billing", parentId: "routes/console.settings", path: "billing", index: void 0, caseSensitive: void 0, module: "/build/routes/console.settings.billing-UDHK3UKW.js", imports: ["/build/_shared/chunk-FVY2YGIA.js", "/build/_shared/chunk-MD4CPEFE.js", "/build/_shared/chunk-5D4I7JMZ.js", "/build/_shared/chunk-NAXXRUWX.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/console.settings.general": { id: "routes/console.settings.general", parentId: "routes/console.settings", path: "general", index: void 0, caseSensitive: void 0, module: "/build/routes/console.settings.general-EWEMKGPR.js", imports: ["/build/_shared/chunk-MJIXG3ZA.js", "/build/_shared/chunk-FVY2YGIA.js", "/build/_shared/chunk-MD4CPEFE.js", "/build/_shared/chunk-5D4I7JMZ.js", "/build/_shared/chunk-NAXXRUWX.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 } }, cssBundleHref: void 0, version: "6bd89c2e", hmr: void 0, url: "/build/manifest-6BD89C2E.js" };

// server-entry-module:@remix-run/dev/server-build
var assetsBuildDirectory = "public/build", future = { unstable_dev: !1, unstable_postcss: !1, unstable_tailwind: !1, v2_errorBoundary: !1, v2_headers: !1, v2_meta: !1, v2_normalizeFormMethod: !1, v2_routeConvention: !0 }, publicPath = "/build/", entry = { module: entry_server_exports }, routes = {
  root: {
    id: "root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: root_exports
  },
  "routes/console.settings.billing": {
    id: "routes/console.settings.billing",
    parentId: "routes/console.settings",
    path: "billing",
    index: void 0,
    caseSensitive: void 0,
    module: console_settings_billing_exports
  },
  "routes/console.settings.general": {
    id: "routes/console.settings.general",
    parentId: "routes/console.settings",
    path: "general",
    index: void 0,
    caseSensitive: void 0,
    module: console_settings_general_exports
  },
  "routes/_auth.forgotpassword": {
    id: "routes/_auth.forgotpassword",
    parentId: "root",
    path: "forgotpassword",
    index: void 0,
    caseSensitive: void 0,
    module: auth_forgotpassword_exports
  },
  "routes/console.newproject": {
    id: "routes/console.newproject",
    parentId: "routes/console",
    path: "newproject",
    index: void 0,
    caseSensitive: void 0,
    module: console_newproject_exports
  },
  "routes/console.projects": {
    id: "routes/console.projects",
    parentId: "routes/console",
    path: "projects",
    index: void 0,
    caseSensitive: void 0,
    module: console_projects_exports
  },
  "routes/console.settings": {
    id: "routes/console.settings",
    parentId: "routes/console",
    path: "settings",
    index: void 0,
    caseSensitive: void 0,
    module: console_settings_exports
  },
  "routes/console.cluster": {
    id: "routes/console.cluster",
    parentId: "routes/console",
    path: "cluster",
    index: void 0,
    caseSensitive: void 0,
    module: console_cluster_exports
  },
  "routes/console._index": {
    id: "routes/console._index",
    parentId: "routes/console",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: console_index_exports
  },
  "routes/_auth.signup": {
    id: "routes/_auth.signup",
    parentId: "root",
    path: "signup",
    index: void 0,
    caseSensitive: void 0,
    module: auth_signup_exports
  },
  "routes/_auth.login": {
    id: "routes/_auth.login",
    parentId: "root",
    path: "login",
    index: void 0,
    caseSensitive: void 0,
    module: auth_login_exports
  },
  "routes/console": {
    id: "routes/console",
    parentId: "root",
    path: "console",
    index: void 0,
    caseSensitive: void 0,
    module: console_exports
  },
  "routes/_index": {
    id: "routes/_index",
    parentId: "root",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: index_exports
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  assets,
  assetsBuildDirectory,
  entry,
  future,
  publicPath,
  routes
});
/*! Bundled license information:

@remix-run/node/dist/fetch.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/base64.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/globals.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

@remix-run/server-runtime/dist/warnings.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/cookies.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/formData.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/router/dist/router.cjs.js:
  (**
   * @remix-run/router v1.6.3
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/mode.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/errors.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/responses.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/entry.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/headers.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/invariant.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/routeMatching.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/data.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/routes.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/markup.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/serverHandoff.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/server.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/sessions.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/sessions/cookieStorage.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/sessions/memoryStorage.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/upload/errors.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/upload/memoryUploadHandler.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/dev.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/index.js:
  (**
   * @remix-run/server-runtime v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/crypto.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/implementations.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/sessions/fileStorage.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/stream.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/upload/fileUploadHandler.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/node/dist/index.js:
  (**
   * @remix-run/node v1.17.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react/cjs/react.production.min.js:
  (**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@remix-run/router/dist/router.cjs.js:
  (**
   * @remix-run/router v1.6.3
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router/dist/umd/react-router.production.min.js:
  (**
   * React Router v6.13.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router/dist/main.js:
  (**
   * React Router v6.13.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router-dom/dist/umd/react-router-dom.production.min.js:
  (**
   * React Router DOM v6.13.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router-dom/dist/main.js:
  (**
   * React Router DOM v6.13.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/_virtual/_rollupPluginBabelHelpers.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/errorBoundaries.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/invariant.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/routeModules.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/links.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/markup.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/transition.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/warnings.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/components.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/errors.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/data.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/routes.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/browser.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/scroll-restoration.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/server.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/index.js:
  (**
   * @remix-run/react v1.17.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-dom/cjs/react-dom-server-legacy.node.production.min.js:
  (**
   * @license React
   * react-dom-server-legacy.node.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.node.production.min.js:
  (**
   * @license React
   * react-dom-server.node.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-runtime.production.min.js:
  (**
   * @license React
   * react-jsx-runtime.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.production.min.js:
  (**
   * @license React
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.production.min.js:
  (**
   * @license React
   * react-dom.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-google-recaptcha-v3/dist/react-google-recaptcha-v3.cjs.js:
  (** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
